{"version":3,"file":"graphql-ecca0221.js","sources":["../../../../node_modules/.pnpm/fp-ts@2.16.1/node_modules/fp-ts/es6/Eq.js","../../../../node_modules/.pnpm/fp-ts@2.16.1/node_modules/fp-ts/es6/number.js","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/didYouMean.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/identityFunc.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/keyMap.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/keyValMap.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/mapValue.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/naturalCompare.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/suggestionList.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/toObjMap.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/valueFromASTUntyped.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/type/assertName.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/type/definition.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/typeComparators.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/type/scalars.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/type/directives.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/isIterableObject.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/astFromValue.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/type/introspection.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/type/schema.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/type/validate.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/typeFromAST.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/TypeInfo.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/language/predicates.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/FieldsOnCorrectTypeRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/KnownArgumentNamesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/KnownDirectivesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/KnownFragmentNamesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/KnownTypeNamesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/LoneAnonymousOperationRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/NoFragmentCyclesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/NoUndefinedVariablesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/NoUnusedFragmentsRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/NoUnusedVariablesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/sortValueNode.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/PossibleFragmentSpreadsRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/ScalarLeafsRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/valueFromAST.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/execution/values.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/execution/collectFields.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/jsutils/groupBy.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/UniqueFragmentNamesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/UniqueOperationNamesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/UniqueVariableNamesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/VariablesAreInputTypesRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/specifiedRules.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/ValidationContext.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/validation/validate.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/getIntrospectionQuery.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/buildClientSchema.mjs","../../../../node_modules/.pnpm/graphql@16.8.1/node_modules/graphql/utilities/printSchema.mjs","../../../hoppscotch-common/src/components/graphql/TypeLink.vue","../../../hoppscotch-common/src/components/graphql/Field.vue","../../../hoppscotch-common/src/components/graphql/Type.vue","../../../hoppscotch-common/src/helpers/graphql/connection.ts","../../../hoppscotch-common/src/components/graphql/Sidebar.vue","../../../hoppscotch-common/src/components/graphql/SubscriptionLog.vue","../../../hoppscotch-common/src/components/graphql/Response.vue","../../../hoppscotch-common/src/components/graphql/Authorization.vue","../../../hoppscotch-common/src/components/graphql/Headers.vue","../../../hoppscotch-common/src/components/graphql/Variable.vue","../../../hoppscotch-common/src/helpers/editor/linting/gqlQuery.ts","../../../../node_modules/.pnpm/graphql-language-service-interface@2.10.2_@types+node@18.18.8_graphql@16.8.1/node_modules/graphql-language-service-interface/esm/autocompleteUtils.js","../../../../node_modules/.pnpm/vscode-languageserver-types@3.17.5/node_modules/vscode-languageserver-types/lib/esm/main.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_@types+node@18.18.8_graphql@16.8.1/node_modules/graphql-language-service-parser/esm/CharacterStream.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_@types+node@18.18.8_graphql@16.8.1/node_modules/graphql-language-service-parser/esm/RuleHelpers.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_@types+node@18.18.8_graphql@16.8.1/node_modules/graphql-language-service-parser/esm/Rules.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_@types+node@18.18.8_graphql@16.8.1/node_modules/graphql-language-service-parser/esm/onlineParser.js","../../../../node_modules/.pnpm/graphql-language-service-parser@1.10.4_@types+node@18.18.8_graphql@16.8.1/node_modules/graphql-language-service-parser/esm/types.js","../../../../node_modules/.pnpm/graphql-language-service-interface@2.10.2_@types+node@18.18.8_graphql@16.8.1/node_modules/graphql-language-service-interface/esm/getAutocompleteSuggestions.js","../../../../node_modules/.pnpm/nullthrows@1.1.1/node_modules/nullthrows/nullthrows.js","../../../../node_modules/.pnpm/graphql-language-service-interface@2.10.2_@types+node@18.18.8_graphql@16.8.1/node_modules/graphql-language-service-interface/esm/getDefinition.js","../../../../node_modules/.pnpm/graphql-language-service-interface@2.10.2_@types+node@18.18.8_graphql@16.8.1/node_modules/graphql-language-service-interface/esm/GraphQLLanguageService.js","../../../hoppscotch-common/src/helpers/editor/completion/gqlQuery.ts","../../../hoppscotch-common/src/helpers/editor/gql/operation.ts","../../../hoppscotch-common/src/components/graphql/Query.vue","../../../hoppscotch-common/src/components/graphql/RequestOptions.vue","../../../hoppscotch-common/src/helpers/graphql/eq.ts","../../../hoppscotch-common/src/helpers/graphql/index.ts","../../../hoppscotch-common/src/components/graphql/RequestTab.vue","../../../hoppscotch-common/src/components/graphql/TabHead.vue","../../../hoppscotch-common/src/components/graphql/Request.vue","../../../hoppscotch-common/src/pages/graphql.vue"],"sourcesContent":["import { pipe } from './function';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexport var struct = function (eqs) {\n    return fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Eq<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for equality (meaning we have an `Eq<X>`)\n *\n * For example, given the following `User` type, we want to construct an `Eq<User>` that just looks at the `key` field\n * for each user (since it's known to be unique).\n *\n * If we have a way of comparing `UUID`s for equality (`eqUUID: Eq<UUID>`) and we know how to go from `User -> UUID`,\n * using `contramap` we can do this\n *\n * @example\n * import { contramap, Eq } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/string'\n *\n * type UUID = string\n *\n * interface User {\n *   readonly key: UUID\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const eqUUID: Eq<UUID> = S.Eq\n *\n * const eqUserByKey: Eq<User> = pipe(\n *   eqUUID,\n *   contramap((user) => user.key)\n * )\n *\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k2', firstName: 'a1', lastName: 'b1' }\n *   ),\n *   false\n * )\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k1', firstName: 'a2', lastName: 'b1' }\n *   ),\n *   true\n * )\n *\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (x, y) { return fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\n/**\n * @category instances\n * @since 2.6.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleEq = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructEq = struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var strictEqual = eqStrict.equals;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Contravariant` instance, pass `E.Contravariant` instead of `E.eq`\n * (where `E` is from `import E from 'fp-ts/Eq'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eq = Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqBoolean = eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqString = eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqNumber = eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n","// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nexport var isNumber = function (u) { return typeof u === 'number'; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bounded = {\n    equals: Eq.equals,\n    compare: Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidSum = {\n    concat: SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidProduct = {\n    concat: SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Field = {\n    add: SemigroupSum.concat,\n    zero: 0,\n    mul: SemigroupProduct.concat,\n    one: 1,\n    sub: MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n","const MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nexport function didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg\n    ? [firstArg, secondArg]\n    : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n","/**\n * Returns the first argument it receives.\n */\nexport function identityFunc(x) {\n  return x;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * const entriesByName = keyMap(\n *   phoneBook,\n *   entry => entry.name\n * )\n *\n * // {\n * //   Jon: { name: 'Jon', num: '555-1234' },\n * //   Jenny: { name: 'Jenny', num: '867-5309' }\n * // }\n *\n * const jennyEntry = entriesByName['Jenny']\n *\n * // { name: 'Jenny', num: '857-6309' }\n * ```\n */\nexport function keyMap(list, keyFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n\n  return result;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * // { Jon: '555-1234', Jenny: '867-5309' }\n * const phonesByName = keyValMap(\n *   phoneBook,\n *   entry => entry.name,\n *   entry => entry.num\n * )\n * ```\n */\nexport function keyValMap(list, keyFn, valFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n\n  return result;\n}\n","/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport function mapValue(map, fn) {\n  const result = Object.create(null);\n\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n\n  return result;\n}\n","/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport function naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n\n      let bNum = 0;\n\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n","import { naturalCompare } from './naturalCompare.mjs';\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nexport function suggestionList(input, options) {\n  const optionsByDistance = Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n    ];\n  }\n\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    const aLength = a.length;\n    const bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    const rows = this._rows;\n\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = (currentRow[0] = i);\n\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1, // delete\n          currentRow[j - 1] + 1, // insert\n          upRow[j - 1] + cost, // substitute\n        );\n\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          // transposition\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  }\n}\n\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n","export function toObjMap(obj) {\n  if (obj == null) {\n    return Object.create(null);\n  }\n\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  const map = Object.create(null);\n\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n\n  return map;\n}\n","import { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\n\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case Kind.OBJECT:\n      return keyValMap(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { isNameContinue, isNameStart } from '../language/characterClasses.mjs';\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertName(name) {\n  name != null || devAssert(false, 'Must provide name.');\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new GraphQLError('Expected name to be a non-empty string.');\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!isNameContinue(name.charCodeAt(i))) {\n      throw new GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!isNameStart(name.charCodeAt(0))) {\n    throw new GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nexport function assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n\n  return assertName(name);\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { didYouMean } from '../jsutils/didYouMean.mjs';\nimport { identityFunc } from '../jsutils/identityFunc.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { mapValue } from '../jsutils/mapValue.mjs';\nimport { suggestionList } from '../jsutils/suggestionList.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { valueFromASTUntyped } from '../utilities/valueFromASTUntyped.mjs';\nimport { assertEnumValueName, assertName } from './assertName.mjs';\nexport function isType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    isListType(type) ||\n    isNonNullType(type)\n  );\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL type.`);\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Scalar type.`);\n  }\n\n  return type;\n}\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Object type.`);\n  }\n\n  return type;\n}\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Interface type.`,\n    );\n  }\n\n  return type;\n}\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Union type.`);\n  }\n\n  return type;\n}\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Enum type.`);\n  }\n\n  return type;\n}\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Input Object type.`,\n    );\n  }\n\n  return type;\n}\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL List type.`);\n  }\n\n  return type;\n}\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Non-Null type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return (\n    isScalarType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    (isWrappingType(type) && isInputType(type.ofType))\n  );\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL input type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    (isWrappingType(type) && isOutputType(type.ofType))\n  );\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL output type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL leaf type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL composite type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL abstract type.`);\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     parents: { type: new GraphQLList(PersonType) },\n *     children: { type: new GraphQLList(PersonType) },\n *   })\n * })\n * ```\n */\n\nexport class GraphQLList {\n  constructor(ofType) {\n    isType(ofType) ||\n      devAssert(false, `Expected ${inspect(ofType)} to be a GraphQL type.`);\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLList';\n  }\n\n  toString() {\n    return '[' + String(this.ofType) + ']';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n * ```ts\n * const RowType = new GraphQLObjectType({\n *   name: 'Row',\n *   fields: () => ({\n *     id: { type: new GraphQLNonNull(GraphQLString) },\n *   })\n * })\n * ```\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nexport class GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) ||\n      devAssert(\n        false,\n        `Expected ${inspect(ofType)} to be a GraphQL nullable type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLNonNull';\n  }\n\n  toString() {\n    return String(this.ofType) + '!';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL wrapping type.`);\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL nullable type.`);\n  }\n\n  return type;\n}\nexport function getNullableType(type) {\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type)\n  );\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL named type.`);\n  }\n\n  return type;\n}\nexport function getNamedType(type) {\n  if (type) {\n    let unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nexport function resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\nexport function resolveObjMapThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function returns `null` or does not return a value\n * (i.e. it returns `undefined`) then an error will be raised and a `null`\n * value will be returned in the response. It is always better to validate\n *\n * Example:\n *\n * ```ts\n * const OddType = new GraphQLScalarType({\n *   name: 'Odd',\n *   serialize(value) {\n *     if (!Number.isFinite(value)) {\n *       throw new Error(\n *         `Scalar \"Odd\" cannot represent \"${value}\" since it is not a finite number.`,\n *       );\n *     }\n *\n *     if (value % 2 === 0) {\n *       throw new Error(`Scalar \"Odd\" cannot represent \"${value}\" since it is even.`);\n *     }\n *     return value;\n *   }\n * });\n * ```\n */\nexport class GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue,\n      _config$serialize,\n      _config$parseLiteral,\n      _config$extensionASTN;\n\n    const parseValue =\n      (_config$parseValue = config.parseValue) !== null &&\n      _config$parseValue !== void 0\n        ? _config$parseValue\n        : identityFunc;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize =\n      (_config$serialize = config.serialize) !== null &&\n      _config$serialize !== void 0\n        ? _config$serialize\n        : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral =\n      (_config$parseLiteral = config.parseLiteral) !== null &&\n      _config$parseLiteral !== void 0\n        ? _config$parseLiteral\n        : (node, variables) => parseValue(valueFromASTUntyped(node, variables));\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    config.specifiedByURL == null ||\n      typeof config.specifiedByURL === 'string' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"specifiedByURL\" as a string, ` +\n          `but got: ${inspect(config.specifiedByURL)}.`,\n      );\n    config.serialize == null ||\n      typeof config.serialize === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`,\n      );\n\n    if (config.parseLiteral) {\n      (typeof config.parseValue === 'function' &&\n        typeof config.parseLiteral === 'function') ||\n        devAssert(\n          false,\n          `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`,\n        );\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLScalarType';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n * ```ts\n * const AddressType = new GraphQLObjectType({\n *   name: 'Address',\n *   fields: {\n *     street: { type: GraphQLString },\n *     number: { type: GraphQLInt },\n *     formatted: {\n *       type: GraphQLString,\n *       resolve(obj) {\n *         return obj.number + ' ' + obj.street\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     name: { type: GraphQLString },\n *     bestFriend: { type: PersonType },\n *   })\n * });\n * ```\n */\nexport class GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN2 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN2 !== void 0\n        ? _config$extensionASTN2\n        : [];\n\n    this._fields = () => defineFieldMap(config);\n\n    this._interfaces = () => defineInterfaces(config);\n\n    config.isTypeOf == null ||\n      typeof config.isTypeOf === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"isTypeOf\" as a function, ` +\n          `but got: ${inspect(config.isTypeOf)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null &&\n      _config$interfaces !== void 0\n      ? _config$interfaces\n      : [],\n  );\n  Array.isArray(interfaces) ||\n    devAssert(\n      false,\n      `${config.name} interfaces must be an Array or a function which returns an Array.`,\n    );\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field config must be an object.`,\n      );\n    fieldConfig.resolve == null ||\n      typeof fieldConfig.resolve === 'function' ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field resolver must be a function if ` +\n          `provided, but got: ${inspect(fieldConfig.resolve)}.`,\n      );\n    const argsConfig =\n      (_fieldConfig$args = fieldConfig.args) !== null &&\n      _fieldConfig$args !== void 0\n        ? _fieldConfig$args\n        : {};\n    isPlainObj(argsConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} args must be an object with argument names as keys.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: assertName(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: toObjMap(argConfig.extensions),\n    astNode: argConfig.astNode,\n  }));\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  }));\n}\n/**\n * @internal\n */\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode,\n    }),\n  );\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const EntityType = new GraphQLInterfaceType({\n *   name: 'Entity',\n *   fields: {\n *     name: { type: GraphQLString }\n *   }\n * });\n * ```\n */\nexport class GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN3 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN3 !== void 0\n        ? _config$extensionASTN3\n        : [];\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInterfaceType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const PetType = new GraphQLUnionType({\n *   name: 'Pet',\n *   types: [ DogType, CatType ],\n *   resolveType(value) {\n *     if (value instanceof Dog) {\n *       return DogType;\n *     }\n *     if (value instanceof Cat) {\n *       return CatType;\n *     }\n *   }\n * });\n * ```\n */\nexport class GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN4 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN4 !== void 0\n        ? _config$extensionASTN4\n        : [];\n    this._types = defineTypes.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLUnionType';\n  }\n\n  getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) ||\n    devAssert(\n      false,\n      `Must provide Array of types or a function which returns such an array for Union ${config.name}.`,\n    );\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n * ```ts\n * const RGBType = new GraphQLEnumType({\n *   name: 'RGB',\n *   values: {\n *     RED: { value: 0 },\n *     GREEN: { value: 1 },\n *     BLUE: { value: 2 }\n *   }\n * });\n * ```\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport class GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN5 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN5 !== void 0\n        ? _config$extensionASTN5\n        : [];\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(\n      this._values.map((enumValue) => [enumValue.value, enumValue]),\n    );\n    this._nameLookup = keyMap(this._values, (value) => value.name);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLEnumType';\n  }\n\n  getValues() {\n    return this._values;\n  }\n\n  getValue(name) {\n    return this._nameLookup[name];\n  }\n\n  serialize(outputValue) {\n    const enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${inspect(outputValue)}`,\n      );\n    }\n\n    return enumValue.name;\n  }\n\n  parseValue(inputValue) /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      const valueStr = inspect(inputValue);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n      );\n    }\n\n    const enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, inputValue),\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  parseLiteral(valueNode, _variables) /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== Kind.ENUM) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  toConfig() {\n    const values = keyValMap(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode,\n      }),\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) ||\n    devAssert(\n      false,\n      `${typeName} values must be an object with value names as keys.`,\n    );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) ||\n      devAssert(\n        false,\n        `${typeName}.${valueName} must refer to an object with a \"value\" key ` +\n          `representing an internal value but got: ${inspect(valueConfig)}.`,\n      );\n    return {\n      name: assertEnumValueName(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode,\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n * ```ts\n * const GeoPoint = new GraphQLInputObjectType({\n *   name: 'GeoPoint',\n *   fields: {\n *     lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *     lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *     alt: { type: GraphQLFloat, defaultValue: 0 },\n *   }\n * });\n * ```\n */\nexport class GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN6 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN6 !== void 0\n        ? _config$extensionASTN6\n        : [];\n    this._fields = defineInputFieldMap.bind(undefined, config);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInputObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  toConfig() {\n    const fields = mapValue(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode,\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    !('resolve' in fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n","import {\n  isAbstractType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../type/definition.mjs';\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nexport function isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n  if (isNonNullType(typeA) && isNonNullType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n  if (isListType(typeA) && isListType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nexport function isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n  if (isNonNullType(superType)) {\n    if (isNonNullType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isNonNullType(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n  if (isListType(superType)) {\n    if (isListType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isListType(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n  return (\n    isAbstractType(superType) &&\n    (isInterfaceType(maybeSubType) || isObjectType(maybeSubType)) &&\n    schema.isSubType(superType, maybeSubType)\n  );\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nexport function doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (isAbstractType(typeA)) {\n    if (isAbstractType(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema\n        .getPossibleTypes(typeA)\n        .some((type) => schema.isSubType(typeB, type));\n    } // Determine if the latter type is a possible concrete type of the former.\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if (isAbstractType(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n  return false;\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { GraphQLScalarType } from './definition.mjs';\n/**\n * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1\n * */\n\nexport const GRAPHQL_MAX_INT = 2147483647;\n/**\n * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)\n * */\n\nexport const GRAPHQL_MIN_INT = -2147483648;\nexport const GraphQLInt = new GraphQLScalarType({\n  name: 'Int',\n  description:\n    'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isInteger(num)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        'Int cannot represent non 32-bit signed integer value: ' +\n          inspect(coercedValue),\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(inputValue)}`,\n      );\n    }\n\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const num = parseInt(valueNode.value, 10);\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return num;\n  },\n});\nexport const GraphQLFloat = new GraphQLScalarType({\n  name: 'Float',\n  description:\n    'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isFinite(num)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.FLOAT && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${print(valueNode)}`,\n        valueNode,\n      );\n    }\n\n    return parseFloat(valueNode.value);\n  },\n});\nexport const GraphQLString = new GraphQLScalarType({\n  name: 'String',\n  description:\n    'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n    // attempt to coerce object, function, symbol, or other types as strings.\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 'true' : 'false';\n    }\n\n    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n\n    throw new GraphQLError(\n      `String cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'string') {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING) {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLBoolean = new GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue;\n    }\n\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n\n    throw new GraphQLError(\n      `Boolean cannot represent a non boolean value: ${inspect(coercedValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'boolean') {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.BOOLEAN) {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLID = new GraphQLScalarType({\n  name: 'ID',\n  description:\n    'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n\n    throw new GraphQLError(\n      `ID cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      return inputValue;\n    }\n\n    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n\n    throw new GraphQLError(`ID cannot represent value: ${inspect(inputValue)}`);\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        'ID cannot represent a non-string and non-integer value: ' +\n          print(valueNode),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const specifiedScalarTypes = Object.freeze([\n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n]);\nexport function isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(({ name }) => type.name === name);\n} // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { assertName } from './assertName.mjs';\nimport {\n  argsToArgsConfig,\n  defineArguments,\n  GraphQLNonNull,\n} from './definition.mjs';\nimport { GraphQLBoolean, GraphQLString } from './scalars.mjs';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${inspect(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nexport class GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      devAssert(false, `@${config.name} locations must be an Array.`);\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    (isObjectLike(args) && !Array.isArray(args)) ||\n      devAssert(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = defineArguments(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport const GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport const GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport const DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport const GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    DirectiveLocation.FIELD_DEFINITION,\n    DirectiveLocation.ARGUMENT_DEFINITION,\n    DirectiveLocation.INPUT_FIELD_DEFINITION,\n    DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexport const GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * The full list of specified directives.\n */\n\nexport const specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n]);\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n","/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nexport function isIterableObject(maybeIterable) {\n  return (\n    typeof maybeIterable === 'object' &&\n    typeof (maybeIterable === null || maybeIterable === void 0\n      ? void 0\n      : maybeIterable[Symbol.iterator]) === 'function'\n  );\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\nimport { GraphQLID } from '../type/scalars.mjs';\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\n\nexport function astFromValue(value, type) {\n  if (isNonNullType(type)) {\n    const astValue = astFromValue(value, type.ofType);\n\n    if (\n      (astValue === null || astValue === void 0 ? void 0 : astValue.kind) ===\n      Kind.NULL\n    ) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n  if (value === null) {\n    return {\n      kind: Kind.NULL,\n    };\n  } // undefined\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (isIterableObject(value)) {\n      const valuesNodes = [];\n\n      for (const item of value) {\n        const itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: Kind.LIST,\n        values: valuesNodes,\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(value)) {\n      return null;\n    }\n\n    const fieldNodes = [];\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: {\n            kind: Kind.NAME,\n            value: field.name,\n          },\n          value: fieldValue,\n        });\n      }\n    }\n\n    return {\n      kind: Kind.OBJECT,\n      fields: fieldNodes,\n    };\n  }\n\n  if (isLeafType(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    const serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: Kind.BOOLEAN,\n        value: serialized,\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n    if (typeof serialized === 'number' && Number.isFinite(serialized)) {\n      const stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum)\n        ? {\n            kind: Kind.INT,\n            value: stringNum,\n          }\n        : {\n            kind: Kind.FLOAT,\n            value: stringNum,\n          };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (isEnumType(type)) {\n        return {\n          kind: Kind.ENUM,\n          value: serialized,\n        };\n      } // ID types can use Int literals.\n\n      if (type === GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: Kind.INT,\n          value: serialized,\n        };\n      }\n\n      return {\n        kind: Kind.STRING,\n        value: serialized,\n      };\n    }\n\n    throw new TypeError(`Cannot convert value to AST: ${inspect(serialized)}.`);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { print } from '../language/printer.mjs';\nimport { astFromValue } from '../utilities/astFromValue.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  isAbstractType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from './definition.mjs';\nimport { GraphQLBoolean, GraphQLString } from './scalars.mjs';\nexport const __Schema = new GraphQLObjectType({\n  name: '__Schema',\n  description:\n    'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: () => ({\n    description: {\n      type: GraphQLString,\n      resolve: (schema) => schema.description,\n    },\n    types: {\n      description: 'A list of all types supported by this server.',\n      type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__Type))),\n\n      resolve(schema) {\n        return Object.values(schema.getTypeMap());\n      },\n    },\n    queryType: {\n      description: 'The type that query operations will be rooted at.',\n      type: new GraphQLNonNull(__Type),\n      resolve: (schema) => schema.getQueryType(),\n    },\n    mutationType: {\n      description:\n        'If this server supports mutation, the type that mutation operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getMutationType(),\n    },\n    subscriptionType: {\n      description:\n        'If this server support subscription, the type that subscription operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getSubscriptionType(),\n    },\n    directives: {\n      description: 'A list of all directives supported by this server.',\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__Directive)),\n      ),\n      resolve: (schema) => schema.getDirectives(),\n    },\n  }),\n});\nexport const __Directive = new GraphQLObjectType({\n  name: '__Directive',\n  description:\n    \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (directive) => directive.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (directive) => directive.description,\n    },\n    isRepeatable: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (directive) => directive.isRepeatable,\n    },\n    locations: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__DirectiveLocation)),\n      ),\n      resolve: (directive) => directive.locations,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n  }),\n});\nexport const __DirectiveLocation = new GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description:\n    'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.',\n    },\n    MUTATION: {\n      value: DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.',\n    },\n    SUBSCRIPTION: {\n      value: DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.',\n    },\n    FIELD: {\n      value: DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.',\n    },\n    FRAGMENT_DEFINITION: {\n      value: DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.',\n    },\n    FRAGMENT_SPREAD: {\n      value: DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.',\n    },\n    INLINE_FRAGMENT: {\n      value: DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.',\n    },\n    VARIABLE_DEFINITION: {\n      value: DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.',\n    },\n    SCHEMA: {\n      value: DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.',\n    },\n    SCALAR: {\n      value: DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.',\n    },\n    OBJECT: {\n      value: DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.',\n    },\n    FIELD_DEFINITION: {\n      value: DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.',\n    },\n    ARGUMENT_DEFINITION: {\n      value: DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.',\n    },\n    INTERFACE: {\n      value: DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.',\n    },\n    UNION: {\n      value: DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.',\n    },\n    ENUM: {\n      value: DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.',\n    },\n    ENUM_VALUE: {\n      value: DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.',\n    },\n    INPUT_OBJECT: {\n      value: DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.',\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.',\n    },\n  },\n});\nexport const __Type = new GraphQLObjectType({\n  name: '__Type',\n  description:\n    'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: () => ({\n    kind: {\n      type: new GraphQLNonNull(__TypeKind),\n\n      resolve(type) {\n        if (isScalarType(type)) {\n          return TypeKind.SCALAR;\n        }\n\n        if (isObjectType(type)) {\n          return TypeKind.OBJECT;\n        }\n\n        if (isInterfaceType(type)) {\n          return TypeKind.INTERFACE;\n        }\n\n        if (isUnionType(type)) {\n          return TypeKind.UNION;\n        }\n\n        if (isEnumType(type)) {\n          return TypeKind.ENUM;\n        }\n\n        if (isInputObjectType(type)) {\n          return TypeKind.INPUT_OBJECT;\n        }\n\n        if (isListType(type)) {\n          return TypeKind.LIST;\n        }\n\n        if (isNonNullType(type)) {\n          return TypeKind.NON_NULL;\n        }\n        /* c8 ignore next 3 */\n        // Not reachable, all possible types have been considered)\n\n        false || invariant(false, `Unexpected type: \"${inspect(type)}\".`);\n      },\n    },\n    name: {\n      type: GraphQLString,\n      resolve: (type) => ('name' in type ? type.name : undefined),\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (\n        type, // FIXME: add test case\n      ) =>\n        /* c8 ignore next */\n        'description' in type ? type.description : undefined,\n    },\n    specifiedByURL: {\n      type: GraphQLString,\n      resolve: (obj) =>\n        'specifiedByURL' in obj ? obj.specifiedByURL : undefined,\n    },\n    fields: {\n      type: new GraphQLList(new GraphQLNonNull(__Field)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          const fields = Object.values(type.getFields());\n          return includeDeprecated\n            ? fields\n            : fields.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    interfaces: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          return type.getInterfaces();\n        }\n      },\n    },\n    possibleTypes: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type, _args, _context, { schema }) {\n        if (isAbstractType(type)) {\n          return schema.getPossibleTypes(type);\n        }\n      },\n    },\n    enumValues: {\n      type: new GraphQLList(new GraphQLNonNull(__EnumValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isEnumType(type)) {\n          const values = type.getValues();\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    inputFields: {\n      type: new GraphQLList(new GraphQLNonNull(__InputValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isInputObjectType(type)) {\n          const values = Object.values(type.getFields());\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    ofType: {\n      type: __Type,\n      resolve: (type) => ('ofType' in type ? type.ofType : undefined),\n    },\n  }),\n});\nexport const __Field = new GraphQLObjectType({\n  name: '__Field',\n  description:\n    'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (field) => field.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (field) => field.description,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (field) => field.type,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (field) => field.deprecationReason,\n    },\n  }),\n});\nexport const __InputValue = new GraphQLObjectType({\n  name: '__InputValue',\n  description:\n    'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (inputValue) => inputValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (inputValue) => inputValue.description,\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (inputValue) => inputValue.type,\n    },\n    defaultValue: {\n      type: GraphQLString,\n      description:\n        'A GraphQL-formatted string representing the default value for this input value.',\n\n      resolve(inputValue) {\n        const { type, defaultValue } = inputValue;\n        const valueAST = astFromValue(defaultValue, type);\n        return valueAST ? print(valueAST) : null;\n      },\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (obj) => obj.deprecationReason,\n    },\n  }),\n});\nexport const __EnumValue = new GraphQLObjectType({\n  name: '__EnumValue',\n  description:\n    'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (enumValue) => enumValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.description,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (enumValue) => enumValue.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.deprecationReason,\n    },\n  }),\n});\nvar TypeKind;\n\n(function (TypeKind) {\n  TypeKind['SCALAR'] = 'SCALAR';\n  TypeKind['OBJECT'] = 'OBJECT';\n  TypeKind['INTERFACE'] = 'INTERFACE';\n  TypeKind['UNION'] = 'UNION';\n  TypeKind['ENUM'] = 'ENUM';\n  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  TypeKind['LIST'] = 'LIST';\n  TypeKind['NON_NULL'] = 'NON_NULL';\n})(TypeKind || (TypeKind = {}));\n\nexport { TypeKind };\nexport const __TypeKind = new GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.',\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description:\n        'Indicates this type is an object. `fields` and `interfaces` are valid fields.',\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description:\n        'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description:\n        'Indicates this type is a union. `possibleTypes` is a valid field.',\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description:\n        'Indicates this type is an enum. `enumValues` is a valid field.',\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description:\n        'Indicates this type is an input object. `inputFields` is a valid field.',\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.',\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description:\n        'Indicates this type is a non-null. `ofType` is a valid field.',\n    },\n  },\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexport const SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: (_source, _args, _context, { schema }) => schema,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [\n    {\n      name: 'name',\n      description: undefined,\n      type: new GraphQLNonNull(GraphQLString),\n      defaultValue: undefined,\n      deprecationReason: undefined,\n      extensions: Object.create(null),\n      astNode: undefined,\n    },\n  ],\n  resolve: (_source, { name }, _context, { schema }) => schema.getType(name),\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new GraphQLNonNull(GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: (_source, _args, _context, { parentType }) => parentType.name,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const introspectionTypes = Object.freeze([\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind,\n]);\nexport function isIntrospectionType(type) {\n  return introspectionTypes.some(({ name }) => type.name === name);\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport {\n  getNamedType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isUnionType,\n} from './definition.mjs';\nimport { isDirective, specifiedDirectives } from './directives.mjs';\nimport { __Schema } from './introspection.mjs';\n/**\n * Test if the given value is a GraphQL schema.\n */\n\nexport function isSchema(schema) {\n  return instanceOf(schema, GraphQLSchema);\n}\nexport function assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(`Expected ${inspect(schema)} to be a GraphQL schema.`);\n  }\n\n  return schema;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   query: MyAppQueryRootType,\n *   mutation: MyAppMutationRootType,\n * })\n * ```\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n * ```ts\n * const characterInterface = new GraphQLInterfaceType({\n *   name: 'Character',\n *   ...\n * });\n *\n * const humanType = new GraphQLObjectType({\n *   name: 'Human',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const droidType = new GraphQLObjectType({\n *   name: 'Droid',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: new GraphQLObjectType({\n *     name: 'Query',\n *     fields: {\n *       hero: { type: characterInterface, ... },\n *     }\n *   }),\n *   ...\n *   // Since this schema references only the `Character` interface it's\n *   // necessary to explicitly list the types that implement it if\n *   // you want them to be included in the final schema.\n *   types: [humanType, droidType],\n * })\n * ```\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. `@include` and\n * `@skip`) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   ...\n *   directives: specifiedDirectives.concat([ myCustomDirective ]),\n * })\n * ```\n */\nexport class GraphQLSchema {\n  // Used as a cache for validateSchema().\n  constructor(config) {\n    var _config$extensionASTN, _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    isObjectLike(config) ||\n      devAssert(false, 'Must provide configuration object.');\n    !config.types ||\n      Array.isArray(config.types) ||\n      devAssert(\n        false,\n        `\"types\" must be Array if provided but got: ${inspect(config.types)}.`,\n      );\n    !config.directives ||\n      Array.isArray(config.directives) ||\n      devAssert(\n        false,\n        '\"directives\" must be Array if provided but got: ' +\n          `${inspect(config.directives)}.`,\n      );\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives =\n      (_config$directives = config.directives) !== null &&\n      _config$directives !== void 0\n        ? _config$directives\n        : specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    const allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (const type of config.types) {\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (const directive of this._directives) {\n      // Directives are not validated until validateSchema() is called.\n      if (isDirective(directive)) {\n        for (const arg of directive.args) {\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (const namedType of allReferencedTypes) {\n      if (namedType == null) {\n        continue;\n      }\n\n      const typeName = namedType.name;\n      typeName ||\n        devAssert(\n          false,\n          'One of the provided types for building the Schema is missing a name.',\n        );\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\n          `Schema must contain uniquely named types but contains multiple types named \"${typeName}\".`,\n        );\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if (isInterfaceType(namedType)) {\n        // Store implementations by interface.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if (isObjectType(namedType)) {\n        // Store implementations by objects.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLSchema';\n  }\n\n  getQueryType() {\n    return this._queryType;\n  }\n\n  getMutationType() {\n    return this._mutationType;\n  }\n\n  getSubscriptionType() {\n    return this._subscriptionType;\n  }\n\n  getRootType(operation) {\n    switch (operation) {\n      case OperationTypeNode.QUERY:\n        return this.getQueryType();\n\n      case OperationTypeNode.MUTATION:\n        return this.getMutationType();\n\n      case OperationTypeNode.SUBSCRIPTION:\n        return this.getSubscriptionType();\n    }\n  }\n\n  getTypeMap() {\n    return this._typeMap;\n  }\n\n  getType(name) {\n    return this.getTypeMap()[name];\n  }\n\n  getPossibleTypes(abstractType) {\n    return isUnionType(abstractType)\n      ? abstractType.getTypes()\n      : this.getImplementations(abstractType).objects;\n  }\n\n  getImplementations(interfaceType) {\n    const implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0\n      ? implementations\n      : {\n          objects: [],\n          interfaces: [],\n        };\n  }\n\n  isSubType(abstractType, maybeSubType) {\n    let map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if (isUnionType(abstractType)) {\n        for (const type of abstractType.getTypes()) {\n          map[type.name] = true;\n        }\n      } else {\n        const implementations = this.getImplementations(abstractType);\n\n        for (const type of implementations.objects) {\n          map[type.name] = true;\n        }\n\n        for (const type of implementations.interfaces) {\n          map[type.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  }\n\n  getDirectives() {\n    return this._directives;\n  }\n\n  getDirective(name) {\n    return this.getDirectives().find((directive) => directive.name === name);\n  }\n\n  toConfig() {\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: Object.values(this.getTypeMap()),\n      directives: this.getDirectives(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      assumeValid: this.__validationErrors !== undefined,\n    };\n  }\n}\n\nfunction collectReferencedTypes(type, typeSet) {\n  const namedType = getNamedType(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if (isUnionType(namedType)) {\n      for (const memberType of namedType.getTypes()) {\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (isObjectType(namedType) || isInterfaceType(namedType)) {\n      for (const interfaceType of namedType.getInterfaces()) {\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n\n        for (const arg of field.args) {\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if (isInputObjectType(namedType)) {\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport { isEqualType, isTypeSubTypeOf } from '../utilities/typeComparators.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInputType,\n  isInterfaceType,\n  isNamedType,\n  isNonNullType,\n  isObjectType,\n  isOutputType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isUnionType,\n} from './definition.mjs';\nimport { GraphQLDeprecatedDirective, isDirective } from './directives.mjs';\nimport { isIntrospectionType } from './introspection.mjs';\nimport { assertSchema } from './schema.mjs';\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\n\nexport function validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  assertSchema(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n  const context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  const errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nexport function assertValidSchema(schema) {\n  const errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n\nclass SchemaValidationContext {\n  constructor(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  reportError(message, nodes) {\n    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this._errors.push(\n      new GraphQLError(message, {\n        nodes: _nodes,\n      }),\n    );\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n}\n\nfunction validateRootTypes(context) {\n  const schema = context.schema;\n  const queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!isObjectType(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\n      `Query root type must be Object type, it cannot be ${inspect(\n        queryType,\n      )}.`,\n      (_getOperationTypeNode = getOperationTypeNode(\n        schema,\n        OperationTypeNode.QUERY,\n      )) !== null && _getOperationTypeNode !== void 0\n        ? _getOperationTypeNode\n        : queryType.astNode,\n    );\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && !isObjectType(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError(\n      'Mutation root type must be Object type if provided, it cannot be ' +\n        `${inspect(mutationType)}.`,\n      (_getOperationTypeNode2 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.MUTATION,\n      )) !== null && _getOperationTypeNode2 !== void 0\n        ? _getOperationTypeNode2\n        : mutationType.astNode,\n    );\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !isObjectType(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError(\n      'Subscription root type must be Object type if provided, it cannot be ' +\n        `${inspect(subscriptionType)}.`,\n      (_getOperationTypeNode3 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.SUBSCRIPTION,\n      )) !== null && _getOperationTypeNode3 !== void 0\n        ? _getOperationTypeNode3\n        : subscriptionType.astNode,\n    );\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var _flatMap$find;\n\n  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes]\n    .flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (schemaNode) => {\n        var _schemaNode$operation;\n\n        return (\n          /* c8 ignore next */\n          (_schemaNode$operation =\n            schemaNode === null || schemaNode === void 0\n              ? void 0\n              : schemaNode.operationTypes) !== null &&\n            _schemaNode$operation !== void 0\n            ? _schemaNode$operation\n            : []\n        );\n      },\n    )\n    .find((operationNode) => operationNode.operation === operation)) === null ||\n    _flatMap$find === void 0\n    ? void 0\n    : _flatMap$find.type;\n}\n\nfunction validateDirectives(context) {\n  for (const directive of context.schema.getDirectives()) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!isDirective(directive)) {\n      context.reportError(\n        `Expected directive but got: ${inspect(directive)}.`,\n        directive === null || directive === void 0 ? void 0 : directive.astNode,\n      );\n      continue;\n    } // Ensure they are named correctly.\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (const arg of directive.args) {\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!isInputType(arg.type)) {\n        context.reportError(\n          `The type of @${directive.name}(${arg.name}:) must be Input Type ` +\n            `but got: ${inspect(arg.type)}.`,\n          arg.astNode,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode;\n\n        context.reportError(\n          `Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0\n              ? void 0\n              : _arg$astNode.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  if (node.name.startsWith('__')) {\n    context.reportError(\n      `Name \"${node.name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n      node.astNode,\n    );\n  }\n}\n\nfunction validateTypes(context) {\n  const validateInputObjectCircularRefs =\n    createInputObjectCircularRefsValidator(context);\n  const typeMap = context.schema.getTypeMap();\n\n  for (const type of Object.values(typeMap)) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!isNamedType(type)) {\n      context.reportError(\n        `Expected GraphQL named type but got: ${inspect(type)}.`,\n        type.astNode,\n      );\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n    if (!isIntrospectionType(type)) {\n      validateName(context, type);\n    }\n\n    if (isObjectType(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isInterfaceType(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isUnionType(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (isEnumType(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (isInputObjectType(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(`Type ${type.name} must define one or more fields.`, [\n      type.astNode,\n      ...type.extensionASTNodes,\n    ]);\n  }\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!isOutputType(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\n        `The type of ${type.name}.${field.name} must be Output Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode = field.astNode) === null || _field$astNode === void 0\n          ? void 0\n          : _field$astNode.type,\n      );\n    } // Ensure the arguments are valid\n\n    for (const arg of field.args) {\n      const argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!isInputType(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\n          `The type of ${type.name}.${field.name}(${argName}:) must be Input ` +\n            `Type but got: ${inspect(arg.type)}.`,\n          (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0\n            ? void 0\n            : _arg$astNode2.type,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode3;\n\n        context.reportError(\n          `Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0\n              ? void 0\n              : _arg$astNode3.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  const ifaceTypeNames = Object.create(null);\n\n  for (const iface of type.getInterfaces()) {\n    if (!isInterfaceType(iface)) {\n      context.reportError(\n        `Type ${inspect(type)} must only implement Interface types, ` +\n          `it cannot implement ${inspect(iface)}.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\n        `Type ${type.name} cannot implement itself because it would create a circular reference.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\n        `Type ${type.name} can only implement ${iface.name} once.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (const ifaceField of Object.values(iface.getFields())) {\n    const fieldName = ifaceField.name;\n    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`,\n        [ifaceField.astNode, type.astNode, ...type.extensionASTNodes],\n      );\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n    if (!isTypeSubTypeOf(context.schema, typeField.type, ifaceField.type)) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expects type ` +\n          `${inspect(ifaceField.type)} but ${type.name}.${fieldName} ` +\n          `is type ${inspect(typeField.type)}.`,\n        [\n          (_ifaceField$astNode = ifaceField.astNode) === null ||\n          _ifaceField$astNode === void 0\n            ? void 0\n            : _ifaceField$astNode.type,\n          (_typeField$astNode = typeField.astNode) === null ||\n          _typeField$astNode === void 0\n            ? void 0\n            : _typeField$astNode.type,\n        ],\n      );\n    } // Assert each interface field arg is implemented.\n\n    for (const ifaceArg of ifaceField.args) {\n      const argName = ifaceArg.name;\n      const typeArg = typeField.args.find((arg) => arg.name === argName); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`,\n          [ifaceArg.astNode, typeField.astNode],\n        );\n        continue;\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n      if (!isEqualType(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) ` +\n            `expects type ${inspect(ifaceArg.type)} but ` +\n            `${type.name}.${fieldName}(${argName}:) is type ` +\n            `${inspect(typeArg.type)}.`,\n          [\n            (_ifaceArg$astNode = ifaceArg.astNode) === null ||\n            _ifaceArg$astNode === void 0\n              ? void 0\n              : _ifaceArg$astNode.type,\n            (_typeArg$astNode = typeArg.astNode) === null ||\n            _typeArg$astNode === void 0\n              ? void 0\n              : _typeArg$astNode.type,\n          ],\n        );\n      } // TODO: validate default values?\n    } // Assert additional arguments must not be required.\n\n    for (const typeArg of typeField.args) {\n      const argName = typeArg.name;\n      const ifaceArg = ifaceField.args.find((arg) => arg.name === argName);\n\n      if (!ifaceArg && isRequiredArgument(typeArg)) {\n        context.reportError(\n          `Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`,\n          [typeArg.astNode, ifaceField.astNode],\n        );\n      }\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  const ifaceInterfaces = type.getInterfaces();\n\n  for (const transitive of iface.getInterfaces()) {\n    if (!ifaceInterfaces.includes(transitive)) {\n      context.reportError(\n        transitive === type\n          ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.`\n          : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`,\n        [\n          ...getAllImplementsInterfaceNodes(iface, transitive),\n          ...getAllImplementsInterfaceNodes(type, iface),\n        ],\n      );\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  const memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\n      `Union type ${union.name} must define one or more member types.`,\n      [union.astNode, ...union.extensionASTNodes],\n    );\n  }\n\n  const includedTypeNames = Object.create(null);\n\n  for (const memberType of memberTypes) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\n        `Union type ${union.name} can only include type ${memberType.name} once.`,\n        getUnionMemberTypeNodes(union, memberType.name),\n      );\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!isObjectType(memberType)) {\n      context.reportError(\n        `Union type ${union.name} can only include Object types, ` +\n          `it cannot include ${inspect(memberType)}.`,\n        getUnionMemberTypeNodes(union, String(memberType)),\n      );\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  const enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\n      `Enum type ${enumType.name} must define one or more values.`,\n      [enumType.astNode, ...enumType.extensionASTNodes],\n    );\n  }\n\n  for (const enumValue of enumValues) {\n    // Ensure valid name.\n    validateName(context, enumValue);\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  const fields = Object.values(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\n      `Input Object type ${inputObj.name} must define one or more fields.`,\n      [inputObj.astNode, ...inputObj.extensionASTNodes],\n    );\n  } // Ensure the arguments are valid\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!isInputType(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\n        `The type of ${inputObj.name}.${field.name} must be Input Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0\n          ? void 0\n          : _field$astNode2.type,\n      );\n    }\n\n    if (isRequiredInputField(field) && field.deprecationReason != null) {\n      var _field$astNode3;\n\n      context.reportError(\n        `Required input field ${inputObj.name}.${field.name} cannot be deprecated.`,\n        [\n          getDeprecatedDirectiveNode(field.astNode),\n          (_field$astNode3 = field.astNode) === null ||\n          _field$astNode3 === void 0\n            ? void 0\n            : _field$astNode3.type,\n        ],\n      );\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  const fieldPath = []; // Position in the type path\n\n  const fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    const fields = Object.values(inputObj.getFields());\n\n    for (const field of fields) {\n      if (isNonNullType(field.type) && isInputObjectType(field.type.ofType)) {\n        const fieldType = field.type.ofType;\n        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          const cyclePath = fieldPath.slice(cycleIndex);\n          const pathStr = cyclePath.map((fieldObj) => fieldObj.name).join('.');\n          context.reportError(\n            `Cannot reference Input Object \"${fieldType.name}\" within itself through a series of non-null fields: \"${pathStr}\".`,\n            cyclePath.map((fieldObj) => fieldObj.astNode),\n          );\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  const { astNode, extensionASTNodes } = type;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((typeNode) => {\n      var _typeNode$interfaces;\n\n      return (\n        /* c8 ignore next */\n        (_typeNode$interfaces = typeNode.interfaces) !== null &&\n          _typeNode$interfaces !== void 0\n          ? _typeNode$interfaces\n          : []\n      );\n    })\n    .filter((ifaceNode) => ifaceNode.name.value === iface.name);\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  const { astNode, extensionASTNodes } = union;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((unionNode) => {\n      var _unionNode$types;\n\n      return (\n        /* c8 ignore next */\n        (_unionNode$types = unionNode.types) !== null &&\n          _unionNode$types !== void 0\n          ? _unionNode$types\n          : []\n      );\n    })\n    .filter((typeNode) => typeNode.name.value === typeName);\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  return definitionNode === null || definitionNode === void 0\n    ? void 0\n    : (_definitionNode$direc = definitionNode.directives) === null ||\n      _definitionNode$direc === void 0\n    ? void 0\n    : _definitionNode$direc.find(\n        (node) => node.name.value === GraphQLDeprecatedDirective.name,\n      );\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { GraphQLList, GraphQLNonNull } from '../type/definition.mjs';\nexport function typeFromAST(schema, typeNode) {\n  switch (typeNode.kind) {\n    case Kind.LIST_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLList(innerType);\n    }\n\n    case Kind.NON_NULL_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLNonNull(innerType);\n    }\n\n    case Kind.NAMED_TYPE:\n      return schema.getType(typeNode.name.value);\n  }\n}\n","import { isNode } from '../language/ast.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { getEnterLeaveForKind } from '../language/visitor.mjs';\nimport {\n  getNamedType,\n  getNullableType,\n  isCompositeType,\n  isEnumType,\n  isInputObjectType,\n  isInputType,\n  isInterfaceType,\n  isListType,\n  isObjectType,\n  isOutputType,\n} from '../type/definition.mjs';\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from '../type/introspection.mjs';\nimport { typeFromAST } from './typeFromAST.mjs';\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\n\nexport class TypeInfo {\n  constructor(\n    schema,\n    /**\n     * Initial type may be provided in rare cases to facilitate traversals\n     *  beginning somewhere other than documents.\n     */\n    initialType,\n    /** @deprecated will be removed in 17.0.0 */\n    getFieldDefFn,\n  ) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef =\n      getFieldDefFn !== null && getFieldDefFn !== void 0\n        ? getFieldDefFn\n        : getFieldDef;\n\n    if (initialType) {\n      if (isInputType(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if (isCompositeType(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if (isOutputType(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'TypeInfo';\n  }\n\n  getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  }\n\n  getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  }\n\n  getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  }\n\n  getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  }\n\n  getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  }\n\n  getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  }\n\n  getDirective() {\n    return this._directive;\n  }\n\n  getArgument() {\n    return this._argument;\n  }\n\n  getEnumValue() {\n    return this._enumValue;\n  }\n\n  enter(node) {\n    const schema = this._schema; // Note: many of the types below are explicitly typed as \"unknown\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case Kind.SELECTION_SET: {\n        const namedType = getNamedType(this.getType());\n\n        this._parentTypeStack.push(\n          isCompositeType(namedType) ? namedType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.FIELD: {\n        const parentType = this.getParentType();\n        let fieldDef;\n        let fieldType;\n\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n\n        this._fieldDefStack.push(fieldDef);\n\n        this._typeStack.push(isOutputType(fieldType) ? fieldType : undefined);\n\n        break;\n      }\n\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case Kind.OPERATION_DEFINITION: {\n        const rootType = schema.getRootType(node.operation);\n\n        this._typeStack.push(isObjectType(rootType) ? rootType : undefined);\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION: {\n        const typeConditionAST = node.typeCondition;\n        const outputType = typeConditionAST\n          ? typeFromAST(schema, typeConditionAST)\n          : getNamedType(this.getType());\n\n        this._typeStack.push(isOutputType(outputType) ? outputType : undefined);\n\n        break;\n      }\n\n      case Kind.VARIABLE_DEFINITION: {\n        const inputType = typeFromAST(schema, node.type);\n\n        this._inputTypeStack.push(\n          isInputType(inputType) ? inputType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ARGUMENT: {\n        var _this$getDirective;\n\n        let argDef;\n        let argType;\n        const fieldOrDirective =\n          (_this$getDirective = this.getDirective()) !== null &&\n          _this$getDirective !== void 0\n            ? _this$getDirective\n            : this.getFieldDef();\n\n        if (fieldOrDirective) {\n          argDef = fieldOrDirective.args.find(\n            (arg) => arg.name === node.name.value,\n          );\n\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n\n        this._argument = argDef;\n\n        this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n        this._inputTypeStack.push(isInputType(argType) ? argType : undefined);\n\n        break;\n      }\n\n      case Kind.LIST: {\n        const listType = getNullableType(this.getInputType());\n        const itemType = isListType(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n        this._defaultValueStack.push(undefined);\n\n        this._inputTypeStack.push(isInputType(itemType) ? itemType : undefined);\n\n        break;\n      }\n\n      case Kind.OBJECT_FIELD: {\n        const objectType = getNamedType(this.getInputType());\n        let inputFieldType;\n        let inputField;\n\n        if (isInputObjectType(objectType)) {\n          inputField = objectType.getFields()[node.name.value];\n\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n\n        this._defaultValueStack.push(\n          inputField ? inputField.defaultValue : undefined,\n        );\n\n        this._inputTypeStack.push(\n          isInputType(inputFieldType) ? inputFieldType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ENUM: {\n        const enumType = getNamedType(this.getInputType());\n        let enumValue;\n\n        if (isEnumType(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n\n        this._enumValue = enumValue;\n        break;\n      }\n\n      default: // Ignore other nodes\n    }\n  }\n\n  leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n\n      default: // Ignore other nodes\n    }\n  }\n}\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const name = fieldNode.name.value;\n\n  if (\n    name === SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return SchemaMetaFieldDef;\n  }\n\n  if (name === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n\n  if (name === TypeNameMetaFieldDef.name && isCompositeType(parentType)) {\n    return TypeNameMetaFieldDef;\n  }\n\n  if (isObjectType(parentType) || isInterfaceType(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter(...args) {\n      const node = args[0];\n      typeInfo.enter(node);\n      const fn = getEnterLeaveForKind(visitor, node.kind).enter;\n\n      if (fn) {\n        const result = fn.apply(visitor, args);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n\n    leave(...args) {\n      const node = args[0];\n      const fn = getEnterLeaveForKind(visitor, node.kind).leave;\n      let result;\n\n      if (fn) {\n        result = fn.apply(visitor, args);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    },\n  };\n}\n","import { Kind } from './kinds.mjs';\nexport function isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\nexport function isExecutableDefinitionNode(node) {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\nexport function isSelectionNode(node) {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\nexport function isValueNode(node) {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\nexport function isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== Kind.VARIABLE)\n  );\n}\nexport function isTypeNode(node) {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\nexport function isTypeDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isExecutableDefinitionNode } from '../../language/predicates.mjs';\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!isExecutableDefinitionNode(definition)) {\n          const defName =\n            definition.kind === Kind.SCHEMA_DEFINITION ||\n            definition.kind === Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new GraphQLError(`The ${defName} definition is not executable.`, {\n              nodes: definition,\n            }),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { naturalCompare } from '../../jsutils/naturalCompare.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isAbstractType,\n  isInterfaceType,\n  isObjectType,\n} from '../../type/definition.mjs';\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selections\n */\nexport function FieldsOnCorrectTypeRule(context) {\n  return {\n    Field(node) {\n      const type = context.getParentType();\n\n      if (type) {\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          const schema = context.getSchema();\n          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          let suggestion = didYouMean(\n            'to use an inline fragment on',\n            getSuggestedTypeNames(schema, type, fieldName),\n          ); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = didYouMean(getSuggestedFieldNames(type, fieldName));\n          } // Report an error, including helpful suggestions.\n\n          context.reportError(\n            new GraphQLError(\n              `Cannot query field \"${fieldName}\" on type \"${type.name}\".` +\n                suggestion,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!isAbstractType(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  const suggestedTypes = new Set();\n  const usageCount = Object.create(null);\n\n  for (const possibleType of schema.getPossibleTypes(type)) {\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (const possibleInterface of possibleType.getInterfaces()) {\n      var _usageCount$possibleI;\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] =\n        ((_usageCount$possibleI = usageCount[possibleInterface.name]) !==\n          null && _usageCount$possibleI !== void 0\n          ? _usageCount$possibleI\n          : 0) + 1;\n    }\n  }\n\n  return [...suggestedTypes]\n    .sort((typeA, typeB) => {\n      // Suggest both interface and object types based on how common they are.\n      const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n      if (usageCountDiff !== 0) {\n        return usageCountDiff;\n      } // Suggest super types first followed by subtypes\n\n      if (isInterfaceType(typeA) && schema.isSubType(typeA, typeB)) {\n        return -1;\n      }\n\n      if (isInterfaceType(typeB) && schema.isSubType(typeB, typeA)) {\n        return 1;\n      }\n\n      return naturalCompare(typeA.name, typeB.name);\n    })\n    .map((x) => x.name);\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type)) {\n    const possibleFieldNames = Object.keys(type.getFields());\n    return suggestionList(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n  return [];\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nexport function FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        const type = typeFromAST(context.getSchema(), typeCondition);\n\n        if (type && !isCompositeType(type)) {\n          const typeStr = print(typeCondition);\n          context.reportError(\n            new GraphQLError(\n              `Fragment cannot condition on non composite type \"${typeStr}\".`,\n              {\n                nodes: typeCondition,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    FragmentDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.typeCondition);\n\n      if (type && !isCompositeType(type)) {\n        const typeStr = print(node.typeCondition);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`,\n            {\n              nodes: node.typeCondition,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nexport function KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map((arg) => arg.name);\n        const suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(\n          new GraphQLError(\n            `Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` +\n              didYouMean(suggestions),\n            {\n              nodes: argNode,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);\n    }\n  }\n\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n\n          if (!knownArgs.includes(argName)) {\n            const suggestions = suggestionList(argName, knownArgs);\n            context.reportError(\n              new GraphQLError(\n                `Unknown argument \"${argName}\" on directive \"@${directiveName}\".` +\n                  didYouMean(suggestions),\n                {\n                  nodes: argNode,\n                },\n              ),\n            );\n          }\n        }\n      }\n\n      return false;\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../../language/ast.mjs';\nimport { DirectiveLocation } from '../../language/directiveLocation.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nexport function KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map((name) => name.value);\n    }\n  }\n\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(\n          new GraphQLError(`Unknown directive \"@${name}\".`, {\n            nodes: node,\n          }),\n        );\n        return;\n      }\n\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${name}\" may not be used on ${candidateLocation}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || invariant(false);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION: {\n      const parentNode = ancestors[ancestors.length - 3];\n      'kind' in parentNode || invariant(false);\n      return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n        ? DirectiveLocation.INPUT_FIELD_DEFINITION\n        : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(appliedTo.kind));\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case OperationTypeNode.QUERY:\n      return DirectiveLocation.QUERY;\n\n    case OperationTypeNode.MUTATION:\n      return DirectiveLocation.MUTATION;\n\n    case OperationTypeNode.SUBSCRIPTION:\n      return DirectiveLocation.SUBSCRIPTION;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nexport function KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new GraphQLError(`Unknown fragment \"${fragmentName}\".`, {\n            nodes: node.name,\n          }),\n        );\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeSystemDefinitionNode,\n  isTypeSystemExtensionNode,\n} from '../../language/predicates.mjs';\nimport { introspectionTypes } from '../../type/introspection.mjs';\nimport { specifiedScalarTypes } from '../../type/scalars.mjs';\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nexport function KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  const typeNames = [\n    ...Object.keys(existingTypesMap),\n    ...Object.keys(definedTypes),\n  ];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        const definitionNode =\n          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0\n            ? _ancestors$\n            : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n\n        const suggestedTypes = suggestionList(\n          typeName,\n          isSDL ? standardTypeNames.concat(typeNames) : typeNames,\n        );\n        context.reportError(\n          new GraphQLError(\n            `Unknown type \"${typeName}\".` + didYouMean(suggestedTypes),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\nconst standardTypeNames = [...specifiedScalarTypes, ...introspectionTypes].map(\n  (type) => type.name,\n);\n\nfunction isSDLNode(value) {\n  return (\n    'kind' in value &&\n    (isTypeSystemDefinitionNode(value) || isTypeSystemExtensionNode(value))\n  );\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nexport function LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        (definition) => definition.kind === Kind.OPERATION_DEFINITION,\n      ).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new GraphQLError(\n            'This anonymous operation must be the only defined operation.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nexport function NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    },\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath\n          .slice(0, -1)\n          .map((s) => '\"' + s.name.value + '\"')\n          .join(', ');\n        context.reportError(\n          new GraphQLError(\n            `Cannot spread fragment \"${spreadName}\" within itself` +\n              (viaPath !== '' ? ` via ${viaPath}.` : '.'),\n            {\n              nodes: cyclePath,\n            },\n          ),\n        );\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\n */\nexport function NoUndefinedVariablesRule(context) {\n  let variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        variableNameDefined = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          const varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".`\n                  : `Variable \"$${varName}\" is not defined.`,\n                {\n                  nodes: [node, operation],\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nexport function NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(\n            operation,\n          )) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(\n              new GraphQLError(`Fragment \"${fragName}\" is never used.`, {\n                nodes: fragmentDef,\n              }),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\n */\nexport function NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".`\n                  : `Variable \"$${variableName}\" is never used.`,\n                {\n                  nodes: variableDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    },\n  };\n}\n","import { naturalCompare } from '../jsutils/naturalCompare.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Sort ValueNode.\n *\n * This function returns a sorted copy of the given ValueNode.\n *\n * @internal\n */\n\nexport function sortValueNode(valueNode) {\n  switch (valueNode.kind) {\n    case Kind.OBJECT:\n      return { ...valueNode, fields: sortFields(valueNode.fields) };\n\n    case Kind.LIST:\n      return { ...valueNode, values: valueNode.values.map(sortValueNode) };\n\n    case Kind.INT:\n    case Kind.FLOAT:\n    case Kind.STRING:\n    case Kind.BOOLEAN:\n    case Kind.NULL:\n    case Kind.ENUM:\n    case Kind.VARIABLE:\n      return valueNode;\n  }\n}\n\nfunction sortFields(fields) {\n  return fields\n    .map((fieldNode) => ({\n      ...fieldNode,\n      value: sortValueNode(fieldNode.value),\n    }))\n    .sort((fieldA, fieldB) =>\n      naturalCompare(fieldA.name.value, fieldB.name.value),\n    );\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  getNamedType,\n  isInterfaceType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../../type/definition.mjs';\nimport { sortValueNode } from '../../utilities/sortValueNode.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason\n      .map(\n        ([responseName, subReason]) =>\n          `subfields \"${responseName}\" conflict because ` +\n          reasonMessage(subReason),\n      )\n      .join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging\n */\n\nexport function OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  const comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  const cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet(selectionSet) {\n      const conflicts = findConflictsWithinSelectionSet(\n        context,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        context.getParentType(),\n        selectionSet,\n      );\n\n      for (const [[responseName, reason], fields1, fields2] of conflicts) {\n        const reasonMsg = reasonMessage(reason);\n        context.reportError(\n          new GraphQLError(\n            `Fields \"${responseName}\" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`,\n            {\n              nodes: fields1.concat(fields2),\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentType,\n  selectionSet,\n) {\n  const conflicts = [];\n  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType,\n    selectionSet,\n  ); // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n  collectConflictsWithin(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    fieldMap,\n  );\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (let i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        false,\n        fieldMap,\n        fragmentNames[i],\n      ); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (let j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(\n          context,\n          conflicts,\n          cachedFieldsAndFragmentNames,\n          comparedFragmentPairs,\n          false,\n          fragmentNames[i],\n          fragmentNames[j],\n        );\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\nfunction collectConflictsBetweenFieldsAndFragment(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fieldMap,\n  fragmentName,\n) {\n  const fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  const [fieldMap2, referencedFragmentNames] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment,\n    ); // Do not compare a fragment's fieldMap to itself.\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap,\n    fieldMap2,\n  ); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (const referencedFragmentName of referencedFragmentNames) {\n    // Memoize so two fragments are not compared for conflicts more than once.\n    if (\n      comparedFragmentPairs.has(\n        referencedFragmentName,\n        fragmentName,\n        areMutuallyExclusive,\n      )\n    ) {\n      continue;\n    }\n\n    comparedFragmentPairs.add(\n      referencedFragmentName,\n      fragmentName,\n      areMutuallyExclusive,\n    );\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap,\n      referencedFragmentName,\n    );\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\nfunction collectConflictsBetweenFragments(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fragmentName1,\n  fragmentName2,\n) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n  if (\n    comparedFragmentPairs.has(\n      fragmentName1,\n      fragmentName2,\n      areMutuallyExclusive,\n    )\n  ) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  const fragment1 = context.getFragment(fragmentName1);\n  const fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  const [fieldMap1, referencedFragmentNames1] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment1,\n    );\n  const [fieldMap2, referencedFragmentNames2] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment2,\n    ); // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (const referencedFragmentName2 of referencedFragmentNames2) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fragmentName1,\n      referencedFragmentName2,\n    );\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n  for (const referencedFragmentName1 of referencedFragmentNames1) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      referencedFragmentName1,\n      fragmentName2,\n    );\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\nfunction findConflictsBetweenSubSelectionSets(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  parentType1,\n  selectionSet1,\n  parentType2,\n  selectionSet2,\n) {\n  const conflicts = [];\n  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType1,\n    selectionSet1,\n  );\n  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType2,\n    selectionSet2,\n  ); // (H) First, collect all conflicts between these two collections of field.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  for (const fragmentName2 of fragmentNames2) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap1,\n      fragmentName2,\n    );\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n  for (const fragmentName1 of fragmentNames1) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap2,\n      fragmentName1,\n    );\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n  for (const fragmentName1 of fragmentNames1) {\n    for (const fragmentName2 of fragmentNames2) {\n      collectConflictsBetweenFragments(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        areMutuallyExclusive,\n        fragmentName1,\n        fragmentName2,\n      );\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\nfunction collectConflictsWithin(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  fieldMap,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (const [responseName, fields] of Object.entries(fieldMap)) {\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (let i = 0; i < fields.length; i++) {\n        for (let j = i + 1; j < fields.length; j++) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            false, // within one collection is never mutually exclusive\n            responseName,\n            fields[i],\n            fields[j],\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\nfunction collectConflictsBetween(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  fieldMap1,\n  fieldMap2,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (const [responseName, fields1] of Object.entries(fieldMap1)) {\n    const fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      for (const field1 of fields1) {\n        for (const field2 of fields2) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            parentFieldsAreMutuallyExclusive,\n            responseName,\n            field1,\n            field2,\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\nfunction findConflict(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  responseName,\n  field1,\n  field2,\n) {\n  const [parentType1, node1, def1] = field1;\n  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  const areMutuallyExclusive =\n    parentFieldsAreMutuallyExclusive ||\n    (parentType1 !== parentType2 &&\n      isObjectType(parentType1) &&\n      isObjectType(parentType2));\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    const name1 = node1.name.value;\n    const name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [\n        [responseName, `\"${name1}\" and \"${name2}\" are different fields`],\n        [node1],\n        [node2],\n      ];\n    } // Two field calls must have the same arguments.\n\n    if (!sameArguments(node1, node2)) {\n      return [\n        [responseName, 'they have differing arguments'],\n        [node1],\n        [node2],\n      ];\n    }\n  } // The return type for each field.\n\n  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [\n      [\n        responseName,\n        `they return conflicting types \"${inspect(type1)}\" and \"${inspect(\n          type2,\n        )}\"`,\n      ],\n      [node1],\n      [node2],\n    ];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n  const selectionSet1 = node1.selectionSet;\n  const selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    const conflicts = findConflictsBetweenSubSelectionSets(\n      context,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      getNamedType(type1),\n      selectionSet1,\n      getNamedType(type2),\n      selectionSet2,\n    );\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(node1, node2) {\n  const args1 = node1.arguments;\n  const args2 = node2.arguments;\n\n  if (args1 === undefined || args1.length === 0) {\n    return args2 === undefined || args2.length === 0;\n  }\n\n  if (args2 === undefined || args2.length === 0) {\n    return false;\n  }\n  /* c8 ignore next */\n\n  if (args1.length !== args2.length) {\n    /* c8 ignore next */\n    return false;\n    /* c8 ignore next */\n  }\n\n  const values2 = new Map(args2.map(({ name, value }) => [name.value, value]));\n  return args1.every((arg1) => {\n    const value1 = arg1.value;\n    const value2 = values2.get(arg1.name.value);\n\n    if (value2 === undefined) {\n      return false;\n    }\n\n    return stringifyValue(value1) === stringifyValue(value2);\n  });\n}\n\nfunction stringifyValue(value) {\n  return print(sortValueNode(value));\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\nfunction doTypesConflict(type1, type2) {\n  if (isListType(type1)) {\n    return isListType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isListType(type2)) {\n    return true;\n  }\n\n  if (isNonNullType(type1)) {\n    return isNonNullType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isNonNullType(type2)) {\n    return true;\n  }\n\n  if (isLeafType(type1) || isLeafType(type2)) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\nfunction getFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  parentType,\n  selectionSet,\n) {\n  const cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const nodeAndDefs = Object.create(null);\n  const fragmentNames = Object.create(null);\n\n  _collectFieldsAndFragmentNames(\n    context,\n    parentType,\n    selectionSet,\n    nodeAndDefs,\n    fragmentNames,\n  );\n\n  const result = [nodeAndDefs, Object.keys(fragmentNames)];\n  cachedFieldsAndFragmentNames.set(selectionSet, result);\n  return result;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\nfunction getReferencedFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  fragment,\n) {\n  // Short-circuit building a type from the node if possible.\n  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const fragmentType = typeFromAST(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    fragmentType,\n    fragment.selectionSet,\n  );\n}\n\nfunction _collectFieldsAndFragmentNames(\n  context,\n  parentType,\n  selectionSet,\n  nodeAndDefs,\n  fragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        const fieldName = selection.name.value;\n        let fieldDef;\n\n        if (isObjectType(parentType) || isInterfaceType(parentType)) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n\n        const responseName = selection.alias\n          ? selection.alias.value\n          : fieldName;\n\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case Kind.INLINE_FRAGMENT: {\n        const typeCondition = selection.typeCondition;\n        const inlineFragmentType = typeCondition\n          ? typeFromAST(context.getSchema(), typeCondition)\n          : parentType;\n\n        _collectFieldsAndFragmentNames(\n          context,\n          inlineFragmentType,\n          selection.selectionSet,\n          nodeAndDefs,\n          fragmentNames,\n        );\n\n        break;\n      }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [\n      [responseName, conflicts.map(([reason]) => reason)],\n      [node1, ...conflicts.map(([, fields1]) => fields1).flat()],\n      [node2, ...conflicts.map(([, , fields2]) => fields2).flat()],\n    ];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does not matter.\n */\n\nclass PairSet {\n  constructor() {\n    this._data = new Map();\n  }\n\n  has(a, b, areMutuallyExclusive) {\n    var _this$_data$get;\n\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const result =\n      (_this$_data$get = this._data.get(key1)) === null ||\n      _this$_data$get === void 0\n        ? void 0\n        : _this$_data$get.get(key2);\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true, hence if\n    // we want to know if this PairSet \"has\" these two with no exclusivity,\n    // we have to ensure it was added as such.\n\n    return areMutuallyExclusive ? true : areMutuallyExclusive === result;\n  }\n\n  add(a, b, areMutuallyExclusive) {\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n\n    const map = this._data.get(key1);\n\n    if (map === undefined) {\n      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));\n    } else {\n      map.set(key2, areMutuallyExclusive);\n    }\n  }\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { doTypesOverlap } from '../../utilities/typeComparators.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nexport function PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment(node) {\n      const fragType = context.getType();\n      const parentType = context.getParentType();\n\n      if (\n        isCompositeType(fragType) &&\n        isCompositeType(parentType) &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    FragmentSpread(node) {\n      const fragName = node.name.value;\n      const fragType = getFragmentType(context, fragName);\n      const parentType = context.getParentType();\n\n      if (\n        fragType &&\n        parentType &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${fragName}\" cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getFragmentType(context, name) {\n  const frag = context.getFragment(name);\n\n  if (frag) {\n    const type = typeFromAST(context.getSchema(), frag.typeCondition);\n\n    if (isCompositeType(type)) {\n      return type;\n    }\n  }\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { keyMap } from '../../jsutils/keyMap.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isRequiredArgument, isType } from '../../type/definition.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nexport function ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (!providedArgs.has(argDef.name) && isRequiredArgument(argDef)) {\n            const argTypeStr = inspect(argDef.type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                {\n                  nodes: fieldNode,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = keyMap(\n      directive.args.filter(isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = keyMap(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = isType(argDef.type)\n                ? inspect(argDef.type)\n                : print(argDef.type);\n              context.reportError(\n                new GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  {\n                    nodes: directiveNode,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { getNamedType, isLeafType } from '../../type/definition.mjs';\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nexport function ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = inspect(type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`,\n                {\n                  nodes: selectionSet,\n                },\n              ),\n            );\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = inspect(type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Unknown       |\n * | NullValue            | null          |\n *\n */\n\nexport function valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    const variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    const variableValue = variables[variableName];\n\n    if (variableValue === null && isNonNullType(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n    return variableValue;\n  }\n\n  if (isNonNullType(type)) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (valueNode.kind === Kind.LIST) {\n      const coercedValues = [];\n\n      for (const itemNode of valueNode.values) {\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (isNonNullType(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          const itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    const coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if (isInputObjectType(type)) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    const coercedObj = Object.create(null);\n    const fieldNodes = keyMap(valueNode.fields, (field) => field.name.value);\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  }\n\n  if (isLeafType(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    let result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible input types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return (\n    valueNode.kind === Kind.VARIABLE &&\n    (variables == null || variables[valueNode.name.value] === undefined)\n  );\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { printPathArray } from '../jsutils/printPathArray.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { isInputType, isNonNullType } from '../type/definition.mjs';\nimport { coerceInputValue } from '../utilities/coerceInputValue.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { valueFromAST } from '../utilities/valueFromAST.mjs';\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nexport function getVariableValues(schema, varDefNodes, inputs, options) {\n  const errors = [];\n  const maxErrors =\n    options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    const coerced = coerceVariableValues(\n      schema,\n      varDefNodes,\n      inputs,\n      (error) => {\n        if (maxErrors != null && errors.length >= maxErrors) {\n          throw new GraphQLError(\n            'Too many errors processing variables, error limit reached. Execution aborted.',\n          );\n        }\n\n        errors.push(error);\n      },\n    );\n\n    if (errors.length === 0) {\n      return {\n        coerced,\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors,\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  const coercedValues = {};\n\n  for (const varDefNode of varDefNodes) {\n    const varName = varDefNode.variable.name.value;\n    const varType = typeFromAST(schema, varDefNode.type);\n\n    if (!isInputType(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      const varTypeStr = print(varDefNode.type);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`,\n          {\n            nodes: varDefNode.type,\n          },\n        ),\n      );\n      continue;\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = valueFromAST(varDefNode.defaultValue, varType);\n      } else if (isNonNullType(varType)) {\n        const varTypeStr = inspect(varType);\n        onError(\n          new GraphQLError(\n            `Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`,\n            {\n              nodes: varDefNode,\n            },\n          ),\n        );\n      }\n\n      continue;\n    }\n\n    const value = inputs[varName];\n\n    if (value === null && isNonNullType(varType)) {\n      const varTypeStr = inspect(varType);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`,\n          {\n            nodes: varDefNode,\n          },\n        ),\n      );\n      continue;\n    }\n\n    coercedValues[varName] = coerceInputValue(\n      value,\n      varType,\n      (path, invalidValue, error) => {\n        let prefix =\n          `Variable \"$${varName}\" got invalid value ` + inspect(invalidValue);\n\n        if (path.length > 0) {\n          prefix += ` at \"${varName}${printPathArray(path)}\"`;\n        }\n\n        onError(\n          new GraphQLError(prefix + '; ' + error.message, {\n            nodes: varDefNode,\n            originalError: error,\n          }),\n        );\n      },\n    );\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const argumentNodes =\n    (_node$arguments = node.arguments) !== null && _node$arguments !== void 0\n      ? _node$arguments\n      : [];\n  const argNodeMap = keyMap(argumentNodes, (arg) => arg.name.value);\n\n  for (const argDef of def.args) {\n    const name = argDef.name;\n    const argType = argDef.type;\n    const argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if (isNonNullType(argType)) {\n        throw new GraphQLError(\n          `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n            'was not provided.',\n          {\n            nodes: node,\n          },\n        );\n      }\n\n      continue;\n    }\n\n    const valueNode = argumentNode.value;\n    let isNull = valueNode.kind === Kind.NULL;\n\n    if (valueNode.kind === Kind.VARIABLE) {\n      const variableName = valueNode.name.value;\n\n      if (\n        variableValues == null ||\n        !hasOwnProperty(variableValues, variableName)\n      ) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if (isNonNullType(argType)) {\n          throw new GraphQLError(\n            `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n              `was provided the variable \"$${variableName}\" which was not provided a runtime value.`,\n            {\n              nodes: valueNode,\n            },\n          );\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && isNonNullType(argType)) {\n      throw new GraphQLError(\n        `Argument \"${name}\" of non-null type \"${inspect(argType)}\" ` +\n          'must not be null.',\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const coercedValue = valueFromAST(valueNode, argType, variableValues);\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new GraphQLError(\n        `Argument \"${name}\" has invalid value ${print(valueNode)}.`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getDirectiveValues(directiveDef, node, variableValues) {\n  var _node$directives;\n\n  const directiveNode =\n    (_node$directives = node.directives) === null || _node$directives === void 0\n      ? void 0\n      : _node$directives.find(\n          (directive) => directive.name.value === directiveDef.name,\n        );\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { isAbstractType } from '../type/definition.mjs';\nimport {\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n} from '../type/directives.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { getDirectiveValues } from './values.mjs';\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nexport function collectFields(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n) {\n  const fields = new Map();\n  collectFieldsImpl(\n    schema,\n    fragments,\n    variableValues,\n    runtimeType,\n    selectionSet,\n    fields,\n    new Set(),\n  );\n  return fields;\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nexport function collectSubfields(\n  schema,\n  fragments,\n  variableValues,\n  returnType,\n  fieldNodes,\n) {\n  const subFieldNodes = new Map();\n  const visitedFragmentNames = new Set();\n\n  for (const node of fieldNodes) {\n    if (node.selectionSet) {\n      collectFieldsImpl(\n        schema,\n        fragments,\n        variableValues,\n        returnType,\n        node.selectionSet,\n        subFieldNodes,\n        visitedFragmentNames,\n      );\n    }\n  }\n\n  return subFieldNodes;\n}\n\nfunction collectFieldsImpl(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n  fields,\n  visitedFragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        if (!shouldIncludeNode(variableValues, selection)) {\n          continue;\n        }\n\n        const name = getFieldEntryKey(selection);\n        const fieldList = fields.get(name);\n\n        if (fieldList !== undefined) {\n          fieldList.push(selection);\n        } else {\n          fields.set(name, [selection]);\n        }\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT: {\n        if (\n          !shouldIncludeNode(variableValues, selection) ||\n          !doesFragmentConditionMatch(schema, selection, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          selection.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD: {\n        const fragName = selection.name.value;\n\n        if (\n          visitedFragmentNames.has(fragName) ||\n          !shouldIncludeNode(variableValues, selection)\n        ) {\n          continue;\n        }\n\n        visitedFragmentNames.add(fragName);\n        const fragment = fragments[fragName];\n\n        if (\n          !fragment ||\n          !doesFragmentConditionMatch(schema, fragment, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          fragment.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n    }\n  }\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\n\nfunction shouldIncludeNode(variableValues, node) {\n  const skip = getDirectiveValues(GraphQLSkipDirective, node, variableValues);\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  const include = getDirectiveValues(\n    GraphQLIncludeDirective,\n    node,\n    variableValues,\n  );\n\n  if (\n    (include === null || include === void 0 ? void 0 : include.if) === false\n  ) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n  const typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  const conditionalType = typeFromAST(schema, typeConditionNode);\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if (isAbstractType(conditionalType)) {\n    return schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { collectFields } from '../../execution/collectFields.mjs';\n\n/**\n * Subscriptions must only include a non-introspection field.\n *\n * A GraphQL subscription is valid only if it contains a single root field and\n * that root field is not an introspection field.\n *\n * See https://spec.graphql.org/draft/#sec-Single-root-field\n */\nexport function SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        const schema = context.getSchema();\n        const subscriptionType = schema.getSubscriptionType();\n\n        if (subscriptionType) {\n          const operationName = node.name ? node.name.value : null;\n          const variableValues = Object.create(null);\n          const document = context.getDocument();\n          const fragments = Object.create(null);\n\n          for (const definition of document.definitions) {\n            if (definition.kind === Kind.FRAGMENT_DEFINITION) {\n              fragments[definition.name.value] = definition;\n            }\n          }\n\n          const fields = collectFields(\n            schema,\n            fragments,\n            variableValues,\n            subscriptionType,\n            node.selectionSet,\n          );\n\n          if (fields.size > 1) {\n            const fieldSelectionLists = [...fields.values()];\n            const extraFieldSelectionLists = fieldSelectionLists.slice(1);\n            const extraFieldSelections = extraFieldSelectionLists.flat();\n            context.reportError(\n              new GraphQLError(\n                operationName != null\n                  ? `Subscription \"${operationName}\" must select only one top level field.`\n                  : 'Anonymous Subscription must select only one top level field.',\n                {\n                  nodes: extraFieldSelections,\n                },\n              ),\n            );\n          }\n\n          for (const fieldNodes of fields.values()) {\n            const field = fieldNodes[0];\n            const fieldName = field.name.value;\n\n            if (fieldName.startsWith('__')) {\n              context.reportError(\n                new GraphQLError(\n                  operationName != null\n                    ? `Subscription \"${operationName}\" must not select an introspection top level field.`\n                    : 'Anonymous Subscription must not select an introspection top level field.',\n                  {\n                    nodes: fieldNodes,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      }\n    },\n  };\n}\n","/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nexport function groupBy(list, keyFn) {\n  const result = new Map();\n\n  for (const item of list) {\n    const key = keyFn(item);\n    const group = result.get(key);\n\n    if (group === undefined) {\n      result.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n\n  return result;\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nexport function UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness,\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes =\n      (_parentNode$arguments = parentNode.arguments) !== null &&\n      _parentNode$arguments !== void 0\n        ? _parentNode$arguments\n        : [];\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one argument named \"${argName}\".`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../../language/predicates.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nexport function UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === Kind.SCHEMA_DEFINITION ||\n        node.kind === Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (isTypeDefinitionNode(node) || isTypeExtensionNode(node)) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                {\n                  nodes: [seenDirectives[directiveName], directive],\n                },\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nexport function UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            {\n              nodes: [knownFragmentNames[fragmentName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n","import { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nexport function UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || invariant(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            {\n              nodes: [knownNames[fieldName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nexport function UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              {\n                nodes: [\n                  knownOperationNames[operationName.value],\n                  operationName,\n                ],\n              },\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = groupBy(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              {\n                nodes: variableNodes.map((node) => node.variable.name),\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { inspect } from '../../jsutils/inspect.mjs';\nimport { keyMap } from '../../jsutils/keyMap.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  getNamedType,\n  getNullableType,\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isRequiredInputField,\n} from '../../type/definition.mjs';\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n *\n * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type\n */\nexport function ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      const type = getNullableType(context.getParentInputType());\n\n      if (!isListType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n\n    ObjectValue(node) {\n      const type = getNamedType(context.getInputType());\n\n      if (!isInputObjectType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n      const fieldNodeMap = keyMap(node.fields, (field) => field.name.value);\n\n      for (const fieldDef of Object.values(type.getFields())) {\n        const fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && isRequiredInputField(fieldDef)) {\n          const typeStr = inspect(fieldDef.type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${type.name}.${fieldDef.name}\" of required type \"${typeStr}\" was not provided.`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const parentType = getNamedType(context.getParentInputType());\n      const fieldType = context.getInputType();\n\n      if (!fieldType && isInputObjectType(parentType)) {\n        const suggestions = suggestionList(\n          node.name.value,\n          Object.keys(parentType.getFields()),\n        );\n        context.reportError(\n          new GraphQLError(\n            `Field \"${node.name.value}\" is not defined by type \"${parentType.name}\".` +\n              didYouMean(suggestions),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    NullValue(node) {\n      const type = context.getInputType();\n\n      if (isNonNullType(type)) {\n        context.reportError(\n          new GraphQLError(\n            `Expected value of type \"${inspect(type)}\", found ${print(node)}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    EnumValue: (node) => isValidValueNode(context, node),\n    IntValue: (node) => isValidValueNode(context, node),\n    FloatValue: (node) => isValidValueNode(context, node),\n    StringValue: (node) => isValidValueNode(context, node),\n    BooleanValue: (node) => isValidValueNode(context, node),\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  const locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  const type = getNamedType(locationType);\n\n  if (!isLeafType(type)) {\n    const typeStr = inspect(locationType);\n    context.reportError(\n      new GraphQLError(\n        `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n        {\n          nodes: node,\n        },\n      ),\n    );\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n  try {\n    const parseResult = type.parseLiteral(\n      node,\n      undefined,\n      /* variables */\n    );\n\n    if (parseResult === undefined) {\n      const typeStr = inspect(locationType);\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n          {\n            nodes: node,\n          },\n        ),\n      );\n    }\n  } catch (error) {\n    const typeStr = inspect(locationType);\n\n    if (error instanceof GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}; ` +\n            error.message,\n          {\n            nodes: node,\n            originalError: error,\n          },\n        ),\n      );\n    }\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isInputType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nexport function VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.type);\n\n      if (type !== undefined && !isInputType(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = print(node.type);\n        context.reportError(\n          new GraphQLError(\n            `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`,\n            {\n              nodes: node.type,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isNonNullType } from '../../type/definition.mjs';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nexport function VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node, type, defaultValue } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = typeFromAST(schema, varDef.type);\n\n            if (\n              varType &&\n              !allowedVariableUsage(\n                schema,\n                varType,\n                varDef.defaultValue,\n                type,\n                defaultValue,\n              )\n            ) {\n              const varTypeStr = inspect(varType);\n              const typeStr = inspect(type);\n              context.reportError(\n                new GraphQLError(\n                  `Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`,\n                  {\n                    nodes: [varDef, node],\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    },\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(\n  schema,\n  varType,\n  varDefaultValue,\n  locationType,\n  locationDefaultValue,\n) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    const hasNonNullVariableDefaultValue =\n      varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    const nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n\n  return isTypeSubTypeOf(schema, varType, locationType);\n}\n","// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitionsRule } from './rules/ExecutableDefinitionsRule.mjs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectTypeRule.mjs'; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypesRule.mjs'; // Spec Section: \"Argument Names\"\n\nimport {\n  KnownArgumentNamesOnDirectivesRule,\n  KnownArgumentNamesRule,\n} from './rules/KnownArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectivesRule } from './rules/KnownDirectivesRule.mjs'; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNamesRule } from './rules/KnownFragmentNamesRule.mjs'; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNamesRule } from './rules/KnownTypeNamesRule.mjs'; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperationRule } from './rules/LoneAnonymousOperationRule.mjs'; // SDL-specific validation rules\n\nimport { LoneSchemaDefinitionRule } from './rules/LoneSchemaDefinitionRule.mjs'; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCyclesRule } from './rules/NoFragmentCyclesRule.mjs'; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariablesRule } from './rules/NoUndefinedVariablesRule.mjs'; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragmentsRule } from './rules/NoUnusedFragmentsRule.mjs'; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariablesRule } from './rules/NoUnusedVariablesRule.mjs'; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMergedRule.mjs'; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreadsRule.mjs';\nimport { PossibleTypeExtensionsRule } from './rules/PossibleTypeExtensionsRule.mjs'; // Spec Section: \"Argument Optionality\"\n\nimport {\n  ProvidedRequiredArgumentsOnDirectivesRule,\n  ProvidedRequiredArgumentsRule,\n} from './rules/ProvidedRequiredArgumentsRule.mjs'; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafsRule } from './rules/ScalarLeafsRule.mjs'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptionsRule.mjs';\nimport { UniqueArgumentDefinitionNamesRule } from './rules/UniqueArgumentDefinitionNamesRule.mjs'; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNamesRule } from './rules/UniqueArgumentNamesRule.mjs';\nimport { UniqueDirectiveNamesRule } from './rules/UniqueDirectiveNamesRule.mjs'; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocationRule.mjs';\nimport { UniqueEnumValueNamesRule } from './rules/UniqueEnumValueNamesRule.mjs';\nimport { UniqueFieldDefinitionNamesRule } from './rules/UniqueFieldDefinitionNamesRule.mjs'; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNamesRule } from './rules/UniqueFragmentNamesRule.mjs'; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNamesRule.mjs'; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNamesRule } from './rules/UniqueOperationNamesRule.mjs';\nimport { UniqueOperationTypesRule } from './rules/UniqueOperationTypesRule.mjs';\nimport { UniqueTypeNamesRule } from './rules/UniqueTypeNamesRule.mjs'; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNamesRule } from './rules/UniqueVariableNamesRule.mjs'; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectTypeRule.mjs'; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypesRule } from './rules/VariablesAreInputTypesRule.mjs'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPositionRule.mjs';\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nexport const specifiedRules = Object.freeze([\n  ExecutableDefinitionsRule,\n  UniqueOperationNamesRule,\n  LoneAnonymousOperationRule,\n  SingleFieldSubscriptionsRule,\n  KnownTypeNamesRule,\n  FragmentsOnCompositeTypesRule,\n  VariablesAreInputTypesRule,\n  ScalarLeafsRule,\n  FieldsOnCorrectTypeRule,\n  UniqueFragmentNamesRule,\n  KnownFragmentNamesRule,\n  NoUnusedFragmentsRule,\n  PossibleFragmentSpreadsRule,\n  NoFragmentCyclesRule,\n  UniqueVariableNamesRule,\n  NoUndefinedVariablesRule,\n  NoUnusedVariablesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  KnownArgumentNamesRule,\n  UniqueArgumentNamesRule,\n  ValuesOfCorrectTypeRule,\n  ProvidedRequiredArgumentsRule,\n  VariablesInAllowedPositionRule,\n  OverlappingFieldsCanBeMergedRule,\n  UniqueInputFieldNamesRule,\n]);\n/**\n * @internal\n */\n\nexport const specifiedSDLRules = Object.freeze([\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueArgumentDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  KnownArgumentNamesOnDirectivesRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule,\n  ProvidedRequiredArgumentsOnDirectivesRule,\n]);\n","import { Kind } from '../language/kinds.mjs';\nimport { visit } from '../language/visitor.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nexport class ASTValidationContext {\n  constructor(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ASTValidationContext';\n  }\n\n  reportError(error) {\n    this._onError(error);\n  }\n\n  getDocument() {\n    return this._ast;\n  }\n\n  getFragment(name) {\n    let fragments;\n\n    if (this._fragments) {\n      fragments = this._fragments;\n    } else {\n      fragments = Object.create(null);\n\n      for (const defNode of this.getDocument().definitions) {\n        if (defNode.kind === Kind.FRAGMENT_DEFINITION) {\n          fragments[defNode.name.value] = defNode;\n        }\n      }\n\n      this._fragments = fragments;\n    }\n\n    return fragments[name];\n  }\n\n  getFragmentSpreads(node) {\n    let spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      const setsToVisit = [node];\n      let set;\n\n      while ((set = setsToVisit.pop())) {\n        for (const selection of set.selections) {\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  }\n\n  getRecursivelyReferencedFragments(operation) {\n    let fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      const collectedNames = Object.create(null);\n      const nodesToVisit = [operation.selectionSet];\n      let node;\n\n      while ((node = nodesToVisit.pop())) {\n        for (const spread of this.getFragmentSpreads(node)) {\n          const fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            const fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  }\n}\nexport class SDLValidationContext extends ASTValidationContext {\n  constructor(ast, schema, onError) {\n    super(ast, onError);\n    this._schema = schema;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'SDLValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n}\nexport class ValidationContext extends ASTValidationContext {\n  constructor(schema, ast, typeInfo, onError) {\n    super(ast, onError);\n    this._schema = schema;\n    this._typeInfo = typeInfo;\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n\n  getVariableUsages(node) {\n    let usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      const newUsages = [];\n      const typeInfo = new TypeInfo(this._schema);\n      visit(\n        node,\n        visitWithTypeInfo(typeInfo, {\n          VariableDefinition: () => false,\n\n          Variable(variable) {\n            newUsages.push({\n              node: variable,\n              type: typeInfo.getInputType(),\n              defaultValue: typeInfo.getDefaultValue(),\n            });\n          },\n        }),\n      );\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  }\n\n  getRecursiveVariableUsages(operation) {\n    let usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (const frag of this.getRecursivelyReferencedFragments(operation)) {\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  }\n\n  getType() {\n    return this._typeInfo.getType();\n  }\n\n  getParentType() {\n    return this._typeInfo.getParentType();\n  }\n\n  getInputType() {\n    return this._typeInfo.getInputType();\n  }\n\n  getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  }\n\n  getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  }\n\n  getDirective() {\n    return this._typeInfo.getDirective();\n  }\n\n  getArgument() {\n    return this._typeInfo.getArgument();\n  }\n\n  getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  }\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { visit, visitInParallel } from '../language/visitor.mjs';\nimport { assertValidSchema } from '../type/validate.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\nimport { specifiedRules, specifiedSDLRules } from './specifiedRules.mjs';\nimport {\n  SDLValidationContext,\n  ValidationContext,\n} from './ValidationContext.mjs';\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Validate will stop validation after a `maxErrors` limit has been reached.\n * Attackers can send pathologically invalid queries to induce a DoS attack,\n * so by default `maxErrors` set to 100 errors.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n\nexport function validate(\n  schema,\n  documentAST,\n  rules = specifiedRules,\n  options,\n  /** @deprecated will be removed in 17.0.0 */\n  typeInfo = new TypeInfo(schema),\n) {\n  var _options$maxErrors;\n\n  const maxErrors =\n    (_options$maxErrors =\n      options === null || options === void 0 ? void 0 : options.maxErrors) !==\n      null && _options$maxErrors !== void 0\n      ? _options$maxErrors\n      : 100;\n  documentAST || devAssert(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  assertValidSchema(schema);\n  const abortObj = Object.freeze({});\n  const errors = [];\n  const context = new ValidationContext(\n    schema,\n    documentAST,\n    typeInfo,\n    (error) => {\n      if (errors.length >= maxErrors) {\n        errors.push(\n          new GraphQLError(\n            'Too many validation errors, error limit reached. Validation aborted.',\n          ),\n        ); // eslint-disable-next-line @typescript-eslint/no-throw-literal\n\n        throw abortObj;\n      }\n\n      errors.push(error);\n    },\n  ); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  const visitor = visitInParallel(rules.map((rule) => rule(context))); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    visit(documentAST, visitWithTypeInfo(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nexport function validateSDL(\n  documentAST,\n  schemaToExtend,\n  rules = specifiedSDLRules,\n) {\n  const errors = [];\n  const context = new SDLValidationContext(\n    documentAST,\n    schemaToExtend,\n    (error) => {\n      errors.push(error);\n    },\n  );\n  const visitors = rules.map((rule) => rule(context));\n  visit(documentAST, visitInParallel(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDL(documentAST) {\n  const errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDLExtension(documentAST, schema) {\n  const errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n","/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nexport function getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    ...options,\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl\n    ? 'specifiedByURL'\n    : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable\n    ? 'isRepeatable'\n    : '';\n  const schemaDescription = optionsWithDefault.schemaDescription\n    ? descriptions\n    : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { parseValue } from '../language/parser.mjs';\nimport {\n  assertInterfaceType,\n  assertNullableType,\n  assertObjectType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLScalarType,\n  GraphQLUnionType,\n  isInputType,\n  isOutputType,\n} from '../type/definition.mjs';\nimport { GraphQLDirective } from '../type/directives.mjs';\nimport { introspectionTypes, TypeKind } from '../type/introspection.mjs';\nimport { specifiedScalarTypes } from '../type/scalars.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\nimport { valueFromAST } from './valueFromAST.mjs';\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\n\nexport function buildClientSchema(introspection, options) {\n  (isObjectLike(introspection) && isObjectLike(introspection.__schema)) ||\n    devAssert(\n      false,\n      `Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ${inspect(\n        introspection,\n      )}.`,\n    ); // Get the schema from the introspection result.\n\n  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  const typeMap = keyValMap(\n    schemaIntrospection.types,\n    (typeIntrospection) => typeIntrospection.name,\n    (typeIntrospection) => buildType(typeIntrospection),\n  ); // Include standard types only if they are used.\n\n  for (const stdType of [...specifiedScalarTypes, ...introspectionTypes]) {\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n  const queryType = schemaIntrospection.queryType\n    ? getObjectType(schemaIntrospection.queryType)\n    : null;\n  const mutationType = schemaIntrospection.mutationType\n    ? getObjectType(schemaIntrospection.mutationType)\n    : null;\n  const subscriptionType = schemaIntrospection.subscriptionType\n    ? getObjectType(schemaIntrospection.subscriptionType)\n    : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  const directives = schemaIntrospection.directives\n    ? schemaIntrospection.directives.map(buildDirective)\n    : []; // Then produce and return a Schema with these types.\n\n  return new GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: Object.values(typeMap),\n    directives,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === TypeKind.LIST) {\n      const itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === TypeKind.NON_NULL) {\n      const nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      const nullableType = getType(nullableRef);\n      return new GraphQLNonNull(assertNullableType(nullableType));\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    const typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(`Unknown type reference: ${inspect(typeRef)}.`);\n    }\n\n    const type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\n        `Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`,\n      );\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return assertObjectType(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return assertInterfaceType(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n  function buildType(type) {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (type != null && type.name != null && type.kind != null) {\n      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17\n      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n      switch (type.kind) {\n        case TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    const typeStr = inspect(type);\n    throw new Error(\n      `Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`,\n    );\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByURL: scalarIntrospection.specifiedByURL,\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (\n      implementingIntrospection.interfaces === null &&\n      implementingIntrospection.kind === TypeKind.INTERFACE\n    ) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      const implementingIntrospectionStr = inspect(implementingIntrospection);\n      throw new Error(\n        `Introspection result missing interfaces: ${implementingIntrospectionStr}.`,\n      );\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: () => buildImplementationsList(objectIntrospection),\n      fields: () => buildFieldDefMap(objectIntrospection),\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: () => buildImplementationsList(interfaceIntrospection),\n      fields: () => buildFieldDefMap(interfaceIntrospection),\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      const unionIntrospectionStr = inspect(unionIntrospection);\n      throw new Error(\n        `Introspection result missing possibleTypes: ${unionIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: () => unionIntrospection.possibleTypes.map(getObjectType),\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      const enumIntrospectionStr = inspect(enumIntrospection);\n      throw new Error(\n        `Introspection result missing enumValues: ${enumIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: keyValMap(\n        enumIntrospection.enumValues,\n        (valueIntrospection) => valueIntrospection.name,\n        (valueIntrospection) => ({\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason,\n        }),\n      ),\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      const inputObjectIntrospectionStr = inspect(inputObjectIntrospection);\n      throw new Error(\n        `Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields),\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\n        `Introspection result missing fields: ${inspect(typeIntrospection)}.`,\n      );\n    }\n\n    return keyValMap(\n      typeIntrospection.fields,\n      (fieldIntrospection) => fieldIntrospection.name,\n      buildField,\n    );\n  }\n\n  function buildField(fieldIntrospection) {\n    const type = getType(fieldIntrospection.type);\n\n    if (!isOutputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide output type for fields, but received: ${typeStr}.`,\n      );\n    }\n\n    if (!fieldIntrospection.args) {\n      const fieldIntrospectionStr = inspect(fieldIntrospection);\n      throw new Error(\n        `Introspection result missing field args: ${fieldIntrospectionStr}.`,\n      );\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type,\n      args: buildInputValueDefMap(fieldIntrospection.args),\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return keyValMap(\n      inputValueIntrospections,\n      (inputValue) => inputValue.name,\n      buildInputValue,\n    );\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    const type = getType(inputValueIntrospection.type);\n\n    if (!isInputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide input type for arguments, but received: ${typeStr}.`,\n      );\n    }\n\n    const defaultValue =\n      inputValueIntrospection.defaultValue != null\n        ? valueFromAST(parseValue(inputValueIntrospection.defaultValue), type)\n        : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type,\n      defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason,\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive args: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    if (!directiveIntrospection.locations) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive locations: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args),\n    });\n  }\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isPrintableAsBlockString } from '../language/blockString.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport {\n  DEFAULT_DEPRECATION_REASON,\n  isSpecifiedDirective,\n} from '../type/directives.mjs';\nimport { isIntrospectionType } from '../type/introspection.mjs';\nimport { isSpecifiedScalarType } from '../type/scalars.mjs';\nimport { astFromValue } from './astFromValue.mjs';\nexport function printSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    (n) => !isSpecifiedDirective(n),\n    isDefinedType,\n  );\n}\nexport function printIntrospectionSchema(schema) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [\n    printSchemaDefinition(schema),\n    ...directives.map((directive) => printDirective(directive)),\n    ...types.map((type) => printType(type)),\n  ]\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type) {\n  if (isScalarType(type)) {\n    return printScalar(type);\n  }\n\n  if (isObjectType(type)) {\n    return printObject(type);\n  }\n\n  if (isInterfaceType(type)) {\n    return printInterface(type);\n  }\n\n  if (isUnionType(type)) {\n    return printUnion(type);\n  }\n\n  if (isEnumType(type)) {\n    return printEnum(type);\n  }\n\n  if (isInputObjectType(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction printScalar(type) {\n  return (\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\n  );\n}\n\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\n    : '';\n}\n\nfunction printObject(type) {\n  return (\n    printDescription(type) +\n    `type ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printInterface(type) {\n  return (\n    printDescription(type) +\n    `interface ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value.deprecationReason),\n    );\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\n  );\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) =>\n      printDescription(f, '  ', !i) +\n      '  ' +\n      f.name +\n      printArgs(f.args, '  ') +\n      ': ' +\n      String(f.type) +\n      printDeprecated(f.deprecationReason),\n  );\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every((arg) => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return (\n    '(\\n' +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, '  ' + indentation, !i) +\n          '  ' +\n          indentation +\n          printInputValue(arg),\n      )\n      .join('\\n') +\n    '\\n' +\n    indentation +\n    ')'\n  );\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = astFromValue(arg.defaultValue, arg.type);\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${print(defaultAST)}`;\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive) {\n  return (\n    printDescription(directive) +\n    'directive @' +\n    directive.name +\n    printArgs(directive.args) +\n    (directive.isRepeatable ? ' repeatable' : '') +\n    ' on ' +\n    directive.locations.join(' | ')\n  );\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  if (reason !== DEFAULT_DEPRECATION_REASON) {\n    const astValue = print({\n      kind: Kind.STRING,\n      value: reason,\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n\n  const astValue = print({\n    kind: Kind.STRING,\n    value: scalar.specifiedByURL,\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\n\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const { description } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  const blockString = print({\n    kind: Kind.STRING,\n    value: description,\n    block: isPrintableAsBlockString(description),\n  });\n  const prefix =\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n","<template>\n  <span\n    :class=\"isScalar ? 'text-secondaryLight' : 'cursor-pointer text-accent'\"\n    @click=\"jumpToType\"\n  >\n    {{ typeString }}\n  </span>\n</template>\n\n<script setup lang=\"ts\">\nimport { GraphQLScalarType, GraphQLType, getNamedType } from \"graphql\"\nimport { computed } from \"vue\"\n\nconst props = defineProps<{\n  gqlType: GraphQLType\n}>()\n\nconst emit = defineEmits<{\n  (e: \"jump-to-type\", type: GraphQLType): void\n}>()\n\nconst typeString = computed(() => `${props.gqlType}`)\nconst isScalar = computed(() => {\n  return getNamedType(props.gqlType) instanceof GraphQLScalarType\n})\n\nfunction jumpToType() {\n  if (isScalar.value) return\n  emit(\"jump-to-type\", props.gqlType)\n}\n</script>\n","<template>\n  <div>\n    <div class=\"flex justify-between gap-2\">\n      <div\n        class=\"field-title flex-1\"\n        :class=\"{ 'field-highlighted': isHighlighted }\"\n      >\n        {{ fieldName }}\n        <span v-if=\"fieldArgs.length > 0\">\n          (\n          <span v-for=\"(field, index) in fieldArgs\" :key=\"`field-${index}`\">\n            {{ field.name }}:\n            <GraphqlTypeLink\n              :gql-type=\"field.type\"\n              @jump-to-type=\"jumpToType\"\n            />\n            <span v-if=\"index !== fieldArgs.length - 1\">, </span>\n          </span>\n          ) </span\n        >:\n        <GraphqlTypeLink :gql-type=\"gqlField.type\" @jump-to-type=\"jumpToType\" />\n      </div>\n      <div v-if=\"gqlField.deprecationReason\">\n        <span\n          v-tippy=\"{ theme: 'tomato' }\"\n          class=\"flex cursor-pointer items-center gap-2 text-xs !text-red-500 hover:!text-red-600\"\n          :title=\"gqlField.deprecationReason\"\n        >\n          <IconAlertTriangle /> {{ t(\"state.deprecated\") }}\n        </span>\n      </div>\n    </div>\n    <div\n      v-if=\"gqlField.description\"\n      class=\"field-desc py-2 text-secondaryLight\"\n    >\n      {{ gqlField.description }}\n    </div>\n    <div v-if=\"fieldArgs.length > 0\">\n      <h5 class=\"my-2\">Arguments:</h5>\n      <div class=\"border-l-2 border-divider pl-4\">\n        <div v-for=\"(field, index) in fieldArgs\" :key=\"`field-${index}`\">\n          <span>\n            {{ field.name }}:\n            <GraphqlTypeLink\n              :gql-type=\"field.type\"\n              @jump-to-type=\"jumpToType\"\n            />\n          </span>\n          <div\n            v-if=\"field.description\"\n            class=\"field-desc py-2 text-secondaryLight\"\n          >\n            {{ field.description }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { GraphQLType } from \"graphql\"\nimport { computed } from \"vue\"\nimport IconAlertTriangle from \"~icons/lucide/alert-triangle\"\n\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    gqlField: any\n    isHighlighted: boolean\n  }>(),\n  {\n    gqlField: {},\n    isHighlighted: false,\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"jump-to-type\", type: GraphQLType): void\n}>()\n\nconst fieldName = computed(() => props.gqlField.name)\n\nconst fieldArgs = computed(() => props.gqlField.args || [])\n\nconst jumpToType = (type: GraphQLType) => {\n  emit(\"jump-to-type\", type)\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.field-highlighted {\n  @apply border-b-2 border-accent;\n}\n\n.field-title {\n  @apply select-text;\n}\n</style>\n","<template>\n  <div :id=\"`type_${gqlType.name}`\" class=\"p-4\">\n    <div class=\"type-title\" :class=\"{ 'text-accent': isHighlighted }\">\n      <span v-if=\"isInput\" class=\"text-accent\">input </span>\n      <span v-else-if=\"isInterface\" class=\"text-accent\">interface </span>\n      <span v-else-if=\"isEnum\" class=\"text-accent\">enum </span>\n      {{ gqlType.name }}\n    </div>\n    <div v-if=\"gqlType.description\" class=\"type-desc py-2 text-secondaryLight\">\n      {{ gqlType.description }}\n    </div>\n    <div v-if=\"interfaces.length > 0\">\n      <h5 class=\"my-2\">Interfaces:</h5>\n      <div\n        v-for=\"(gqlInterface, index) in interfaces\"\n        :key=\"`gqlInterface-${index}`\"\n      >\n        <GraphqlTypeLink\n          :gql-type=\"gqlInterface\"\n          :jump-type-callback=\"jumpTypeCallback\"\n          class=\"border-l-2 border-divider pl-4\"\n        />\n      </div>\n    </div>\n    <div v-if=\"children.length > 0\" class=\"mb-2\">\n      <h5 class=\"my-2\">Children:</h5>\n      <GraphqlTypeLink\n        v-for=\"(child, index) in children\"\n        :key=\"`child-${index}`\"\n        :gql-type=\"child\"\n        :jump-type-callback=\"jumpTypeCallback\"\n        class=\"border-l-2 border-divider pl-4\"\n      />\n    </div>\n    <div v-if=\"gqlType.getFields\">\n      <h5 class=\"my-2\">Fields:</h5>\n      <GraphqlField\n        v-for=\"(field, index) in gqlType.getFields()\"\n        :key=\"`field-${index}`\"\n        class=\"border-l-2 border-divider pl-4\"\n        :gql-field=\"field\"\n        :is-highlighted=\"isFieldHighlighted({ field })\"\n        :jump-type-callback=\"jumpTypeCallback\"\n      />\n    </div>\n    <div v-if=\"isEnum\">\n      <h5 class=\"my-2\">Values:</h5>\n      <div\n        v-for=\"(value, index) in gqlType.getValues()\"\n        :key=\"`value-${index}`\"\n        class=\"border-l-2 border-divider pl-4\"\n        v-text=\"value.name\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n} from \"graphql\"\nimport { computed } from \"vue\"\n\nconst props = defineProps({\n  gqlType: {\n    type: Object,\n    required: true,\n  },\n  gqlTypes: { type: Array, default: () => [] },\n  jumpTypeCallback: { type: Function, default: () => ({}) },\n  isHighlighted: { type: Boolean, default: false },\n  highlightedFields: { type: Array, default: () => [] },\n})\n\nconst isInput = computed(() => {\n  return props.gqlType instanceof GraphQLInputObjectType\n})\n\nconst isInterface = computed(() => {\n  return props.gqlType instanceof GraphQLInterfaceType\n})\nconst isEnum = computed(() => {\n  return props.gqlType instanceof GraphQLEnumType\n})\nconst interfaces = computed(() => {\n  return (props.gqlType.getInterfaces && props.gqlType.getInterfaces()) || []\n})\n\nconst children = computed(() => {\n  return props.gqlTypes.filter(\n    (type) => type.getInterfaces && type.getInterfaces().includes(props.gqlType)\n  )\n})\n\nconst isFieldHighlighted = ({ field }) => {\n  return !!props.highlightedFields.find(({ name }) => name === field.name)\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.type-highlighted {\n  @apply text-accent;\n}\n</style>\n","import { GQLHeader, HoppGQLAuth, makeGQLRequest } from \"@hoppscotch/data\"\nimport { OperationType } from \"@urql/core\"\nimport * as E from \"fp-ts/Either\"\nimport {\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLObjectType,\n  GraphQLSchema,\n  buildClientSchema,\n  getIntrospectionQuery,\n  printSchema,\n} from \"graphql\"\nimport { Component, computed, reactive, ref } from \"vue\"\nimport { getService } from \"~/modules/dioc\"\nimport { getI18n } from \"~/modules/i18n\"\n\nimport { addGraphqlHistoryEntry, makeGQLHistoryEntry } from \"~/newstore/history\"\n\nimport { InterceptorService } from \"~/services/interceptor.service\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\n\nconst GQL_SCHEMA_POLL_INTERVAL = 7000\n\ntype RunQueryOptions = {\n  name?: string\n  url: string\n  headers: GQLHeader[]\n  query: string\n  variables: string\n  auth: HoppGQLAuth\n  operationName: string | undefined\n  operationType: OperationType\n}\n\nexport type GQLResponseEvent =\n  | {\n      type: \"response\"\n      time: number\n      operationName: string | undefined\n      operationType: OperationType\n      data: string\n      rawQuery?: RunQueryOptions\n    }\n  | {\n      type: \"error\"\n      error: {\n        type: string\n        message: string\n        component?: Component\n      }\n    }\n\nexport type ConnectionState = \"CONNECTING\" | \"CONNECTED\" | \"DISCONNECTED\"\nexport type SubscriptionState = \"SUBSCRIBING\" | \"SUBSCRIBED\" | \"UNSUBSCRIBED\"\n\nconst GQL = {\n  CONNECTION_INIT: \"connection_init\",\n  CONNECTION_ACK: \"connection_ack\",\n  CONNECTION_ERROR: \"connection_error\",\n  CONNECTION_KEEP_ALIVE: \"ka\",\n  START: \"start\",\n  STOP: \"stop\",\n  CONNECTION_TERMINATE: \"connection_terminate\",\n  DATA: \"data\",\n  ERROR: \"error\",\n  COMPLETE: \"complete\",\n}\n\ntype Connection = {\n  state: ConnectionState\n  subscriptionState: Map<string, SubscriptionState>\n  socket: WebSocket | undefined\n  schema: GraphQLSchema | null\n  error?: {\n    type: string\n    message: (t: ReturnType<typeof getI18n>) => string\n    component?: Component\n  } | null\n}\n\nconst tabs = getService(GQLTabService)\nconst currentTabID = computed(() => tabs.currentTabID.value)\n\nexport const connection = reactive<Connection>({\n  state: \"DISCONNECTED\",\n  subscriptionState: new Map<string, SubscriptionState>(),\n  socket: undefined,\n  schema: null,\n  error: null,\n})\n\nexport const schema = computed(() => connection.schema)\nexport const subscriptionState = computed(() => {\n  return connection.subscriptionState.get(currentTabID.value)\n})\n\nexport const gqlMessageEvent = ref<GQLResponseEvent | \"reset\">()\n\nexport const schemaString = computed(() => {\n  if (!connection.schema) return \"\"\n\n  return printSchema(connection.schema, {\n    commentDescriptions: true,\n  })\n})\n\nexport const queryFields = computed(() => {\n  if (!connection.schema) return []\n\n  const fields = connection.schema.getQueryType()?.getFields()\n  if (!fields) return []\n\n  return Object.values(fields)\n})\n\nexport const mutationFields = computed(() => {\n  if (!connection.schema) return []\n\n  const fields = connection.schema.getMutationType()?.getFields()\n  if (!fields) return []\n\n  return Object.values(fields)\n})\n\nexport const subscriptionFields = computed(() => {\n  if (!connection.schema) return []\n\n  const fields = connection.schema.getSubscriptionType()?.getFields()\n  if (!fields) return []\n\n  return Object.values(fields)\n})\n\nexport const graphqlTypes = computed(() => {\n  if (!connection.schema) return []\n\n  const typeMap = connection.schema.getTypeMap()\n\n  const queryTypeName = connection.schema.getQueryType()?.name ?? \"\"\n  const mutationTypeName = connection.schema.getMutationType()?.name ?? \"\"\n  const subscriptionTypeName =\n    connection.schema.getSubscriptionType()?.name ?? \"\"\n\n  return Object.values(typeMap).filter((type) => {\n    return (\n      !type.name.startsWith(\"__\") &&\n      ![queryTypeName, mutationTypeName, subscriptionTypeName].includes(\n        type.name\n      ) &&\n      (type instanceof GraphQLObjectType ||\n        type instanceof GraphQLInputObjectType ||\n        type instanceof GraphQLEnumType ||\n        type instanceof GraphQLInterfaceType)\n    )\n  })\n})\n\nlet timeoutSubscription: any\n\nexport const connect = (url: string, headers: GQLHeader[]) => {\n  if (connection.state === \"CONNECTED\") {\n    throw new Error(\n      \"A connection is already running. Close it before starting another.\"\n    )\n  }\n\n  // Polling\n  connection.state = \"CONNECTED\"\n\n  const poll = async () => {\n    await getSchema(url, headers)\n    timeoutSubscription = setTimeout(() => {\n      poll()\n    }, GQL_SCHEMA_POLL_INTERVAL)\n  }\n  poll()\n}\n\nexport const disconnect = () => {\n  if (connection.state !== \"CONNECTED\") {\n    throw new Error(\"No connections are running to be disconnected\")\n  }\n\n  clearTimeout(timeoutSubscription)\n  connection.state = \"DISCONNECTED\"\n}\n\nexport const reset = () => {\n  if (connection.state === \"CONNECTED\") disconnect()\n\n  connection.state = \"DISCONNECTED\"\n  connection.schema = null\n}\n\nconst getSchema = async (url: string, headers: GQLHeader[]) => {\n  try {\n    const introspectionQuery = JSON.stringify({\n      query: getIntrospectionQuery(),\n    })\n\n    const finalHeaders: Record<string, string> = {}\n    headers\n      .filter((x) => x.active && x.key !== \"\")\n      .forEach((x) => (finalHeaders[x.key] = x.value))\n\n    const reqOptions = {\n      method: \"POST\",\n      url,\n      headers: {\n        ...finalHeaders,\n        \"content-type\": \"application/json\",\n      },\n      data: introspectionQuery,\n    }\n\n    const interceptorService = getService(InterceptorService)\n\n    const res = await interceptorService.runRequest(reqOptions).response\n\n    if (E.isLeft(res)) {\n      if (\n        res.left !== \"cancellation\" &&\n        res.left.error === \"NO_PW_EXT_HOOK\" &&\n        res.left.humanMessage\n      ) {\n        connection.error = {\n          type: res.left.error,\n          message: (t: ReturnType<typeof getI18n>) =>\n            res.left.humanMessage.description(t),\n          component: res.left.component,\n        }\n      }\n\n      throw new Error(res.left.toString())\n    }\n\n    const data = res.right\n\n    // HACK : Temporary trailing null character issue from the extension fix\n    const response = new TextDecoder(\"utf-8\")\n      .decode(data.data as any)\n      .replace(/\\0+$/, \"\")\n\n    const introspectResponse = JSON.parse(response)\n\n    const schema = buildClientSchema(introspectResponse.data)\n\n    connection.schema = schema\n    connection.error = null\n  } catch (e: any) {\n    console.error(e)\n    disconnect()\n  }\n}\n\nexport const runGQLOperation = async (options: RunQueryOptions) => {\n  const { url, headers, query, variables, auth, operationName, operationType } =\n    options\n\n  const finalHeaders: Record<string, string> = {}\n\n  const parsedVariables = JSON.parse(variables || \"{}\")\n\n  const params: Record<string, string> = {}\n\n  if (auth.authActive) {\n    if (auth.authType === \"basic\") {\n      const username = auth.username\n      const password = auth.password\n      finalHeaders.Authorization = `Basic ${btoa(`${username}:${password}`)}`\n    } else if (auth.authType === \"bearer\") {\n      finalHeaders.Authorization = `Bearer ${auth.token}`\n    } else if (auth.authType === \"oauth-2\") {\n      const { addTo } = auth\n\n      if (addTo === \"HEADERS\") {\n        finalHeaders.Authorization = `Bearer ${auth.grantTypeInfo.token}`\n      } else if (addTo === \"QUERY_PARAMS\") {\n        params[\"access_token\"] = auth.grantTypeInfo.token\n      }\n    } else if (auth.authType === \"api-key\") {\n      const { key, value, addTo } = auth\n      if (addTo === \"HEADERS\") {\n        finalHeaders[key] = value\n      } else if (addTo === \"QUERY_PARAMS\") {\n        params[key] = value\n      }\n    }\n  }\n\n  headers\n    .filter((item) => item.active && item.key !== \"\")\n    .forEach(({ key, value }) => (finalHeaders[key] = value))\n\n  const reqOptions = {\n    method: \"POST\",\n    url,\n    headers: {\n      ...finalHeaders,\n      \"content-type\": \"application/json\",\n    },\n    data: JSON.stringify({\n      query,\n      variables: parsedVariables,\n      operationName,\n    }),\n    params: {\n      ...params,\n    },\n  }\n\n  if (operationType === \"subscription\") {\n    return runSubscription(options, finalHeaders)\n  }\n\n  const interceptorService = getService(InterceptorService)\n  const result = await interceptorService.runRequest(reqOptions).response\n\n  if (E.isLeft(result)) {\n    if (\n      result.left !== \"cancellation\" &&\n      result.left.error === \"NO_PW_EXT_HOOK\" &&\n      result.left.humanMessage\n    ) {\n      connection.error = {\n        type: result.left.error,\n        message: (t: ReturnType<typeof getI18n>) =>\n          result.left.humanMessage.description(t),\n        component: result.left.component,\n      }\n    }\n    throw new Error(result.left.toString())\n  }\n\n  const res = result.right\n\n  // HACK: Temporary trailing null character issue from the extension fix\n  const responseText = new TextDecoder(\"utf-8\")\n    .decode(res.data as any)\n    .replace(/\\0+$/, \"\")\n\n  gqlMessageEvent.value = {\n    type: \"response\",\n    time: Date.now(),\n    operationName: operationName ?? \"query\",\n    data: responseText,\n    rawQuery: options,\n    operationType,\n  }\n\n  if (connection.state !== \"CONNECTED\") {\n    connection.state = \"CONNECTED\"\n  }\n\n  addQueryToHistory(options, responseText)\n\n  return responseText\n}\n\nexport const runSubscription = (\n  options: RunQueryOptions,\n  headers?: Record<string, string>\n) => {\n  const { url, query, operationName } = options\n  const wsUrl = url.replace(/^http/, \"ws\")\n\n  connection.subscriptionState.set(currentTabID.value, \"SUBSCRIBING\")\n\n  connection.socket = new WebSocket(wsUrl, \"graphql-ws\")\n\n  connection.socket.onopen = (event) => {\n    console.log(\"WebSocket is open now.\", event)\n\n    connection.socket?.send(\n      JSON.stringify({\n        type: GQL.CONNECTION_INIT,\n        payload: headers ?? {},\n      })\n    )\n\n    connection.socket?.send(\n      JSON.stringify({\n        type: GQL.START,\n        id: \"1\",\n        payload: { query, operationName },\n      })\n    )\n  }\n\n  gqlMessageEvent.value = \"reset\"\n\n  connection.socket.onmessage = (event) => {\n    const data = JSON.parse(event.data)\n    switch (data.type) {\n      case GQL.CONNECTION_ACK: {\n        connection.subscriptionState.set(currentTabID.value, \"SUBSCRIBED\")\n        break\n      }\n      case GQL.CONNECTION_ERROR: {\n        console.error(data.payload)\n        break\n      }\n      case GQL.CONNECTION_KEEP_ALIVE: {\n        break\n      }\n      case GQL.DATA: {\n        gqlMessageEvent.value = {\n          type: \"response\",\n          time: Date.now(),\n          operationName,\n          data: JSON.stringify(data.payload),\n          operationType: \"subscription\",\n        }\n        break\n      }\n      case GQL.COMPLETE: {\n        console.log(\"completed\", data.id)\n        break\n      }\n    }\n  }\n\n  connection.socket.onclose = (event) => {\n    console.log(\"WebSocket is closed now.\", event)\n    connection.subscriptionState.set(currentTabID.value, \"UNSUBSCRIBED\")\n  }\n\n  addQueryToHistory(options, \"\")\n\n  return connection.socket\n}\n\nexport const socketDisconnect = () => {\n  connection.socket?.close()\n}\n\nconst addQueryToHistory = (options: RunQueryOptions, response: string) => {\n  const { name, url, headers, query, variables, auth } = options\n  addGraphqlHistoryEntry(\n    makeGQLHistoryEntry({\n      request: makeGQLRequest({\n        name: name ?? \"Untitled Request\",\n        url,\n        query,\n        headers,\n        variables,\n        auth,\n      }),\n      response,\n      star: false,\n    })\n  )\n}\n","<template>\n  <HoppSmartTabs\n    v-model=\"selectedNavigationTab\"\n    styles=\"sticky overflow-x-auto flex-shrink-0 bg-primary z-10 top-0\"\n    vertical\n    render-inactive-tabs\n  >\n    <HoppSmartTab\n      :id=\"'docs'\"\n      :icon=\"IconBookOpen\"\n      :label=\"`${t('tab.documentation')}`\"\n    >\n      <HoppSmartPlaceholder\n        v-if=\"\n          queryFields.length === 0 &&\n          mutationFields.length === 0 &&\n          subscriptionFields.length === 0 &&\n          graphqlTypes.length === 0\n        \"\n        :src=\"`/images/states/${colorMode.value}/add_comment.svg`\"\n        :alt=\"`${t('empty.documentation')}`\"\n        :text=\"t('empty.documentation')\"\n      />\n      <div v-else>\n        <div\n          class=\"sticky top-0 z-10 flex flex-shrink-0 overflow-x-auto bg-primary\"\n        >\n          <input\n            v-model=\"graphqlFieldsFilterText\"\n            type=\"search\"\n            autocomplete=\"off\"\n            class=\"flex w-full bg-transparent px-4 py-2 h-8\"\n            :placeholder=\"`${t('action.search')}`\"\n          />\n          <div class=\"flex\">\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              to=\"https://docs.hoppscotch.io/documentation/protocols/graphql\"\n              blank\n              :title=\"t('app.wiki')\"\n              :icon=\"IconHelpCircle\"\n            />\n          </div>\n        </div>\n        <HoppSmartTabs\n          v-model=\"selectedGqlTab\"\n          styles=\"border-t border-b border-dividerLight bg-primary sticky overflow-x-auto flex-shrink-0 z-10 top-sidebarPrimaryStickyFold\"\n          render-inactive-tabs\n        >\n          <HoppSmartTab\n            v-if=\"queryFields.length > 0\"\n            :id=\"'queries'\"\n            :label=\"`${t('tab.queries')}`\"\n            class=\"divide-y divide-dividerLight\"\n          >\n            <GraphqlField\n              v-for=\"(field, index) in filteredQueryFields\"\n              :key=\"`field-${index}`\"\n              :gql-field=\"field\"\n              class=\"p-4\"\n              @jump-to-type=\"handleJumpToType\"\n            />\n          </HoppSmartTab>\n          <HoppSmartTab\n            v-if=\"mutationFields.length > 0\"\n            :id=\"'mutations'\"\n            :label=\"`${t('graphql.mutations')}`\"\n            class=\"divide-y divide-dividerLight\"\n          >\n            <GraphqlField\n              v-for=\"(field, index) in filteredMutationFields\"\n              :key=\"`field-${index}`\"\n              :gql-field=\"field\"\n              class=\"p-4\"\n              @jump-to-type=\"handleJumpToType\"\n            />\n          </HoppSmartTab>\n          <HoppSmartTab\n            v-if=\"subscriptionFields.length > 0\"\n            :id=\"'subscriptions'\"\n            :label=\"`${t('graphql.subscriptions')}`\"\n            class=\"divide-y divide-dividerLight\"\n          >\n            <GraphqlField\n              v-for=\"(field, index) in filteredSubscriptionFields\"\n              :key=\"`field-${index}`\"\n              :gql-field=\"field\"\n              class=\"p-4\"\n              @jump-to-type=\"handleJumpToType\"\n            />\n          </HoppSmartTab>\n          <HoppSmartTab\n            v-if=\"graphqlTypes.length > 0\"\n            :id=\"'types'\"\n            :label=\"`${t('tab.types')}`\"\n            class=\"divide-y divide-dividerLight\"\n          >\n            <GraphqlType\n              v-for=\"(type, index) in filteredGraphqlTypes\"\n              :key=\"`type-${index}`\"\n              :gql-type=\"type\"\n              :gql-types=\"graphqlTypes\"\n              :is-highlighted=\"isGqlTypeHighlighted(type)\"\n              :highlighted-fields=\"getGqlTypeHighlightedFields(type)\"\n              @jump-to-type=\"handleJumpToType\"\n            />\n          </HoppSmartTab>\n        </HoppSmartTabs>\n      </div>\n    </HoppSmartTab>\n    <HoppSmartTab :id=\"'schema'\" :icon=\"IconBox\" :label=\"`${t('tab.schema')}`\">\n      <div\n        v-if=\"schemaString\"\n        class=\"sticky top-0 z-10 flex flex-shrink-0 items-center justify-between overflow-x-auto border-b border-dividerLight bg-primary pl-4\"\n      >\n        <label class=\"truncate font-semibold text-secondaryLight\">\n          {{ t(\"graphql.schema\") }}\n        </label>\n        <div class=\"flex\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            to=\"https://docs.hoppscotch.io/documentation/protocols/graphql\"\n            blank\n            :title=\"t('app.wiki')\"\n            :icon=\"IconHelpCircle\"\n          />\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('state.linewrap')\"\n            :class=\"{ '!text-accent': WRAP_LINES }\"\n            :icon=\"IconWrapText\"\n            @click.prevent=\"toggleNestedSetting('WRAP_LINES', 'graphqlSchema')\"\n          />\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('action.download_file')\"\n            :icon=\"downloadSchemaIcon\"\n            @click=\"downloadSchema\"\n          />\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('action.copy')\"\n            :icon=\"copySchemaIcon\"\n            @click=\"copySchema\"\n          />\n        </div>\n      </div>\n      <div v-if=\"schemaString\" class=\"h-full relative w-full\">\n        <div ref=\"schemaEditor\" class=\"absolute inset-0\"></div>\n      </div>\n      <HoppSmartPlaceholder\n        v-else\n        :src=\"`/images/states/${colorMode.value}/blockchain.svg`\"\n        :alt=\"`${t('empty.schema')}`\"\n        :text=\"t('empty.schema')\"\n      >\n      </HoppSmartPlaceholder>\n    </HoppSmartTab>\n\n    <HoppSmartTab\n      :id=\"'collections'\"\n      :icon=\"IconFolder\"\n      :label=\"`${t('tab.collections')}`\"\n    >\n      <CollectionsGraphql />\n    </HoppSmartTab>\n    <HoppSmartTab\n      :id=\"'history'\"\n      :icon=\"IconClock\"\n      :label=\"`${t('tab.history')}`\"\n    >\n      <History :page=\"'graphql'\" />\n    </HoppSmartTab>\n  </HoppSmartTabs>\n</template>\n\n<script setup lang=\"ts\">\nimport IconFolder from \"~icons/lucide/folder\"\nimport IconBookOpen from \"~icons/lucide/book-open\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport IconDownload from \"~icons/lucide/download\"\nimport IconCheck from \"~icons/lucide/check\"\nimport IconClock from \"~icons/lucide/clock\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconBox from \"~icons/lucide/box\"\nimport { computed, nextTick, reactive, ref } from \"vue\"\nimport { GraphQLField, GraphQLType, getNamedType } from \"graphql\"\nimport { refAutoReset } from \"@vueuse/core\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport { copyToClipboard } from \"@helpers/utils/clipboard\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { useColorMode } from \"@composables/theming\"\nimport {\n  graphqlTypes,\n  mutationFields,\n  queryFields,\n  schemaString,\n  subscriptionFields,\n} from \"~/helpers/graphql/connection\"\nimport { platform } from \"~/platform\"\nimport { useNestedSetting } from \"~/composables/settings\"\nimport { toggleNestedSetting } from \"~/newstore/settings\"\n\ntype NavigationTabs = \"history\" | \"collection\" | \"docs\" | \"schema\"\ntype GqlTabs = \"queries\" | \"mutations\" | \"subscriptions\" | \"types\"\n\nconst selectedNavigationTab = ref<NavigationTabs>(\"docs\")\nconst selectedGqlTab = ref<GqlTabs>(\"queries\")\n\nconst t = useI18n()\nconst colorMode = useColorMode()\n\nfunction isTextFoundInGraphqlFieldObject(\n  text: string,\n  field: GraphQLField<any, any>\n) {\n  const normalizedText = text.toLowerCase()\n\n  const isFilterTextFoundInDescription = field.description\n    ? field.description.toLowerCase().includes(normalizedText)\n    : false\n  const isFilterTextFoundInName = field.name\n    .toLowerCase()\n    .includes(normalizedText)\n\n  return isFilterTextFoundInDescription || isFilterTextFoundInName\n}\n\nfunction getFilteredGraphqlFields(\n  filterText: string,\n  fields: GraphQLField<any, any>[]\n) {\n  if (!filterText) return fields\n\n  return fields.filter((field) =>\n    isTextFoundInGraphqlFieldObject(filterText, field)\n  )\n}\n\nfunction getFilteredGraphqlTypes(filterText: string, types: GraphQLType[]) {\n  if (!filterText) return types\n\n  return types.filter((type) => {\n    const isFilterTextMatching = isTextFoundInGraphqlFieldObject(\n      filterText,\n      type as any\n    )\n\n    if (isFilterTextMatching) {\n      return true\n    }\n\n    const isFilterTextMatchingAtLeastOneField = Object.values(\n      (type as any)._fields || {}\n    ).some((field) => isTextFoundInGraphqlFieldObject(filterText, field as any))\n\n    return isFilterTextMatchingAtLeastOneField\n  })\n}\n\nconst toast = useToast()\n\nconst downloadSchemaIcon = refAutoReset<typeof IconDownload | typeof IconCheck>(\n  IconDownload,\n  1000\n)\nconst copySchemaIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\n\nconst graphqlFieldsFilterText = ref(\"\")\n\nconst filteredQueryFields = computed(() => {\n  return getFilteredGraphqlFields(\n    graphqlFieldsFilterText.value,\n    queryFields.value as any\n  )\n})\n\nconst filteredMutationFields = computed(() => {\n  return getFilteredGraphqlFields(\n    graphqlFieldsFilterText.value,\n    mutationFields.value as any\n  )\n})\n\nconst filteredSubscriptionFields = computed(() => {\n  return getFilteredGraphqlFields(\n    graphqlFieldsFilterText.value,\n    subscriptionFields.value as any\n  )\n})\n\nconst filteredGraphqlTypes = computed(() => {\n  return getFilteredGraphqlTypes(\n    graphqlFieldsFilterText.value,\n    graphqlTypes.value as any\n  )\n})\n\nconst isGqlTypeHighlighted = (gqlType: GraphQLType) => {\n  if (!graphqlFieldsFilterText.value) return false\n\n  return isTextFoundInGraphqlFieldObject(\n    graphqlFieldsFilterText.value,\n    gqlType as any\n  )\n}\n\nconst getGqlTypeHighlightedFields = (gqlType: GraphQLType) => {\n  if (!graphqlFieldsFilterText.value) return []\n\n  const fields = Object.values((gqlType as any)._fields || {})\n  if (!fields || fields.length === 0) return []\n\n  return fields.filter((field) =>\n    isTextFoundInGraphqlFieldObject(graphqlFieldsFilterText.value, field as any)\n  )\n}\n\nconst handleJumpToType = async (type: GraphQLType) => {\n  selectedGqlTab.value = \"types\"\n  await nextTick()\n\n  const rootTypeName = getNamedType(type).name\n  const target = document.getElementById(`type_${rootTypeName}`)\n  if (target) {\n    target.scrollIntoView({ block: \"center\", behavior: \"smooth\" })\n    target.classList.add(\n      \"transition-all\",\n      \"ring-inset\",\n      \"ring-accentLight\",\n      \"ring-4\"\n    )\n    setTimeout(\n      () =>\n        target.classList.remove(\n          \"ring-inset\",\n          \"ring-accentLight\",\n          \"ring-4\",\n          \"transition-all\"\n        ),\n      2000\n    )\n  }\n}\n\nconst schemaEditor = ref<any | null>(null)\nconst WRAP_LINES = useNestedSetting(\"WRAP_LINES\", \"graphqlSchema\")\n\nuseCodemirror(\n  schemaEditor,\n  schemaString,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"graphql\",\n      readOnly: true,\n      lineWrapping: WRAP_LINES,\n    },\n    linter: null,\n    completer: null,\n    environmentHighlights: false,\n  })\n)\n\nconst downloadSchema = async () => {\n  const dataToWrite = schemaString.value\n  const file = new Blob([dataToWrite], { type: \"application/graphql\" })\n  const url = URL.createObjectURL(file)\n\n  const filename = `${\n    url.split(\"/\").pop()!.split(\"#\")[0].split(\"?\")[0]\n  }.graphql`\n\n  URL.revokeObjectURL(url)\n\n  const result = await platform.io.saveFileWithDialog({\n    data: dataToWrite,\n    contentType: \"application/graphql\",\n    suggestedFilename: filename,\n    filters: [\n      {\n        name: \"GraphQL Schema File\",\n        extensions: [\"graphql\"],\n      },\n    ],\n  })\n\n  if (result.type === \"unknown\" || result.type === \"saved\") {\n    downloadSchemaIcon.value = IconCheck\n    toast.success(`${t(\"state.download_started\")}`)\n  }\n}\n\nconst copySchema = () => {\n  if (!schemaString.value) return\n\n  copyToClipboard(schemaString.value)\n  copySchemaIcon.value = IconCheck\n}\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.cm-panels) {\n  @apply top-sidebarPrimaryStickyFold #{!important};\n}\n</style>\n","<template>\n  <div ref=\"container\" class=\"flex flex-1 flex-col\">\n    <div\n      class=\"sticky top-0 z-10 flex flex-none items-center justify-between border-b border-dividerLight bg-primary pl-4\"\n    >\n      <label for=\"log\" class=\"py-2 font-semibold text-secondaryLight\">\n        {{ \"Subscription Log\" }}\n      </label>\n      <div>\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.delete')\"\n          :icon=\"IconTrash\"\n          @click=\"emit('delete')\"\n        />\n        <HoppButtonSecondary\n          id=\"bottompage\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.scroll_to_top')\"\n          :icon=\"IconArrowUp\"\n          @click=\"scrollTo('top')\"\n        />\n        <HoppButtonSecondary\n          id=\"bottompage\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.scroll_to_bottom')\"\n          :icon=\"IconArrowDown\"\n          @click=\"scrollTo('bottom')\"\n        />\n        <HoppButtonSecondary\n          id=\"bottompage\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.autoscroll')\"\n          :icon=\"IconChevronsDown\"\n          :class=\"toggleAutoscrollColor\"\n          @click=\"toggleAutoscroll()\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"log.length !== 0\"\n      ref=\"logs\"\n      class=\"overflow-y-auto border-b border-dividerLight\"\n    >\n      <div\n        class=\"flex h-auto h-full flex-col divide-y divide-dividerLight border-r border-dividerLight\"\n      >\n        <RealtimeLogEntry\n          v-for=\"(entry, index) in log\"\n          :key=\"`entry-${index}`\"\n          :is-open=\"log.length - 1 === index\"\n          :entry=\"{\n            ts: entry.type === 'response' ? entry.time : undefined,\n            source: 'info',\n            payload: entry.type === 'response' ? entry.data : '',\n          }\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, PropType, computed, watch, Ref } from \"vue\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport IconArrowUp from \"~icons/lucide/arrow-up\"\nimport IconArrowDown from \"~icons/lucide/arrow-down\"\nimport IconChevronsDown from \"~icons/lucide/chevron-down\"\nimport { useThrottleFn, useScroll } from \"@vueuse/core\"\nimport { useI18n } from \"@composables/i18n\"\nimport { GQLResponseEvent } from \"~/helpers/graphql/connection\"\n\nconst props = defineProps({\n  log: { type: Array as PropType<GQLResponseEvent[]>, default: () => [] },\n  title: {\n    type: String,\n    default: \"\",\n  },\n})\n\nconst emit = defineEmits<{\n  (e: \"delete\"): void\n}>()\n\nconst t = useI18n()\n\nconst container = ref<HTMLElement | null>(null)\nconst logs = ref<HTMLElement | null>(null)\n\nconst autoScrollEnabled = ref(true)\n\nconst logListScroll = useScroll(logs as Ref<HTMLElement>)\n\n// Disable autoscroll when scrolling to top\nwatch(logListScroll.isScrolling, (isScrolling) => {\n  if (isScrolling && logListScroll.directions.top)\n    autoScrollEnabled.value = false\n})\n\nconst scrollTo = (position: \"top\" | \"bottom\") => {\n  if (position === \"top\") {\n    logs.value?.scroll({\n      behavior: \"smooth\",\n      top: 0,\n    })\n  } else if (position === \"bottom\") {\n    logs.value?.scroll({\n      behavior: \"smooth\",\n      top: logs.value?.scrollHeight,\n    })\n  }\n}\n\nwatch(\n  () => props.log,\n  useThrottleFn(() => {\n    if (autoScrollEnabled.value) scrollTo(\"bottom\")\n  }, 200),\n  { flush: \"post\" }\n)\n\nconst toggleAutoscroll = () => {\n  autoScrollEnabled.value = !autoScrollEnabled.value\n}\n\nconst toggleAutoscrollColor = computed(() =>\n  autoScrollEnabled.value ? \"text-green-500\" : \"text-red-500\"\n)\n</script>\n","<template>\n  <div class=\"flex flex-1 flex-col overflow-auto whitespace-nowrap\">\n    <div\n      v-if=\"\n        response && response.length === 1 && response[0].type === 'response'\n      \"\n      class=\"flex flex-1 flex-col\"\n    >\n      <div\n        class=\"sticky top-0 z-10 flex flex-shrink-0 items-center justify-between overflow-x-auto border-b border-dividerLight bg-primary pl-4\"\n      >\n        <label class=\"truncate font-semibold text-secondaryLight\">\n          {{ t(\"response.title\") }}\n        </label>\n        <div class=\"flex items-center\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('state.linewrap')\"\n            :class=\"{ '!text-accent': WRAP_LINES }\"\n            :icon=\"IconWrapText\"\n            @click.prevent=\"\n              toggleNestedSetting('WRAP_LINES', 'graphqlResponseBody')\n            \"\n          />\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip', allowHTML: true }\"\n            :title=\"`${t(\n              'action.download_file'\n            )} <kbd>${getSpecialKey()}</kbd><kbd>J</kbd>`\"\n            :icon=\"downloadIcon\"\n            @click=\"downloadResponse\"\n          />\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip', allowHTML: true }\"\n            :title=\"`${t(\n              'action.copy'\n            )} <kbd>${getSpecialKey()}</kbd><kbd>.</kbd>`\"\n            :icon=\"copyIcon\"\n            @click=\"copyResponse\"\n          />\n          <tippy\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => copyInterfaceTippyActions.focus()\"\n          >\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('app.copy_interface_type')\"\n              :icon=\"IconMore\"\n            />\n            <template #content=\"{ hide }\">\n              <div\n                ref=\"copyInterfaceTippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n                tabindex=\"0\"\n                @keyup.escape=\"hide()\"\n              >\n                <HoppSmartItem\n                  v-for=\"(language, index) in interfaceLanguages\"\n                  :key=\"index\"\n                  :label=\"language\"\n                  :icon=\"\n                    copiedInterfaceLanguage === language\n                      ? copyInterfaceIcon\n                      : IconCopy\n                  \"\n                  @click=\"runCopyInterface(language)\"\n                />\n              </div>\n            </template>\n          </tippy>\n        </div>\n      </div>\n      <div class=\"h-full\">\n        <div ref=\"schemaEditor\"></div>\n      </div>\n    </div>\n    <component\n      :is=\"response[0].error.component\"\n      v-else-if=\"\n        response && response[0].type === 'error' && response[0].error.component\n      \"\n      class=\"flex-1\"\n    />\n    <div\n      v-else-if=\"response && response?.length > 1\"\n      class=\"flex flex-1 flex-col\"\n    >\n      <GraphqlSubscriptionLog :log=\"response\" />\n    </div>\n    <AppShortcutsPrompt v-else class=\"p-4\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconMore from \"~icons/lucide/more-horizontal\"\nimport { computed, reactive, ref } from \"vue\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport { useI18n } from \"@composables/i18n\"\nimport { defineActionHandler } from \"~/helpers/actions\"\nimport { getPlatformSpecialKey as getSpecialKey } from \"~/helpers/platformutils\"\nimport { GQLResponseEvent } from \"~/helpers/graphql/connection\"\nimport { useNestedSetting } from \"~/composables/settings\"\nimport { toggleNestedSetting } from \"~/newstore/settings\"\nimport interfaceLanguages from \"~/helpers/utils/interfaceLanguages\"\nimport {\n  useCopyInterface,\n  useCopyResponse,\n  useDownloadResponse,\n} from \"~/composables/lens-actions\"\n\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    response: GQLResponseEvent[] | null\n  }>(),\n  {\n    response: null,\n  }\n)\n\nconst responseString = computed(() => {\n  const response = props.response\n  if (response && response[0].type === \"error\") {\n    return \"\"\n  } else if (\n    response &&\n    response.length === 1 &&\n    response[0].type === \"response\" &&\n    response[0].data\n  ) {\n    return JSON.stringify(JSON.parse(response[0].data), null, 2)\n  }\n  return \"\"\n})\n\nconst schemaEditor = ref<any | null>(null)\nconst WRAP_LINES = useNestedSetting(\"WRAP_LINES\", \"graphqlResponseBody\")\nconst copyInterfaceTippyActions = ref<any | null>(null)\n\nuseCodemirror(\n  schemaEditor,\n  responseString,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"application/ld+json\",\n      readOnly: true,\n      lineWrapping: WRAP_LINES,\n    },\n    linter: null,\n    completer: null,\n    environmentHighlights: false,\n  })\n)\n\nconst { copyIcon, copyResponse } = useCopyResponse(responseString)\nconst { copyInterfaceIcon, copyInterface } = useCopyInterface(responseString)\nconst { downloadIcon, downloadResponse } = useDownloadResponse(\n  \"application/json\",\n  responseString\n)\n\nconst copiedInterfaceLanguage = ref(\"\")\n\nconst runCopyInterface = (language: string) => {\n  copyInterface(language).then(() => {\n    copiedInterfaceLanguage.value = language\n  })\n}\n\ndefineActionHandler(\n  \"response.file.download\",\n  () => downloadResponse(),\n  computed(() => !!props.response && props.response.length > 0)\n)\ndefineActionHandler(\n  \"response.copy\",\n  () => copyResponse(),\n  computed(() => !!props.response && props.response.length > 0)\n)\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.cm-panels) {\n  @apply top-sidebarPrimaryStickyFold #{!important};\n}\n</style>\n","<template>\n  <div class=\"flex flex-1 flex-col\">\n    <div\n      class=\"sticky z-10 flex items-center justify-between border-y border-dividerLight bg-primary pl-4\"\n      :class=\"[\n        isCollectionProperty\n          ? 'top-propertiesPrimaryStickyFold'\n          : 'top-sidebarPrimaryStickyFold',\n      ]\"\n    >\n      <span class=\"flex items-center\">\n        <label class=\"truncate font-semibold text-secondaryLight\">\n          {{ t(\"authorization.type\") }}\n        </label>\n        <tippy\n          interactive\n          trigger=\"click\"\n          theme=\"popover\"\n          :on-shown=\"() => tippyActions.focus()\"\n        >\n          <HoppSmartSelectWrapper>\n            <HoppButtonSecondary\n              class=\"ml-2 rounded-none pr-8\"\n              :label=\"authName\"\n            />\n          </HoppSmartSelectWrapper>\n          <template #content=\"{ hide }\">\n            <div\n              ref=\"tippyActions\"\n              class=\"flex flex-col focus:outline-none\"\n              tabindex=\"0\"\n              @keyup.escape=\"hide()\"\n            >\n              <HoppSmartItem\n                v-if=\"!isRootCollection\"\n                label=\"Inherit\"\n                :icon=\"authName === 'Inherit' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'Inherit'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'inherit'\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"None\"\n                :icon=\"authName === 'None' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'None'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'none'\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"Basic Auth\"\n                :icon=\"authName === 'Basic Auth' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'Basic Auth'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'basic'\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"Bearer Token\"\n                :icon=\"authName === 'Bearer' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'Bearer'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'bearer'\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"OAuth 2.0\"\n                :icon=\"authName === 'OAuth 2.0' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'OAuth 2.0'\"\n                @click=\"\n                  () => {\n                    selectOAuth2AuthType()\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"API key\"\n                :icon=\"authName === 'API key' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'API key'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'api-key'\n                    hide()\n                  }\n                \"\n              />\n            </div>\n          </template>\n        </tippy>\n      </span>\n      <div class=\"flex\">\n        <!-- <HoppSmartCheckbox\n          :on=\"!URLExcludes.auth\"\n          @change=\"setExclude('auth', !$event)\"\n        >\n          {{ $t(\"authorization.include_in_url\") }}\n        </HoppSmartCheckbox>-->\n        <HoppSmartCheckbox\n          :on=\"authActive\"\n          class=\"px-2\"\n          @change=\"authActive = !authActive\"\n        >\n          {{ t(\"state.enabled\") }}\n        </HoppSmartCheckbox>\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          to=\"https://docs.hoppscotch.io/documentation/features/authorization\"\n          blank\n          :title=\"t('app.wiki')\"\n          :icon=\"IconHelpCircle\"\n        />\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.clear')\"\n          :icon=\"IconTrash2\"\n          @click=\"clearContent\"\n        />\n      </div>\n    </div>\n    <HoppSmartPlaceholder\n      v-if=\"auth.authType === 'none'\"\n      :src=\"`/images/states/${colorMode.value}/login.svg`\"\n      :alt=\"`${t('empty.authorization')}`\"\n      :text=\"t('empty.authorization')\"\n    >\n      <template #body>\n        <HoppButtonSecondary\n          outline\n          :label=\"t('app.documentation')\"\n          to=\"https://docs.hoppscotch.io/documentation/features/authorization\"\n          blank\n          :icon=\"IconExternalLink\"\n          reverse\n        />\n      </template>\n    </HoppSmartPlaceholder>\n    <div v-else class=\"flex flex-1 border-b border-dividerLight\">\n      <div class=\"w-2/3 border-r border-dividerLight\">\n        <div v-if=\"auth.authType === 'basic'\">\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput\n              v-model=\"auth.username\"\n              :environment-highlights=\"false\"\n              :placeholder=\"t('authorization.username')\"\n            />\n          </div>\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput\n              v-model=\"auth.password\"\n              :environment-highlights=\"false\"\n              :placeholder=\"t('authorization.password')\"\n            />\n          </div>\n        </div>\n        <div v-if=\"auth.authType === 'inherit'\" class=\"p-4\">\n          <span v-if=\"inheritedProperties?.auth\">\n            Inherited\n            {{ getAuthName(inheritedProperties.auth.inheritedAuth.authType) }}\n            from Parent Collection {{ inheritedProperties?.auth.parentName }}\n          </span>\n          <span v-else>\n            Please save this request in any collection to inherit the\n            authorization\n          </span>\n        </div>\n        <div v-if=\"auth.authType === 'bearer'\">\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput\n              v-model=\"auth.token\"\n              :environment-highlights=\"false\"\n              placeholder=\"Token\"\n            />\n          </div>\n        </div>\n        <div v-if=\"auth.authType === 'oauth-2'\">\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput\n              v-model=\"auth.grantTypeInfo.token\"\n              :environment-highlights=\"false\"\n              placeholder=\"Token\"\n            />\n          </div>\n          <HttpOAuth2Authorization v-model=\"auth\" source=\"GraphQL\" />\n        </div>\n        <div v-if=\"auth.authType === 'api-key'\">\n          <HttpAuthorizationApiKey v-model=\"auth\" />\n        </div>\n      </div>\n      <div\n        class=\"z-[9] sticky top-upperTertiaryStickyFold h-full min-w-[12rem] max-w-1/3 flex-shrink-0 overflow-auto overflow-x-auto bg-primary p-4\"\n      >\n        <div class=\"pb-2 text-secondaryLight\">\n          {{ t(\"helpers.authorization\") }}\n        </div>\n        <HoppSmartAnchor\n          class=\"link\"\n          :label=\"t('authorization.learn')\"\n          :icon=\"IconExternalLink\"\n          to=\"https://docs.hoppscotch.io/documentation/features/authorization\"\n          blank\n          reverse\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { pluckRef } from \"@composables/ref\"\nimport { useColorMode } from \"@composables/theming\"\nimport { HoppGQLAuth, HoppGQLAuthOAuth2 } from \"@hoppscotch/data\"\nimport { useVModel } from \"@vueuse/core\"\nimport { computed, onMounted, ref } from \"vue\"\n\nimport { HoppInheritedProperty } from \"~/helpers/types/HoppInheritedProperties\"\n\nimport IconCircle from \"~icons/lucide/circle\"\nimport IconCircleDot from \"~icons/lucide/circle-dot\"\nimport IconExternalLink from \"~icons/lucide/external-link\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\n\nimport { getDefaultAuthCodeOauthFlowParams } from \"~/services/oauth/flows/authCode\"\n\nconst t = useI18n()\n\nconst colorMode = useColorMode()\n\nconst props = defineProps<{\n  modelValue: HoppGQLAuth\n  isCollectionProperty?: boolean\n  isRootCollection?: boolean\n  inheritedProperties?: HoppInheritedProperty\n}>()\n\nconst emit = defineEmits<{\n  (e: \"update:modelValue\", value: HoppGQLAuth): void\n}>()\n\nonMounted(() => {\n  if (props.isRootCollection && auth.value.authType === \"inherit\") {\n    auth.value = {\n      authType: \"none\",\n      authActive: true,\n    }\n  }\n})\n\nconst auth = useVModel(props, \"modelValue\", emit)\n\nconst AUTH_KEY_NAME = {\n  basic: \"Basic Auth\",\n  bearer: \"Bearer\",\n  \"oauth-2\": \"OAuth 2.0\",\n  \"api-key\": \"API key\",\n  none: \"None\",\n  inherit: \"Inherit\",\n} as const\n\nconst authType = pluckRef(auth, \"authType\")\n\nconst authName = computed(() =>\n  AUTH_KEY_NAME[authType.value] ? AUTH_KEY_NAME[authType.value] : \"None\"\n)\n\nconst getAuthName = (type: HoppGQLAuth[\"authType\"] | undefined) => {\n  if (!type) return \"None\"\n  return AUTH_KEY_NAME[type] ? AUTH_KEY_NAME[type] : \"None\"\n}\n\nconst selectOAuth2AuthType = () => {\n  const defaultGrantTypeInfo: HoppGQLAuthOAuth2[\"grantTypeInfo\"] = {\n    ...getDefaultAuthCodeOauthFlowParams(),\n    grantType: \"AUTHORIZATION_CODE\",\n    token: \"\",\n  }\n\n  // @ts-expect-error - the existing grantTypeInfo might be in the auth object, typescript doesnt know that\n  const existingGrantTypeInfo = auth.value.grantTypeInfo as\n    | HoppGQLAuthOAuth2[\"grantTypeInfo\"]\n    | undefined\n\n  const grantTypeInfo = existingGrantTypeInfo\n    ? existingGrantTypeInfo\n    : defaultGrantTypeInfo\n\n  auth.value = {\n    ...auth.value,\n    authType: \"oauth-2\",\n    addTo: \"HEADERS\",\n    grantTypeInfo: grantTypeInfo,\n  }\n}\n\nconst authActive = pluckRef(auth, \"authActive\")\n\nconst clearContent = () => {\n  auth.value = {\n    authType: \"inherit\",\n    authActive: true,\n  }\n}\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\n</script>\n","<template>\n  <div\n    class=\"sticky z-10 flex items-center justify-between border-y border-dividerLight bg-primary pl-4\"\n    :class=\"[\n      isCollectionProperty\n        ? 'top-propertiesPrimaryStickyFold'\n        : 'top-sidebarPrimaryStickyFold',\n    ]\"\n  >\n    <label class=\"font-semibold text-secondaryLight\">\n      {{ t(\"tab.headers\") }}\n    </label>\n    <div class=\"flex\">\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        to=\"https://docs.hoppscotch.io/documentation/features/graphql-api-testing\"\n        blank\n        :title=\"t('app.wiki')\"\n        :icon=\"IconHelpCircle\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.clear_all')\"\n        :icon=\"IconTrash2\"\n        @click=\"clearContent()\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('state.linewrap')\"\n        :class=\"{ '!text-accent': WRAP_LINES }\"\n        :icon=\"IconWrapText\"\n        @click.prevent=\"toggleNestedSetting('WRAP_LINES', 'graphqlHeaders')\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('state.bulk_mode')\"\n        :icon=\"IconEdit\"\n        :class=\"{ '!text-accent': bulkMode }\"\n        @click=\"bulkMode = !bulkMode\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('add.new')\"\n        :icon=\"IconPlus\"\n        :disabled=\"bulkMode\"\n        @click=\"addHeader\"\n      />\n    </div>\n  </div>\n  <div v-if=\"bulkMode\" ref=\"bulkEditor\" class=\"flex flex-1 flex-col\"></div>\n  <div v-else>\n    <draggable\n      v-model=\"workingHeaders\"\n      :item-key=\"(header: any) => `header-${header.id}`\"\n      animation=\"250\"\n      handle=\".draggable-handle\"\n      draggable=\".draggable-content\"\n      ghost-class=\"cursor-move\"\n      chosen-class=\"bg-primaryLight\"\n      drag-class=\"cursor-grabbing\"\n    >\n      <template #item=\"{ element: header, index }\">\n        <div\n          class=\"draggable-content group flex divide-x divide-dividerLight border-b border-dividerLight\"\n        >\n          <span>\n            <HoppButtonSecondary\n              v-tippy=\"{\n                theme: 'tooltip',\n                delay: [500, 20],\n                content:\n                  index !== workingHeaders?.length - 1\n                    ? t('action.drag_to_reorder')\n                    : null,\n              }\"\n              :icon=\"IconGripVertical\"\n              class=\"opacity-0\"\n              :class=\"{\n                'draggable-handle cursor-grab group-hover:opacity-100':\n                  index !== workingHeaders?.length - 1,\n              }\"\n              tabindex=\"-1\"\n            />\n          </span>\n          <SmartEnvInput\n            v-model=\"header.key\"\n            :placeholder=\"`${t('count.header', { count: index + 1 })}`\"\n            :auto-complete-source=\"commonHeaders\"\n            @change=\"\n              updateHeader(index, {\n                id: header.id,\n                key: $event,\n                value: header.value,\n                active: header.active,\n              })\n            \"\n          />\n          <SmartEnvInput\n            v-model=\"header.value\"\n            :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n            @change=\"\n              updateHeader(index, {\n                id: header.id,\n                key: header.key,\n                value: $event,\n                active: header.active,\n              })\n            \"\n          />\n          <span>\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"\n                header.hasOwnProperty('active')\n                  ? header.active\n                    ? t('action.turn_off')\n                    : t('action.turn_on')\n                  : t('action.turn_off')\n              \"\n              :icon=\"\n                header.hasOwnProperty('active')\n                  ? header.active\n                    ? IconCheckCircle\n                    : IconCircle\n                  : IconCheckCircle\n              \"\n              color=\"green\"\n              @click=\"\n                updateHeader(index, {\n                  id: header.id,\n                  key: header.key,\n                  value: header.value,\n                  active: !header.active,\n                })\n              \"\n            />\n          </span>\n          <span>\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.remove')\"\n              :icon=\"IconTrash\"\n              color=\"red\"\n              @click=\"deleteHeader(index)\"\n            />\n          </span>\n        </div>\n      </template>\n    </draggable>\n\n    <draggable\n      v-model=\"computedHeaders\"\n      item-key=\"id\"\n      animation=\"250\"\n      handle=\".draggable-handle\"\n      draggable=\".draggable-content\"\n      ghost-class=\"cursor-move\"\n      chosen-class=\"bg-primaryLight\"\n      drag-class=\"cursor-grabbing\"\n    >\n      <template #item=\"{ element: header, index }\">\n        <div\n          class=\"draggable-content group flex divide-x divide-dividerLight border-b border-dividerLight\"\n        >\n          <span>\n            <HoppButtonSecondary\n              :icon=\"IconLock\"\n              class=\"cursor-auto bg-divider text-secondaryLight opacity-25\"\n              tabindex=\"-1\"\n            />\n          </span>\n          <SmartEnvInput\n            v-model=\"header.header.key\"\n            :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n            readonly\n          />\n          <SmartEnvInput\n            :model-value=\"mask(header)\"\n            :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n            readonly\n          />\n          <span>\n            <HoppButtonSecondary\n              v-if=\"header.source === 'auth'\"\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t(masking ? 'state.show' : 'state.hide')\"\n              :icon=\"masking ? IconEye : IconEyeOff\"\n              @click=\"toggleMask()\"\n            />\n            <HoppButtonSecondary\n              v-else\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :icon=\"IconArrowUpRight\"\n              :title=\"t('request.go_to_authorization_tab')\"\n              class=\"cursor-auto text-primary hover:text-primary\"\n            />\n          </span>\n          <span>\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :icon=\"IconArrowUpRight\"\n              :title=\"t('request.go_to_authorization_tab')\"\n            />\n          </span>\n        </div>\n      </template>\n    </draggable>\n\n    <draggable\n      v-model=\"inheritedProperties\"\n      item-key=\"id\"\n      animation=\"250\"\n      handle=\".draggable-handle\"\n      draggable=\".draggable-content\"\n      ghost-class=\"cursor-move\"\n      chosen-class=\"bg-primaryLight\"\n      drag-class=\"cursor-grabbing\"\n    >\n      <template #item=\"{ element: header, index }\">\n        <div\n          class=\"draggable-content group flex divide-x divide-dividerLight border-b border-dividerLight\"\n        >\n          <span>\n            <HoppButtonSecondary\n              :icon=\"IconLock\"\n              class=\"cursor-auto bg-divider text-secondaryLight opacity-25\"\n              tabindex=\"-1\"\n            />\n          </span>\n          <SmartEnvInput\n            v-model=\"header.header.key\"\n            :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n            readonly\n          />\n          <SmartEnvInput\n            :model-value=\"\n              header.source === 'auth' ? mask(header) : header.header.value\n            \"\n            :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n            readonly\n          />\n          <HoppButtonSecondary\n            v-if=\"header.source === 'auth'\"\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t(masking ? 'state.show' : 'state.hide')\"\n            :icon=\"masking && header.source === 'auth' ? IconEye : IconEyeOff\"\n            @click=\"toggleMask()\"\n          />\n          <span v-else class=\"aspect-square w-[2.05rem]\"></span>\n          <span>\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :icon=\"IconInfo\"\n              :title=\"`This header is inherited from Parent Collection ${\n                header.inheritedFrom ?? ''\n              }`\"\n            />\n          </span>\n        </div>\n      </template>\n    </draggable>\n\n    <HoppSmartPlaceholder\n      v-if=\"workingHeaders.length === 0\"\n      :src=\"`/images/states/${colorMode.value}/add_category.svg`\"\n      :alt=\"`${t('empty.headers')}`\"\n      :text=\"t('empty.headers')\"\n    >\n      <template #body>\n        <HoppButtonSecondary\n          :label=\"`${t('add.new')}`\"\n          filled\n          :icon=\"IconPlus\"\n          @click=\"addHeader\"\n        />\n      </template>\n    </HoppSmartPlaceholder>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconGripVertical from \"~icons/lucide/grip-vertical\"\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport IconCircle from \"~icons/lucide/circle\"\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport IconArrowUpRight from \"~icons/lucide/arrow-up-right\"\nimport IconLock from \"~icons/lucide/lock\"\nimport IconEye from \"~icons/lucide/eye\"\nimport IconEyeOff from \"~icons/lucide/eye-off\"\nimport IconInfo from \"~icons/lucide/info\"\nimport { computed, reactive, ref, watch } from \"vue\"\nimport * as E from \"fp-ts/Either\"\nimport * as O from \"fp-ts/Option\"\nimport * as A from \"fp-ts/Array\"\nimport * as RA from \"fp-ts/ReadonlyArray\"\nimport { pipe, flow } from \"fp-ts/function\"\nimport {\n  GQLHeader,\n  rawKeyValueEntriesToString,\n  parseRawKeyValueEntriesE,\n  RawKeyValueEntry,\n  HoppGQLRequest,\n} from \"@hoppscotch/data\"\nimport draggable from \"vuedraggable-es\"\nimport { clone, cloneDeep, isEqual } from \"lodash-es\"\nimport { useColorMode } from \"@composables/theming\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { commonHeaders } from \"~/helpers/headers\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport { objRemoveKey } from \"~/helpers/functional/object\"\nimport { useVModel } from \"@vueuse/core\"\nimport { useNestedSetting } from \"~/composables/settings\"\nimport { toggleNestedSetting } from \"~/newstore/settings\"\nimport { HoppGQLHeader } from \"~/helpers/graphql\"\nimport { throwError } from \"~/helpers/functional/error\"\nimport { HoppInheritedProperty } from \"~/helpers/types/HoppInheritedProperties\"\n\nconst colorMode = useColorMode()\nconst t = useI18n()\nconst toast = useToast()\n\n// v-model integration with props and emit\nconst props = defineProps<{\n  modelValue: HoppGQLRequest\n  isCollectionProperty?: boolean\n  inheritedProperties?: HoppInheritedProperty\n}>()\n\nconst emit = defineEmits<{\n  (e: \"update:modelValue\", value: HoppGQLRequest): void\n}>()\n\nconst request = useVModel(props, \"modelValue\", emit)\n\nconst idTicker = ref(0)\n\nconst WRAP_LINES = useNestedSetting(\"WRAP_LINES\", \"graphqlHeaders\")\nconst bulkMode = ref(false)\nconst bulkHeaders = ref(\"\")\n\nconst deletionToast = ref<{ goAway: (delay: number) => void } | null>(null)\n\nconst bulkEditor = ref<any | null>(null)\n\nuseCodemirror(\n  bulkEditor,\n  bulkHeaders,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"text/x-yaml\",\n      placeholder: `${t(\"state.bulk_mode_placeholder\")}`,\n      lineWrapping: WRAP_LINES,\n    },\n    linter: null,\n    completer: null,\n    environmentHighlights: false,\n  })\n)\n\n// The UI representation of the headers list (has the empty end header)\nconst workingHeaders = ref<Array<GQLHeader & { id: number }>>([\n  {\n    id: idTicker.value++,\n    key: \"\",\n    value: \"\",\n    active: true,\n  },\n])\n\n// Rule: Working Headers always have one empty header or the last element is always an empty header\nwatch(workingHeaders, (headersList) => {\n  if (\n    headersList.length > 0 &&\n    headersList[headersList.length - 1].key !== \"\"\n  ) {\n    workingHeaders.value.push({\n      id: idTicker.value++,\n      key: \"\",\n      value: \"\",\n      active: true,\n    })\n  }\n})\n\n// Sync logic between headers and working headers\nwatch(\n  props.modelValue.headers,\n  (newHeadersList) => {\n    // Sync should overwrite working headers\n    const filteredWorkingHeaders = pipe(\n      workingHeaders.value,\n      A.filterMap(\n        flow(\n          O.fromPredicate((e) => e.key !== \"\"),\n          O.map(objRemoveKey(\"id\"))\n        )\n      )\n    )\n\n    const filteredBulkHeaders = pipe(\n      parseRawKeyValueEntriesE(bulkHeaders.value),\n      E.map(\n        flow(\n          RA.filter((e) => e.key !== \"\"),\n          RA.toArray\n        )\n      ),\n      E.getOrElse(() => [] as RawKeyValueEntry[])\n    )\n\n    if (!isEqual(newHeadersList, filteredWorkingHeaders)) {\n      workingHeaders.value = pipe(\n        newHeadersList,\n        A.map((x) => ({ id: idTicker.value++, ...x }))\n      )\n    }\n\n    if (!isEqual(newHeadersList, filteredBulkHeaders)) {\n      bulkHeaders.value = rawKeyValueEntriesToString(newHeadersList)\n    }\n  },\n  { immediate: true }\n)\n\nwatch(workingHeaders, (newWorkingHeaders) => {\n  const fixedHeaders = pipe(\n    newWorkingHeaders,\n    A.filterMap(\n      flow(\n        O.fromPredicate((e) => e.key !== \"\"),\n        O.map(objRemoveKey(\"id\"))\n      )\n    )\n  )\n\n  if (!isEqual(request.value.headers, fixedHeaders)) {\n    request.value.headers = cloneDeep(fixedHeaders)\n  }\n})\n\n// Bulk Editor Syncing with Working Headers\nwatch(bulkHeaders, (newBulkHeaders) => {\n  const filteredBulkHeaders = pipe(\n    parseRawKeyValueEntriesE(newBulkHeaders),\n    E.map(\n      flow(\n        RA.filter((e) => e.key !== \"\"),\n        RA.toArray\n      )\n    ),\n    E.getOrElse(() => [] as RawKeyValueEntry[])\n  )\n\n  if (!isEqual(request.value.headers, filteredBulkHeaders)) {\n    request.value.headers = filteredBulkHeaders\n  }\n})\n\nwatch(workingHeaders, (newHeadersList) => {\n  // If we are in bulk mode, don't apply direct changes\n  if (bulkMode.value) return\n\n  try {\n    const currentBulkHeaders = bulkHeaders.value.split(\"\\n\").map((item) => ({\n      key: item.substring(0, item.indexOf(\":\")).trimLeft().replace(/^#/, \"\"),\n      value: item.substring(item.indexOf(\":\") + 1).trimLeft(),\n      active: !item.trim().startsWith(\"#\"),\n    }))\n\n    const filteredHeaders = newHeadersList.filter((x) => x.key !== \"\")\n\n    if (!isEqual(currentBulkHeaders, filteredHeaders)) {\n      bulkHeaders.value = rawKeyValueEntriesToString(filteredHeaders)\n    }\n  } catch (e) {\n    toast.error(`${t(\"error.something_went_wrong\")}`)\n    console.error(e)\n  }\n})\n\nconst addHeader = () => {\n  workingHeaders.value.push({\n    id: idTicker.value++,\n    key: \"\",\n    value: \"\",\n    active: true,\n  })\n}\n\nconst updateHeader = (index: number, header: GQLHeader & { id: number }) => {\n  workingHeaders.value = workingHeaders.value.map((h, i) =>\n    i === index ? header : h\n  )\n}\n\nconst deleteHeader = (index: number) => {\n  const headersBeforeDeletion = clone(workingHeaders.value)\n\n  if (\n    !(\n      headersBeforeDeletion.length > 0 &&\n      index === headersBeforeDeletion.length - 1\n    )\n  ) {\n    if (deletionToast.value) {\n      deletionToast.value.goAway(0)\n      deletionToast.value = null\n    }\n\n    deletionToast.value = toast.success(`${t(\"state.deleted\")}`, {\n      action: [\n        {\n          text: `${t(\"action.undo\")}`,\n          onClick: (_: any, toastObject: any) => {\n            workingHeaders.value = headersBeforeDeletion\n            toastObject.goAway(0)\n            deletionToast.value = null\n          },\n        },\n      ],\n\n      onComplete: () => {\n        deletionToast.value = null\n      },\n    })\n  }\n\n  workingHeaders.value = pipe(\n    workingHeaders.value,\n    A.deleteAt(index),\n    O.getOrElseW(() => throwError(\"Working Headers Deletion Out of Bounds\"))\n  )\n}\n\nconst clearContent = () => {\n  // set headers list to the initial state\n  workingHeaders.value = [\n    {\n      id: idTicker.value++,\n      key: \"\",\n      value: \"\",\n      active: true,\n    },\n  ]\n\n  bulkHeaders.value = \"\"\n}\n\nconst getComputedAuthHeaders = (\n  req?: HoppGQLRequest,\n  auth?: HoppGQLRequest[\"auth\"]\n) => {\n  const request = auth ? { auth: auth ?? { authActive: false } } : req\n  // If Authorization header is also being user-defined, that takes priority\n  if (req && req.headers.find((h) => h.key.toLowerCase() === \"authorization\"))\n    return []\n\n  if (!request) return []\n\n  if (!request.auth || !request.auth.authActive) return []\n\n  const headers: HoppGQLHeader[] = []\n\n  // TODO: Support a better b64 implementation than btoa ?\n  if (request.auth.authType === \"basic\") {\n    const username = request.auth.username\n    const password = request.auth.password\n\n    headers.push({\n      active: true,\n      key: \"Authorization\",\n      value: `Basic ${btoa(`${username}:${password}`)}`,\n    })\n  } else if (\n    request.auth.authType === \"bearer\" ||\n    (request.auth.authType === \"oauth-2\" && request.auth.addTo === \"HEADERS\")\n  ) {\n    const requestAuth = request.auth\n\n    const isOAuth2 = requestAuth.authType === \"oauth-2\"\n\n    const token = isOAuth2 ? requestAuth.grantTypeInfo.token : requestAuth.token\n\n    headers.push({\n      active: true,\n      key: \"Authorization\",\n      value: `Bearer ${token}`,\n    })\n  } else if (request.auth.authType === \"api-key\") {\n    const { key, addTo } = request.auth\n\n    if (addTo === \"HEADERS\" && key) {\n      headers.push({\n        active: true,\n        key,\n        value: request.auth.value ?? \"\",\n      })\n    }\n  }\n\n  return headers\n}\n\nconst getComputedHeaders = (req: HoppGQLRequest) => {\n  return [\n    ...getComputedAuthHeaders(req).map((header) => ({\n      source: \"auth\" as const,\n      header,\n    })),\n  ]\n}\n\nconst computedHeaders = computed(() =>\n  getComputedHeaders(request.value).map((header, index) => ({\n    id: `header-${index}`,\n    ...header,\n  }))\n)\n\nconst inheritedProperties = computed(() => {\n  if (!props.inheritedProperties?.auth || !props.inheritedProperties.headers)\n    return []\n\n  //filter out headers that are already in the request headers\n\n  const inheritedHeaders = props.inheritedProperties.headers.filter(\n    (header) =>\n      !request.value.headers.some(\n        (requestHeader) => requestHeader.key === header.inheritedHeader?.key\n      )\n  )\n\n  const headers = inheritedHeaders\n    .filter(\n      (header) =>\n        header.inheritedHeader !== null &&\n        header.inheritedHeader !== undefined &&\n        header.inheritedHeader.active\n    )\n    .map((header, index) => ({\n      inheritedFrom: props.inheritedProperties?.headers[index].parentName,\n      source: \"headers\",\n      id: `header-${index}`,\n      header: {\n        key: header.inheritedHeader?.key,\n        value: header.inheritedHeader?.value,\n        active: header.inheritedHeader?.active,\n      },\n    }))\n\n  let auth = [] as {\n    inheritedFrom: string\n    source: \"auth\"\n    id: string\n    header: {\n      key: string\n      value: string\n      active: boolean\n    }\n  }[]\n\n  const computedAuthHeader = getComputedAuthHeaders(\n    request.value,\n    props.inheritedProperties.auth.inheritedAuth\n  )[0]\n\n  if (\n    computedAuthHeader &&\n    request.value.auth.authType === \"inherit\" &&\n    request.value.auth.authActive\n  ) {\n    auth = [\n      {\n        inheritedFrom: props.inheritedProperties?.auth.parentName,\n        source: \"auth\",\n        id: `header-auth`,\n        header: computedAuthHeader,\n      },\n    ]\n  }\n\n  return [...headers, ...auth]\n})\n\nconst masking = ref(true)\n\nconst toggleMask = () => {\n  masking.value = !masking.value\n}\n\nconst mask = (header: any) => {\n  if (header.source === \"auth\" && masking.value)\n    return header.header.value.replace(/\\S/gi, \"*\")\n  return header.header.value\n}\n\n// const changeTab = (tab: ComputedHeader[\"source\"]) => {\n//   if (tab === \"auth\") emit(\"change-tab\", \"authorization\")\n//   else emit(\"change-tab\", \"bodyParams\")\n// }\n</script>\n","<template>\n  <div\n    class=\"sticky top-sidebarPrimaryStickyFold z-10 flex items-center justify-between border-y border-dividerLight bg-primary pl-4\"\n  >\n    <label class=\"font-semibold text-secondaryLight\">\n      {{ t(\"request.variables\") }}\n    </label>\n    <div class=\"flex\">\n      <HoppButtonSecondary\n        v-if=\"subscriptionState === 'SUBSCRIBED'\"\n        v-tippy=\"{\n          theme: 'tooltip',\n          delay: [500, 20],\n          allowHTML: true,\n        }\"\n        :title=\"`${t('request.stop')}`\"\n        :label=\"`${t('request.stop')}`\"\n        :icon=\"IconStop\"\n        class=\"!hover:text-accentDark rounded-none !text-accent\"\n        @click=\"unsubscribe()\"\n      />\n      <HoppButtonSecondary\n        v-if=\"selectedOperation && subscriptionState !== 'SUBSCRIBED'\"\n        v-tippy=\"{\n          theme: 'tooltip',\n          delay: [500, 20],\n          allowHTML: true,\n        }\"\n        :title=\"`${t('request.run')} <kbd>${getSpecialKey()}</kbd><kbd>G</kbd>`\"\n        :label=\"`${selectedOperation.name?.value ?? t('request.run')}`\"\n        :icon=\"IconPlay\"\n        :disabled=\"!selectedOperation\"\n        class=\"!hover:text-accentDark rounded-none !text-accent\"\n        @click=\"runQuery(selectedOperation)\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        to=\"https://docs.hoppscotch.io/documentation/features/graphql-api-testing\"\n        blank\n        :title=\"t('app.wiki')\"\n        :icon=\"IconHelpCircle\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.clear_all')\"\n        :icon=\"IconTrash2\"\n        @click=\"clearGQLVariables()\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('state.linewrap')\"\n        :class=\"{ '!text-accent': WRAP_LINES }\"\n        :icon=\"IconWrapText\"\n        @click.prevent=\"toggleNestedSetting('WRAP_LINES', 'graphqlVariables')\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.prettify')\"\n        :icon=\"prettifyVariablesIcon\"\n        @click=\"prettifyVariableString\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.copy')\"\n        :icon=\"copyVariablesIcon\"\n        @click=\"copyVariables\"\n      />\n    </div>\n  </div>\n  <div class=\"h-full relative\">\n    <div ref=\"variableEditor\" class=\"flex flex-1 flex-col\"></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconPlay from \"~icons/lucide/play\"\nimport IconStop from \"~icons/lucide/stop-circle\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconCheck from \"~icons/lucide/check\"\nimport IconInfo from \"~icons/lucide/info\"\nimport IconWand from \"~icons/lucide/wand\"\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport { computed, reactive, ref } from \"vue\"\nimport jsonLinter from \"~/helpers/editor/linting/json\"\nimport { copyToClipboard } from \"@helpers/utils/clipboard\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport * as gql from \"graphql\"\nimport { useI18n } from \"@composables/i18n\"\nimport { refAutoReset, useVModel } from \"@vueuse/core\"\nimport { useToast } from \"~/composables/toast\"\nimport { getPlatformSpecialKey as getSpecialKey } from \"~/helpers/platformutils\"\nimport {\n  socketDisconnect,\n  subscriptionState,\n} from \"~/helpers/graphql/connection\"\nimport { useNestedSetting } from \"~/composables/settings\"\nimport { toggleNestedSetting } from \"~/newstore/settings\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  modelValue: string\n}>()\n\nconst emit = defineEmits<{\n  (e: \"save-request\"): void\n  (e: \"update:modelValue\", val: string): void\n  (e: \"run-query\", definition: gql.OperationDefinitionNode | null): void\n}>()\n\n// Watch operations on graphql query string\nconst selectedOperation = ref<gql.OperationDefinitionNode | null>(null)\n\nconst variableString = useVModel(props, \"modelValue\", emit)\n\nconst variableEditor = ref<any | null>(null)\n\nconst WRAP_LINES = useNestedSetting(\"WRAP_LINES\", \"graphqlVariables\")\n\nconst copyVariablesIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\nconst prettifyVariablesIcon = refAutoReset<\n  typeof IconWand | typeof IconCheck | typeof IconInfo\n>(IconWand, 1000)\n\nuseCodemirror(\n  variableEditor,\n  variableString,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"application/ld+json\",\n      placeholder: `${t(\"request.variables\")}`,\n      lineWrapping: WRAP_LINES,\n    },\n    linter: computed(() =>\n      variableString.value.length > 0 ? jsonLinter : null\n    ),\n    completer: null,\n    environmentHighlights: false,\n  })\n)\n\nconst copyVariables = () => {\n  copyToClipboard(variableString.value)\n  copyVariablesIcon.value = IconCheck\n  toast.success(`${t(\"state.copied_to_clipboard\")}`)\n}\n\nconst prettifyVariableString = () => {\n  try {\n    const jsonObj = JSON.parse(variableString.value)\n    variableString.value = JSON.stringify(jsonObj, null, 2)\n    prettifyVariablesIcon.value = IconCheck\n  } catch (e) {\n    console.error(e)\n    prettifyVariablesIcon.value = IconInfo\n    toast.error(`${t(\"error.json_prettify_invalid_body\")}`)\n  }\n}\n\nconst clearGQLVariables = () => {\n  variableString.value = \"\"\n}\n\nconst runQuery = (definition: gql.OperationDefinitionNode | null = null) => {\n  emit(\"run-query\", definition)\n}\nconst unsubscribe = () => {\n  socketDisconnect()\n}\n</script>\n","import { Ref } from \"vue\"\nimport {\n  GraphQLError,\n  GraphQLSchema,\n  parse as gqlParse,\n  validate as gqlValidate,\n} from \"graphql\"\nimport { LinterDefinition, LinterResult } from \"./linter\"\n\n/**\n * Creates a Linter function that can lint a GQL query against a given\n * schema\n */\nexport const createGQLQueryLinter: (\n  schema: Ref<GraphQLSchema | null>\n) => LinterDefinition = (schema: Ref<GraphQLSchema | null>) => (text) => {\n  if (text === \"\") return Promise.resolve([])\n  if (!schema.value) return Promise.resolve([])\n\n  try {\n    const doc = gqlParse(text)\n\n    const results = gqlValidate(schema.value, doc).map(\n      ({ locations, message }) =>\n        <LinterResult>{\n          from: {\n            line: locations![0].line,\n            ch: locations![0].column - 1,\n          },\n          to: {\n            line: locations![0].line,\n            ch: locations![0].column - 1,\n          },\n          message,\n          severity: \"error\",\n        }\n    )\n\n    return Promise.resolve(results)\n  } catch (e) {\n    const err = e as GraphQLError\n\n    return Promise.resolve([\n      <LinterResult>{\n        from: {\n          line: err.locations![0].line,\n          ch: err.locations![0].column - 1,\n        },\n        to: {\n          line: err.locations![0].line,\n          ch: err.locations![0].column,\n        },\n        message: err.message,\n        severity: \"error\",\n      },\n    ])\n  }\n}\n","import { isCompositeType } from 'graphql';\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, } from 'graphql/type/introspection';\nexport function getDefinitionState(tokenState) {\n    let definitionState;\n    forEachState(tokenState, (state) => {\n        switch (state.kind) {\n            case 'Query':\n            case 'ShortQuery':\n            case 'Mutation':\n            case 'Subscription':\n            case 'FragmentDefinition':\n                definitionState = state;\n                break;\n        }\n    });\n    return definitionState;\n}\nexport function getFieldDef(schema, type, fieldName) {\n    if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n        return SchemaMetaFieldDef;\n    }\n    if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n        return TypeMetaFieldDef;\n    }\n    if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n        return TypeNameMetaFieldDef;\n    }\n    if ('getFields' in type) {\n        return type.getFields()[fieldName];\n    }\n    return null;\n}\nexport function forEachState(stack, fn) {\n    const reverseStateStack = [];\n    let state = stack;\n    while (state && state.kind) {\n        reverseStateStack.push(state);\n        state = state.prevState;\n    }\n    for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n        fn(reverseStateStack[i]);\n    }\n}\nexport function objectValues(object) {\n    const keys = Object.keys(object);\n    const len = keys.length;\n    const values = new Array(len);\n    for (let i = 0; i < len; ++i) {\n        values[i] = object[keys[i]];\n    }\n    return values;\n}\nexport function hintList(token, list) {\n    return filterAndSortList(list, normalizeText(token.string));\n}\nfunction filterAndSortList(list, text) {\n    if (!text) {\n        return filterNonEmpty(list, entry => !entry.isDeprecated);\n    }\n    const byProximity = list.map(entry => ({\n        proximity: getProximity(normalizeText(entry.label), text),\n        entry,\n    }));\n    return filterNonEmpty(filterNonEmpty(byProximity, pair => pair.proximity <= 2), pair => !pair.entry.isDeprecated)\n        .sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.label.length - b.entry.label.length)\n        .map(pair => pair.entry);\n}\nfunction filterNonEmpty(array, predicate) {\n    const filtered = array.filter(predicate);\n    return filtered.length === 0 ? array : filtered;\n}\nfunction normalizeText(text) {\n    return text.toLowerCase().replace(/\\W/g, '');\n}\nfunction getProximity(suggestion, text) {\n    let proximity = lexicalDistance(text, suggestion);\n    if (suggestion.length > text.length) {\n        proximity -= suggestion.length - text.length - 1;\n        proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n    }\n    return proximity;\n}\nfunction lexicalDistance(a, b) {\n    let i;\n    let j;\n    const d = [];\n    const aLength = a.length;\n    const bLength = b.length;\n    for (i = 0; i <= aLength; i++) {\n        d[i] = [i];\n    }\n    for (j = 1; j <= bLength; j++) {\n        d[0][j] = j;\n    }\n    for (i = 1; i <= aLength; i++) {\n        for (j = 1; j <= bLength; j++) {\n            const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n    return d[aLength][bLength];\n}\n//# sourceMappingURL=autocompleteUtils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","export default class CharacterStream {\n    constructor(sourceText) {\n        this.getStartOfToken = () => this._start;\n        this.getCurrentPosition = () => this._pos;\n        this.eol = () => this._sourceText.length === this._pos;\n        this.sol = () => this._pos === 0;\n        this.peek = () => {\n            return this._sourceText.charAt(this._pos)\n                ? this._sourceText.charAt(this._pos)\n                : null;\n        };\n        this.next = () => {\n            const char = this._sourceText.charAt(this._pos);\n            this._pos++;\n            return char;\n        };\n        this.eat = (pattern) => {\n            const isMatched = this._testNextCharacter(pattern);\n            if (isMatched) {\n                this._start = this._pos;\n                this._pos++;\n                return this._sourceText.charAt(this._pos - 1);\n            }\n            return undefined;\n        };\n        this.eatWhile = (match) => {\n            let isMatched = this._testNextCharacter(match);\n            let didEat = false;\n            if (isMatched) {\n                didEat = isMatched;\n                this._start = this._pos;\n            }\n            while (isMatched) {\n                this._pos++;\n                isMatched = this._testNextCharacter(match);\n                didEat = true;\n            }\n            return didEat;\n        };\n        this.eatSpace = () => this.eatWhile(/[\\s\\u00a0]/);\n        this.skipToEnd = () => {\n            this._pos = this._sourceText.length;\n        };\n        this.skipTo = (position) => {\n            this._pos = position;\n        };\n        this.match = (pattern, consume = true, caseFold = false) => {\n            let token = null;\n            let match = null;\n            if (typeof pattern === 'string') {\n                const regex = new RegExp(pattern, caseFold ? 'i' : 'g');\n                match = regex.test(this._sourceText.substr(this._pos, pattern.length));\n                token = pattern;\n            }\n            else if (pattern instanceof RegExp) {\n                match = this._sourceText.slice(this._pos).match(pattern);\n                token = match && match[0];\n            }\n            if (match != null) {\n                if (typeof pattern === 'string' ||\n                    (match instanceof Array &&\n                        this._sourceText.startsWith(match[0], this._pos))) {\n                    if (consume) {\n                        this._start = this._pos;\n                        if (token && token.length) {\n                            this._pos += token.length;\n                        }\n                    }\n                    return match;\n                }\n            }\n            return false;\n        };\n        this.backUp = (num) => {\n            this._pos -= num;\n        };\n        this.column = () => this._pos;\n        this.indentation = () => {\n            const match = this._sourceText.match(/\\s*/);\n            let indent = 0;\n            if (match && match.length !== 0) {\n                const whitespaces = match[0];\n                let pos = 0;\n                while (whitespaces.length > pos) {\n                    if (whitespaces.charCodeAt(pos) === 9) {\n                        indent += 2;\n                    }\n                    else {\n                        indent++;\n                    }\n                    pos++;\n                }\n            }\n            return indent;\n        };\n        this.current = () => this._sourceText.slice(this._start, this._pos);\n        this._start = 0;\n        this._pos = 0;\n        this._sourceText = sourceText;\n    }\n    _testNextCharacter(pattern) {\n        const character = this._sourceText.charAt(this._pos);\n        let isMatched = false;\n        if (typeof pattern === 'string') {\n            isMatched = character === pattern;\n        }\n        else {\n            isMatched =\n                pattern instanceof RegExp\n                    ? pattern.test(character)\n                    : pattern(character);\n        }\n        return isMatched;\n    }\n}\n//# sourceMappingURL=CharacterStream.js.map","export function opt(ofRule) {\n    return { ofRule };\n}\nexport function list(ofRule, separator) {\n    return { ofRule, isList: true, separator };\n}\nexport function butNot(rule, exclusions) {\n    const ruleMatch = rule.match;\n    rule.match = token => {\n        let check = false;\n        if (ruleMatch) {\n            check = ruleMatch(token);\n        }\n        return (check &&\n            exclusions.every(exclusion => exclusion.match && !exclusion.match(token)));\n    };\n    return rule;\n}\nexport function t(kind, style) {\n    return { style, match: (token) => token.kind === kind };\n}\nexport function p(value, style) {\n    return {\n        style: style || 'punctuation',\n        match: (token) => token.kind === 'Punctuation' && token.value === value,\n    };\n}\n//# sourceMappingURL=RuleHelpers.js.map","import { opt, list, butNot, t, p } from './RuleHelpers';\nimport { Kind } from 'graphql';\nexport const isIgnored = (ch) => ch === ' ' ||\n    ch === '\\t' ||\n    ch === ',' ||\n    ch === '\\n' ||\n    ch === '\\r' ||\n    ch === '\\uFEFF' ||\n    ch === '\\u00A0';\nexport const LexRules = {\n    Name: /^[_A-Za-z][_0-9A-Za-z]*/,\n    Punctuation: /^(?:!|\\$|\\(|\\)|\\.\\.\\.|:|=|&|@|\\[|]|\\{|\\||\\})/,\n    Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n    String: /^(?:\"\"\"(?:\\\\\"\"\"|[^\"]|\"[^\"]|\"\"[^\"])*(?:\"\"\")?|\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?)/,\n    Comment: /^#.*/,\n};\nexport const ParseRules = {\n    Document: [list('Definition')],\n    Definition(token) {\n        switch (token.value) {\n            case '{':\n                return 'ShortQuery';\n            case 'query':\n                return 'Query';\n            case 'mutation':\n                return 'Mutation';\n            case 'subscription':\n                return 'Subscription';\n            case 'fragment':\n                return Kind.FRAGMENT_DEFINITION;\n            case 'schema':\n                return 'SchemaDef';\n            case 'scalar':\n                return 'ScalarDef';\n            case 'type':\n                return 'ObjectTypeDef';\n            case 'interface':\n                return 'InterfaceDef';\n            case 'union':\n                return 'UnionDef';\n            case 'enum':\n                return 'EnumDef';\n            case 'input':\n                return 'InputDef';\n            case 'extend':\n                return 'ExtendDef';\n            case 'directive':\n                return 'DirectiveDef';\n        }\n    },\n    ShortQuery: ['SelectionSet'],\n    Query: [\n        word('query'),\n        opt(name('def')),\n        opt('VariableDefinitions'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    Mutation: [\n        word('mutation'),\n        opt(name('def')),\n        opt('VariableDefinitions'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    Subscription: [\n        word('subscription'),\n        opt(name('def')),\n        opt('VariableDefinitions'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    VariableDefinitions: [p('('), list('VariableDefinition'), p(')')],\n    VariableDefinition: ['Variable', p(':'), 'Type', opt('DefaultValue')],\n    Variable: [p('$', 'variable'), name('variable')],\n    DefaultValue: [p('='), 'Value'],\n    SelectionSet: [p('{'), list('Selection'), p('}')],\n    Selection(token, stream) {\n        return token.value === '...'\n            ? stream.match(/[\\s\\u00a0,]*(on\\b|@|{)/, false)\n                ? 'InlineFragment'\n                : 'FragmentSpread'\n            : stream.match(/[\\s\\u00a0,]*:/, false)\n                ? 'AliasedField'\n                : 'Field';\n    },\n    AliasedField: [\n        name('property'),\n        p(':'),\n        name('qualifier'),\n        opt('Arguments'),\n        list('Directive'),\n        opt('SelectionSet'),\n    ],\n    Field: [\n        name('property'),\n        opt('Arguments'),\n        list('Directive'),\n        opt('SelectionSet'),\n    ],\n    Arguments: [p('('), list('Argument'), p(')')],\n    Argument: [name('attribute'), p(':'), 'Value'],\n    FragmentSpread: [p('...'), name('def'), list('Directive')],\n    InlineFragment: [\n        p('...'),\n        opt('TypeCondition'),\n        list('Directive'),\n        'SelectionSet',\n    ],\n    FragmentDefinition: [\n        word('fragment'),\n        opt(butNot(name('def'), [word('on')])),\n        'TypeCondition',\n        list('Directive'),\n        'SelectionSet',\n    ],\n    TypeCondition: [word('on'), 'NamedType'],\n    Value(token) {\n        switch (token.kind) {\n            case 'Number':\n                return 'NumberValue';\n            case 'String':\n                return 'StringValue';\n            case 'Punctuation':\n                switch (token.value) {\n                    case '[':\n                        return 'ListValue';\n                    case '{':\n                        return 'ObjectValue';\n                    case '$':\n                        return 'Variable';\n                    case '&':\n                        return 'NamedType';\n                }\n                return null;\n            case 'Name':\n                switch (token.value) {\n                    case 'true':\n                    case 'false':\n                        return 'BooleanValue';\n                }\n                if (token.value === 'null') {\n                    return 'NullValue';\n                }\n                return 'EnumValue';\n        }\n    },\n    NumberValue: [t('Number', 'number')],\n    StringValue: [\n        {\n            style: 'string',\n            match: token => token.kind === 'String',\n            update(state, token) {\n                if (token.value.startsWith('\"\"\"')) {\n                    state.inBlockstring = !token.value.slice(3).endsWith('\"\"\"');\n                }\n            },\n        },\n    ],\n    BooleanValue: [t('Name', 'builtin')],\n    NullValue: [t('Name', 'keyword')],\n    EnumValue: [name('string-2')],\n    ListValue: [p('['), list('Value'), p(']')],\n    ObjectValue: [p('{'), list('ObjectField'), p('}')],\n    ObjectField: [name('attribute'), p(':'), 'Value'],\n    Type(token) {\n        return token.value === '[' ? 'ListType' : 'NonNullType';\n    },\n    ListType: [p('['), 'Type', p(']'), opt(p('!'))],\n    NonNullType: ['NamedType', opt(p('!'))],\n    NamedType: [type('atom')],\n    Directive: [p('@', 'meta'), name('meta'), opt('Arguments')],\n    DirectiveDef: [\n        word('directive'),\n        p('@', 'meta'),\n        name('meta'),\n        opt('ArgumentsDef'),\n        word('on'),\n        list('DirectiveLocation', p('|')),\n    ],\n    InterfaceDef: [\n        word('interface'),\n        name('atom'),\n        opt('Implements'),\n        list('Directive'),\n        p('{'),\n        list('FieldDef'),\n        p('}'),\n    ],\n    Implements: [word('implements'), list('NamedType', p('&'))],\n    DirectiveLocation: [name('string-2')],\n    SchemaDef: [\n        word('schema'),\n        list('Directive'),\n        p('{'),\n        list('OperationTypeDef'),\n        p('}'),\n    ],\n    OperationTypeDef: [name('keyword'), p(':'), name('atom')],\n    ScalarDef: [word('scalar'), name('atom'), list('Directive')],\n    ObjectTypeDef: [\n        word('type'),\n        name('atom'),\n        opt('Implements'),\n        list('Directive'),\n        p('{'),\n        list('FieldDef'),\n        p('}'),\n    ],\n    FieldDef: [\n        name('property'),\n        opt('ArgumentsDef'),\n        p(':'),\n        'Type',\n        list('Directive'),\n    ],\n    ArgumentsDef: [p('('), list('InputValueDef'), p(')')],\n    InputValueDef: [\n        name('attribute'),\n        p(':'),\n        'Type',\n        opt('DefaultValue'),\n        list('Directive'),\n    ],\n    UnionDef: [\n        word('union'),\n        name('atom'),\n        list('Directive'),\n        p('='),\n        list('UnionMember', p('|')),\n    ],\n    UnionMember: ['NamedType'],\n    EnumDef: [\n        word('enum'),\n        name('atom'),\n        list('Directive'),\n        p('{'),\n        list('EnumValueDef'),\n        p('}'),\n    ],\n    EnumValueDef: [name('string-2'), list('Directive')],\n    InputDef: [\n        word('input'),\n        name('atom'),\n        list('Directive'),\n        p('{'),\n        list('InputValueDef'),\n        p('}'),\n    ],\n    ExtendDef: [word('extend'), 'ObjectTypeDef'],\n};\nfunction word(value) {\n    return {\n        style: 'keyword',\n        match: (token) => token.kind === 'Name' && token.value === value,\n    };\n}\nfunction name(style) {\n    return {\n        style,\n        match: (token) => token.kind === 'Name',\n        update(state, token) {\n            state.name = token.value;\n        },\n    };\n}\nfunction type(style) {\n    return {\n        style,\n        match: (token) => token.kind === 'Name',\n        update(state, token) {\n            if (state.prevState && state.prevState.prevState) {\n                state.name = token.value;\n                state.prevState.prevState.type = token.value;\n            }\n        },\n    };\n}\n//# sourceMappingURL=Rules.js.map","import { LexRules, ParseRules, isIgnored } from './Rules';\nimport { Kind } from 'graphql';\nexport default function onlineParser(options = {\n    eatWhitespace: stream => stream.eatWhile(isIgnored),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: {},\n}) {\n    return {\n        startState() {\n            const initialState = {\n                level: 0,\n                step: 0,\n                name: null,\n                kind: null,\n                type: null,\n                rule: null,\n                needsSeperator: false,\n                prevState: null,\n            };\n            pushRule(options.parseRules, initialState, Kind.DOCUMENT);\n            return initialState;\n        },\n        token(stream, state) {\n            return getToken(stream, state, options);\n        },\n    };\n}\nfunction getToken(stream, state, options) {\n    if (state.inBlockstring) {\n        if (stream.match(/.*\"\"\"/)) {\n            state.inBlockstring = false;\n            return 'string';\n        }\n        else {\n            stream.skipToEnd();\n            return 'string';\n        }\n    }\n    const { lexRules, parseRules, eatWhitespace, editorConfig } = options;\n    if (state.rule && state.rule.length === 0) {\n        popRule(state);\n    }\n    else if (state.needsAdvance) {\n        state.needsAdvance = false;\n        advanceRule(state, true);\n    }\n    if (stream.sol()) {\n        const tabSize = (editorConfig && editorConfig.tabSize) || 2;\n        state.indentLevel = Math.floor(stream.indentation() / tabSize);\n    }\n    if (eatWhitespace(stream)) {\n        return 'ws';\n    }\n    const token = lex(lexRules, stream);\n    if (!token) {\n        const matchedSomething = stream.match(/\\S+/);\n        if (!matchedSomething) {\n            stream.match(/\\s/);\n        }\n        pushRule(SpecialParseRules, state, 'Invalid');\n        return 'invalidchar';\n    }\n    if (token.kind === 'Comment') {\n        pushRule(SpecialParseRules, state, 'Comment');\n        return 'comment';\n    }\n    const backupState = assign({}, state);\n    if (token.kind === 'Punctuation') {\n        if (/^[{([]/.test(token.value)) {\n            if (state.indentLevel !== undefined) {\n                state.levels = (state.levels || []).concat(state.indentLevel + 1);\n            }\n        }\n        else if (/^[})\\]]/.test(token.value)) {\n            const levels = (state.levels = (state.levels || []).slice(0, -1));\n            if (state.indentLevel) {\n                if (levels.length > 0 &&\n                    levels[levels.length - 1] < state.indentLevel) {\n                    state.indentLevel = levels[levels.length - 1];\n                }\n            }\n        }\n    }\n    while (state.rule) {\n        let expected = typeof state.rule === 'function'\n            ? state.step === 0\n                ? state.rule(token, stream)\n                : null\n            : state.rule[state.step];\n        if (state.needsSeperator) {\n            expected = expected && (expected === null || expected === void 0 ? void 0 : expected.separator);\n        }\n        if (expected) {\n            if (expected.ofRule) {\n                expected = expected.ofRule;\n            }\n            if (typeof expected === 'string') {\n                pushRule(parseRules, state, expected);\n                continue;\n            }\n            if (expected.match && expected.match(token)) {\n                if (expected.update) {\n                    expected.update(state, token);\n                }\n                if (token.kind === 'Punctuation') {\n                    advanceRule(state, true);\n                }\n                else {\n                    state.needsAdvance = true;\n                }\n                return expected.style;\n            }\n        }\n        unsuccessful(state);\n    }\n    assign(state, backupState);\n    pushRule(SpecialParseRules, state, 'Invalid');\n    return 'invalidchar';\n}\nfunction assign(to, from) {\n    const keys = Object.keys(from);\n    for (let i = 0; i < keys.length; i++) {\n        to[keys[i]] = from[keys[i]];\n    }\n    return to;\n}\nconst SpecialParseRules = {\n    Invalid: [],\n    Comment: [],\n};\nfunction pushRule(rules, state, ruleKind) {\n    if (!rules[ruleKind]) {\n        throw new TypeError('Unknown rule: ' + ruleKind);\n    }\n    state.prevState = Object.assign({}, state);\n    state.kind = ruleKind;\n    state.name = null;\n    state.type = null;\n    state.rule = rules[ruleKind];\n    state.step = 0;\n    state.needsSeperator = false;\n}\nfunction popRule(state) {\n    if (!state.prevState) {\n        return;\n    }\n    state.kind = state.prevState.kind;\n    state.name = state.prevState.name;\n    state.type = state.prevState.type;\n    state.rule = state.prevState.rule;\n    state.step = state.prevState.step;\n    state.needsSeperator = state.prevState.needsSeperator;\n    state.prevState = state.prevState.prevState;\n}\nfunction advanceRule(state, successful) {\n    if (isList(state) && state.rule) {\n        const step = state.rule[state.step];\n        if (step.separator) {\n            const separator = step.separator;\n            state.needsSeperator = !state.needsSeperator;\n            if (!state.needsSeperator && separator.ofRule) {\n                return;\n            }\n        }\n        if (successful) {\n            return;\n        }\n    }\n    state.needsSeperator = false;\n    state.step++;\n    while (state.rule &&\n        !(Array.isArray(state.rule) && state.step < state.rule.length)) {\n        popRule(state);\n        if (state.rule) {\n            if (isList(state)) {\n                if (state.rule && state.rule[state.step].separator) {\n                    state.needsSeperator = !state.needsSeperator;\n                }\n            }\n            else {\n                state.needsSeperator = false;\n                state.step++;\n            }\n        }\n    }\n}\nfunction isList(state) {\n    const step = Array.isArray(state.rule) &&\n        typeof state.rule[state.step] !== 'string' &&\n        state.rule[state.step];\n    return step && step.isList;\n}\nfunction unsuccessful(state) {\n    while (state.rule &&\n        !(Array.isArray(state.rule) && state.rule[state.step].ofRule)) {\n        popRule(state);\n    }\n    if (state.rule) {\n        advanceRule(state, false);\n    }\n}\nfunction lex(lexRules, stream) {\n    const kinds = Object.keys(lexRules);\n    for (let i = 0; i < kinds.length; i++) {\n        const match = stream.match(lexRules[kinds[i]]);\n        if (match && match instanceof Array) {\n            return { kind: kinds[i], value: match[0] };\n        }\n    }\n}\n//# sourceMappingURL=onlineParser.js.map","import { Kind } from 'graphql';\nexport const AdditionalRuleKinds = {\n    ALIASED_FIELD: 'AliasedField',\n    ARGUMENTS: 'Arguments',\n    SHORT_QUERY: 'ShortQuery',\n    QUERY: 'Query',\n    MUTATION: 'Mutation',\n    SUBSCRIPTION: 'Subscription',\n    TYPE_CONDITION: 'TypeCondition',\n    INVALID: 'Invalid',\n    COMMENT: 'Comment',\n    SCHEMA_DEF: 'SchemaDef',\n    SCALAR_DEF: 'ScalarDef',\n    OBJECT_TYPE_DEF: 'ObjectTypeDef',\n    OBJECT_VALUE: 'ObjectValue',\n    LIST_VALUE: 'ListValue',\n    INTERFACE_DEF: 'InterfaceDef',\n    UNION_DEF: 'UnionDef',\n    ENUM_DEF: 'EnumDef',\n    ENUM_VALUE: 'EnumValue',\n    FIELD_DEF: 'FieldDef',\n    INPUT_DEF: 'InputDef',\n    INPUT_VALUE_DEF: 'InputValueDef',\n    ARGUMENTS_DEF: 'ArgumentsDef',\n    EXTEND_DEF: 'ExtendDef',\n    DIRECTIVE_DEF: 'DirectiveDef',\n    IMPLEMENTS: 'Implements',\n    VARIABLE_DEFINITIONS: 'VariableDefinitions',\n    TYPE: 'Type',\n};\nexport const RuleKinds = Object.assign(Object.assign({}, Kind), AdditionalRuleKinds);\n//# sourceMappingURL=types.js.map","import { CompletionItemKind, InsertTextFormat, } from 'vscode-languageserver-types';\nimport { isInterfaceType, GraphQLInterfaceType, GraphQLObjectType, Kind, DirectiveLocation, isListType, isNonNullType, } from 'graphql';\nimport { GraphQLBoolean, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, assertAbstractType, doTypesOverlap, getNamedType, getNullableType, isAbstractType, isCompositeType, isInputType, visit, parse, } from 'graphql';\nimport { CharacterStream, onlineParser, RuleKinds, } from 'graphql-language-service-parser';\nimport { forEachState, getDefinitionState, getFieldDef, hintList, objectValues, } from './autocompleteUtils';\nexport const SuggestionCommand = {\n    command: 'editor.action.triggerSuggest',\n    title: 'Suggestions',\n};\nconst collectFragmentDefs = (op) => {\n    const externalFragments = [];\n    if (op) {\n        visit(parse(op), {\n            FragmentDefinition(def) {\n                externalFragments.push(def);\n            },\n        });\n    }\n    return externalFragments;\n};\nexport function getAutocompleteSuggestions(schema, queryText, cursor, contextToken, fragmentDefs, options) {\n    var _a;\n    const opts = Object.assign(Object.assign({}, options), { schema });\n    const token = contextToken || getTokenAtPosition(queryText, cursor);\n    const state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n    if (!state) {\n        return [];\n    }\n    const kind = state.kind;\n    const step = state.step;\n    const typeInfo = getTypeInfo(schema, token.state);\n    if (kind === RuleKinds.DOCUMENT) {\n        return hintList(token, [\n            { label: 'query', kind: CompletionItemKind.Function },\n            { label: 'mutation', kind: CompletionItemKind.Function },\n            { label: 'subscription', kind: CompletionItemKind.Function },\n            { label: 'fragment', kind: CompletionItemKind.Function },\n            { label: '{', kind: CompletionItemKind.Constructor },\n        ]);\n    }\n    if (kind === RuleKinds.IMPLEMENTS ||\n        (kind === RuleKinds.NAMED_TYPE &&\n            ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === RuleKinds.IMPLEMENTS)) {\n        return getSuggestionsForImplements(token, state, schema, queryText, typeInfo);\n    }\n    if (kind === RuleKinds.SELECTION_SET ||\n        kind === RuleKinds.FIELD ||\n        kind === RuleKinds.ALIASED_FIELD) {\n        return getSuggestionsForFieldNames(token, typeInfo, opts);\n    }\n    if (kind === RuleKinds.ARGUMENTS ||\n        (kind === RuleKinds.ARGUMENT && step === 0)) {\n        const argDefs = typeInfo.argDefs;\n        if (argDefs) {\n            return hintList(token, argDefs.map((argDef) => {\n                var _a;\n                return ({\n                    label: argDef.name,\n                    insertText: argDef.name + ': ',\n                    command: SuggestionCommand,\n                    detail: String(argDef.type),\n                    documentation: (_a = argDef.description) !== null && _a !== void 0 ? _a : undefined,\n                    kind: CompletionItemKind.Variable,\n                    type: argDef.type,\n                });\n            }));\n        }\n    }\n    if (kind === RuleKinds.OBJECT_VALUE ||\n        (kind === RuleKinds.OBJECT_FIELD && step === 0)) {\n        if (typeInfo.objectFieldDefs) {\n            const objectFields = objectValues(typeInfo.objectFieldDefs);\n            const completionKind = kind === RuleKinds.OBJECT_VALUE\n                ? CompletionItemKind.Value\n                : CompletionItemKind.Field;\n            return hintList(token, objectFields.map(field => {\n                var _a;\n                return ({\n                    label: field.name,\n                    detail: String(field.type),\n                    documentation: (_a = field.description) !== null && _a !== void 0 ? _a : undefined,\n                    kind: completionKind,\n                    type: field.type,\n                });\n            }));\n        }\n    }\n    if (kind === RuleKinds.ENUM_VALUE ||\n        (kind === RuleKinds.LIST_VALUE && step === 1) ||\n        (kind === RuleKinds.OBJECT_FIELD && step === 2) ||\n        (kind === RuleKinds.ARGUMENT && step === 2)) {\n        return getSuggestionsForInputValues(token, typeInfo, queryText, schema);\n    }\n    if (kind === RuleKinds.VARIABLE && step === 1) {\n        const namedInputType = getNamedType(typeInfo.inputType);\n        const variableDefinitions = getVariableCompletions(queryText, schema, token);\n        return hintList(token, variableDefinitions.filter(v => v.detail === (namedInputType === null || namedInputType === void 0 ? void 0 : namedInputType.name)));\n    }\n    if ((kind === RuleKinds.TYPE_CONDITION && step === 1) ||\n        (kind === RuleKinds.NAMED_TYPE &&\n            state.prevState != null &&\n            state.prevState.kind === RuleKinds.TYPE_CONDITION)) {\n        return getSuggestionsForFragmentTypeConditions(token, typeInfo, schema, kind);\n    }\n    if (kind === RuleKinds.FRAGMENT_SPREAD && step === 1) {\n        return getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, Array.isArray(fragmentDefs)\n            ? fragmentDefs\n            : collectFragmentDefs(fragmentDefs));\n    }\n    if ((kind === RuleKinds.VARIABLE_DEFINITION && step === 2) ||\n        (kind === RuleKinds.LIST_TYPE && step === 1) ||\n        (kind === RuleKinds.NAMED_TYPE &&\n            state.prevState &&\n            (state.prevState.kind === RuleKinds.VARIABLE_DEFINITION ||\n                state.prevState.kind === RuleKinds.LIST_TYPE ||\n                state.prevState.kind === RuleKinds.NON_NULL_TYPE))) {\n        return getSuggestionsForVariableDefinition(token, schema, kind);\n    }\n    if (kind === RuleKinds.DIRECTIVE) {\n        return getSuggestionsForDirective(token, state, schema, kind);\n    }\n    return [];\n}\nconst insertSuffix = ` {\\n  $1\\n}`;\nconst getInsertText = (field) => {\n    const type = field.type;\n    if (isCompositeType(type)) {\n        return insertSuffix;\n    }\n    if (isListType(type) && isCompositeType(type.ofType)) {\n        return insertSuffix;\n    }\n    if (isNonNullType(type)) {\n        if (isCompositeType(type.ofType)) {\n            return insertSuffix;\n        }\n        if (isListType(type.ofType) && isCompositeType(type.ofType.ofType)) {\n            return insertSuffix;\n        }\n    }\n    return null;\n};\nfunction getSuggestionsForFieldNames(token, typeInfo, options) {\n    var _a;\n    if (typeInfo.parentType) {\n        const parentType = typeInfo.parentType;\n        let fields = [];\n        if ('getFields' in parentType) {\n            fields = objectValues(parentType.getFields());\n        }\n        if (isCompositeType(parentType)) {\n            fields.push(TypeNameMetaFieldDef);\n        }\n        if (parentType === ((_a = options === null || options === void 0 ? void 0 : options.schema) === null || _a === void 0 ? void 0 : _a.getQueryType())) {\n            fields.push(SchemaMetaFieldDef, TypeMetaFieldDef);\n        }\n        return hintList(token, fields.map((field, index) => {\n            var _a;\n            const suggestion = {\n                sortText: String(index) + field.name,\n                label: field.name,\n                detail: String(field.type),\n                documentation: (_a = field.description) !== null && _a !== void 0 ? _a : undefined,\n                deprecated: Boolean(field.deprecationReason),\n                isDeprecated: Boolean(field.deprecationReason),\n                deprecationReason: field.deprecationReason,\n                kind: CompletionItemKind.Field,\n                type: field.type,\n            };\n            const insertText = getInsertText(field);\n            if (insertText) {\n                suggestion.insertText = field.name + insertText;\n                suggestion.insertTextFormat = InsertTextFormat.Snippet;\n                suggestion.command = SuggestionCommand;\n            }\n            return suggestion;\n        }));\n    }\n    return [];\n}\nfunction getSuggestionsForInputValues(token, typeInfo, queryText, schema) {\n    const namedInputType = getNamedType(typeInfo.inputType);\n    const queryVariables = getVariableCompletions(queryText, schema, token).filter(v => v.detail === namedInputType.name);\n    if (namedInputType instanceof GraphQLEnumType) {\n        const values = namedInputType.getValues();\n        return hintList(token, values\n            .map((value) => {\n            var _a;\n            return ({\n                label: value.name,\n                detail: String(namedInputType),\n                documentation: (_a = value.description) !== null && _a !== void 0 ? _a : undefined,\n                deprecated: Boolean(value.deprecationReason),\n                isDeprecated: Boolean(value.deprecationReason),\n                deprecationReason: value.deprecationReason,\n                kind: CompletionItemKind.EnumMember,\n                type: namedInputType,\n            });\n        })\n            .concat(queryVariables));\n    }\n    else if (namedInputType === GraphQLBoolean) {\n        return hintList(token, queryVariables.concat([\n            {\n                label: 'true',\n                detail: String(GraphQLBoolean),\n                documentation: 'Not false.',\n                kind: CompletionItemKind.Variable,\n                type: GraphQLBoolean,\n            },\n            {\n                label: 'false',\n                detail: String(GraphQLBoolean),\n                documentation: 'Not true.',\n                kind: CompletionItemKind.Variable,\n                type: GraphQLBoolean,\n            },\n        ]));\n    }\n    return queryVariables;\n}\nfunction getSuggestionsForImplements(token, tokenState, schema, documentText, typeInfo) {\n    if (tokenState.needsSeperator) {\n        return [];\n    }\n    const typeMap = schema.getTypeMap();\n    const schemaInterfaces = objectValues(typeMap).filter(isInterfaceType);\n    const schemaInterfaceNames = schemaInterfaces.map(({ name }) => name);\n    const inlineInterfaces = new Set();\n    runOnlineParser(documentText, (_, state) => {\n        var _a, _b, _c, _d, _e;\n        if (state.name) {\n            if (state.kind === RuleKinds.INTERFACE_DEF &&\n                !schemaInterfaceNames.includes(state.name)) {\n                inlineInterfaces.add(state.name);\n            }\n            if (state.kind === RuleKinds.NAMED_TYPE &&\n                ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === RuleKinds.IMPLEMENTS) {\n                if (typeInfo.interfaceDef) {\n                    const existingType = (_b = typeInfo.interfaceDef) === null || _b === void 0 ? void 0 : _b.getInterfaces().find(({ name }) => name === state.name);\n                    if (existingType) {\n                        return;\n                    }\n                    const type = schema.getType(state.name);\n                    const interfaceConfig = (_c = typeInfo.interfaceDef) === null || _c === void 0 ? void 0 : _c.toConfig();\n                    typeInfo.interfaceDef = new GraphQLInterfaceType(Object.assign(Object.assign({}, interfaceConfig), { interfaces: [\n                            ...interfaceConfig.interfaces,\n                            type ||\n                                new GraphQLInterfaceType({ name: state.name, fields: {} }),\n                        ] }));\n                }\n                else if (typeInfo.objectTypeDef) {\n                    const existingType = (_d = typeInfo.objectTypeDef) === null || _d === void 0 ? void 0 : _d.getInterfaces().find(({ name }) => name === state.name);\n                    if (existingType) {\n                        return;\n                    }\n                    const type = schema.getType(state.name);\n                    const objectTypeConfig = (_e = typeInfo.objectTypeDef) === null || _e === void 0 ? void 0 : _e.toConfig();\n                    typeInfo.objectTypeDef = new GraphQLObjectType(Object.assign(Object.assign({}, objectTypeConfig), { interfaces: [\n                            ...objectTypeConfig.interfaces,\n                            type ||\n                                new GraphQLInterfaceType({ name: state.name, fields: {} }),\n                        ] }));\n                }\n            }\n        }\n    });\n    const currentTypeToExtend = typeInfo.interfaceDef || typeInfo.objectTypeDef;\n    const siblingInterfaces = (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.getInterfaces()) || [];\n    const siblingInterfaceNames = siblingInterfaces.map(({ name }) => name);\n    const possibleInterfaces = schemaInterfaces\n        .concat([...inlineInterfaces].map(name => ({ name })))\n        .filter(({ name }) => name !== (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.name) &&\n        !siblingInterfaceNames.includes(name));\n    return hintList(token, possibleInterfaces.map(type => {\n        const result = {\n            label: type.name,\n            kind: CompletionItemKind.Interface,\n            type,\n        };\n        if (type === null || type === void 0 ? void 0 : type.description) {\n            result.documentation = type.description;\n        }\n        return result;\n    }));\n}\nfunction getSuggestionsForFragmentTypeConditions(token, typeInfo, schema, _kind) {\n    let possibleTypes;\n    if (typeInfo.parentType) {\n        if (isAbstractType(typeInfo.parentType)) {\n            const abstractType = assertAbstractType(typeInfo.parentType);\n            const possibleObjTypes = schema.getPossibleTypes(abstractType);\n            const possibleIfaceMap = Object.create(null);\n            possibleObjTypes.forEach(type => {\n                type.getInterfaces().forEach(iface => {\n                    possibleIfaceMap[iface.name] = iface;\n                });\n            });\n            possibleTypes = possibleObjTypes.concat(objectValues(possibleIfaceMap));\n        }\n        else {\n            possibleTypes = [typeInfo.parentType];\n        }\n    }\n    else {\n        const typeMap = schema.getTypeMap();\n        possibleTypes = objectValues(typeMap).filter(isCompositeType);\n    }\n    return hintList(token, possibleTypes.map(type => {\n        const namedType = getNamedType(type);\n        return {\n            label: String(type),\n            documentation: (namedType && namedType.description) || '',\n            kind: CompletionItemKind.Field,\n        };\n    }));\n}\nfunction getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, fragmentDefs) {\n    if (!queryText) {\n        return [];\n    }\n    const typeMap = schema.getTypeMap();\n    const defState = getDefinitionState(token.state);\n    const fragments = getFragmentDefinitions(queryText);\n    if (fragmentDefs && fragmentDefs.length > 0) {\n        fragments.push(...fragmentDefs);\n    }\n    const relevantFrags = fragments.filter(frag => typeMap[frag.typeCondition.name.value] &&\n        !(defState &&\n            defState.kind === RuleKinds.FRAGMENT_DEFINITION &&\n            defState.name === frag.name.value) &&\n        isCompositeType(typeInfo.parentType) &&\n        isCompositeType(typeMap[frag.typeCondition.name.value]) &&\n        doTypesOverlap(schema, typeInfo.parentType, typeMap[frag.typeCondition.name.value]));\n    return hintList(token, relevantFrags.map(frag => ({\n        label: frag.name.value,\n        detail: String(typeMap[frag.typeCondition.name.value]),\n        documentation: `fragment ${frag.name.value} on ${frag.typeCondition.name.value}`,\n        kind: CompletionItemKind.Field,\n        type: typeMap[frag.typeCondition.name.value],\n    })));\n}\nconst getParentDefinition = (state, kind) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    if (((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === kind) {\n        return state.prevState;\n    }\n    if (((_c = (_b = state.prevState) === null || _b === void 0 ? void 0 : _b.prevState) === null || _c === void 0 ? void 0 : _c.kind) === kind) {\n        return state.prevState.prevState;\n    }\n    if (((_f = (_e = (_d = state.prevState) === null || _d === void 0 ? void 0 : _d.prevState) === null || _e === void 0 ? void 0 : _e.prevState) === null || _f === void 0 ? void 0 : _f.kind) === kind) {\n        return state.prevState.prevState.prevState;\n    }\n    if (((_k = (_j = (_h = (_g = state.prevState) === null || _g === void 0 ? void 0 : _g.prevState) === null || _h === void 0 ? void 0 : _h.prevState) === null || _j === void 0 ? void 0 : _j.prevState) === null || _k === void 0 ? void 0 : _k.kind) === kind) {\n        return state.prevState.prevState.prevState.prevState;\n    }\n};\nexport function getVariableCompletions(queryText, schema, token) {\n    let variableName = null;\n    let variableType;\n    const definitions = Object.create({});\n    runOnlineParser(queryText, (_, state) => {\n        if ((state === null || state === void 0 ? void 0 : state.kind) === RuleKinds.VARIABLE && state.name) {\n            variableName = state.name;\n        }\n        if ((state === null || state === void 0 ? void 0 : state.kind) === RuleKinds.NAMED_TYPE && variableName) {\n            const parentDefinition = getParentDefinition(state, RuleKinds.TYPE);\n            if (parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type) {\n                variableType = schema.getType(parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type);\n            }\n        }\n        if (variableName && variableType) {\n            if (!definitions[variableName]) {\n                definitions[variableName] = {\n                    detail: variableType.toString(),\n                    insertText: token.string === '$' ? variableName : '$' + variableName,\n                    label: variableName,\n                    type: variableType,\n                    kind: CompletionItemKind.Variable,\n                };\n                variableName = null;\n                variableType = null;\n            }\n        }\n    });\n    return objectValues(definitions);\n}\nexport function getFragmentDefinitions(queryText) {\n    const fragmentDefs = [];\n    runOnlineParser(queryText, (_, state) => {\n        if (state.kind === RuleKinds.FRAGMENT_DEFINITION &&\n            state.name &&\n            state.type) {\n            fragmentDefs.push({\n                kind: RuleKinds.FRAGMENT_DEFINITION,\n                name: {\n                    kind: Kind.NAME,\n                    value: state.name,\n                },\n                selectionSet: {\n                    kind: RuleKinds.SELECTION_SET,\n                    selections: [],\n                },\n                typeCondition: {\n                    kind: RuleKinds.NAMED_TYPE,\n                    name: {\n                        kind: Kind.NAME,\n                        value: state.type,\n                    },\n                },\n            });\n        }\n    });\n    return fragmentDefs;\n}\nfunction getSuggestionsForVariableDefinition(token, schema, _kind) {\n    const inputTypeMap = schema.getTypeMap();\n    const inputTypes = objectValues(inputTypeMap).filter(isInputType);\n    return hintList(token, inputTypes.map((type) => ({\n        label: type.name,\n        documentation: type.description,\n        kind: CompletionItemKind.Variable,\n    })));\n}\nfunction getSuggestionsForDirective(token, state, schema, _kind) {\n    if (state.prevState && state.prevState.kind) {\n        const directives = schema\n            .getDirectives()\n            .filter(directive => canUseDirective(state.prevState, directive));\n        return hintList(token, directives.map(directive => ({\n            label: directive.name,\n            documentation: directive.description || '',\n            kind: CompletionItemKind.Function,\n        })));\n    }\n    return [];\n}\nexport function getTokenAtPosition(queryText, cursor) {\n    let styleAtCursor = null;\n    let stateAtCursor = null;\n    let stringAtCursor = null;\n    const token = runOnlineParser(queryText, (stream, state, style, index) => {\n        if (index === cursor.line) {\n            if (stream.getCurrentPosition() >= cursor.character) {\n                styleAtCursor = style;\n                stateAtCursor = Object.assign({}, state);\n                stringAtCursor = stream.current();\n                return 'BREAK';\n            }\n        }\n    });\n    return {\n        start: token.start,\n        end: token.end,\n        string: stringAtCursor || token.string,\n        state: stateAtCursor || token.state,\n        style: styleAtCursor || token.style,\n    };\n}\nexport function runOnlineParser(queryText, callback) {\n    const lines = queryText.split('\\n');\n    const parser = onlineParser();\n    let state = parser.startState();\n    let style = '';\n    let stream = new CharacterStream('');\n    for (let i = 0; i < lines.length; i++) {\n        stream = new CharacterStream(lines[i]);\n        while (!stream.eol()) {\n            style = parser.token(stream, state);\n            const code = callback(stream, state, style, i);\n            if (code === 'BREAK') {\n                break;\n            }\n        }\n        callback(stream, state, style, i);\n        if (!state.kind) {\n            state = parser.startState();\n        }\n    }\n    return {\n        start: stream.getStartOfToken(),\n        end: stream.getCurrentPosition(),\n        string: stream.current(),\n        state,\n        style,\n    };\n}\nexport function canUseDirective(state, directive) {\n    if (!state || !state.kind) {\n        return false;\n    }\n    const kind = state.kind;\n    const locations = directive.locations;\n    switch (kind) {\n        case RuleKinds.QUERY:\n            return locations.indexOf(DirectiveLocation.QUERY) !== -1;\n        case RuleKinds.MUTATION:\n            return locations.indexOf(DirectiveLocation.MUTATION) !== -1;\n        case RuleKinds.SUBSCRIPTION:\n            return locations.indexOf(DirectiveLocation.SUBSCRIPTION) !== -1;\n        case RuleKinds.FIELD:\n        case RuleKinds.ALIASED_FIELD:\n            return locations.indexOf(DirectiveLocation.FIELD) !== -1;\n        case RuleKinds.FRAGMENT_DEFINITION:\n            return locations.indexOf(DirectiveLocation.FRAGMENT_DEFINITION) !== -1;\n        case RuleKinds.FRAGMENT_SPREAD:\n            return locations.indexOf(DirectiveLocation.FRAGMENT_SPREAD) !== -1;\n        case RuleKinds.INLINE_FRAGMENT:\n            return locations.indexOf(DirectiveLocation.INLINE_FRAGMENT) !== -1;\n        case RuleKinds.SCHEMA_DEF:\n            return locations.indexOf(DirectiveLocation.SCHEMA) !== -1;\n        case RuleKinds.SCALAR_DEF:\n            return locations.indexOf(DirectiveLocation.SCALAR) !== -1;\n        case RuleKinds.OBJECT_TYPE_DEF:\n            return locations.indexOf(DirectiveLocation.OBJECT) !== -1;\n        case RuleKinds.FIELD_DEF:\n            return locations.indexOf(DirectiveLocation.FIELD_DEFINITION) !== -1;\n        case RuleKinds.INTERFACE_DEF:\n            return locations.indexOf(DirectiveLocation.INTERFACE) !== -1;\n        case RuleKinds.UNION_DEF:\n            return locations.indexOf(DirectiveLocation.UNION) !== -1;\n        case RuleKinds.ENUM_DEF:\n            return locations.indexOf(DirectiveLocation.ENUM) !== -1;\n        case RuleKinds.ENUM_VALUE:\n            return locations.indexOf(DirectiveLocation.ENUM_VALUE) !== -1;\n        case RuleKinds.INPUT_DEF:\n            return locations.indexOf(DirectiveLocation.INPUT_OBJECT) !== -1;\n        case RuleKinds.INPUT_VALUE_DEF:\n            const prevStateKind = state.prevState && state.prevState.kind;\n            switch (prevStateKind) {\n                case RuleKinds.ARGUMENTS_DEF:\n                    return (locations.indexOf(DirectiveLocation.ARGUMENT_DEFINITION) !== -1);\n                case RuleKinds.INPUT_DEF:\n                    return (locations.indexOf(DirectiveLocation.INPUT_FIELD_DEFINITION) !== -1);\n            }\n    }\n    return false;\n}\nexport function getTypeInfo(schema, tokenState) {\n    let argDef;\n    let argDefs;\n    let directiveDef;\n    let enumValue;\n    let fieldDef;\n    let inputType;\n    let objectTypeDef;\n    let objectFieldDefs;\n    let parentType;\n    let type;\n    let interfaceDef;\n    forEachState(tokenState, state => {\n        switch (state.kind) {\n            case RuleKinds.QUERY:\n            case 'ShortQuery':\n                type = schema.getQueryType();\n                break;\n            case RuleKinds.MUTATION:\n                type = schema.getMutationType();\n                break;\n            case RuleKinds.SUBSCRIPTION:\n                type = schema.getSubscriptionType();\n                break;\n            case RuleKinds.INLINE_FRAGMENT:\n            case RuleKinds.FRAGMENT_DEFINITION:\n                if (state.type) {\n                    type = schema.getType(state.type);\n                }\n                break;\n            case RuleKinds.FIELD:\n            case RuleKinds.ALIASED_FIELD: {\n                if (!type || !state.name) {\n                    fieldDef = null;\n                }\n                else {\n                    fieldDef = parentType\n                        ? getFieldDef(schema, parentType, state.name)\n                        : null;\n                    type = fieldDef ? fieldDef.type : null;\n                }\n                break;\n            }\n            case RuleKinds.SELECTION_SET:\n                parentType = getNamedType(type);\n                break;\n            case RuleKinds.DIRECTIVE:\n                directiveDef = state.name ? schema.getDirective(state.name) : null;\n                break;\n            case RuleKinds.INTERFACE_DEF:\n                if (state.name) {\n                    objectTypeDef = null;\n                    interfaceDef = new GraphQLInterfaceType({\n                        name: state.name,\n                        interfaces: [],\n                        fields: {},\n                    });\n                }\n                break;\n            case RuleKinds.OBJECT_TYPE_DEF:\n                if (state.name) {\n                    interfaceDef = null;\n                    objectTypeDef = new GraphQLObjectType({\n                        name: state.name,\n                        interfaces: [],\n                        fields: {},\n                    });\n                }\n                break;\n            case RuleKinds.ARGUMENTS: {\n                if (!state.prevState) {\n                    argDefs = null;\n                }\n                else {\n                    switch (state.prevState.kind) {\n                        case RuleKinds.FIELD:\n                            argDefs = fieldDef && fieldDef.args;\n                            break;\n                        case RuleKinds.DIRECTIVE:\n                            argDefs =\n                                directiveDef && directiveDef.args;\n                            break;\n                        case RuleKinds.ALIASED_FIELD: {\n                            const name = state.prevState && state.prevState.name;\n                            if (!name) {\n                                argDefs = null;\n                                break;\n                            }\n                            const field = parentType\n                                ? getFieldDef(schema, parentType, name)\n                                : null;\n                            if (!field) {\n                                argDefs = null;\n                                break;\n                            }\n                            argDefs = field.args;\n                            break;\n                        }\n                        default:\n                            argDefs = null;\n                            break;\n                    }\n                }\n                break;\n            }\n            case RuleKinds.ARGUMENT:\n                if (argDefs) {\n                    for (let i = 0; i < argDefs.length; i++) {\n                        if (argDefs[i].name === state.name) {\n                            argDef = argDefs[i];\n                            break;\n                        }\n                    }\n                }\n                inputType = argDef && argDef.type;\n                break;\n            case RuleKinds.ENUM_VALUE:\n                const enumType = getNamedType(inputType);\n                enumValue =\n                    enumType instanceof GraphQLEnumType\n                        ? enumType\n                            .getValues()\n                            .find((val) => val.value === state.name)\n                        : null;\n                break;\n            case RuleKinds.LIST_VALUE:\n                const nullableType = getNullableType(inputType);\n                inputType =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            case RuleKinds.OBJECT_VALUE:\n                const objectType = getNamedType(inputType);\n                objectFieldDefs =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            case RuleKinds.OBJECT_FIELD:\n                const objectField = state.name && objectFieldDefs ? objectFieldDefs[state.name] : null;\n                inputType = objectField && objectField.type;\n                break;\n            case RuleKinds.NAMED_TYPE:\n                if (state.name) {\n                    type = schema.getType(state.name);\n                }\n                break;\n        }\n    });\n    return {\n        argDef,\n        argDefs,\n        directiveDef,\n        enumValue,\n        fieldDef,\n        inputType,\n        objectFieldDefs,\n        parentType,\n        type,\n        interfaceDef,\n        objectTypeDef,\n    };\n}\n//# sourceMappingURL=getAutocompleteSuggestions.js.map","'use strict';\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n  var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);\n  error.framesToPop = 1; // Skip nullthrows's own stack frame.\n  throw error;\n}\n\nmodule.exports = nullthrows;\nmodule.exports.default = nullthrows;\n\nObject.defineProperty(module.exports, '__esModule', {value: true});\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { locToRange, offsetToPosition, } from 'graphql-language-service-utils';\nexport const LANGUAGE = 'GraphQL';\nfunction assert(value, message) {\n    if (!value) {\n        throw new Error(message);\n    }\n}\nfunction getRange(text, node) {\n    const location = node.loc;\n    assert(location, 'Expected ASTNode to have a location.');\n    return locToRange(text, location);\n}\nfunction getPosition(text, node) {\n    const location = node.loc;\n    assert(location, 'Expected ASTNode to have a location.');\n    return offsetToPosition(text, location.start);\n}\nexport function getDefinitionQueryResultForNamedType(text, node, dependencies) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = node.name.value;\n        const defNodes = dependencies.filter(({ definition }) => definition.name && definition.name.value === name);\n        if (defNodes.length === 0) {\n            throw Error(`Definition not found for GraphQL type ${name}`);\n        }\n        const definitions = defNodes.map(({ filePath, content, definition }) => getDefinitionForNodeDefinition(filePath || '', content, definition));\n        return {\n            definitions,\n            queryRange: definitions.map(_ => getRange(text, node)),\n        };\n    });\n}\nexport function getDefinitionQueryResultForFragmentSpread(text, fragment, dependencies) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = fragment.name.value;\n        const defNodes = dependencies.filter(({ definition }) => definition.name.value === name);\n        if (defNodes.length === 0) {\n            throw Error(`Definition not found for GraphQL fragment ${name}`);\n        }\n        const definitions = defNodes.map(({ filePath, content, definition }) => getDefinitionForFragmentDefinition(filePath || '', content, definition));\n        return {\n            definitions,\n            queryRange: definitions.map(_ => getRange(text, fragment)),\n        };\n    });\n}\nexport function getDefinitionQueryResultForDefinitionNode(path, text, definition) {\n    return {\n        definitions: [getDefinitionForFragmentDefinition(path, text, definition)],\n        queryRange: definition.name ? [getRange(text, definition.name)] : [],\n    };\n}\nfunction getDefinitionForFragmentDefinition(path, text, definition) {\n    const name = definition.name;\n    if (!name) {\n        throw Error('Expected ASTNode to have a Name.');\n    }\n    return {\n        path,\n        position: getPosition(text, definition),\n        range: getRange(text, definition),\n        name: name.value || '',\n        language: LANGUAGE,\n        projectRoot: path,\n    };\n}\nfunction getDefinitionForNodeDefinition(path, text, definition) {\n    const name = definition.name;\n    assert(name, 'Expected ASTNode to have a Name.');\n    return {\n        path,\n        position: getPosition(text, definition),\n        range: getRange(text, definition),\n        name: name.value || '',\n        language: LANGUAGE,\n        projectRoot: path,\n    };\n}\n//# sourceMappingURL=getDefinition.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { SymbolKind, } from 'vscode-languageserver-types';\nimport { Kind, parse, print } from 'graphql';\nimport { getAutocompleteSuggestions } from './getAutocompleteSuggestions';\nimport { getHoverInformation } from './getHoverInformation';\nimport { validateQuery, getRange, DIAGNOSTIC_SEVERITY } from './getDiagnostics';\nimport { getDefinitionQueryResultForFragmentSpread, getDefinitionQueryResultForDefinitionNode, getDefinitionQueryResultForNamedType, } from './getDefinition';\nimport { getOutline } from './getOutline';\nimport { getASTNodeAtPosition } from 'graphql-language-service-utils';\nconst { FRAGMENT_DEFINITION, OBJECT_TYPE_DEFINITION, INTERFACE_TYPE_DEFINITION, ENUM_TYPE_DEFINITION, UNION_TYPE_DEFINITION, SCALAR_TYPE_DEFINITION, INPUT_OBJECT_TYPE_DEFINITION, SCALAR_TYPE_EXTENSION, OBJECT_TYPE_EXTENSION, INTERFACE_TYPE_EXTENSION, UNION_TYPE_EXTENSION, ENUM_TYPE_EXTENSION, INPUT_OBJECT_TYPE_EXTENSION, DIRECTIVE_DEFINITION, FRAGMENT_SPREAD, OPERATION_DEFINITION, NAMED_TYPE, } = Kind;\nconst KIND_TO_SYMBOL_KIND = {\n    [Kind.FIELD]: SymbolKind.Field,\n    [Kind.OPERATION_DEFINITION]: SymbolKind.Class,\n    [Kind.FRAGMENT_DEFINITION]: SymbolKind.Class,\n    [Kind.FRAGMENT_SPREAD]: SymbolKind.Struct,\n    [Kind.OBJECT_TYPE_DEFINITION]: SymbolKind.Class,\n    [Kind.ENUM_TYPE_DEFINITION]: SymbolKind.Enum,\n    [Kind.ENUM_VALUE_DEFINITION]: SymbolKind.EnumMember,\n    [Kind.INPUT_OBJECT_TYPE_DEFINITION]: SymbolKind.Class,\n    [Kind.INPUT_VALUE_DEFINITION]: SymbolKind.Field,\n    [Kind.FIELD_DEFINITION]: SymbolKind.Field,\n    [Kind.INTERFACE_TYPE_DEFINITION]: SymbolKind.Interface,\n    [Kind.DOCUMENT]: SymbolKind.File,\n    FieldWithArguments: SymbolKind.Method,\n};\nfunction getKind(tree) {\n    if (tree.kind === 'FieldDefinition' &&\n        tree.children &&\n        tree.children.length > 0) {\n        return KIND_TO_SYMBOL_KIND.FieldWithArguments;\n    }\n    return KIND_TO_SYMBOL_KIND[tree.kind];\n}\nexport class GraphQLLanguageService {\n    constructor(cache) {\n        this._graphQLCache = cache;\n        this._graphQLConfig = cache.getGraphQLConfig();\n    }\n    getConfigForURI(uri) {\n        const config = this._graphQLCache.getProjectForFile(uri);\n        if (config) {\n            return config;\n        }\n        throw Error(`No config found for uri: ${uri}`);\n    }\n    getDiagnostics(query, uri, isRelayCompatMode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let queryHasExtensions = false;\n            const projectConfig = this.getConfigForURI(uri);\n            if (!projectConfig) {\n                return [];\n            }\n            const { schema: schemaPath, name: projectName, extensions } = projectConfig;\n            try {\n                const queryAST = parse(query);\n                if (!schemaPath || uri !== schemaPath) {\n                    queryHasExtensions = queryAST.definitions.some(definition => {\n                        switch (definition.kind) {\n                            case OBJECT_TYPE_DEFINITION:\n                            case INTERFACE_TYPE_DEFINITION:\n                            case ENUM_TYPE_DEFINITION:\n                            case UNION_TYPE_DEFINITION:\n                            case SCALAR_TYPE_DEFINITION:\n                            case INPUT_OBJECT_TYPE_DEFINITION:\n                            case SCALAR_TYPE_EXTENSION:\n                            case OBJECT_TYPE_EXTENSION:\n                            case INTERFACE_TYPE_EXTENSION:\n                            case UNION_TYPE_EXTENSION:\n                            case ENUM_TYPE_EXTENSION:\n                            case INPUT_OBJECT_TYPE_EXTENSION:\n                            case DIRECTIVE_DEFINITION:\n                                return true;\n                        }\n                        return false;\n                    });\n                }\n            }\n            catch (error) {\n                const range = getRange(error.locations[0], query);\n                return [\n                    {\n                        severity: DIAGNOSTIC_SEVERITY.Error,\n                        message: error.message,\n                        source: 'GraphQL: Syntax',\n                        range,\n                    },\n                ];\n            }\n            let source = query;\n            const fragmentDefinitions = yield this._graphQLCache.getFragmentDefinitions(projectConfig);\n            const fragmentDependencies = yield this._graphQLCache.getFragmentDependencies(query, fragmentDefinitions);\n            const dependenciesSource = fragmentDependencies.reduce((prev, cur) => `${prev} ${print(cur.definition)}`, '');\n            source = `${source} ${dependenciesSource}`;\n            let validationAst = null;\n            try {\n                validationAst = parse(source);\n            }\n            catch (error) {\n                return [];\n            }\n            let customRules = null;\n            if ((extensions === null || extensions === void 0 ? void 0 : extensions.customValidationRules) &&\n                typeof extensions.customValidationRules === 'function') {\n                customRules = extensions.customValidationRules(this._graphQLConfig);\n            }\n            const schema = yield this._graphQLCache.getSchema(projectName, queryHasExtensions);\n            if (!schema) {\n                return [];\n            }\n            return validateQuery(validationAst, schema, customRules, isRelayCompatMode);\n        });\n    }\n    getAutocompleteSuggestions(query, position, filePath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const projectConfig = this.getConfigForURI(filePath);\n            const schema = yield this._graphQLCache.getSchema(projectConfig.name);\n            const fragmentDefinitions = yield this._graphQLCache.getFragmentDefinitions(projectConfig);\n            const fragmentInfo = Array.from(fragmentDefinitions).map(([, info]) => info.definition);\n            if (schema) {\n                return getAutocompleteSuggestions(schema, query, position, undefined, fragmentInfo);\n            }\n            return [];\n        });\n    }\n    getHoverInformation(query, position, filePath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const projectConfig = this.getConfigForURI(filePath);\n            const schema = yield this._graphQLCache.getSchema(projectConfig.name);\n            if (schema) {\n                return getHoverInformation(schema, query, position, undefined, options);\n            }\n            return '';\n        });\n    }\n    getDefinition(query, position, filePath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const projectConfig = this.getConfigForURI(filePath);\n            let ast;\n            try {\n                ast = parse(query);\n            }\n            catch (error) {\n                return null;\n            }\n            const node = getASTNodeAtPosition(query, ast, position);\n            if (node) {\n                switch (node.kind) {\n                    case FRAGMENT_SPREAD:\n                        return this._getDefinitionForFragmentSpread(query, ast, node, filePath, projectConfig);\n                    case FRAGMENT_DEFINITION:\n                    case OPERATION_DEFINITION:\n                        return getDefinitionQueryResultForDefinitionNode(filePath, query, node);\n                    case NAMED_TYPE:\n                        return this._getDefinitionForNamedType(query, ast, node, filePath, projectConfig);\n                }\n            }\n            return null;\n        });\n    }\n    getDocumentSymbols(document, filePath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const outline = yield this.getOutline(document);\n            if (!outline) {\n                return [];\n            }\n            const output = [];\n            const input = outline.outlineTrees.map((tree) => [null, tree]);\n            while (input.length > 0) {\n                const res = input.pop();\n                if (!res) {\n                    return [];\n                }\n                const [parent, tree] = res;\n                if (!tree) {\n                    return [];\n                }\n                output.push({\n                    name: tree.representativeName,\n                    kind: getKind(tree),\n                    location: {\n                        uri: filePath,\n                        range: {\n                            start: tree.startPosition,\n                            end: tree.endPosition,\n                        },\n                    },\n                    containerName: parent ? parent.representativeName : undefined,\n                });\n                input.push(...tree.children.map(child => [tree, child]));\n            }\n            return output;\n        });\n    }\n    _getDefinitionForNamedType(query, ast, node, filePath, projectConfig) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const objectTypeDefinitions = yield this._graphQLCache.getObjectTypeDefinitions(projectConfig);\n            const dependencies = yield this._graphQLCache.getObjectTypeDependenciesForAST(ast, objectTypeDefinitions);\n            const localObjectTypeDefinitions = ast.definitions.filter(definition => definition.kind === OBJECT_TYPE_DEFINITION ||\n                definition.kind === INPUT_OBJECT_TYPE_DEFINITION ||\n                definition.kind === ENUM_TYPE_DEFINITION ||\n                definition.kind === SCALAR_TYPE_DEFINITION ||\n                definition.kind === INTERFACE_TYPE_DEFINITION);\n            const typeCastedDefs = localObjectTypeDefinitions;\n            const localOperationDefinationInfos = typeCastedDefs.map((definition) => ({\n                filePath,\n                content: query,\n                definition,\n            }));\n            const result = yield getDefinitionQueryResultForNamedType(query, node, dependencies.concat(localOperationDefinationInfos));\n            return result;\n        });\n    }\n    _getDefinitionForFragmentSpread(query, ast, node, filePath, projectConfig) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fragmentDefinitions = yield this._graphQLCache.getFragmentDefinitions(projectConfig);\n            const dependencies = yield this._graphQLCache.getFragmentDependenciesForAST(ast, fragmentDefinitions);\n            const localFragDefinitions = ast.definitions.filter(definition => definition.kind === FRAGMENT_DEFINITION);\n            const typeCastedDefs = localFragDefinitions;\n            const localFragInfos = typeCastedDefs.map((definition) => ({\n                filePath,\n                content: query,\n                definition,\n            }));\n            const result = yield getDefinitionQueryResultForFragmentSpread(query, node, dependencies.concat(localFragInfos));\n            return result;\n        });\n    }\n    getOutline(documentText) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return getOutline(documentText);\n        });\n    }\n}\n//# sourceMappingURL=GraphQLLanguageService.js.map","import { Ref } from \"vue\"\nimport { GraphQLSchema } from \"graphql\"\nimport { getAutocompleteSuggestions } from \"graphql-language-service-interface\"\nimport { Completer, CompleterResult, CompletionEntry } from \".\"\n\nconst completer: (schemaRef: Ref<GraphQLSchema | null>) => Completer =\n  (schemaRef: Ref<GraphQLSchema | null>) => (text, completePos) => {\n    if (!schemaRef.value) return Promise.resolve(null)\n\n    const completions = getAutocompleteSuggestions(schemaRef.value, text, {\n      line: completePos.line,\n      character: completePos.ch,\n    } as any)\n\n    return Promise.resolve(<CompleterResult>{\n      completions: completions.map(\n        (x, i) =>\n          <CompletionEntry>{\n            text: x.label!,\n            meta: x.detail!,\n            score: completions.length - i,\n          }\n      ),\n    })\n  }\n\nexport default completer\n","import { EditorState, Range } from \"@codemirror/state\"\nimport { Decoration, ViewPlugin } from \"@codemirror/view\"\nimport { syntaxTree } from \"@codemirror/language\"\n\nfunction getOperationDefsPosInEditor(state: EditorState) {\n  const tree = syntaxTree(state)\n\n  const defs: Array<{ from: number; to: number }> = []\n\n  tree.iterate({\n    enter({ name, from, to }) {\n      if (name === \"OperationDefinition\") {\n        defs.push({ from, to })\n      }\n    },\n  })\n\n  return defs\n}\n\nfunction generateSelectedOpDecors(state: EditorState) {\n  const selectedPos = state.selection.main.head // Cursor Pos\n\n  const defsPositions = getOperationDefsPosInEditor(state)\n\n  if (defsPositions.length === 1) return Decoration.none\n\n  const decors = defsPositions\n    .map(({ from, to }) => ({\n      selected: selectedPos >= from && selectedPos <= to,\n      from,\n      to,\n    }))\n    .map((info) => ({\n      ...info,\n      decor: Decoration.mark({\n        class: info.selected\n          ? \"gql-operation-highlight\"\n          : \"gql-operation-not-highlight\",\n        inclusive: true,\n      }),\n    }))\n    .map(({ from, to, decor }) => <Range<Decoration>>{ from, to, value: decor }) // Convert to Range<Decoration> (Range from \"@codemirror/view\")\n\n  return Decoration.set(decors)\n}\n\nexport const selectedGQLOpHighlight = ViewPlugin.define(\n  (view) => ({\n    decorations: generateSelectedOpDecors(view.state),\n    update(u) {\n      this.decorations = generateSelectedOpDecors(u.state)\n    },\n  }),\n  {\n    decorations: (v) => v.decorations,\n  }\n)\n","<template>\n  <div\n    class=\"sticky top-sidebarPrimaryStickyFold z-10 flex items-center justify-between border-y border-dividerLight bg-primary pl-4\"\n  >\n    <label class=\"font-semibold text-secondaryLight\">\n      {{ t(\"request.query\") }}\n    </label>\n    <div class=\"flex\">\n      <HoppButtonSecondary\n        v-if=\"subscriptionState === 'SUBSCRIBED'\"\n        v-tippy=\"{\n          theme: 'tooltip',\n          delay: [500, 20],\n          allowHTML: true,\n        }\"\n        :title=\"`${t('request.stop')}`\"\n        :label=\"`${t('request.stop')}`\"\n        :icon=\"IconStop\"\n        class=\"!hover:text-accentDark rounded-none !text-accent\"\n        @click=\"unsubscribe()\"\n      />\n\n      <HoppButtonSecondary\n        v-if=\"selectedOperation && subscriptionState !== 'SUBSCRIBED'\"\n        v-tippy=\"{\n          theme: 'tooltip',\n          delay: [500, 20],\n          allowHTML: true,\n        }\"\n        :title=\"`${t('request.run')} <kbd>${getSpecialKey()}</kbd><kbd>G</kbd>`\"\n        :label=\"`${selectedOperation.name?.value ?? t('request.run')}`\"\n        :icon=\"IconPlay\"\n        :disabled=\"!selectedOperation\"\n        class=\"!hover:text-accentDark rounded-none !text-accent\"\n        @click=\"runQuery(selectedOperation)\"\n      />\n\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip', delay: [500, 20], allowHTML: true }\"\n        :title=\"`${t(\n          'request.save'\n        )} <kbd>${getSpecialKey()}</kbd><kbd>S</kbd>`\"\n        :label=\"`${t('request.save')}`\"\n        :icon=\"IconSave\"\n        class=\"rounded-none\"\n        @click=\"saveRequest\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        to=\"https://docs.hoppscotch.io/documentation/features/graphql-api-testing\"\n        blank\n        :title=\"t('app.wiki')\"\n        :icon=\"IconHelpCircle\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.clear_all')\"\n        :icon=\"IconTrash2\"\n        @click=\"clearGQLQuery()\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('state.linewrap')\"\n        :class=\"{ '!text-accent': WRAP_LINES }\"\n        :icon=\"IconWrapText\"\n        @click.prevent=\"toggleNestedSetting('WRAP_LINES', 'graphqlQuery')\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.prettify')\"\n        :icon=\"prettifyQueryIcon\"\n        @click=\"prettifyQuery\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.copy')\"\n        :icon=\"copyQueryIcon\"\n        @click=\"copyQuery\"\n      />\n    </div>\n  </div>\n  <div ref=\"queryEditor\" class=\"flex flex-1 flex-col\"></div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconPlay from \"~icons/lucide/play\"\nimport IconStop from \"~icons/lucide/stop-circle\"\nimport IconSave from \"~icons/lucide/save\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconCheck from \"~icons/lucide/check\"\nimport IconInfo from \"~icons/lucide/info\"\nimport IconWand from \"~icons/lucide/wand\"\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport { onMounted, reactive, ref, markRaw } from \"vue\"\nimport { copyToClipboard } from \"@helpers/utils/clipboard\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport { useI18n } from \"@composables/i18n\"\nimport { refAutoReset, useVModel } from \"@vueuse/core\"\nimport { useToast } from \"~/composables/toast\"\nimport { getPlatformSpecialKey as getSpecialKey } from \"~/helpers/platformutils\"\nimport * as gql from \"graphql\"\nimport { createGQLQueryLinter } from \"~/helpers/editor/linting/gqlQuery\"\nimport queryCompleter from \"~/helpers/editor/completion/gqlQuery\"\nimport { selectedGQLOpHighlight } from \"~/helpers/editor/gql/operation\"\nimport { debounce } from \"lodash-es\"\nimport { ViewUpdate } from \"@codemirror/view\"\nimport { defineActionHandler } from \"~/helpers/actions\"\nimport {\n  schema,\n  socketDisconnect,\n  subscriptionState,\n} from \"~/helpers/graphql/connection\"\nimport { useNestedSetting } from \"~/composables/settings\"\nimport { toggleNestedSetting } from \"~/newstore/settings\"\n\n// Template refs\nconst queryEditor = ref<any | null>(null)\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  modelValue: string\n}>()\n\nconst emit = defineEmits<{\n  (e: \"save-request\"): void\n  (e: \"update:modelValue\", val: string): void\n  (e: \"run-query\", definition: gql.OperationDefinitionNode | null): void\n}>()\n\nconst copyQueryIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\nconst prettifyQueryIcon = refAutoReset<\n  typeof IconWand | typeof IconCheck | typeof IconInfo\n>(IconWand, 1000)\n\nconst WRAP_LINES = useNestedSetting(\"WRAP_LINES\", \"graphqlQuery\")\n\nconst selectedOperation = ref<gql.OperationDefinitionNode | null>(null)\n\nconst gqlQueryString = useVModel(props, \"modelValue\", emit)\n\nconst debouncedOnUpdateQueryState = debounce((update: ViewUpdate) => {\n  const selectedPos = update.state.selection.main.head\n  const queryString = update.state.doc.toJSON().join(update.state.lineBreak)\n\n  try {\n    const operations = gql.parse(queryString)\n    if (operations.definitions.length === 1) {\n      selectedOperation.value = operations\n        .definitions[0] as gql.OperationDefinitionNode\n      return\n    }\n\n    selectedOperation.value =\n      (operations.definitions.find((def) => {\n        if (def.kind !== \"OperationDefinition\") return false\n        const { start, end } = def.loc!\n        return selectedPos >= start && selectedPos <= end\n      }) as gql.OperationDefinitionNode) ?? null\n  } catch (error) {\n    // console.error(error)\n  }\n}, 300)\n\nonMounted(() => {\n  try {\n    const operations = gql.parse(gqlQueryString.value)\n    if (operations.definitions.length) {\n      selectedOperation.value = operations\n        .definitions[0] as gql.OperationDefinitionNode\n      return\n    }\n  } catch (error) {}\n})\n\nuseCodemirror(\n  queryEditor,\n  gqlQueryString,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"graphql\",\n      placeholder: `${t(\"request.query\")}`,\n      lineWrapping: WRAP_LINES,\n    },\n    linter: createGQLQueryLinter(schema),\n    completer: queryCompleter(schema),\n    environmentHighlights: false,\n    additionalExts: [markRaw(selectedGQLOpHighlight)],\n    onUpdate: debouncedOnUpdateQueryState,\n  })\n)\n\n// operations on graphql query string\n// const operations = useReadonlyStream(props.request.operations$, [])\n\nconst prettifyQuery = () => {\n  try {\n    gqlQueryString.value = gql.print(\n      gql.parse(gqlQueryString.value, {\n        allowLegacyFragmentVariables: true,\n      })\n    )\n    prettifyQueryIcon.value = IconCheck\n  } catch (e) {\n    toast.error(`${t(\"error.gql_prettify_invalid_query\")}`)\n    prettifyQueryIcon.value = IconInfo\n  }\n}\n\nconst copyQuery = () => {\n  copyToClipboard(gqlQueryString.value)\n  copyQueryIcon.value = IconCheck\n  toast.success(`${t(\"state.copied_to_clipboard\")}`)\n}\n\nconst clearGQLQuery = () => {\n  gqlQueryString.value = \"\"\n}\n\nconst runQuery = (definition: gql.OperationDefinitionNode | null = null) => {\n  emit(\"run-query\", definition)\n}\nconst unsubscribe = () => {\n  socketDisconnect()\n}\nconst saveRequest = () => {\n  emit(\"save-request\")\n}\n\ndefineActionHandler(\"editor.format\", prettifyQuery)\n</script>\n","<template>\n  <div class=\"h-full\">\n    <HoppSmartTabs\n      v-model=\"selectedOptionTab\"\n      styles=\"sticky top-0 bg-primary z-10 border-b-0\"\n      :render-inactive-tabs=\"true\"\n    >\n      <HoppSmartTab\n        :id=\"'query'\"\n        :label=\"`${t('tab.query')}`\"\n        :indicator=\"request.query && request.query.length > 0 ? true : false\"\n      >\n        <GraphqlQuery\n          v-model=\"request.query\"\n          @run-query=\"runQuery\"\n          @save-request=\"saveRequest\"\n        />\n      </HoppSmartTab>\n      <HoppSmartTab\n        :id=\"'variables'\"\n        :label=\"`${t('tab.variables')}`\"\n        :indicator=\"\n          request.variables && request.variables.length > 0 ? true : false\n        \"\n      >\n        <GraphqlVariable\n          v-model=\"request.variables\"\n          @run-query=\"runQuery\"\n          @save-request=\"saveRequest\"\n        />\n      </HoppSmartTab>\n      <HoppSmartTab\n        :id=\"'headers'\"\n        :label=\"`${t('tab.headers')}`\"\n        :info=\"activeGQLHeadersCount === 0 ? null : `${activeGQLHeadersCount}`\"\n      >\n        <GraphqlHeaders\n          v-model=\"request\"\n          :inherited-properties=\"inheritedProperties\"\n        />\n      </HoppSmartTab>\n      <HoppSmartTab :id=\"'authorization'\" :label=\"`${t('tab.authorization')}`\">\n        <GraphqlAuthorization\n          v-model=\"request.auth\"\n          :inherited-properties=\"inheritedProperties\"\n        />\n      </HoppSmartTab>\n    </HoppSmartTabs>\n    <CollectionsSaveRequest\n      mode=\"graphql\"\n      :show=\"showSaveRequestModal\"\n      @hide-modal=\"hideRequestModal\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { completePageProgress, startPageProgress } from \"~/modules/loadingbar\"\nimport * as gql from \"graphql\"\nimport { clone } from \"lodash-es\"\nimport { computed, ref, watch } from \"vue\"\nimport { defineActionHandler } from \"~/helpers/actions\"\nimport { HoppGQLRequest } from \"@hoppscotch/data\"\nimport { platform } from \"~/platform\"\nimport { computedWithControl, useVModel } from \"@vueuse/core\"\nimport {\n  GQLResponseEvent,\n  runGQLOperation,\n  gqlMessageEvent,\n  connection,\n} from \"~/helpers/graphql/connection\"\nimport { useService } from \"dioc/vue\"\nimport { InterceptorService } from \"~/services/interceptor.service\"\nimport { editGraphqlRequest } from \"~/newstore/collections\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\nimport { HoppInheritedProperty } from \"~/helpers/types/HoppInheritedProperties\"\n\nconst VALID_GQL_OPERATIONS = [\n  \"query\",\n  \"headers\",\n  \"variables\",\n  \"authorization\",\n] as const\n\nexport type GQLOptionTabs = (typeof VALID_GQL_OPERATIONS)[number]\n\nconst interceptorService = useService(InterceptorService)\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst tabs = useService(GQLTabService)\n\n// v-model integration with props and emit\nconst props = withDefaults(\n  defineProps<{\n    modelValue: HoppGQLRequest\n    response?: GQLResponseEvent[] | null\n    optionTab?: GQLOptionTabs\n    tabId: string\n    inheritedProperties?: HoppInheritedProperty\n  }>(),\n  {\n    response: null,\n    optionTab: \"query\",\n  }\n)\nconst emit = defineEmits<{\n  (e: \"update:modelValue\", value: HoppGQLRequest): void\n  (e: \"update:optionTab\", value: GQLOptionTabs): void\n  (e: \"update:response\", value: GQLResponseEvent[]): void\n}>()\n\nconst selectedOptionTab = useVModel(props, \"optionTab\", emit)\n\nconst request = useVModel(props, \"modelValue\", emit)\n\nconst url = computedWithControl(\n  () => tabs.currentActiveTab.value,\n  () => tabs.currentActiveTab.value.document.request.url\n)\n\nconst activeGQLHeadersCount = computed(\n  () =>\n    request.value.headers.filter(\n      (x) => x.active && (x.key !== \"\" || x.value !== \"\")\n    ).length\n)\nconst showSaveRequestModal = ref(false)\nconst runQuery = async (\n  definition: gql.OperationDefinitionNode | null = null\n) => {\n  const startTime = Date.now()\n  startPageProgress()\n  try {\n    const runURL = clone(url.value)\n    const runQuery = clone(request.value.query)\n    const runVariables = clone(request.value.variables)\n    const runAuth =\n      request.value.auth.authType === \"inherit\" && request.value.auth.authActive\n        ? clone(\n            tabs.currentActiveTab.value.document.inheritedProperties?.auth\n              .inheritedAuth\n          )\n        : clone(request.value.auth)\n\n    const inheritedHeaders =\n      tabs.currentActiveTab.value.document.inheritedProperties?.headers.map(\n        (header) => {\n          if (header.inheritedHeader) {\n            return header.inheritedHeader\n          }\n          return []\n        }\n      )\n\n    let runHeaders: HoppGQLRequest[\"headers\"] = []\n\n    if (inheritedHeaders) {\n      runHeaders = [...inheritedHeaders, ...clone(request.value.headers)]\n    } else {\n      runHeaders = clone(request.value.headers)\n    }\n\n    await runGQLOperation({\n      name: request.value.name,\n      url: runURL,\n      headers: runHeaders,\n      query: runQuery,\n      variables: runVariables,\n      auth: runAuth ?? { authType: \"none\", authActive: false },\n      operationName: definition?.name?.value,\n      operationType: definition?.operation ?? \"query\",\n    })\n    const duration = Date.now() - startTime\n    completePageProgress()\n    toast.success(`${t(\"state.finished_in\", { duration })}`)\n    if (definition?.operation === \"subscription\" && request.value.auth) {\n      toast.success(t(\"authorization.graphql_headers\"))\n    }\n  } catch (e: any) {\n    completePageProgress()\n    console.error(e)\n  }\n  platform.analytics?.logEvent({\n    type: \"HOPP_REQUEST_RUN\",\n    platform: \"graphql-query\",\n    strategy: interceptorService.currentInterceptorID.value!,\n  })\n}\n\nwatch(\n  () => gqlMessageEvent.value,\n  (event) => {\n    if (event === \"reset\") {\n      emit(\"update:response\", [])\n      return\n    }\n\n    try {\n      if (\n        event?.type === \"response\" &&\n        event?.operationType !== \"subscription\"\n      ) {\n        // response.value = [event]\n        emit(\"update:response\", [event])\n      } else {\n        emit(\"update:response\", [...(props.response ?? []), event])\n\n        // TODO: subscription indicator??\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  },\n  { deep: true }\n)\n\nwatch(\n  () => connection,\n  (newVal) => {\n    if (newVal.error && newVal.state === \"DISCONNECTED\") {\n      const response = [\n        {\n          type: \"error\",\n          error: {\n            message: newVal.error.message(t),\n            type: newVal.error.type,\n            component: newVal.error.component,\n          },\n        },\n      ]\n      emit(\"update:response\", response)\n    }\n  },\n  { deep: true }\n)\n\nconst hideRequestModal = () => {\n  showSaveRequestModal.value = false\n}\nconst saveRequest = () => {\n  if (\n    tabs.currentActiveTab.value.document.saveContext &&\n    tabs.currentActiveTab.value.document.saveContext.originLocation ===\n      \"user-collection\"\n  ) {\n    editGraphqlRequest(\n      tabs.currentActiveTab.value.document.saveContext.folderPath,\n      tabs.currentActiveTab.value.document.saveContext.requestIndex,\n      tabs.currentActiveTab.value.document.request\n    )\n\n    tabs.currentActiveTab.value.document.isDirty = false\n  } else {\n    showSaveRequestModal.value = true\n  }\n}\nconst clearGQLQuery = () => {\n  request.value.query = \"\"\n}\ndefineActionHandler(\"request.send-cancel\", runQuery)\ndefineActionHandler(\"request.save\", saveRequest)\ndefineActionHandler(\"request.save-as\", () => {\n  showSaveRequestModal.value = true\n})\ndefineActionHandler(\"request.reset\", clearGQLQuery)\n\ndefineActionHandler(\"request.open-tab\", ({ tab }) => {\n  selectedOptionTab.value = tab as GQLOptionTabs\n})\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.cm-panels) {\n  @apply top-upperPrimaryStickyFold #{!important};\n}\n</style>\n","import * as Eq from \"fp-ts/Eq\"\nimport * as S from \"fp-ts/string\"\nimport isEqual from \"lodash-es/isEqual\"\n\n/*\n * Eq-s are fp-ts an interface (type class) that defines how the equality\n * of 2 values of a certain type are matched as equal\n */\n\n/**\n * Create an Eq from a non-undefinable value and makes it accept undefined\n * @param eq The non nullable Eq to add to\n * @returns The updated Eq which accepts undefined\n */\nexport const undefinedEq = <T>(eq: Eq.Eq<T>): Eq.Eq<T | undefined> => ({\n  equals(x: T | undefined, y: T | undefined) {\n    if (x !== undefined && y !== undefined) {\n      return eq.equals(x, y)\n    }\n\n    return x === undefined && y === undefined\n  },\n})\n\n/**\n * An Eq which compares by transforming based on a mapping function and then applying the Eq to it\n * @param map The mapping function to map values to\n * @param eq The Eq which takes the value which the map returns\n * @returns An Eq which takes the input of the mapping function\n */\nexport const mapThenEq = <A, B>(map: (x: A) => B, eq: Eq.Eq<B>): Eq.Eq<A> => ({\n  equals(x: A, y: A) {\n    return eq.equals(map(x), map(y))\n  },\n})\n\n/**\n * An Eq which checks equality of 2 string in a case insensitive way\n */\nexport const stringCaseInsensitiveEq: Eq.Eq<string> = mapThenEq(\n  S.toLowerCase,\n  S.Eq\n)\n\n/**\n * An Eq that does equality check with Lodash's isEqual function\n */\nexport const lodashIsEqualEq: Eq.Eq<any> = {\n  equals(x: any, y: any) {\n    return isEqual(x, y)\n  },\n}\n","import { HoppGQLRequest, ValidContentTypes } from \"@hoppscotch/data\"\nimport * as Eq from \"fp-ts/Eq\"\nimport * as N from \"fp-ts/number\"\nimport * as S from \"fp-ts/string\"\nimport { lodashIsEqualEq, mapThenEq, undefinedEq } from \"./eq\"\n\nexport type HoppGQLParam = {\n  key: string\n  value: string\n  active: boolean\n}\n\nexport type HoppGQLHeader = {\n  key: string\n  value: string\n  active: boolean\n}\n\nexport type FormDataKeyValue = {\n  key: string\n  active: boolean\n} & ({ isFile: true; value: Blob[] } | { isFile: false; value: string })\n\nexport type HoppGQLReqBodyFormData = {\n  contentType: \"multipart/form-data\"\n  body: FormDataKeyValue[]\n}\n\nexport type HoppGQLReqBody =\n  | {\n      contentType: Exclude<ValidContentTypes, \"multipart/form-data\">\n      body: string\n    }\n  | HoppGQLReqBodyFormData\n  | {\n      contentType: null\n      body: null\n    }\n\nexport const HoppGQLRequestEq = Eq.struct<HoppGQLRequest>({\n  id: undefinedEq(S.Eq),\n  v: N.Eq,\n  name: S.Eq,\n  url: S.Eq,\n  headers: mapThenEq(\n    (arr) => arr.filter((h) => h.key !== \"\" && h.value !== \"\"),\n    lodashIsEqualEq\n  ),\n  query: S.Eq,\n  variables: S.Eq,\n  auth: lodashIsEqualEq,\n})\n\nexport const isEqualHoppGQLRequest = HoppGQLRequestEq.equals\n","<template>\n  <AppPaneLayout layout-id=\"gql-primary\">\n    <template #primary>\n      <GraphqlRequestOptions\n        v-model=\"tab.document.request\"\n        v-model:response=\"tab.document.response\"\n        v-model:option-tab=\"tab.document.optionTabPreference\"\n        v-model:inherited-properties=\"tab.document.inheritedProperties\"\n        :tab-id=\"tab.id\"\n      />\n    </template>\n    <template #secondary>\n      <GraphqlResponse :response=\"tab.document.response\" />\n    </template>\n  </AppPaneLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { useVModel } from \"@vueuse/core\"\nimport { cloneDeep } from \"lodash-es\"\nimport { watch } from \"vue\"\nimport { isEqualHoppGQLRequest } from \"~/helpers/graphql\"\nimport { HoppGQLDocument } from \"~/helpers/graphql/document\"\nimport { HoppTab } from \"~/services/tab\"\n\n// TODO: Move Response and Request execution code to over here\n\nconst props = defineProps<{ modelValue: HoppTab<HoppGQLDocument> }>()\n\nconst emit = defineEmits<{\n  (e: \"update:modelValue\", val: HoppTab<HoppGQLDocument>): void\n}>()\n\nconst tab = useVModel(props, \"modelValue\", emit)\n\n// TODO: Come up with a better dirty check\nlet oldRequest = cloneDeep(tab.value.document.request)\nwatch(\n  () => tab.value.document.request,\n  (updatedValue) => {\n    // TODO: Check equality of request\n    if (\n      !tab.value.document.isDirty &&\n      !isEqualHoppGQLRequest(oldRequest, updatedValue)\n    ) {\n      tab.value.document.isDirty = true\n    }\n\n    oldRequest = cloneDeep(updatedValue)\n  },\n  { deep: true }\n)\n</script>\n","<template>\n  <div\n    v-tippy=\"{ theme: 'tooltip', delay: [500, 20] }\"\n    :title=\"tab.document.request.name\"\n    class=\"flex items-center truncate px-2\"\n    @dblclick=\"emit('open-rename-modal')\"\n    @contextmenu.prevent=\"options?.tippy?.show()\"\n    @click.middle=\"emit('close-tab')\"\n  >\n    <tippy\n      ref=\"options\"\n      trigger=\"manual\"\n      interactive\n      theme=\"popover\"\n      :on-shown=\"() => tippyActions!.focus()\"\n    >\n      <span class=\"truncate\">\n        {{ tab.document.request.name }}\n      </span>\n      <template #content=\"{ hide }\">\n        <div\n          ref=\"tippyActions\"\n          class=\"flex flex-col focus:outline-none\"\n          tabindex=\"0\"\n          @keyup.r=\"renameAction?.$el.click()\"\n          @keyup.d=\"duplicateAction?.$el.click()\"\n          @keyup.w=\"closeAction?.$el.click()\"\n          @keyup.x=\"closeOthersAction?.$el.click()\"\n          @keyup.escape=\"hide()\"\n        >\n          <HoppSmartItem\n            ref=\"renameAction\"\n            :icon=\"IconFileEdit\"\n            :label=\"t('request.rename')\"\n            :shortcut=\"['R']\"\n            @click=\"\n              () => {\n                emit('open-rename-modal')\n                hide()\n              }\n            \"\n          />\n          <HoppSmartItem\n            ref=\"duplicateAction\"\n            :icon=\"IconCopy\"\n            :label=\"t('tab.duplicate')\"\n            :shortcut=\"['D']\"\n            @click=\"\n              () => {\n                emit('duplicate-tab')\n                hide()\n              }\n            \"\n          />\n          <HoppSmartItem\n            v-if=\"isRemovable\"\n            ref=\"closeAction\"\n            :icon=\"IconXCircle\"\n            :label=\"t('tab.close')\"\n            :shortcut=\"['W']\"\n            @click=\"\n              () => {\n                emit('close-tab')\n                hide()\n              }\n            \"\n          />\n          <HoppSmartItem\n            v-if=\"isRemovable\"\n            ref=\"closeOthersAction\"\n            :icon=\"IconXSquare\"\n            :label=\"t('tab.close_others')\"\n            :shortcut=\"['X']\"\n            @click=\"\n              () => {\n                emit('close-other-tabs')\n                hide()\n              }\n            \"\n          />\n        </div>\n      </template>\n    </tippy>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\"\nimport { TippyComponent } from \"vue-tippy\"\nimport { useI18n } from \"~/composables/i18n\"\nimport IconXCircle from \"~icons/lucide/x-circle\"\nimport IconXSquare from \"~icons/lucide/x-square\"\nimport IconFileEdit from \"~icons/lucide/file-edit\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport { HoppTab } from \"~/services/tab\"\nimport { HoppGQLDocument } from \"~/helpers/graphql/document\"\n\nconst t = useI18n()\n\ndefineProps<{\n  tab: HoppTab<HoppGQLDocument>\n  isRemovable: boolean\n}>()\n\nconst emit = defineEmits<{\n  (event: \"open-rename-modal\"): void\n  (event: \"close-tab\"): void\n  (event: \"close-other-tabs\"): void\n  (event: \"duplicate-tab\"): void\n}>()\n\nconst tippyActions = ref<TippyComponent | null>(null)\nconst options = ref<TippyComponent | null>(null)\n\nconst renameAction = ref<HTMLButtonElement | null>(null)\nconst closeAction = ref<HTMLButtonElement | null>(null)\nconst closeOthersAction = ref<HTMLButtonElement | null>(null)\nconst duplicateAction = ref<HTMLButtonElement | null>(null)\n</script>\n","<template>\n  <div\n    class=\"sticky top-0 z-10 flex flex-shrink-0 space-x-2 overflow-x-auto bg-primary p-4\"\n  >\n    <div class=\"inline-flex flex-1 space-x-2\">\n      <input\n        id=\"url\"\n        v-model=\"url\"\n        type=\"url\"\n        autocomplete=\"off\"\n        spellcheck=\"false\"\n        class=\"w-full rounded border border-divider bg-primaryLight px-4 py-2 text-secondaryDark\"\n        :placeholder=\"`${t('graphql.url_placeholder')}`\"\n        :disabled=\"connected\"\n        @keyup.enter=\"onConnectClick\"\n      />\n      <HoppButtonPrimary\n        id=\"get\"\n        name=\"get\"\n        :loading=\"connection.state === 'CONNECTING'\"\n        :label=\"!connected ? t('action.connect') : t('action.disconnect')\"\n        class=\"w-32\"\n        @click=\"onConnectClick\"\n      />\n    </div>\n  </div>\n  <HoppSmartModal\n    v-if=\"connectionSwitchModal\"\n    dialog\n    :dimissible=\"false\"\n    :title=\"t('graphql.switch_connection')\"\n    @close=\"connectionSwitchModal = false\"\n  >\n    <template #body>\n      <p class=\"mb-4\">\n        {{ t(\"graphql.connection_switch_url\") }}:\n        <kbd class=\"shortcut-key !ml-0\"> {{ lastTwoUrls.at(0) }} </kbd>\n      </p>\n      <p class=\"mb-4\">\n        {{ t(\"graphql.connection_switch_new_url\") }}:\n        <kbd class=\"shortcut-key !ml-0\"> {{ lastTwoUrls.at(1) }} </kbd>\n      </p>\n      <p>{{ t(\"graphql.connection_switch_confirm\") }}</p>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.connect')\"\n          :loading=\"connection.state === 'CONNECTING'\"\n          outline\n          @click=\"switchConnection()\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"cancelSwitch()\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { platform } from \"~/platform\"\nimport { useI18n } from \"@composables/i18n\"\nimport { computed, ref, watch } from \"vue\"\nimport { connection } from \"~/helpers/graphql/connection\"\nimport { connect } from \"~/helpers/graphql/connection\"\nimport { disconnect } from \"~/helpers/graphql/connection\"\nimport { InterceptorService } from \"~/services/interceptor.service\"\nimport { useService } from \"dioc/vue\"\nimport { defineActionHandler } from \"~/helpers/actions\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\n\nconst t = useI18n()\nconst tabs = useService(GQLTabService)\n\nconst interceptorService = useService(InterceptorService)\n\nconst connectionSwitchModal = ref(false)\n\nconst connected = computed(() => connection.state === \"CONNECTED\")\n\nconst url = computed({\n  get: () => tabs.currentActiveTab.value?.document.request.url ?? \"\",\n  set: (value) => {\n    tabs.currentActiveTab.value!.document.request.url = value\n  },\n})\n\nconst onConnectClick = () => {\n  if (!connected.value) {\n    gqlConnect()\n  } else {\n    disconnect()\n  }\n}\n\nconst gqlConnect = () => {\n  connect(url.value, tabs.currentActiveTab.value?.document.request.headers)\n\n  platform.analytics?.logEvent({\n    type: \"HOPP_REQUEST_RUN\",\n    platform: \"graphql-schema\",\n    strategy: interceptorService.currentInterceptorID.value!,\n  })\n}\n\nconst switchConnection = () => {\n  gqlConnect()\n  connectionSwitchModal.value = false\n}\n\nconst lastTwoUrls = ref<string[]>([])\n\nwatch(\n  tabs.currentActiveTab,\n  (newVal) => {\n    if (newVal) {\n      lastTwoUrls.value.push(newVal.document.request.url)\n      if (lastTwoUrls.value.length > 2) {\n        lastTwoUrls.value.shift()\n      }\n    }\n\n    if (\n      connected.value &&\n      lastTwoUrls.value.length === 2 &&\n      lastTwoUrls.value.at(0) !== lastTwoUrls.value.at(1)\n    ) {\n      disconnect()\n      connectionSwitchModal.value = true\n    }\n  },\n  {\n    immediate: true,\n  }\n)\n\nconst cancelSwitch = () => {\n  if (connected.value) disconnect()\n  connectionSwitchModal.value = false\n}\n\ndefineActionHandler(\n  \"gql.connect\",\n  gqlConnect,\n  computed(() => !connected.value)\n)\n\ndefineActionHandler(\"gql.disconnect\", disconnect, connected)\n</script>\n","<template>\n  <div>\n    <AppPaneLayout layout-id=\"graphql\">\n      <template #primary>\n        <GraphqlRequest />\n\n        <HoppSmartWindows\n          v-if=\"currentTabID\"\n          :id=\"'gql_windows'\"\n          :model-value=\"currentTabID\"\n          @update:model-value=\"(tabID) => tabs.setActiveTab(tabID)\"\n          @remove-tab=\"removeTab\"\n          @add-tab=\"addNewTab\"\n          @sort=\"sortTabs\"\n        >\n          <HoppSmartWindow\n            v-for=\"tab in activeTabs\"\n            :id=\"tab.id\"\n            :key=\"'removable_tab_' + tab.id\"\n            :label=\"tab.document.request.name\"\n            :is-removable=\"activeTabs.length > 1\"\n            :close-visibility=\"'hover'\"\n          >\n            <template #tabhead>\n              <GraphqlTabHead\n                :tab=\"tab\"\n                :is-removable=\"activeTabs.length > 1\"\n                @open-rename-modal=\"openReqRenameModal(tab)\"\n                @close-tab=\"removeTab(tab.id)\"\n                @close-other-tabs=\"closeOtherTabsAction(tab.id)\"\n                @duplicate-tab=\"duplicateTab(tab.id)\"\n              />\n            </template>\n\n            <template #suffix>\n              <span\n                v-if=\"tab.document.isDirty\"\n                class=\"flex w-4 items-center justify-center text-secondary group-hover:hidden\"\n              >\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  width=\"1.2em\"\n                  height=\"1.2em\"\n                  class=\"h-1.5 w-1.5\"\n                >\n                  <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"currentColor\"></circle>\n                </svg>\n              </span>\n            </template>\n\n            <GraphqlRequestTab\n              :model-value=\"tab\"\n              @update:model-value=\"onTabUpdate\"\n            />\n          </HoppSmartWindow>\n        </HoppSmartWindows>\n      </template>\n      <template #sidebar>\n        <GraphqlSidebar />\n      </template>\n    </AppPaneLayout>\n    <CollectionsEditRequest\n      v-model=\"editReqModalReqName\"\n      :show=\"showRenamingReqNameModalForTabID !== undefined\"\n      @submit=\"renameReqName\"\n      @hide-modal=\"showRenamingReqNameModalForTabID = undefined\"\n    />\n    <HoppSmartConfirmModal\n      :show=\"confirmingCloseForTabID !== null\"\n      :confirm=\"t('modal.close_unsaved_tab')\"\n      :title=\"t('confirm.close_unsaved_tab')\"\n      @hide-modal=\"onCloseConfirm\"\n      @resolve=\"onResolveConfirm\"\n    />\n    <HoppSmartConfirmModal\n      :show=\"confirmingCloseAllTabs\"\n      :confirm=\"t('modal.close_unsaved_tab')\"\n      :title=\"t('confirm.close_unsaved_tabs', { count: unsavedTabsCount })\"\n      @hide-modal=\"confirmingCloseAllTabs = false\"\n      @resolve=\"onResolveConfirmCloseAllTabs\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { usePageHead } from \"@composables/head\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useService } from \"dioc/vue\"\nimport { computed, onBeforeUnmount, ref } from \"vue\"\nimport { defineActionHandler } from \"~/helpers/actions\"\nimport { connection, disconnect } from \"~/helpers/graphql/connection\"\nimport { getDefaultGQLRequest } from \"~/helpers/graphql/default\"\nimport { HoppGQLDocument } from \"~/helpers/graphql/document\"\nimport { InspectionService } from \"~/services/inspection\"\nimport { HoppTab } from \"~/services/tab\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\n\nconst t = useI18n()\nconst tabs = useService(GQLTabService)\n\nconst currentTabID = computed(() => tabs.currentTabID.value)\n\nconst inspectionService = useService(InspectionService)\n\nconst confirmingCloseForTabID = ref<string | null>(null)\n\nusePageHead({\n  title: computed(() => t(\"navigation.graphql\")),\n})\n\nconst activeTabs = tabs.getActiveTabs()\n\nconst addNewTab = () => {\n  const tab = tabs.createNewTab({\n    request: getDefaultGQLRequest(),\n    isDirty: false,\n  })\n\n  tabs.setActiveTab(tab.id)\n}\nconst sortTabs = (e: { oldIndex: number; newIndex: number }) => {\n  tabs.updateTabOrdering(e.oldIndex, e.newIndex)\n}\n\nconst removeTab = (tabID: string) => {\n  const tabState = tabs.getTabRef(tabID).value\n\n  if (tabState.document.isDirty) {\n    confirmingCloseForTabID.value = tabID\n  } else {\n    tabs.closeTab(tabState.id)\n    inspectionService.deleteTabInspectorResult(tabState.id)\n  }\n}\n\n/**\n * This function is closed when the confirm tab is closed by some means (even saving triggers close)\n */\nconst onCloseConfirm = () => {\n  confirmingCloseForTabID.value = null\n}\n\n/**\n * Called when the user confirms they want to save the tab\n */\nconst onResolveConfirm = () => {\n  if (confirmingCloseForTabID.value) {\n    tabs.closeTab(confirmingCloseForTabID.value)\n    confirmingCloseForTabID.value = null\n  }\n}\n\nconst confirmingCloseAllTabs = ref(false)\nconst unsavedTabsCount = ref(0)\nconst exceptedTabID = ref<string | null>(null)\n\nconst closeOtherTabsAction = (tabID: string) => {\n  const dirtyTabCount = tabs.getDirtyTabsCount()\n  // If there are dirty tabs, show the confirm modal\n  if (dirtyTabCount > 0) {\n    confirmingCloseAllTabs.value = true\n    unsavedTabsCount.value = dirtyTabCount\n    exceptedTabID.value = tabID\n  } else {\n    tabs.closeOtherTabs(tabID)\n  }\n}\n\nconst onResolveConfirmCloseAllTabs = () => {\n  if (exceptedTabID.value) tabs.closeOtherTabs(exceptedTabID.value)\n  confirmingCloseAllTabs.value = false\n}\n\nconst onTabUpdate = (tab: HoppTab<HoppGQLDocument>) => {\n  tabs.updateTab(tab)\n}\n\nonBeforeUnmount(() => {\n  if (connection.state === \"CONNECTED\") {\n    disconnect()\n  }\n})\n\nconst editReqModalReqName = ref(\"\")\nconst showRenamingReqNameModalForTabID = ref<string>()\n\nconst openReqRenameModal = (tab: HoppTab<HoppGQLDocument>) => {\n  editReqModalReqName.value = tab.document.request.name\n  showRenamingReqNameModalForTabID.value = tab.id\n}\n\nconst renameReqName = () => {\n  const tab = tabs.getTabRef(showRenamingReqNameModalForTabID.value!)\n  if (tab.value) {\n    tab.value.document.request.name = editReqModalReqName.value\n    tabs.updateTab(tab.value)\n  }\n  showRenamingReqNameModalForTabID.value = undefined\n}\n\nconst duplicateTab = (tabID: string) => {\n  const tab = tabs.getTabRef(tabID)\n  if (tab.value) {\n    const newTab = tabs.createNewTab({\n      request: tab.value.document.request,\n      isDirty: true,\n    })\n    tabs.setActiveTab(newTab.id)\n  }\n}\n\ndefineActionHandler(\"gql.request.open\", ({ request, saveContext }) => {\n  tabs.createNewTab({\n    saveContext,\n    request: request,\n    isDirty: false,\n  })\n})\n\ndefineActionHandler(\"request.rename\", () => {\n  openReqRenameModal(tabs.getTabRef(currentTabID.value).value!)\n})\n\ndefineActionHandler(\"tab.duplicate-tab\", ({ tabID }) => {\n  duplicateTab(tabID ?? currentTabID.value)\n})\ndefineActionHandler(\"tab.close-current\", () => {\n  removeTab(currentTabID.value)\n})\ndefineActionHandler(\"tab.close-other\", () => {\n  tabs.closeOtherTabs(currentTabID.value)\n})\ndefineActionHandler(\"tab.open-new\", addNewTab)\n</script>\n"],"names":["fromEquals","equals","x","y","struct","eqs","first","second","key","Eq","Ord","MAX_SUGGESTIONS","didYouMean","firstArg","secondArg","subMessage","suggestionsArg","message","suggestions","selected","lastItem","identityFunc","keyMap","list","keyFn","result","item","keyValMap","valFn","mapValue","map","fn","naturalCompare","aStr","bStr","aIndex","bIndex","aChar","bChar","isDigit","aNum","DIGIT_0","bNum","DIGIT_9","code","suggestionList","input","options","optionsByDistance","lexicalDistance","LexicalDistance","threshold","option","distance","a","b","distanceDiff","stringToArray","optionLowerCase","tmp","aLength","bLength","rows","j","i","upRow","currentRow","smallestCell","cost","currentCell","doubleDiagonalCell","str","strLength","array","toObjMap","obj","value","valueFromASTUntyped","valueNode","variables","Kind","node","field","assertName","name","devAssert","GraphQLError","isNameContinue","isNameStart","assertEnumValueName","isType","type","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isListType","isNonNullType","instanceOf","GraphQLScalarType","GraphQLObjectType","assertObjectType","inspect","GraphQLInterfaceType","assertInterfaceType","GraphQLUnionType","GraphQLEnumType","GraphQLInputObjectType","GraphQLList","GraphQLNonNull","isInputType","isWrappingType","isOutputType","isLeafType","isCompositeType","isAbstractType","assertAbstractType","ofType","isNullableType","assertNullableType","getNullableType","isNamedType","getNamedType","unwrappedType","resolveReadonlyArrayThunk","thunk","resolveObjMapThunk","config","_config$parseValue","_config$serialize","_config$parseLiteral","_config$extensionASTN","parseValue","_config$extensionASTN2","defineFieldMap","defineInterfaces","fieldsToFieldsConfig","_config$interfaces","interfaces","fieldMap","isPlainObj","fieldConfig","fieldName","_fieldConfig$args","argsConfig","defineArguments","argName","argConfig","isObjectLike","fields","argsToArgsConfig","args","arg","isRequiredArgument","_config$extensionASTN3","_config$extensionASTN4","defineTypes","types","_config$extensionASTN5","defineEnumValues","enumValue","outputValue","inputValue","valueStr","didYouMeanEnumValue","_variables","print","values","enumType","unknownValueStr","allNames","suggestedValues","typeName","valueMap","valueName","valueConfig","_config$extensionASTN6","defineInputFieldMap","isRequiredInputField","isEqualType","typeA","typeB","isTypeSubTypeOf","schema","maybeSubType","superType","doTypesOverlap","GRAPHQL_MAX_INT","GRAPHQL_MIN_INT","GraphQLInt","coercedValue","serializeObject","num","GraphQLFloat","GraphQLString","GraphQLBoolean","GraphQLID","specifiedScalarTypes","isSpecifiedScalarType","valueOfResult","isDirective","directive","GraphQLDirective","_config$isRepeatable","_config$args","GraphQLIncludeDirective","DirectiveLocation","GraphQLSkipDirective","DEFAULT_DEPRECATION_REASON","GraphQLDeprecatedDirective","GraphQLSpecifiedByDirective","specifiedDirectives","isSpecifiedDirective","isIterableObject","maybeIterable","astFromValue","astValue","itemType","valuesNodes","itemNode","fieldNodes","fieldValue","serialized","stringNum","integerStringRegExp","invariant","__Schema","__Type","__Directive","__DirectiveLocation","__InputValue","includeDeprecated","__TypeKind","TypeKind","__Field","_args","_context","__EnumValue","defaultValue","valueAST","SchemaMetaFieldDef","_source","TypeMetaFieldDef","TypeNameMetaFieldDef","parentType","introspectionTypes","isIntrospectionType","isSchema","GraphQLSchema","assertSchema","_config$directives","allReferencedTypes","collectReferencedTypes","namedType","iface","implementations","operation","OperationTypeNode","abstractType","interfaceType","typeSet","memberType","validateSchema","context","SchemaValidationContext","validateRootTypes","validateDirectives","validateTypes","errors","assertValidSchema","error","nodes","_nodes","queryType","_getOperationTypeNode","getOperationTypeNode","mutationType","_getOperationTypeNode2","subscriptionType","_getOperationTypeNode3","_flatMap$find","schemaNode","_schemaNode$operation","operationNode","validateName","_arg$astNode","getDeprecatedDirectiveNode","validateInputObjectCircularRefs","createInputObjectCircularRefsValidator","typeMap","validateFields","validateInterfaces","validateUnionMembers","validateEnumValues","validateInputFields","_field$astNode","_arg$astNode2","_arg$astNode3","ifaceTypeNames","getAllImplementsInterfaceNodes","validateTypeImplementsAncestors","validateTypeImplementsInterface","typeFieldMap","ifaceField","typeField","_ifaceField$astNode","_typeField$astNode","ifaceArg","typeArg","_ifaceArg$astNode","_typeArg$astNode","ifaceInterfaces","transitive","union","memberTypes","includedTypeNames","getUnionMemberTypeNodes","enumValues","inputObj","_field$astNode2","_field$astNode3","visitedTypes","fieldPath","fieldPathIndexByTypeName","detectCycleRecursive","fieldType","cycleIndex","cyclePath","pathStr","fieldObj","astNode","extensionASTNodes","typeNode","_typeNode$interfaces","ifaceNode","unionNode","_unionNode$types","definitionNode","_definitionNode$direc","typeFromAST","innerType","TypeInfo","initialType","getFieldDefFn","getFieldDef","fieldDef","rootType","typeConditionAST","outputType","inputType","_this$getDirective","argDef","argType","fieldOrDirective","listType","objectType","inputFieldType","inputField","fieldNode","visitWithTypeInfo","typeInfo","visitor","getEnterLeaveForKind","isNode","isExecutableDefinitionNode","isTypeSystemDefinitionNode","isTypeDefinitionNode","isTypeSystemExtensionNode","isTypeExtensionNode","ExecutableDefinitionsRule","definition","defName","FieldsOnCorrectTypeRule","suggestion","getSuggestedTypeNames","getSuggestedFieldNames","suggestedTypes","usageCount","possibleType","possibleInterface","_usageCount$possibleI","usageCountDiff","possibleFieldNames","FragmentsOnCompositeTypesRule","typeCondition","typeStr","KnownArgumentNamesRule","KnownArgumentNamesOnDirectivesRule","argNode","knownArgsNames","directiveArgs","definedDirectives","astDefinitions","def","_def$arguments","argsNodes","directiveNode","directiveName","knownArgs","KnownDirectivesRule","locationsMap","_key","_parent","_path","ancestors","locations","candidateLocation","getDirectiveLocationForASTPath","appliedTo","getDirectiveLocationForOperation","parentNode","KnownFragmentNamesRule","fragmentName","KnownTypeNamesRule","existingTypesMap","definedTypes","typeNames","_1","parent","_2","_ancestors$","isSDL","isSDLNode","standardTypeNames","LoneAnonymousOperationRule","operationCount","NoFragmentCyclesRule","visitedFrags","spreadPath","spreadPathIndexByName","fragment","spreadNodes","spreadNode","spreadName","spreadFragment","viaPath","s","NoUndefinedVariablesRule","variableNameDefined","usages","varName","NoUnusedFragmentsRule","operationDefs","fragmentDefs","fragmentNameUsed","fragmentDef","fragName","NoUnusedVariablesRule","variableDefs","variableNameUsed","variableDef","variableName","sortValueNode","sortFields","fieldA","fieldB","reasonMessage","reason","responseName","subReason","OverlappingFieldsCanBeMergedRule","comparedFragmentPairs","PairSet","cachedFieldsAndFragmentNames","selectionSet","conflicts","findConflictsWithinSelectionSet","fields1","fields2","reasonMsg","fragmentNames","getFieldsAndFragmentNames","collectConflictsWithin","collectConflictsBetweenFieldsAndFragment","collectConflictsBetweenFragments","areMutuallyExclusive","fieldMap2","referencedFragmentNames","getReferencedFieldsAndFragmentNames","collectConflictsBetween","referencedFragmentName","fragmentName1","fragmentName2","fragment1","fragment2","fieldMap1","referencedFragmentNames1","referencedFragmentNames2","referencedFragmentName2","referencedFragmentName1","findConflictsBetweenSubSelectionSets","parentType1","selectionSet1","parentType2","selectionSet2","fragmentNames1","fragmentNames2","conflict","findConflict","parentFieldsAreMutuallyExclusive","field1","field2","node1","def1","node2","def2","name1","name2","sameArguments","type1","type2","doTypesConflict","subfieldConflicts","args1","args2","values2","arg1","value1","value2","stringifyValue","cached","nodeAndDefs","_collectFieldsAndFragmentNames","fragmentType","selection","inlineFragmentType","_this$_data$get","key1","key2","PossibleFragmentSpreadsRule","fragType","parentTypeStr","fragTypeStr","getFragmentType","frag","ProvidedRequiredArgumentsRule","ProvidedRequiredArgumentsOnDirectivesRule","_fieldNode$arguments","providedArgs","argTypeStr","_schema$getDirectives","requiredArgsMap","argNodes","isRequiredArgumentNode","requiredArgs","_directiveNode$argume","argNodeMap","ScalarLeafsRule","valueFromAST","variableValue","coercedValues","isMissingVariable","itemValue","coercedObj","getArgumentValues","variableValues","_node$arguments","argumentNodes","argumentNode","isNull","hasOwnProperty","getDirectiveValues","directiveDef","_node$directives","prop","collectFields","fragments","runtimeType","collectFieldsImpl","visitedFragmentNames","shouldIncludeNode","getFieldEntryKey","fieldList","doesFragmentConditionMatch","skip","include","typeConditionNode","conditionalType","SingleFieldSubscriptionsRule","operationName","document","extraFieldSelections","groupBy","group","UniqueArgumentNamesRule","checkArgUniqueness","_parentNode$arguments","seenArgs","UniqueDirectivesPerLocationRule","uniqueDirectiveMap","schemaDirectives","typeDirectivesMap","seenDirectives","UniqueFragmentNamesRule","knownFragmentNames","UniqueInputFieldNamesRule","knownNameStack","knownNames","prevKnownNames","UniqueOperationNamesRule","knownOperationNames","UniqueVariableNamesRule","_operationNode$variab","variableDefinitions","seenVariableDefinitions","variableNodes","ValuesOfCorrectTypeRule","isValidValueNode","fieldNodeMap","locationType","VariablesAreInputTypesRule","VariablesInAllowedPositionRule","varDefMap","varDef","varType","allowedVariableUsage","varTypeStr","varDefaultValue","locationDefaultValue","nullableLocationType","specifiedRules","ASTValidationContext","ast","onError","defNode","spreads","setsToVisit","set","collectedNames","nodesToVisit","spread","ValidationContext","newUsages","visit","variable","validate","documentAST","rules","_options$maxErrors","maxErrors","abortObj","visitInParallel","rule","e","getIntrospectionQuery","optionsWithDefault","descriptions","specifiedByUrl","directiveIsRepeatable","schemaDescription","inputDeprecation","buildClientSchema","introspection","schemaIntrospection","typeIntrospection","buildType","stdType","getObjectType","directives","buildDirective","getType","typeRef","itemRef","nullableRef","nullableType","getInterfaceType","buildScalarDef","buildObjectDef","buildInterfaceDef","buildUnionDef","buildEnumDef","buildInputObjectDef","scalarIntrospection","buildImplementationsList","implementingIntrospection","implementingIntrospectionStr","objectIntrospection","buildFieldDefMap","interfaceIntrospection","unionIntrospection","unionIntrospectionStr","enumIntrospection","enumIntrospectionStr","valueIntrospection","inputObjectIntrospection","inputObjectIntrospectionStr","buildInputValueDefMap","fieldIntrospection","buildField","fieldIntrospectionStr","inputValueIntrospections","buildInputValue","inputValueIntrospection","directiveIntrospection","directiveIntrospectionStr","printSchema","printFilteredSchema","n","isDefinedType","directiveFilter","typeFilter","printSchemaDefinition","printDirective","printType","isSchemaOfCommonNames","operationTypes","printDescription","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","printSpecifiedByURL","printImplementedInterfaces","printFields","possibleTypes","printDeprecated","printBlock","f","printInputValue","printArgs","items","indentation","defaultAST","argDecl","scalar","firstInBlock","description","blockString","isPrintableAsBlockString","props","__props","emit","__emit","typeString","computed","isScalar","jumpToType","t","useI18n","fieldArgs","isInput","isInterface","isEnum","children","isFieldHighlighted","GQL_SCHEMA_POLL_INTERVAL","GQL","tabs","getService","GQLTabService","currentTabID","connection","reactive","subscriptionState","gqlMessageEvent","ref","schemaString","queryFields","_a","mutationFields","subscriptionFields","graphqlTypes","queryTypeName","mutationTypeName","_b","subscriptionTypeName","_c","timeoutSubscription","connect","url","headers","poll","getSchema","disconnect","introspectionQuery","finalHeaders","reqOptions","res","InterceptorService","E.isLeft","data","response","introspectResponse","runGQLOperation","query","auth","operationType","parsedVariables","params","username","password","addTo","runSubscription","responseText","addQueryToHistory","wsUrl","event","socketDisconnect","addGraphqlHistoryEntry","makeGQLHistoryEntry","makeGQLRequest","selectedNavigationTab","selectedGqlTab","colorMode","useColorMode","isTextFoundInGraphqlFieldObject","text","normalizedText","isFilterTextFoundInDescription","isFilterTextFoundInName","getFilteredGraphqlFields","filterText","getFilteredGraphqlTypes","toast","useToast","downloadSchemaIcon","refAutoReset","IconDownload","copySchemaIcon","IconCopy","graphqlFieldsFilterText","filteredQueryFields","filteredMutationFields","filteredSubscriptionFields","filteredGraphqlTypes","isGqlTypeHighlighted","gqlType","getGqlTypeHighlightedFields","handleJumpToType","nextTick","rootTypeName","target","schemaEditor","WRAP_LINES","useNestedSetting","useCodemirror","downloadSchema","dataToWrite","file","filename","platform","IconCheck","copySchema","copyToClipboard","container","logs","autoScrollEnabled","logListScroll","useScroll","watch","isScrolling","scrollTo","position","useThrottleFn","toggleAutoscroll","toggleAutoscrollColor","responseString","copyInterfaceTippyActions","copyIcon","copyResponse","useCopyResponse","copyInterfaceIcon","copyInterface","useCopyInterface","downloadIcon","downloadResponse","useDownloadResponse","copiedInterfaceLanguage","runCopyInterface","language","defineActionHandler","onMounted","useVModel","AUTH_KEY_NAME","authType","pluckRef","authName","getAuthName","selectOAuth2AuthType","defaultGrantTypeInfo","getDefaultAuthCodeOauthFlowParams","existingGrantTypeInfo","grantTypeInfo","authActive","clearContent","tippyActions","request","idTicker","bulkMode","bulkHeaders","deletionToast","bulkEditor","workingHeaders","headersList","newHeadersList","filteredWorkingHeaders","pipe","A.filterMap","flow","O.fromPredicate","O.map","objRemoveKey","filteredBulkHeaders","parseRawKeyValueEntriesE","E.map","RA.filter","RA.toArray","E.getOrElse","isEqual","A.map","rawKeyValueEntriesToString","newWorkingHeaders","fixedHeaders","cloneDeep","newBulkHeaders","currentBulkHeaders","filteredHeaders","addHeader","updateHeader","index","header","h","deleteHeader","headersBeforeDeletion","clone","_","toastObject","A.deleteAt","O.getOrElseW","throwError","getComputedAuthHeaders","req","request2","requestAuth","token","getComputedHeaders","computedHeaders","inheritedProperties","requestHeader","_d","computedAuthHeader","masking","toggleMask","mask","selectedOperation","variableString","variableEditor","copyVariablesIcon","prettifyVariablesIcon","IconWand","jsonLinter","copyVariables","prettifyVariableString","jsonObj","IconInfo","clearGQLVariables","runQuery","unsubscribe","createGQLQueryLinter","doc","gqlParse","results","gqlValidate","err","getDefinitionState","tokenState","definitionState","forEachState","state","stack","reverseStateStack","objectValues","object","keys","len","hintList","filterAndSortList","normalizeText","filterNonEmpty","entry","byProximity","getProximity","pair","predicate","filtered","proximity","d","DocumentUri","is","URI","integer","uinteger","Position","create","line","character","candidate","Is","Range","one","two","three","four","Location","uri","range","LocationLink","targetUri","targetRange","targetSelectionRange","originSelectionRange","Color","red","green","blue","alpha","ColorInformation","color","ColorPresentation","label","textEdit","additionalTextEdits","TextEdit","FoldingRangeKind","FoldingRange","startLine","endLine","startCharacter","endCharacter","kind","collapsedText","DiagnosticRelatedInformation","location","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","severity","source","relatedInformation","Command","title","command","replace","newText","insert","del","ChangeAnnotation","needsConfirmation","ChangeAnnotationIdentifier","AnnotatedTextEdit","annotation","TextDocumentEdit","textDocument","edits","OptionalVersionedTextDocumentIdentifier","CreateFile","RenameFile","oldUri","newUri","DeleteFile","WorkspaceEdit","change","TextDocumentIdentifier","VersionedTextDocumentIdentifier","version","TextDocumentItem","languageId","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","isIncomplete","MarkedString","fromPlainText","plainText","Hover","ParameterInformation","documentation","SignatureInformation","parameters","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","containerName","WorkspaceSymbol","DocumentSymbol","detail","selectionRange","CodeActionKind","CodeActionTriggerKind","CodeActionContext","diagnostics","only","triggerKind","CodeAction","kindOrCommandOrEdit","checkKind","CodeLens","FormattingOptions","tabSize","insertSpaces","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","caseSensitiveLookup","InlineValueEvaluatableExpression","expression","InlineValueContext","frameId","stoppedLocation","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","createSnippet","InlineCompletionItem","insertText","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","selectedCompletionInfo","WorkspaceFolder","TextDocument","content","FullTextDocument","applyEdits","sortedEdits","mergeSort","diff","lastModifiedOffset","startOffset","endOffset","compare","p","left","right","leftIdx","rightIdx","start","end","lineOffsets","isLineStart","ch","offset","low","high","mid","lineOffset","nextLineOffset","toString","defined","undefined","boolean","string","number","numberRange","min","max","func","objectLiteral","typedArray","check","CharacterStream","sourceText","char","pattern","match","isMatched","didEat","consume","caseFold","indent","whitespaces","pos","opt","ofRule","separator","butNot","exclusions","ruleMatch","exclusion","style","isIgnored","LexRules","ParseRules","word","stream","onlineParser","initialState","pushRule","getToken","lexRules","parseRules","eatWhitespace","editorConfig","popRule","advanceRule","lex","SpecialParseRules","backupState","assign","levels","expected","unsuccessful","to","from","ruleKind","successful","isList","step","kinds","AdditionalRuleKinds","RuleKinds","SuggestionCommand","collectFragmentDefs","op","externalFragments","parse","getAutocompleteSuggestions","queryText","cursor","contextToken","opts","getTokenAtPosition","getTypeInfo","getSuggestionsForImplements","getSuggestionsForFieldNames","argDefs","objectFields","completionKind","getSuggestionsForInputValues","namedInputType","getVariableCompletions","v","getSuggestionsForFragmentTypeConditions","getSuggestionsForFragmentSpread","getSuggestionsForVariableDefinition","getSuggestionsForDirective","insertSuffix","getInsertText","queryVariables","documentText","schemaInterfaces","schemaInterfaceNames","inlineInterfaces","runOnlineParser","_e","interfaceConfig","objectTypeConfig","currentTypeToExtend","siblingInterfaceNames","possibleInterfaces","_kind","possibleObjTypes","possibleIfaceMap","defState","getFragmentDefinitions","relevantFrags","getParentDefinition","_f","_g","_h","_j","_k","variableType","definitions","parentDefinition","inputTypeMap","inputTypes","canUseDirective","styleAtCursor","stateAtCursor","stringAtCursor","callback","lines","parser","objectTypeDef","objectFieldDefs","interfaceDef","val","objectField","nullthrows","nullthrowsModule","this","completer","schemaRef","completePos","completions","getOperationDefsPosInEditor","tree","syntaxTree","defs","generateSelectedOpDecors","selectedPos","defsPositions","Decoration","decors","info","decor","selectedGQLOpHighlight","ViewPlugin","view","u","queryEditor","copyQueryIcon","prettifyQueryIcon","gqlQueryString","debouncedOnUpdateQueryState","debounce","update","queryString","operations","gql.parse","queryCompleter","markRaw","prettifyQuery","gql.print","copyQuery","clearGQLQuery","saveRequest","interceptorService","useService","selectedOptionTab","computedWithControl","activeGQLHeadersCount","showSaveRequestModal","startTime","startPageProgress","runURL","runQuery2","runVariables","runAuth","inheritedHeaders","runHeaders","duration","completePageProgress","newVal","hideRequestModal","editGraphqlRequest","tab","undefinedEq","eq","mapThenEq","lodashIsEqualEq","HoppGQLRequestEq","Eq.struct","S.Eq","N.Eq","arr","isEqualHoppGQLRequest","oldRequest","updatedValue","renameAction","closeAction","closeOthersAction","duplicateAction","connectionSwitchModal","connected","onConnectClick","gqlConnect","switchConnection","lastTwoUrls","cancelSwitch","inspectionService","InspectionService","confirmingCloseForTabID","usePageHead","activeTabs","addNewTab","getDefaultGQLRequest","sortTabs","removeTab","tabID","tabState","onCloseConfirm","onResolveConfirm","confirmingCloseAllTabs","unsavedTabsCount","exceptedTabID","closeOtherTabsAction","dirtyTabCount","onResolveConfirmCloseAllTabs","onTabUpdate","onBeforeUnmount","editReqModalReqName","showRenamingReqNameModalForTabID","openReqRenameModal","renameReqName","duplicateTab","newTab","saveContext"],"mappings":"i8DAQO,IAAIA,GAAa,SAAUC,EAAQ,CAAE,MAAQ,CAChD,OAAQ,SAAUC,EAAGC,EAAG,CAAE,OAAOD,IAAMC,GAAKF,EAAOC,EAAGC,CAAC,CAAI,CAC/D,GAOWC,GAAS,SAAUC,EAAK,CAC/B,OAAOL,GAAW,SAAUM,EAAOC,EAAQ,CACvC,QAASC,KAAOH,EACZ,GAAI,CAACA,EAAIG,CAAG,EAAE,OAAOF,EAAME,CAAG,EAAGD,EAAOC,CAAG,CAAC,EACxC,MAAO,GAGf,MAAO,EACf,CAAK,CACL,ECXWC,GAAK,CACZ,OAAQ,SAAUH,EAAOC,EAAQ,CAAE,OAAOD,IAAUC,CAAS,CACjE,EAKWG,GAAM,CACb,OAAQD,GAAG,OACX,QAAS,SAAUH,EAAOC,EAAQ,CAAE,OAAQD,EAAQC,EAAS,GAAKD,EAAQC,EAAS,EAAI,CAAK,CAChG,EAMYE,GAAG,OACFC,GAAI,QChCjB,MAAMC,GAAkB,EAKjB,SAASC,GAAWC,EAAUC,EAAW,CAC9C,KAAM,CAACC,EAAYC,CAAc,EAAIF,EACjC,CAACD,EAAUC,CAAS,EACpB,CAAC,OAAWD,CAAQ,EACxB,IAAII,EAAU,iBAEVF,IACFE,GAAWF,EAAa,KAG1B,MAAMG,EAAcF,EAAe,IAAKd,GAAM,IAAIA,CAAC,GAAG,EAEtD,OAAQgB,EAAY,OAAM,CACxB,IAAK,GACH,MAAO,GAET,IAAK,GACH,OAAOD,EAAUC,EAAY,CAAC,EAAI,IAEpC,IAAK,GACH,OAAOD,EAAUC,EAAY,CAAC,EAAI,OAASA,EAAY,CAAC,EAAI,GAC/D,CAED,MAAMC,EAAWD,EAAY,MAAM,EAAGP,EAAe,EAC/CS,EAAWD,EAAS,MAC1B,OAAOF,EAAUE,EAAS,KAAK,IAAI,EAAI,QAAUC,EAAW,GAC9D,CC5BO,SAASC,GAAanB,EAAG,CAC9B,OAAOA,CACT,CCsBO,SAASoB,GAAOC,EAAMC,EAAO,CAClC,MAAMC,EAAS,OAAO,OAAO,IAAI,EAEjC,UAAWC,KAAQH,EACjBE,EAAOD,EAAME,CAAI,CAAC,EAAIA,EAGxB,OAAOD,CACT,CClBO,SAASE,GAAUJ,EAAMC,EAAOI,EAAO,CAC5C,MAAMH,EAAS,OAAO,OAAO,IAAI,EAEjC,UAAWC,KAAQH,EACjBE,EAAOD,EAAME,CAAI,CAAC,EAAIE,EAAMF,CAAI,EAGlC,OAAOD,CACT,CCrBO,SAASI,GAASC,EAAKC,EAAI,CAChC,MAAMN,EAAS,OAAO,OAAO,IAAI,EAEjC,UAAWjB,KAAO,OAAO,KAAKsB,CAAG,EAC/BL,EAAOjB,CAAG,EAAIuB,EAAGD,EAAItB,CAAG,EAAGA,CAAG,EAGhC,OAAOiB,CACT,CCLO,SAASO,GAAeC,EAAMC,EAAM,CACzC,IAAIC,EAAS,EACTC,EAAS,EAEb,KAAOD,EAASF,EAAK,QAAUG,EAASF,EAAK,QAAQ,CACnD,IAAIG,EAAQJ,EAAK,WAAWE,CAAM,EAC9BG,EAAQJ,EAAK,WAAWE,CAAM,EAElC,GAAIG,GAAQF,CAAK,GAAKE,GAAQD,CAAK,EAAG,CACpC,IAAIE,EAAO,EAEX,EACE,EAAEL,EACFK,EAAOA,EAAO,GAAKH,EAAQI,GAC3BJ,EAAQJ,EAAK,WAAWE,CAAM,QACvBI,GAAQF,CAAK,GAAKG,EAAO,GAElC,IAAIE,EAAO,EAEX,EACE,EAAEN,EACFM,EAAOA,EAAO,GAAKJ,EAAQG,GAC3BH,EAAQJ,EAAK,WAAWE,CAAM,QACvBG,GAAQD,CAAK,GAAKI,EAAO,GAElC,GAAIF,EAAOE,EACT,MAAO,GAGT,GAAIF,EAAOE,EACT,MAAO,EAEf,KAAW,CACL,GAAIL,EAAQC,EACV,MAAO,GAGT,GAAID,EAAQC,EACV,MAAO,GAGT,EAAEH,EACF,EAAEC,CACH,CACF,CAED,OAAOH,EAAK,OAASC,EAAK,MAC5B,CACA,MAAMO,GAAU,GACVE,GAAU,GAEhB,SAASJ,GAAQK,EAAM,CACrB,MAAO,CAAC,MAAMA,CAAI,GAAKH,IAAWG,GAAQA,GAAQD,EACpD,CCtDO,SAASE,GAAeC,EAAOC,EAAS,CAC7C,MAAMC,EAAoB,OAAO,OAAO,IAAI,EACtCC,EAAkB,IAAIC,GAAgBJ,CAAK,EAC3CK,EAAY,KAAK,MAAML,EAAM,OAAS,EAAG,EAAI,EAEnD,UAAWM,KAAUL,EAAS,CAC5B,MAAMM,EAAWJ,EAAgB,QAAQG,EAAQD,CAAS,EAEtDE,IAAa,SACfL,EAAkBI,CAAM,EAAIC,EAE/B,CAED,OAAO,OAAO,KAAKL,CAAiB,EAAE,KAAK,CAACM,EAAGC,IAAM,CACnD,MAAMC,EAAeR,EAAkBM,CAAC,EAAIN,EAAkBO,CAAC,EAC/D,OAAOC,IAAiB,EAAIA,EAAexB,GAAesB,EAAGC,CAAC,CAClE,CAAG,CACH,CAgBA,MAAML,EAAgB,CACpB,YAAYJ,EAAO,CACjB,KAAK,OAASA,EACd,KAAK,gBAAkBA,EAAM,cAC7B,KAAK,YAAcW,GAAc,KAAK,eAAe,EACrD,KAAK,MAAQ,CACX,IAAI,MAAMX,EAAM,OAAS,CAAC,EAAE,KAAK,CAAC,EAClC,IAAI,MAAMA,EAAM,OAAS,CAAC,EAAE,KAAK,CAAC,EAClC,IAAI,MAAMA,EAAM,OAAS,CAAC,EAAE,KAAK,CAAC,CACxC,CACG,CAED,QAAQM,EAAQD,EAAW,CACzB,GAAI,KAAK,SAAWC,EAClB,MAAO,GAGT,MAAMM,EAAkBN,EAAO,cAE/B,GAAI,KAAK,kBAAoBM,EAC3B,MAAO,GAGT,IAAIJ,EAAIG,GAAcC,CAAe,EACjCH,EAAI,KAAK,YAEb,GAAID,EAAE,OAASC,EAAE,OAAQ,CACvB,MAAMI,EAAML,EACZA,EAAIC,EACJA,EAAII,CACL,CAED,MAAMC,EAAUN,EAAE,OACZO,EAAUN,EAAE,OAElB,GAAIK,EAAUC,EAAUV,EACtB,OAGF,MAAMW,EAAO,KAAK,MAElB,QAASC,EAAI,EAAGA,GAAKF,EAASE,IAC5BD,EAAK,CAAC,EAAEC,CAAC,EAAIA,EAGf,QAASC,EAAI,EAAGA,GAAKJ,EAASI,IAAK,CACjC,MAAMC,EAAQH,GAAME,EAAI,GAAK,CAAC,EACxBE,EAAaJ,EAAKE,EAAI,CAAC,EAC7B,IAAIG,EAAgBD,EAAW,CAAC,EAAIF,EAEpC,QAASD,EAAI,EAAGA,GAAKF,EAASE,IAAK,CACjC,MAAMK,EAAOd,EAAEU,EAAI,CAAC,IAAMT,EAAEQ,EAAI,CAAC,EAAI,EAAI,EACzC,IAAIM,EAAc,KAAK,IACrBJ,EAAMF,CAAC,EAAI,EACXG,EAAWH,EAAI,CAAC,EAAI,EACpBE,EAAMF,EAAI,CAAC,EAAIK,CACzB,EAEQ,GAAIJ,EAAI,GAAKD,EAAI,GAAKT,EAAEU,EAAI,CAAC,IAAMT,EAAEQ,EAAI,CAAC,GAAKT,EAAEU,EAAI,CAAC,IAAMT,EAAEQ,EAAI,CAAC,EAAG,CAEpE,MAAMO,EAAqBR,GAAME,EAAI,GAAK,CAAC,EAAED,EAAI,CAAC,EAClDM,EAAc,KAAK,IAAIA,EAAaC,EAAqB,CAAC,CAC3D,CAEGD,EAAcF,IAChBA,EAAeE,GAGjBH,EAAWH,CAAC,EAAIM,CACjB,CAED,GAAIF,EAAehB,EACjB,MAEH,CAED,MAAME,EAAWS,EAAKF,EAAU,CAAC,EAAEC,CAAO,EAC1C,OAAOR,GAAYF,EAAYE,EAAW,MAC3C,CACH,CAEA,SAASI,GAAcc,EAAK,CAC1B,MAAMC,EAAYD,EAAI,OAChBE,EAAQ,IAAI,MAAMD,CAAS,EAEjC,QAAS,EAAI,EAAG,EAAIA,EAAW,EAAE,EAC/BC,EAAM,CAAC,EAAIF,EAAI,WAAW,CAAC,EAG7B,OAAOE,CACT,CCjIO,SAASC,GAASC,EAAK,CAC5B,GAAIA,GAAO,KACT,OAAO,OAAO,OAAO,IAAI,EAG3B,GAAI,OAAO,eAAeA,CAAG,IAAM,KACjC,OAAOA,EAGT,MAAM7C,EAAM,OAAO,OAAO,IAAI,EAE9B,SAAW,CAACtB,EAAKoE,CAAK,IAAK,OAAO,QAAQD,CAAG,EAC3C7C,EAAItB,CAAG,EAAIoE,EAGb,OAAO9C,CACT,CCGO,SAAS+C,GAAoBC,EAAWC,EAAW,CACxD,OAAQD,EAAU,KAAI,CACpB,KAAKE,EAAK,KACR,OAAO,KAET,KAAKA,EAAK,IACR,OAAO,SAASF,EAAU,MAAO,EAAE,EAErC,KAAKE,EAAK,MACR,OAAO,WAAWF,EAAU,KAAK,EAEnC,KAAKE,EAAK,OACV,KAAKA,EAAK,KACV,KAAKA,EAAK,QACR,OAAOF,EAAU,MAEnB,KAAKE,EAAK,KACR,OAAOF,EAAU,OAAO,IAAKG,GAC3BJ,GAAoBI,EAAMF,CAAS,CAC3C,EAEI,KAAKC,EAAK,OACR,OAAOrD,GACLmD,EAAU,OACTI,GAAUA,EAAM,KAAK,MACrBA,GAAUL,GAAoBK,EAAM,MAAOH,CAAS,CAC7D,EAEI,KAAKC,EAAK,SACR,OAAOD,GAAc,KACjB,OACAA,EAAUD,EAAU,KAAK,KAAK,CACrC,CACH,CC7CO,SAASK,GAAWC,EAAM,CAI/B,GAHAA,GAAQ,MAAQC,GAAU,GAAO,oBAAoB,EACrD,OAAOD,GAAS,UAAYC,GAAU,GAAO,+BAA+B,EAExED,EAAK,SAAW,EAClB,MAAM,IAAIE,EAAa,yCAAyC,EAGlE,QAAStB,EAAI,EAAGA,EAAIoB,EAAK,OAAQ,EAAEpB,EACjC,GAAI,CAACuB,GAAeH,EAAK,WAAWpB,CAAC,CAAC,EACpC,MAAM,IAAIsB,EACR,6CAA6CF,CAAI,aACzD,EAIE,GAAI,CAACI,GAAYJ,EAAK,WAAW,CAAC,CAAC,EACjC,MAAM,IAAIE,EACR,wCAAwCF,CAAI,aAClD,EAGE,OAAOA,CACT,CAOO,SAASK,GAAoBL,EAAM,CACxC,GAAIA,IAAS,QAAUA,IAAS,SAAWA,IAAS,OAClD,MAAM,IAAIE,EAAa,gCAAgCF,CAAI,EAAE,EAG/D,OAAOD,GAAWC,CAAI,CACxB,CC3BO,SAASM,GAAOC,EAAM,CAC3B,OACEC,GAAaD,CAAI,GACjBE,GAAaF,CAAI,GACjBG,GAAgBH,CAAI,GACpBI,GAAYJ,CAAI,GAChBK,GAAWL,CAAI,GACfM,GAAkBN,CAAI,GACtBO,GAAWP,CAAI,GACfQ,GAAcR,CAAI,CAEtB,CAYO,SAASC,GAAaD,EAAM,CACjC,OAAOS,GAAWT,EAAMU,EAAiB,CAC3C,CAQO,SAASR,GAAaF,EAAM,CACjC,OAAOS,GAAWT,EAAMW,EAAiB,CAC3C,CACO,SAASC,GAAiBZ,EAAM,CACrC,GAAI,CAACE,GAAaF,CAAI,EACpB,MAAM,IAAI,MAAM,YAAYa,EAAQb,CAAI,CAAC,+BAA+B,EAG1E,OAAOA,CACT,CACO,SAASG,GAAgBH,EAAM,CACpC,OAAOS,GAAWT,EAAMc,EAAoB,CAC9C,CACO,SAASC,GAAoBf,EAAM,CACxC,GAAI,CAACG,GAAgBH,CAAI,EACvB,MAAM,IAAI,MACR,YAAYa,EAAQb,CAAI,CAAC,kCAC/B,EAGE,OAAOA,CACT,CACO,SAASI,GAAYJ,EAAM,CAChC,OAAOS,GAAWT,EAAMgB,EAAgB,CAC1C,CAQO,SAASX,GAAWL,EAAM,CAC/B,OAAOS,GAAWT,EAAMiB,EAAe,CACzC,CAQO,SAASX,GAAkBN,EAAM,CACtC,OAAOS,GAAWT,EAAMkB,EAAsB,CAChD,CAUO,SAASX,GAAWP,EAAM,CAC/B,OAAOS,GAAWT,EAAMmB,EAAW,CACrC,CAQO,SAASX,GAAcR,EAAM,CAClC,OAAOS,GAAWT,EAAMoB,CAAc,CACxC,CAYO,SAASC,GAAYrB,EAAM,CAChC,OACEC,GAAaD,CAAI,GACjBK,GAAWL,CAAI,GACfM,GAAkBN,CAAI,GACrBsB,GAAetB,CAAI,GAAKqB,GAAYrB,EAAK,MAAM,CAEpD,CAYO,SAASuB,GAAavB,EAAM,CACjC,OACEC,GAAaD,CAAI,GACjBE,GAAaF,CAAI,GACjBG,GAAgBH,CAAI,GACpBI,GAAYJ,CAAI,GAChBK,GAAWL,CAAI,GACdsB,GAAetB,CAAI,GAAKuB,GAAavB,EAAK,MAAM,CAErD,CAYO,SAASwB,GAAWxB,EAAM,CAC/B,OAAOC,GAAaD,CAAI,GAAKK,GAAWL,CAAI,CAC9C,CAYO,SAASyB,GAAgBzB,EAAM,CACpC,OAAOE,GAAaF,CAAI,GAAKG,GAAgBH,CAAI,GAAKI,GAAYJ,CAAI,CACxE,CAcO,SAAS0B,GAAe1B,EAAM,CACnC,OAAOG,GAAgBH,CAAI,GAAKI,GAAYJ,CAAI,CAClD,CACO,SAAS2B,GAAmB3B,EAAM,CACvC,GAAI,CAAC0B,GAAe1B,CAAI,EACtB,MAAM,IAAI,MAAM,YAAYa,EAAQb,CAAI,CAAC,iCAAiC,EAG5E,OAAOA,CACT,CAqBO,MAAMmB,EAAY,CACvB,YAAYS,EAAQ,CAClB7B,GAAO6B,CAAM,GACXlC,GAAU,GAAO,YAAYmB,EAAQe,CAAM,CAAC,wBAAwB,EACtE,KAAK,OAASA,CACf,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,aACR,CAED,UAAW,CACT,MAAO,IAAM,OAAO,KAAK,MAAM,EAAI,GACpC,CAED,QAAS,CACP,OAAO,KAAK,UACb,CACH,CAuBO,MAAMR,CAAe,CAC1B,YAAYQ,EAAQ,CAClBC,GAAeD,CAAM,GACnBlC,GACE,GACA,YAAYmB,EAAQe,CAAM,CAAC,iCACnC,EACI,KAAK,OAASA,CACf,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,gBACR,CAED,UAAW,CACT,OAAO,OAAO,KAAK,MAAM,EAAI,GAC9B,CAED,QAAS,CACP,OAAO,KAAK,UACb,CACH,CAKO,SAASN,GAAetB,EAAM,CACnC,OAAOO,GAAWP,CAAI,GAAKQ,GAAcR,CAAI,CAC/C,CAYO,SAAS6B,GAAe7B,EAAM,CACnC,OAAOD,GAAOC,CAAI,GAAK,CAACQ,GAAcR,CAAI,CAC5C,CACO,SAAS8B,GAAmB9B,EAAM,CACvC,GAAI,CAAC6B,GAAe7B,CAAI,EACtB,MAAM,IAAI,MAAM,YAAYa,EAAQb,CAAI,CAAC,iCAAiC,EAG5E,OAAOA,CACT,CACO,SAAS+B,GAAgB/B,EAAM,CACpC,GAAIA,EACF,OAAOQ,GAAcR,CAAI,EAAIA,EAAK,OAASA,CAE/C,CAKO,SAASgC,GAAYhC,EAAM,CAChC,OACEC,GAAaD,CAAI,GACjBE,GAAaF,CAAI,GACjBG,GAAgBH,CAAI,GACpBI,GAAYJ,CAAI,GAChBK,GAAWL,CAAI,GACfM,GAAkBN,CAAI,CAE1B,CAQO,SAASiC,GAAajC,EAAM,CACjC,GAAIA,EAAM,CACR,IAAIkC,EAAgBlC,EAEpB,KAAOsB,GAAeY,CAAa,GACjCA,EAAgBA,EAAc,OAGhC,OAAOA,CACR,CACH,CAMO,SAASC,GAA0BC,EAAO,CAC/C,OAAO,OAAOA,GAAU,WAAaA,EAAK,EAAKA,CACjD,CACO,SAASC,GAAmBD,EAAO,CACxC,OAAO,OAAOA,GAAU,WAAaA,EAAK,EAAKA,CACjD,CA0CO,MAAM1B,EAAkB,CAC7B,YAAY4B,EAAQ,CAClB,IAAIC,EACFC,EACAC,EACAC,EAEF,MAAMC,GACHJ,EAAqBD,EAAO,cAAgB,MAC7CC,IAAuB,OACnBA,EACA7G,GACN,KAAK,KAAO8D,GAAW8C,EAAO,IAAI,EAClC,KAAK,YAAcA,EAAO,YAC1B,KAAK,eAAiBA,EAAO,eAC7B,KAAK,WACFE,EAAoBF,EAAO,aAAe,MAC3CE,IAAsB,OAClBA,EACA9G,GACN,KAAK,WAAaiH,EAClB,KAAK,cACFF,EAAuBH,EAAO,gBAAkB,MACjDG,IAAyB,OACrBA,EACA,CAACnD,EAAMF,IAAcuD,EAAWzD,GAAoBI,EAAMF,CAAS,CAAC,EAC1E,KAAK,WAAaL,GAASuD,EAAO,UAAU,EAC5C,KAAK,QAAUA,EAAO,QACtB,KAAK,mBACFI,EAAwBJ,EAAO,qBAAuB,MACvDI,IAA0B,OACtBA,EACA,GACNJ,EAAO,gBAAkB,MACvB,OAAOA,EAAO,gBAAmB,UACjC5C,GACE,GACA,GAAG,KAAK,IAAI,wDACEmB,EAAQyB,EAAO,cAAc,CAAC,GACpD,EACIA,EAAO,WAAa,MAClB,OAAOA,EAAO,WAAc,YAC5B5C,GACE,GACA,GAAG,KAAK,IAAI,8JACpB,EAEQ4C,EAAO,eACR,OAAOA,EAAO,YAAe,YAC5B,OAAOA,EAAO,cAAiB,YAC/B5C,GACE,GACA,GAAG,KAAK,IAAI,+DACtB,EAEG,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,mBACR,CAED,UAAW,CACT,MAAO,CACL,KAAM,KAAK,KACX,YAAa,KAAK,YAClB,eAAgB,KAAK,eACrB,UAAW,KAAK,UAChB,WAAY,KAAK,WACjB,aAAc,KAAK,aACnB,WAAY,KAAK,WACjB,QAAS,KAAK,QACd,kBAAmB,KAAK,iBAC9B,CACG,CAED,UAAW,CACT,OAAO,KAAK,IACb,CAED,QAAS,CACP,OAAO,KAAK,UACb,CACH,CA0CO,MAAMiB,EAAkB,CAC7B,YAAY2B,EAAQ,CAClB,IAAIM,EAEJ,KAAK,KAAOpD,GAAW8C,EAAO,IAAI,EAClC,KAAK,YAAcA,EAAO,YAC1B,KAAK,SAAWA,EAAO,SACvB,KAAK,WAAavD,GAASuD,EAAO,UAAU,EAC5C,KAAK,QAAUA,EAAO,QACtB,KAAK,mBACFM,EAAyBN,EAAO,qBAAuB,MACxDM,IAA2B,OACvBA,EACA,GAEN,KAAK,QAAU,IAAMC,GAAeP,CAAM,EAE1C,KAAK,YAAc,IAAMQ,GAAiBR,CAAM,EAEhDA,EAAO,UAAY,MACjB,OAAOA,EAAO,UAAa,YAC3B5C,GACE,GACA,GAAG,KAAK,IAAI,oDACEmB,EAAQyB,EAAO,QAAQ,CAAC,GAC9C,CACG,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,mBACR,CAED,WAAY,CACV,OAAI,OAAO,KAAK,SAAY,aAC1B,KAAK,QAAU,KAAK,WAGf,KAAK,OACb,CAED,eAAgB,CACd,OAAI,OAAO,KAAK,aAAgB,aAC9B,KAAK,YAAc,KAAK,eAGnB,KAAK,WACb,CAED,UAAW,CACT,MAAO,CACL,KAAM,KAAK,KACX,YAAa,KAAK,YAClB,WAAY,KAAK,cAAe,EAChC,OAAQS,GAAqB,KAAK,WAAW,EAC7C,SAAU,KAAK,SACf,WAAY,KAAK,WACjB,QAAS,KAAK,QACd,kBAAmB,KAAK,iBAC9B,CACG,CAED,UAAW,CACT,OAAO,KAAK,IACb,CAED,QAAS,CACP,OAAO,KAAK,UACb,CACH,CAEA,SAASD,GAAiBR,EAAQ,CAChC,IAAIU,EAEJ,MAAMC,EAAad,IAChBa,EAAqBV,EAAO,cAAgB,MAC3CU,IAAuB,OACrBA,EACA,CAAE,CACV,EACE,aAAM,QAAQC,CAAU,GACtBvD,GACE,GACA,GAAG4C,EAAO,IAAI,oEACpB,EACSW,CACT,CAEA,SAASJ,GAAeP,EAAQ,CAC9B,MAAMY,EAAWb,GAAmBC,EAAO,MAAM,EACjD,OAAAa,GAAWD,CAAQ,GACjBxD,GACE,GACA,GAAG4C,EAAO,IAAI,gGACpB,EACSpG,GAASgH,EAAU,CAACE,EAAaC,IAAc,CACpD,IAAIC,EAEJH,GAAWC,CAAW,GACpB1D,GACE,GACA,GAAG4C,EAAO,IAAI,IAAIe,CAAS,kCACnC,EACID,EAAY,SAAW,MACrB,OAAOA,EAAY,SAAY,YAC/B1D,GACE,GACA,GAAG4C,EAAO,IAAI,IAAIe,CAAS,4DACHxC,EAAQuC,EAAY,OAAO,CAAC,GAC5D,EACI,MAAMG,GACHD,EAAoBF,EAAY,QAAU,MAC3CE,IAAsB,OAClBA,EACA,GACN,OAAAH,GAAWI,CAAU,GACnB7D,GACE,GACA,GAAG4C,EAAO,IAAI,IAAIe,CAAS,sDACnC,EACW,CACL,KAAM7D,GAAW6D,CAAS,EAC1B,YAAaD,EAAY,YACzB,KAAMA,EAAY,KAClB,KAAMI,GAAgBD,CAAU,EAChC,QAASH,EAAY,QACrB,UAAWA,EAAY,UACvB,kBAAmBA,EAAY,kBAC/B,WAAYrE,GAASqE,EAAY,UAAU,EAC3C,QAASA,EAAY,OAC3B,CACA,CAAG,CACH,CAEO,SAASI,GAAgBlB,EAAQ,CACtC,OAAO,OAAO,QAAQA,CAAM,EAAE,IAAI,CAAC,CAACmB,EAASC,CAAS,KAAO,CAC3D,KAAMlE,GAAWiE,CAAO,EACxB,YAAaC,EAAU,YACvB,KAAMA,EAAU,KAChB,aAAcA,EAAU,aACxB,kBAAmBA,EAAU,kBAC7B,WAAY3E,GAAS2E,EAAU,UAAU,EACzC,QAASA,EAAU,OACpB,EAAC,CACJ,CAEA,SAASP,GAAWnE,EAAK,CACvB,OAAO2E,GAAa3E,CAAG,GAAK,CAAC,MAAM,QAAQA,CAAG,CAChD,CAEA,SAAS+D,GAAqBa,EAAQ,CACpC,OAAO1H,GAAS0H,EAASrE,IAAW,CAClC,YAAaA,EAAM,YACnB,KAAMA,EAAM,KACZ,KAAMsE,GAAiBtE,EAAM,IAAI,EACjC,QAASA,EAAM,QACf,UAAWA,EAAM,UACjB,kBAAmBA,EAAM,kBACzB,WAAYA,EAAM,WAClB,QAASA,EAAM,OAChB,EAAC,CACJ,CAKO,SAASsE,GAAiBC,EAAM,CACrC,OAAO9H,GACL8H,EACCC,GAAQA,EAAI,KACZA,IAAS,CACR,YAAaA,EAAI,YACjB,KAAMA,EAAI,KACV,aAAcA,EAAI,aAClB,kBAAmBA,EAAI,kBACvB,WAAYA,EAAI,WAChB,QAASA,EAAI,OACnB,EACA,CACA,CACO,SAASC,GAAmBD,EAAK,CACtC,OAAOvD,GAAcuD,EAAI,IAAI,GAAKA,EAAI,eAAiB,MACzD,CAqBO,MAAMjD,EAAqB,CAChC,YAAYwB,EAAQ,CAClB,IAAI2B,EAEJ,KAAK,KAAOzE,GAAW8C,EAAO,IAAI,EAClC,KAAK,YAAcA,EAAO,YAC1B,KAAK,YAAcA,EAAO,YAC1B,KAAK,WAAavD,GAASuD,EAAO,UAAU,EAC5C,KAAK,QAAUA,EAAO,QACtB,KAAK,mBACF2B,EAAyB3B,EAAO,qBAAuB,MACxD2B,IAA2B,OACvBA,EACA,GACN,KAAK,QAAUpB,GAAe,KAAK,OAAWP,CAAM,EACpD,KAAK,YAAcQ,GAAiB,KAAK,OAAWR,CAAM,EAC1DA,EAAO,aAAe,MACpB,OAAOA,EAAO,aAAgB,YAC9B5C,GACE,GACA,GAAG,KAAK,IAAI,uDACEmB,EAAQyB,EAAO,WAAW,CAAC,GACjD,CACG,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,sBACR,CAED,WAAY,CACV,OAAI,OAAO,KAAK,SAAY,aAC1B,KAAK,QAAU,KAAK,WAGf,KAAK,OACb,CAED,eAAgB,CACd,OAAI,OAAO,KAAK,aAAgB,aAC9B,KAAK,YAAc,KAAK,eAGnB,KAAK,WACb,CAED,UAAW,CACT,MAAO,CACL,KAAM,KAAK,KACX,YAAa,KAAK,YAClB,WAAY,KAAK,cAAe,EAChC,OAAQS,GAAqB,KAAK,WAAW,EAC7C,YAAa,KAAK,YAClB,WAAY,KAAK,WACjB,QAAS,KAAK,QACd,kBAAmB,KAAK,iBAC9B,CACG,CAED,UAAW,CACT,OAAO,KAAK,IACb,CAED,QAAS,CACP,OAAO,KAAK,UACb,CACH,CA0BO,MAAM/B,EAAiB,CAC5B,YAAYsB,EAAQ,CAClB,IAAI4B,EAEJ,KAAK,KAAO1E,GAAW8C,EAAO,IAAI,EAClC,KAAK,YAAcA,EAAO,YAC1B,KAAK,YAAcA,EAAO,YAC1B,KAAK,WAAavD,GAASuD,EAAO,UAAU,EAC5C,KAAK,QAAUA,EAAO,QACtB,KAAK,mBACF4B,EAAyB5B,EAAO,qBAAuB,MACxD4B,IAA2B,OACvBA,EACA,GACN,KAAK,OAASC,GAAY,KAAK,OAAW7B,CAAM,EAChDA,EAAO,aAAe,MACpB,OAAOA,EAAO,aAAgB,YAC9B5C,GACE,GACA,GAAG,KAAK,IAAI,uDACEmB,EAAQyB,EAAO,WAAW,CAAC,GACjD,CACG,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,kBACR,CAED,UAAW,CACT,OAAI,OAAO,KAAK,QAAW,aACzB,KAAK,OAAS,KAAK,UAGd,KAAK,MACb,CAED,UAAW,CACT,MAAO,CACL,KAAM,KAAK,KACX,YAAa,KAAK,YAClB,MAAO,KAAK,SAAU,EACtB,YAAa,KAAK,YAClB,WAAY,KAAK,WACjB,QAAS,KAAK,QACd,kBAAmB,KAAK,iBAC9B,CACG,CAED,UAAW,CACT,OAAO,KAAK,IACb,CAED,QAAS,CACP,OAAO,KAAK,UACb,CACH,CAEA,SAAS6B,GAAY7B,EAAQ,CAC3B,MAAM8B,EAAQjC,GAA0BG,EAAO,KAAK,EACpD,aAAM,QAAQ8B,CAAK,GACjB1E,GACE,GACA,mFAAmF4C,EAAO,IAAI,GACpG,EACS8B,CACT,CAyBO,MAAMnD,EAAgB,CAE3B,YAAYqB,EAAQ,CAClB,IAAI+B,EAEJ,KAAK,KAAO7E,GAAW8C,EAAO,IAAI,EAClC,KAAK,YAAcA,EAAO,YAC1B,KAAK,WAAavD,GAASuD,EAAO,UAAU,EAC5C,KAAK,QAAUA,EAAO,QACtB,KAAK,mBACF+B,EAAyB/B,EAAO,qBAAuB,MACxD+B,IAA2B,OACvBA,EACA,GACN,KAAK,QAAUC,GAAiB,KAAK,KAAMhC,EAAO,MAAM,EACxD,KAAK,aAAe,IAAI,IACtB,KAAK,QAAQ,IAAKiC,GAAc,CAACA,EAAU,MAAOA,CAAS,CAAC,CAClE,EACI,KAAK,YAAc5I,GAAO,KAAK,QAAUsD,GAAUA,EAAM,IAAI,CAC9D,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,iBACR,CAED,WAAY,CACV,OAAO,KAAK,OACb,CAED,SAASQ,EAAM,CACb,OAAO,KAAK,YAAYA,CAAI,CAC7B,CAED,UAAU+E,EAAa,CACrB,MAAMD,EAAY,KAAK,aAAa,IAAIC,CAAW,EAEnD,GAAID,IAAc,OAChB,MAAM,IAAI5E,EACR,SAAS,KAAK,IAAI,6BAA6BkB,EAAQ2D,CAAW,CAAC,EAC3E,EAGI,OAAOD,EAAU,IAClB,CAED,WAAWE,EACX,CACE,GAAI,OAAOA,GAAe,SAAU,CAClC,MAAMC,EAAW7D,EAAQ4D,CAAU,EACnC,MAAM,IAAI9E,EACR,SAAS,KAAK,IAAI,wCAAwC+E,CAAQ,IAChEC,GAAoB,KAAMD,CAAQ,CAC5C,CACK,CAED,MAAMH,EAAY,KAAK,SAASE,CAAU,EAE1C,GAAIF,GAAa,KACf,MAAM,IAAI5E,EACR,UAAU8E,CAAU,wBAAwB,KAAK,IAAI,UACnDE,GAAoB,KAAMF,CAAU,CAC9C,EAGI,OAAOF,EAAU,KAClB,CAED,aAAapF,EAAWyF,EACxB,CAEE,GAAIzF,EAAU,OAASE,EAAK,KAAM,CAChC,MAAMqF,EAAWG,GAAM1F,CAAS,EAChC,MAAM,IAAIQ,EACR,SAAS,KAAK,IAAI,sCAAsC+E,CAAQ,IAC9DC,GAAoB,KAAMD,CAAQ,EACpC,CACE,MAAOvF,CACR,CACT,CACK,CAED,MAAMoF,EAAY,KAAK,SAASpF,EAAU,KAAK,EAE/C,GAAIoF,GAAa,KAAM,CACrB,MAAMG,EAAWG,GAAM1F,CAAS,EAChC,MAAM,IAAIQ,EACR,UAAU+E,CAAQ,wBAAwB,KAAK,IAAI,UACjDC,GAAoB,KAAMD,CAAQ,EACpC,CACE,MAAOvF,CACR,CACT,CACK,CAED,OAAOoF,EAAU,KAClB,CAED,UAAW,CACT,MAAMO,EAAS9I,GACb,KAAK,UAAW,EACfiD,GAAUA,EAAM,KAChBA,IAAW,CACV,YAAaA,EAAM,YACnB,MAAOA,EAAM,MACb,kBAAmBA,EAAM,kBACzB,WAAYA,EAAM,WAClB,QAASA,EAAM,OACvB,EACA,EACI,MAAO,CACL,KAAM,KAAK,KACX,YAAa,KAAK,YAClB,OAAA6F,EACA,WAAY,KAAK,WACjB,QAAS,KAAK,QACd,kBAAmB,KAAK,iBAC9B,CACG,CAED,UAAW,CACT,OAAO,KAAK,IACb,CAED,QAAS,CACP,OAAO,KAAK,UACb,CACH,CAEA,SAASH,GAAoBI,EAAUC,EAAiB,CACtD,MAAMC,EAAWF,EAAS,UAAW,EAAC,IAAK9F,GAAUA,EAAM,IAAI,EACzDiG,EAAkBhI,GAAe8H,EAAiBC,CAAQ,EAChE,OAAOhK,GAAW,iBAAkBiK,CAAe,CACrD,CAEA,SAASZ,GAAiBa,EAAUC,EAAU,CAC5C,OAAAjC,GAAWiC,CAAQ,GACjB1F,GACE,GACA,GAAGyF,CAAQ,qDACjB,EACS,OAAO,QAAQC,CAAQ,EAAE,IAAI,CAAC,CAACC,EAAWC,CAAW,KAC1DnC,GAAWmC,CAAW,GACpB5F,GACE,GACA,GAAGyF,CAAQ,IAAIE,CAAS,uFACqBxE,EAAQyE,CAAW,CAAC,GACzE,EACW,CACL,KAAMxF,GAAoBuF,CAAS,EACnC,YAAaC,EAAY,YACzB,MAAOA,EAAY,QAAU,OAAYA,EAAY,MAAQD,EAC7D,kBAAmBC,EAAY,kBAC/B,WAAYvG,GAASuG,EAAY,UAAU,EAC3C,QAASA,EAAY,OAC3B,EACG,CACH,CAuBO,MAAMpE,EAAuB,CAClC,YAAYoB,EAAQ,CAClB,IAAIiD,EAEJ,KAAK,KAAO/F,GAAW8C,EAAO,IAAI,EAClC,KAAK,YAAcA,EAAO,YAC1B,KAAK,WAAavD,GAASuD,EAAO,UAAU,EAC5C,KAAK,QAAUA,EAAO,QACtB,KAAK,mBACFiD,EAAyBjD,EAAO,qBAAuB,MACxDiD,IAA2B,OACvBA,EACA,GACN,KAAK,QAAUC,GAAoB,KAAK,OAAWlD,CAAM,CAC1D,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,wBACR,CAED,WAAY,CACV,OAAI,OAAO,KAAK,SAAY,aAC1B,KAAK,QAAU,KAAK,WAGf,KAAK,OACb,CAED,UAAW,CACT,MAAMsB,EAAS1H,GAAS,KAAK,UAAW,EAAGqD,IAAW,CACpD,YAAaA,EAAM,YACnB,KAAMA,EAAM,KACZ,aAAcA,EAAM,aACpB,kBAAmBA,EAAM,kBACzB,WAAYA,EAAM,WAClB,QAASA,EAAM,OAChB,EAAC,EACF,MAAO,CACL,KAAM,KAAK,KACX,YAAa,KAAK,YAClB,OAAAqE,EACA,WAAY,KAAK,WACjB,QAAS,KAAK,QACd,kBAAmB,KAAK,iBAC9B,CACG,CAED,UAAW,CACT,OAAO,KAAK,IACb,CAED,QAAS,CACP,OAAO,KAAK,UACb,CACH,CAEA,SAAS4B,GAAoBlD,EAAQ,CACnC,MAAMY,EAAWb,GAAmBC,EAAO,MAAM,EACjD,OAAAa,GAAWD,CAAQ,GACjBxD,GACE,GACA,GAAG4C,EAAO,IAAI,gGACpB,EACSpG,GAASgH,EAAU,CAACE,EAAaC,KACtC,EAAE,YAAaD,IACb1D,GACE,GACA,GAAG4C,EAAO,IAAI,IAAIe,CAAS,yEACnC,EACW,CACL,KAAM7D,GAAW6D,CAAS,EAC1B,YAAaD,EAAY,YACzB,KAAMA,EAAY,KAClB,aAAcA,EAAY,aAC1B,kBAAmBA,EAAY,kBAC/B,WAAYrE,GAASqE,EAAY,UAAU,EAC3C,QAASA,EAAY,OAC3B,EACG,CACH,CAEO,SAASqC,GAAqBlG,EAAO,CAC1C,OAAOiB,GAAcjB,EAAM,IAAI,GAAKA,EAAM,eAAiB,MAC7D,CC7oCO,SAASmG,GAAYC,EAAOC,EAAO,CAExC,OAAID,IAAUC,EACL,GAGLpF,GAAcmF,CAAK,GAAKnF,GAAcoF,CAAK,GAI3CrF,GAAWoF,CAAK,GAAKpF,GAAWqF,CAAK,EAChCF,GAAYC,EAAM,OAAQC,EAAM,MAAM,EAGxC,EACT,CAMO,SAASC,GAAgBC,EAAQC,EAAcC,EAAW,CAE/D,OAAID,IAAiBC,EACZ,GAGLxF,GAAcwF,CAAS,EACrBxF,GAAcuF,CAAY,EACrBF,GAAgBC,EAAQC,EAAa,OAAQC,EAAU,MAAM,EAG/D,GAGLxF,GAAcuF,CAAY,EAErBF,GAAgBC,EAAQC,EAAa,OAAQC,CAAS,EAG3DzF,GAAWyF,CAAS,EAClBzF,GAAWwF,CAAY,EAClBF,GAAgBC,EAAQC,EAAa,OAAQC,EAAU,MAAM,EAG/D,GAGLzF,GAAWwF,CAAY,EAElB,GAKPrE,GAAesE,CAAS,IACvB7F,GAAgB4F,CAAY,GAAK7F,GAAa6F,CAAY,IAC3DD,EAAO,UAAUE,EAAWD,CAAY,CAE5C,CAWO,SAASE,GAAeH,EAAQH,EAAOC,EAAO,CAEnD,OAAID,IAAUC,EACL,GAGLlE,GAAeiE,CAAK,EAClBjE,GAAekE,CAAK,EAGfE,EACJ,iBAAiBH,CAAK,EACtB,KAAM3F,GAAS8F,EAAO,UAAUF,EAAO5F,CAAI,CAAC,EAG1C8F,EAAO,UAAUH,EAAOC,CAAK,EAGlClE,GAAekE,CAAK,EAEfE,EAAO,UAAUF,EAAOD,CAAK,EAG/B,EACT,CC9FO,MAAMO,GAAkB,WAMlBC,GAAkB,YAClBC,GAAa,IAAI1F,GAAkB,CAC9C,KAAM,MACN,YACE,sIAEF,UAAU8D,EAAa,CACrB,MAAM6B,EAAeC,GAAgB9B,CAAW,EAEhD,GAAI,OAAO6B,GAAiB,UAC1B,OAAOA,EAAe,EAAI,EAG5B,IAAIE,EAAMF,EAMV,GAJI,OAAOA,GAAiB,UAAYA,IAAiB,KACvDE,EAAM,OAAOF,CAAY,GAGvB,OAAOE,GAAQ,UAAY,CAAC,OAAO,UAAUA,CAAG,EAClD,MAAM,IAAI5G,EACR,2CAA2CkB,EAAQwF,CAAY,CAAC,EACxE,EAGI,GAAIE,EAAML,IAAmBK,EAAMJ,GACjC,MAAM,IAAIxG,EACR,yDACEkB,EAAQwF,CAAY,CAC9B,EAGI,OAAOE,CACR,EAED,WAAW9B,EAAY,CACrB,GAAI,OAAOA,GAAe,UAAY,CAAC,OAAO,UAAUA,CAAU,EAChE,MAAM,IAAI9E,EACR,2CAA2CkB,EAAQ4D,CAAU,CAAC,EACtE,EAGI,GAAIA,EAAayB,IAAmBzB,EAAa0B,GAC/C,MAAM,IAAIxG,EACR,yDAAyD8E,CAAU,EAC3E,EAGI,OAAOA,CACR,EAED,aAAatF,EAAW,CACtB,GAAIA,EAAU,OAASE,EAAK,IAC1B,MAAM,IAAIM,EACR,2CAA2CkF,GAAM1F,CAAS,CAAC,GAC3D,CACE,MAAOA,CACR,CACT,EAGI,MAAMoH,EAAM,SAASpH,EAAU,MAAO,EAAE,EAExC,GAAIoH,EAAML,IAAmBK,EAAMJ,GACjC,MAAM,IAAIxG,EACR,yDAAyDR,EAAU,KAAK,GACxE,CACE,MAAOA,CACR,CACT,EAGI,OAAOoH,CACR,CACH,CAAC,EACYC,GAAe,IAAI9F,GAAkB,CAChD,KAAM,QACN,YACE,8JAEF,UAAU8D,EAAa,CACrB,MAAM6B,EAAeC,GAAgB9B,CAAW,EAEhD,GAAI,OAAO6B,GAAiB,UAC1B,OAAOA,EAAe,EAAI,EAG5B,IAAIE,EAAMF,EAMV,GAJI,OAAOA,GAAiB,UAAYA,IAAiB,KACvDE,EAAM,OAAOF,CAAY,GAGvB,OAAOE,GAAQ,UAAY,CAAC,OAAO,SAASA,CAAG,EACjD,MAAM,IAAI5G,EACR,6CAA6CkB,EAAQwF,CAAY,CAAC,EAC1E,EAGI,OAAOE,CACR,EAED,WAAW9B,EAAY,CACrB,GAAI,OAAOA,GAAe,UAAY,CAAC,OAAO,SAASA,CAAU,EAC/D,MAAM,IAAI9E,EACR,6CAA6CkB,EAAQ4D,CAAU,CAAC,EACxE,EAGI,OAAOA,CACR,EAED,aAAatF,EAAW,CACtB,GAAIA,EAAU,OAASE,EAAK,OAASF,EAAU,OAASE,EAAK,IAC3D,MAAM,IAAIM,EACR,6CAA6CkF,GAAM1F,CAAS,CAAC,GAC7DA,CACR,EAGI,OAAO,WAAWA,EAAU,KAAK,CAClC,CACH,CAAC,EACYsH,GAAgB,IAAI/F,GAAkB,CACjD,KAAM,SACN,YACE,wLAEF,UAAU8D,EAAa,CACrB,MAAM6B,EAAeC,GAAgB9B,CAAW,EAGhD,GAAI,OAAO6B,GAAiB,SAC1B,OAAOA,EAGT,GAAI,OAAOA,GAAiB,UAC1B,OAAOA,EAAe,OAAS,QAGjC,GAAI,OAAOA,GAAiB,UAAY,OAAO,SAASA,CAAY,EAClE,OAAOA,EAAa,WAGtB,MAAM,IAAI1G,EACR,kCAAkCkB,EAAQ2D,CAAW,CAAC,EAC5D,CACG,EAED,WAAWC,EAAY,CACrB,GAAI,OAAOA,GAAe,SACxB,MAAM,IAAI9E,EACR,+CAA+CkB,EAAQ4D,CAAU,CAAC,EAC1E,EAGI,OAAOA,CACR,EAED,aAAatF,EAAW,CACtB,GAAIA,EAAU,OAASE,EAAK,OAC1B,MAAM,IAAIM,EACR,+CAA+CkF,GAAM1F,CAAS,CAAC,GAC/D,CACE,MAAOA,CACR,CACT,EAGI,OAAOA,EAAU,KAClB,CACH,CAAC,EACYuH,GAAiB,IAAIhG,GAAkB,CAClD,KAAM,UACN,YAAa,0DAEb,UAAU8D,EAAa,CACrB,MAAM6B,EAAeC,GAAgB9B,CAAW,EAEhD,GAAI,OAAO6B,GAAiB,UAC1B,OAAOA,EAGT,GAAI,OAAO,SAASA,CAAY,EAC9B,OAAOA,IAAiB,EAG1B,MAAM,IAAI1G,EACR,iDAAiDkB,EAAQwF,CAAY,CAAC,EAC5E,CACG,EAED,WAAW5B,EAAY,CACrB,GAAI,OAAOA,GAAe,UACxB,MAAM,IAAI9E,EACR,iDAAiDkB,EAAQ4D,CAAU,CAAC,EAC5E,EAGI,OAAOA,CACR,EAED,aAAatF,EAAW,CACtB,GAAIA,EAAU,OAASE,EAAK,QAC1B,MAAM,IAAIM,EACR,iDAAiDkF,GAAM1F,CAAS,CAAC,GACjE,CACE,MAAOA,CACR,CACT,EAGI,OAAOA,EAAU,KAClB,CACH,CAAC,EACYwH,GAAY,IAAIjG,GAAkB,CAC7C,KAAM,KACN,YACE,+UAEF,UAAU8D,EAAa,CACrB,MAAM6B,EAAeC,GAAgB9B,CAAW,EAEhD,GAAI,OAAO6B,GAAiB,SAC1B,OAAOA,EAGT,GAAI,OAAO,UAAUA,CAAY,EAC/B,OAAO,OAAOA,CAAY,EAG5B,MAAM,IAAI1G,EACR,8BAA8BkB,EAAQ2D,CAAW,CAAC,EACxD,CACG,EAED,WAAWC,EAAY,CACrB,GAAI,OAAOA,GAAe,SACxB,OAAOA,EAGT,GAAI,OAAOA,GAAe,UAAY,OAAO,UAAUA,CAAU,EAC/D,OAAOA,EAAW,WAGpB,MAAM,IAAI9E,EAAa,8BAA8BkB,EAAQ4D,CAAU,CAAC,EAAE,CAC3E,EAED,aAAatF,EAAW,CACtB,GAAIA,EAAU,OAASE,EAAK,QAAUF,EAAU,OAASE,EAAK,IAC5D,MAAM,IAAIM,EACR,2DACEkF,GAAM1F,CAAS,EACjB,CACE,MAAOA,CACR,CACT,EAGI,OAAOA,EAAU,KAClB,CACH,CAAC,EACYyH,GAAuB,OAAO,OAAO,CAChDH,GACAL,GACAI,GACAE,GACAC,EACF,CAAC,EACM,SAASE,GAAsB7G,EAAM,CAC1C,OAAO4G,GAAqB,KAAK,CAAC,CAAE,KAAAnH,CAAM,IAAKO,EAAK,OAASP,CAAI,CACnE,CAIA,SAAS6G,GAAgB9B,EAAa,CACpC,GAAIb,GAAaa,CAAW,EAAG,CAC7B,GAAI,OAAOA,EAAY,SAAY,WAAY,CAC7C,MAAMsC,EAAgBtC,EAAY,UAElC,GAAI,CAACb,GAAamD,CAAa,EAC7B,OAAOA,CAEV,CAED,GAAI,OAAOtC,EAAY,QAAW,WAChC,OAAOA,EAAY,QAEtB,CAED,OAAOA,CACT,CCnSO,SAASuC,GAAYC,EAAW,CACrC,OAAOvG,GAAWuG,EAAWC,EAAgB,CAC/C,CAwBO,MAAMA,EAAiB,CAC5B,YAAY3E,EAAQ,CAClB,IAAI4E,EAAsBC,EAE1B,KAAK,KAAO3H,GAAW8C,EAAO,IAAI,EAClC,KAAK,YAAcA,EAAO,YAC1B,KAAK,UAAYA,EAAO,UACxB,KAAK,cACF4E,EAAuB5E,EAAO,gBAAkB,MACjD4E,IAAyB,OACrBA,EACA,GACN,KAAK,WAAanI,GAASuD,EAAO,UAAU,EAC5C,KAAK,QAAUA,EAAO,QACtB,MAAM,QAAQA,EAAO,SAAS,GAC5B5C,GAAU,GAAO,IAAI4C,EAAO,IAAI,8BAA8B,EAChE,MAAMwB,GACHqD,EAAe7E,EAAO,QAAU,MAAQ6E,IAAiB,OACtDA,EACA,GACLxD,GAAaG,CAAI,GAAK,CAAC,MAAM,QAAQA,CAAI,GACxCpE,GACE,GACA,IAAI4C,EAAO,IAAI,sDACvB,EACI,KAAK,KAAOkB,GAAgBM,CAAI,CACjC,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,kBACR,CAED,UAAW,CACT,MAAO,CACL,KAAM,KAAK,KACX,YAAa,KAAK,YAClB,UAAW,KAAK,UAChB,KAAMD,GAAiB,KAAK,IAAI,EAChC,aAAc,KAAK,aACnB,WAAY,KAAK,WACjB,QAAS,KAAK,OACpB,CACG,CAED,UAAW,CACT,MAAO,IAAM,KAAK,IACnB,CAED,QAAS,CACP,OAAO,KAAK,UACb,CACH,CAKO,MAAMuD,GAA0B,IAAIH,GAAiB,CAC1D,KAAM,UACN,YACE,8FACF,UAAW,CACTI,EAAkB,MAClBA,EAAkB,gBAClBA,EAAkB,eACnB,EACD,KAAM,CACJ,GAAI,CACF,KAAM,IAAIjG,EAAesF,EAAc,EACvC,YAAa,qBACd,CACF,CACH,CAAC,EAKYY,GAAuB,IAAIL,GAAiB,CACvD,KAAM,OACN,YACE,sFACF,UAAW,CACTI,EAAkB,MAClBA,EAAkB,gBAClBA,EAAkB,eACnB,EACD,KAAM,CACJ,GAAI,CACF,KAAM,IAAIjG,EAAesF,EAAc,EACvC,YAAa,oBACd,CACF,CACH,CAAC,EAKYa,GAA6B,sBAK7BC,GAA6B,IAAIP,GAAiB,CAC7D,KAAM,aACN,YAAa,+DACb,UAAW,CACTI,EAAkB,iBAClBA,EAAkB,oBAClBA,EAAkB,uBAClBA,EAAkB,UACnB,EACD,KAAM,CACJ,OAAQ,CACN,KAAMZ,GACN,YACE,sNACF,aAAcc,EACf,CACF,CACH,CAAC,EAKYE,GAA8B,IAAIR,GAAiB,CAC9D,KAAM,cACN,YAAa,4DACb,UAAW,CAACI,EAAkB,MAAM,EACpC,KAAM,CACJ,IAAK,CACH,KAAM,IAAIjG,EAAeqF,EAAa,EACtC,YAAa,qDACd,CACF,CACH,CAAC,EAKYiB,GAAsB,OAAO,OAAO,CAC/CN,GACAE,GACAE,GACAC,EACF,CAAC,EACM,SAASE,GAAqBX,EAAW,CAC9C,OAAOU,GAAoB,KAAK,CAAC,CAAE,KAAAjI,CAAM,IAAKA,IAASuH,EAAU,IAAI,CACvE,CC5KO,SAASY,GAAiBC,EAAe,CAC9C,OACE,OAAOA,GAAkB,UACzB,OAAQA,GAAkB,KACtB,OACAA,EAAc,OAAO,QAAQ,IAAO,UAE5C,CCWO,SAASC,GAAa7I,EAAOe,EAAM,CACxC,GAAIQ,GAAcR,CAAI,EAAG,CACvB,MAAM+H,EAAWD,GAAa7I,EAAOe,EAAK,MAAM,EAEhD,OACG+H,GAAa,KAA8B,OAASA,EAAS,QAC9D1I,EAAK,KAEE,KAGF0I,CACR,CAED,GAAI9I,IAAU,KACZ,MAAO,CACL,KAAMI,EAAK,IACjB,EAGE,GAAIJ,IAAU,OACZ,OAAO,KAIT,GAAIsB,GAAWP,CAAI,EAAG,CACpB,MAAMgI,EAAWhI,EAAK,OAEtB,GAAI4H,GAAiB3I,CAAK,EAAG,CAC3B,MAAMgJ,EAAc,CAAA,EAEpB,UAAWlM,KAAQkD,EAAO,CACxB,MAAMiJ,EAAWJ,GAAa/L,EAAMiM,CAAQ,EAExCE,GAAY,MACdD,EAAY,KAAKC,CAAQ,CAE5B,CAED,MAAO,CACL,KAAM7I,EAAK,KACX,OAAQ4I,CAChB,CACK,CAED,OAAOH,GAAa7I,EAAO+I,CAAQ,CACpC,CAGD,GAAI1H,GAAkBN,CAAI,EAAG,CAC3B,GAAI,CAAC2D,GAAa1E,CAAK,EACrB,OAAO,KAGT,MAAMkJ,EAAa,CAAA,EAEnB,UAAW5I,KAAS,OAAO,OAAOS,EAAK,UAAS,CAAE,EAAG,CACnD,MAAMoI,EAAaN,GAAa7I,EAAMM,EAAM,IAAI,EAAGA,EAAM,IAAI,EAEzD6I,GACFD,EAAW,KAAK,CACd,KAAM9I,EAAK,aACX,KAAM,CACJ,KAAMA,EAAK,KACX,MAAOE,EAAM,IACd,EACD,MAAO6I,CACjB,CAAS,CAEJ,CAED,MAAO,CACL,KAAM/I,EAAK,OACX,OAAQ8I,CACd,CACG,CAED,GAAI3G,GAAWxB,CAAI,EAAG,CAGpB,MAAMqI,EAAarI,EAAK,UAAUf,CAAK,EAEvC,GAAIoJ,GAAc,KAChB,OAAO,KAGT,GAAI,OAAOA,GAAe,UACxB,MAAO,CACL,KAAMhJ,EAAK,QACX,MAAOgJ,CACf,EAGI,GAAI,OAAOA,GAAe,UAAY,OAAO,SAASA,CAAU,EAAG,CACjE,MAAMC,EAAY,OAAOD,CAAU,EACnC,OAAOE,GAAoB,KAAKD,CAAS,EACrC,CACE,KAAMjJ,EAAK,IACX,MAAOiJ,CACR,EACD,CACE,KAAMjJ,EAAK,MACX,MAAOiJ,CACnB,CACK,CAED,GAAI,OAAOD,GAAe,SAExB,OAAIhI,GAAWL,CAAI,EACV,CACL,KAAMX,EAAK,KACX,MAAOgJ,CACjB,EAGUrI,IAAS2G,IAAa4B,GAAoB,KAAKF,CAAU,EACpD,CACL,KAAMhJ,EAAK,IACX,MAAOgJ,CACjB,EAGa,CACL,KAAMhJ,EAAK,OACX,MAAOgJ,CACf,EAGI,MAAM,IAAI,UAAU,gCAAgCxH,EAAQwH,CAAU,CAAC,GAAG,CAC3E,CAIQG,GAAU,GAAO,0BAA4B3H,EAAQb,CAAI,CAAC,CACrE,CAOA,MAAMuI,GAAsB,wBC3JfE,GAAW,IAAI9H,GAAkB,CAC5C,KAAM,WACN,YACE,4MACF,OAAQ,KAAO,CACb,YAAa,CACX,KAAM8F,GACN,QAAUX,GAAWA,EAAO,WAC7B,EACD,MAAO,CACL,YAAa,gDACb,KAAM,IAAI1E,EAAe,IAAID,GAAY,IAAIC,EAAesH,EAAM,CAAC,CAAC,EAEpE,QAAQ5C,EAAQ,CACd,OAAO,OAAO,OAAOA,EAAO,WAAY,CAAA,CACzC,CACF,EACD,UAAW,CACT,YAAa,oDACb,KAAM,IAAI1E,EAAesH,EAAM,EAC/B,QAAU5C,GAAWA,EAAO,aAAc,CAC3C,EACD,aAAc,CACZ,YACE,yFACF,KAAM4C,GACN,QAAU5C,GAAWA,EAAO,gBAAiB,CAC9C,EACD,iBAAkB,CAChB,YACE,gGACF,KAAM4C,GACN,QAAU5C,GAAWA,EAAO,oBAAqB,CAClD,EACD,WAAY,CACV,YAAa,qDACb,KAAM,IAAI1E,EACR,IAAID,GAAY,IAAIC,EAAeuH,EAAW,CAAC,CAChD,EACD,QAAU7C,GAAWA,EAAO,cAAe,CAC5C,CACL,EACA,CAAC,EACY6C,GAAc,IAAIhI,GAAkB,CAC/C,KAAM,cACN,YACE;AAAA;AAAA,+PACF,OAAQ,KAAO,CACb,KAAM,CACJ,KAAM,IAAIS,EAAeqF,EAAa,EACtC,QAAUO,GAAcA,EAAU,IACnC,EACD,YAAa,CACX,KAAMP,GACN,QAAUO,GAAcA,EAAU,WACnC,EACD,aAAc,CACZ,KAAM,IAAI5F,EAAesF,EAAc,EACvC,QAAUM,GAAcA,EAAU,YACnC,EACD,UAAW,CACT,KAAM,IAAI5F,EACR,IAAID,GAAY,IAAIC,EAAewH,EAAmB,CAAC,CACxD,EACD,QAAU5B,GAAcA,EAAU,SACnC,EACD,KAAM,CACJ,KAAM,IAAI5F,EACR,IAAID,GAAY,IAAIC,EAAeyH,EAAY,CAAC,CACjD,EACD,KAAM,CACJ,kBAAmB,CACjB,KAAMnC,GACN,aAAc,EACf,CACF,EAED,QAAQnH,EAAO,CAAE,kBAAAuJ,GAAqB,CACpC,OAAOA,EACHvJ,EAAM,KACNA,EAAM,KAAK,OAAQwE,GAAQA,EAAI,mBAAqB,IAAI,CAC7D,CACF,CACL,EACA,CAAC,EACY6E,GAAsB,IAAI3H,GAAgB,CACrD,KAAM,sBACN,YACE,oIACF,OAAQ,CACN,MAAO,CACL,MAAOoG,EAAkB,MACzB,YAAa,yCACd,EACD,SAAU,CACR,MAAOA,EAAkB,SACzB,YAAa,4CACd,EACD,aAAc,CACZ,MAAOA,EAAkB,aACzB,YAAa,gDACd,EACD,MAAO,CACL,MAAOA,EAAkB,MACzB,YAAa,+BACd,EACD,oBAAqB,CACnB,MAAOA,EAAkB,oBACzB,YAAa,6CACd,EACD,gBAAiB,CACf,MAAOA,EAAkB,gBACzB,YAAa,yCACd,EACD,gBAAiB,CACf,MAAOA,EAAkB,gBACzB,YAAa,0CACd,EACD,oBAAqB,CACnB,MAAOA,EAAkB,oBACzB,YAAa,6CACd,EACD,OAAQ,CACN,MAAOA,EAAkB,OACzB,YAAa,2CACd,EACD,OAAQ,CACN,MAAOA,EAAkB,OACzB,YAAa,2CACd,EACD,OAAQ,CACN,MAAOA,EAAkB,OACzB,YAAa,iDACd,EACD,iBAAkB,CAChB,MAAOA,EAAkB,iBACzB,YAAa,0CACd,EACD,oBAAqB,CACnB,MAAOA,EAAkB,oBACzB,YAAa,8CACd,EACD,UAAW,CACT,MAAOA,EAAkB,UACzB,YAAa,+CACd,EACD,MAAO,CACL,MAAOA,EAAkB,MACzB,YAAa,0CACd,EACD,KAAM,CACJ,MAAOA,EAAkB,KACzB,YAAa,0CACd,EACD,WAAY,CACV,MAAOA,EAAkB,WACzB,YAAa,gDACd,EACD,aAAc,CACZ,MAAOA,EAAkB,aACzB,YAAa,uDACd,EACD,uBAAwB,CACtB,MAAOA,EAAkB,uBACzB,YAAa,wDACd,CACF,CACH,CAAC,EACYqB,GAAS,IAAI/H,GAAkB,CAC1C,KAAM,SACN,YACE,siBACF,OAAQ,KAAO,CACb,KAAM,CACJ,KAAM,IAAIS,EAAe2H,EAAU,EAEnC,QAAQ/I,EAAM,CACZ,GAAIC,GAAaD,CAAI,EACnB,OAAOgJ,GAAS,OAGlB,GAAI9I,GAAaF,CAAI,EACnB,OAAOgJ,GAAS,OAGlB,GAAI7I,GAAgBH,CAAI,EACtB,OAAOgJ,GAAS,UAGlB,GAAI5I,GAAYJ,CAAI,EAClB,OAAOgJ,GAAS,MAGlB,GAAI3I,GAAWL,CAAI,EACjB,OAAOgJ,GAAS,KAGlB,GAAI1I,GAAkBN,CAAI,EACxB,OAAOgJ,GAAS,aAGlB,GAAIzI,GAAWP,CAAI,EACjB,OAAOgJ,GAAS,KAGlB,GAAIxI,GAAcR,CAAI,EACpB,OAAOgJ,GAAS,SAKTR,GAAU,GAAO,qBAAqB3H,EAAQb,CAAI,CAAC,IAAI,CACjE,CACF,EACD,KAAM,CACJ,KAAMyG,GACN,QAAUzG,GAAU,SAAUA,EAAOA,EAAK,KAAO,MAClD,EACD,YAAa,CACX,KAAMyG,GACN,QACEzG,GAGA,gBAAiBA,EAAOA,EAAK,YAAc,MAC9C,EACD,eAAgB,CACd,KAAMyG,GACN,QAAUzH,GACR,mBAAoBA,EAAMA,EAAI,eAAiB,MAClD,EACD,OAAQ,CACN,KAAM,IAAImC,GAAY,IAAIC,EAAe6H,EAAO,CAAC,EACjD,KAAM,CACJ,kBAAmB,CACjB,KAAMvC,GACN,aAAc,EACf,CACF,EAED,QAAQ1G,EAAM,CAAE,kBAAA8I,GAAqB,CACnC,GAAI5I,GAAaF,CAAI,GAAKG,GAAgBH,CAAI,EAAG,CAC/C,MAAM4D,EAAS,OAAO,OAAO5D,EAAK,UAAW,CAAA,EAC7C,OAAO8I,EACHlF,EACAA,EAAO,OAAQrE,GAAUA,EAAM,mBAAqB,IAAI,CAC7D,CACF,CACF,EACD,WAAY,CACV,KAAM,IAAI4B,GAAY,IAAIC,EAAesH,EAAM,CAAC,EAEhD,QAAQ1I,EAAM,CACZ,GAAIE,GAAaF,CAAI,GAAKG,GAAgBH,CAAI,EAC5C,OAAOA,EAAK,eAEf,CACF,EACD,cAAe,CACb,KAAM,IAAImB,GAAY,IAAIC,EAAesH,EAAM,CAAC,EAEhD,QAAQ1I,EAAMkJ,EAAOC,EAAU,CAAE,OAAArD,CAAM,EAAI,CACzC,GAAIpE,GAAe1B,CAAI,EACrB,OAAO8F,EAAO,iBAAiB9F,CAAI,CAEtC,CACF,EACD,WAAY,CACV,KAAM,IAAImB,GAAY,IAAIC,EAAegI,EAAW,CAAC,EACrD,KAAM,CACJ,kBAAmB,CACjB,KAAM1C,GACN,aAAc,EACf,CACF,EAED,QAAQ1G,EAAM,CAAE,kBAAA8I,GAAqB,CACnC,GAAIzI,GAAWL,CAAI,EAAG,CACpB,MAAM8E,EAAS9E,EAAK,YACpB,OAAO8I,EACHhE,EACAA,EAAO,OAAQvF,GAAUA,EAAM,mBAAqB,IAAI,CAC7D,CACF,CACF,EACD,YAAa,CACX,KAAM,IAAI4B,GAAY,IAAIC,EAAeyH,EAAY,CAAC,EACtD,KAAM,CACJ,kBAAmB,CACjB,KAAMnC,GACN,aAAc,EACf,CACF,EAED,QAAQ1G,EAAM,CAAE,kBAAA8I,GAAqB,CACnC,GAAIxI,GAAkBN,CAAI,EAAG,CAC3B,MAAM8E,EAAS,OAAO,OAAO9E,EAAK,UAAW,CAAA,EAC7C,OAAO8I,EACHhE,EACAA,EAAO,OAAQvF,GAAUA,EAAM,mBAAqB,IAAI,CAC7D,CACF,CACF,EACD,OAAQ,CACN,KAAMmJ,GACN,QAAU1I,GAAU,WAAYA,EAAOA,EAAK,OAAS,MACtD,CACL,EACA,CAAC,EACYiJ,GAAU,IAAItI,GAAkB,CAC3C,KAAM,UACN,YACE,8IACF,OAAQ,KAAO,CACb,KAAM,CACJ,KAAM,IAAIS,EAAeqF,EAAa,EACtC,QAAUlH,GAAUA,EAAM,IAC3B,EACD,YAAa,CACX,KAAMkH,GACN,QAAUlH,GAAUA,EAAM,WAC3B,EACD,KAAM,CACJ,KAAM,IAAI6B,EACR,IAAID,GAAY,IAAIC,EAAeyH,EAAY,CAAC,CACjD,EACD,KAAM,CACJ,kBAAmB,CACjB,KAAMnC,GACN,aAAc,EACf,CACF,EAED,QAAQnH,EAAO,CAAE,kBAAAuJ,GAAqB,CACpC,OAAOA,EACHvJ,EAAM,KACNA,EAAM,KAAK,OAAQwE,GAAQA,EAAI,mBAAqB,IAAI,CAC7D,CACF,EACD,KAAM,CACJ,KAAM,IAAI3C,EAAesH,EAAM,EAC/B,QAAUnJ,GAAUA,EAAM,IAC3B,EACD,aAAc,CACZ,KAAM,IAAI6B,EAAesF,EAAc,EACvC,QAAUnH,GAAUA,EAAM,mBAAqB,IAChD,EACD,kBAAmB,CACjB,KAAMkH,GACN,QAAUlH,GAAUA,EAAM,iBAC3B,CACL,EACA,CAAC,EACYsJ,GAAe,IAAIlI,GAAkB,CAChD,KAAM,eACN,YACE,8KACF,OAAQ,KAAO,CACb,KAAM,CACJ,KAAM,IAAIS,EAAeqF,EAAa,EACtC,QAAUhC,GAAeA,EAAW,IACrC,EACD,YAAa,CACX,KAAMgC,GACN,QAAUhC,GAAeA,EAAW,WACrC,EACD,KAAM,CACJ,KAAM,IAAIrD,EAAesH,EAAM,EAC/B,QAAUjE,GAAeA,EAAW,IACrC,EACD,aAAc,CACZ,KAAMgC,GACN,YACE,kFAEF,QAAQhC,EAAY,CAClB,KAAM,CAAE,KAAAzE,EAAM,aAAAqJ,CAAc,EAAG5E,EACzB6E,EAAWxB,GAAauB,EAAcrJ,CAAI,EAChD,OAAOsJ,EAAWzE,GAAMyE,CAAQ,EAAI,IACrC,CACF,EACD,aAAc,CACZ,KAAM,IAAIlI,EAAesF,EAAc,EACvC,QAAUnH,GAAUA,EAAM,mBAAqB,IAChD,EACD,kBAAmB,CACjB,KAAMkH,GACN,QAAUzH,GAAQA,EAAI,iBACvB,CACL,EACA,CAAC,EACYoK,GAAc,IAAIzI,GAAkB,CAC/C,KAAM,cACN,YACE,yLACF,OAAQ,KAAO,CACb,KAAM,CACJ,KAAM,IAAIS,EAAeqF,EAAa,EACtC,QAAUlC,GAAcA,EAAU,IACnC,EACD,YAAa,CACX,KAAMkC,GACN,QAAUlC,GAAcA,EAAU,WACnC,EACD,aAAc,CACZ,KAAM,IAAInD,EAAesF,EAAc,EACvC,QAAUnC,GAAcA,EAAU,mBAAqB,IACxD,EACD,kBAAmB,CACjB,KAAMkC,GACN,QAAUlC,GAAcA,EAAU,iBACnC,CACL,EACA,CAAC,EACD,IAAIyE,IAEH,SAAUA,EAAU,CACnBA,EAAS,OAAY,SACrBA,EAAS,OAAY,SACrBA,EAAS,UAAe,YACxBA,EAAS,MAAW,QACpBA,EAAS,KAAU,OACnBA,EAAS,aAAkB,eAC3BA,EAAS,KAAU,OACnBA,EAAS,SAAc,UACzB,GAAGA,KAAaA,GAAW,CAAE,EAAC,EAGvB,MAAMD,GAAa,IAAI9H,GAAgB,CAC5C,KAAM,aACN,YAAa,4DACb,OAAQ,CACN,OAAQ,CACN,MAAO+H,GAAS,OAChB,YAAa,kCACd,EACD,OAAQ,CACN,MAAOA,GAAS,OAChB,YACE,+EACH,EACD,UAAW,CACT,MAAOA,GAAS,UAChB,YACE,oGACH,EACD,MAAO,CACL,MAAOA,GAAS,MAChB,YACE,mEACH,EACD,KAAM,CACJ,MAAOA,GAAS,KAChB,YACE,gEACH,EACD,aAAc,CACZ,MAAOA,GAAS,aAChB,YACE,yEACH,EACD,KAAM,CACJ,MAAOA,GAAS,KAChB,YAAa,2DACd,EACD,SAAU,CACR,MAAOA,GAAS,SAChB,YACE,+DACH,CACF,CACH,CAAC,EAMYO,GAAqB,CAChC,KAAM,WACN,KAAM,IAAInI,EAAeqH,EAAQ,EACjC,YAAa,iDACb,KAAM,CAAE,EACR,QAAS,CAACe,EAASN,EAAOC,EAAU,CAAE,OAAArD,CAAM,IAAOA,EACnD,kBAAmB,OACnB,WAAY,OAAO,OAAO,IAAI,EAC9B,QAAS,MACX,EACa2D,GAAmB,CAC9B,KAAM,SACN,KAAMf,GACN,YAAa,iDACb,KAAM,CACJ,CACE,KAAM,OACN,YAAa,OACb,KAAM,IAAItH,EAAeqF,EAAa,EACtC,aAAc,OACd,kBAAmB,OACnB,WAAY,OAAO,OAAO,IAAI,EAC9B,QAAS,MACV,CACF,EACD,QAAS,CAAC+C,EAAS,CAAE,KAAA/J,GAAQ0J,EAAU,CAAE,OAAArD,KAAaA,EAAO,QAAQrG,CAAI,EACzE,kBAAmB,OACnB,WAAY,OAAO,OAAO,IAAI,EAC9B,QAAS,MACX,EACaiK,GAAuB,CAClC,KAAM,aACN,KAAM,IAAItI,EAAeqF,EAAa,EACtC,YAAa,kDACb,KAAM,CAAE,EACR,QAAS,CAAC+C,EAASN,EAAOC,EAAU,CAAE,WAAAQ,CAAU,IAAOA,EAAW,KAClE,kBAAmB,OACnB,WAAY,OAAO,OAAO,IAAI,EAC9B,QAAS,MACX,EACaC,GAAqB,OAAO,OAAO,CAC9CnB,GACAE,GACAC,GACAF,GACAO,GACAJ,GACAO,GACAL,EACF,CAAC,EACM,SAASc,GAAoB7J,EAAM,CACxC,OAAO4J,GAAmB,KAAK,CAAC,CAAE,KAAAnK,CAAM,IAAKO,EAAK,OAASP,CAAI,CACjE,CCnhBO,SAASqK,GAAShE,EAAQ,CAC/B,OAAOrF,GAAWqF,EAAQiE,EAAa,CACzC,CACO,SAASC,GAAalE,EAAQ,CACnC,GAAI,CAACgE,GAAShE,CAAM,EAClB,MAAM,IAAI,MAAM,YAAYjF,EAAQiF,CAAM,CAAC,0BAA0B,EAGvE,OAAOA,CACT,CA+EO,MAAMiE,EAAc,CAEzB,YAAYzH,EAAQ,CAClB,IAAII,EAAuBuH,EAI3B,KAAK,mBAAqB3H,EAAO,cAAgB,GAAO,CAAE,EAAG,OAE7DqB,GAAarB,CAAM,GACjB5C,GAAU,GAAO,oCAAoC,EACvD,CAAC4C,EAAO,OACN,MAAM,QAAQA,EAAO,KAAK,GAC1B5C,GACE,GACA,8CAA8CmB,EAAQyB,EAAO,KAAK,CAAC,GAC3E,EACI,CAACA,EAAO,YACN,MAAM,QAAQA,EAAO,UAAU,GAC/B5C,GACE,GACA,mDACKmB,EAAQyB,EAAO,UAAU,CAAC,GACvC,EACI,KAAK,YAAcA,EAAO,YAC1B,KAAK,WAAavD,GAASuD,EAAO,UAAU,EAC5C,KAAK,QAAUA,EAAO,QACtB,KAAK,mBACFI,EAAwBJ,EAAO,qBAAuB,MACvDI,IAA0B,OACtBA,EACA,GACN,KAAK,WAAaJ,EAAO,MACzB,KAAK,cAAgBA,EAAO,SAC5B,KAAK,kBAAoBA,EAAO,aAEhC,KAAK,aACF2H,EAAqB3H,EAAO,cAAgB,MAC7C2H,IAAuB,OACnBA,EACAvC,GAGN,MAAMwC,EAAqB,IAAI,IAAI5H,EAAO,KAAK,EAE/C,GAAIA,EAAO,OAAS,KAClB,UAAWtC,KAAQsC,EAAO,MAGxB4H,EAAmB,OAAOlK,CAAI,EAC9BmK,GAAuBnK,EAAMkK,CAAkB,EAI/C,KAAK,YAAc,MACrBC,GAAuB,KAAK,WAAYD,CAAkB,EAGxD,KAAK,eAAiB,MACxBC,GAAuB,KAAK,cAAeD,CAAkB,EAG3D,KAAK,mBAAqB,MAC5BC,GAAuB,KAAK,kBAAmBD,CAAkB,EAGnE,UAAWlD,KAAa,KAAK,YAE3B,GAAID,GAAYC,CAAS,EACvB,UAAWjD,KAAOiD,EAAU,KAC1BmD,GAAuBpG,EAAI,KAAMmG,CAAkB,EAKzDC,GAAuB1B,GAAUyB,CAAkB,EAEnD,KAAK,SAAW,OAAO,OAAO,IAAI,EAClC,KAAK,YAAc,OAAO,OAAO,IAAI,EAErC,KAAK,oBAAsB,OAAO,OAAO,IAAI,EAE7C,UAAWE,KAAaF,EAAoB,CAC1C,GAAIE,GAAa,KACf,SAGF,MAAMjF,EAAWiF,EAAU,KAO3B,GANAjF,GACEzF,GACE,GACA,sEACV,EAEU,KAAK,SAASyF,CAAQ,IAAM,OAC9B,MAAM,IAAI,MACR,+EAA+EA,CAAQ,IACjG,EAKM,GAFA,KAAK,SAASA,CAAQ,EAAIiF,EAEtBjK,GAAgBiK,CAAS,GAE3B,UAAWC,KAASD,EAAU,gBAC5B,GAAIjK,GAAgBkK,CAAK,EAAG,CAC1B,IAAIC,EAAkB,KAAK,oBAAoBD,EAAM,IAAI,EAErDC,IAAoB,SACtBA,EAAkB,KAAK,oBAAoBD,EAAM,IAAI,EAAI,CACvD,QAAS,CAAE,EACX,WAAY,CAAE,CAC9B,GAGYC,EAAgB,WAAW,KAAKF,CAAS,CAC1C,UAEMlK,GAAakK,CAAS,GAE/B,UAAWC,KAASD,EAAU,gBAC5B,GAAIjK,GAAgBkK,CAAK,EAAG,CAC1B,IAAIC,EAAkB,KAAK,oBAAoBD,EAAM,IAAI,EAErDC,IAAoB,SACtBA,EAAkB,KAAK,oBAAoBD,EAAM,IAAI,EAAI,CACvD,QAAS,CAAE,EACX,WAAY,CAAE,CAC9B,GAGYC,EAAgB,QAAQ,KAAKF,CAAS,CACvC,EAGN,CACF,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,eACR,CAED,cAAe,CACb,OAAO,KAAK,UACb,CAED,iBAAkB,CAChB,OAAO,KAAK,aACb,CAED,qBAAsB,CACpB,OAAO,KAAK,iBACb,CAED,YAAYG,EAAW,CACrB,OAAQA,EAAS,CACf,KAAKC,GAAkB,MACrB,OAAO,KAAK,eAEd,KAAKA,GAAkB,SACrB,OAAO,KAAK,kBAEd,KAAKA,GAAkB,aACrB,OAAO,KAAK,qBACf,CACF,CAED,YAAa,CACX,OAAO,KAAK,QACb,CAED,QAAQ/K,EAAM,CACZ,OAAO,KAAK,aAAaA,CAAI,CAC9B,CAED,iBAAiBgL,EAAc,CAC7B,OAAOrK,GAAYqK,CAAY,EAC3BA,EAAa,SAAU,EACvB,KAAK,mBAAmBA,CAAY,EAAE,OAC3C,CAED,mBAAmBC,EAAe,CAChC,MAAMJ,EAAkB,KAAK,oBAAoBI,EAAc,IAAI,EACnE,OAAOJ,GAEH,CACE,QAAS,CAAE,EACX,WAAY,CAAE,CACxB,CACG,CAED,UAAUG,EAAc1E,EAAc,CACpC,IAAI5J,EAAM,KAAK,YAAYsO,EAAa,IAAI,EAE5C,GAAItO,IAAQ,OAAW,CAGrB,GAFAA,EAAM,OAAO,OAAO,IAAI,EAEpBiE,GAAYqK,CAAY,EAC1B,UAAWzK,KAAQyK,EAAa,WAC9BtO,EAAI6D,EAAK,IAAI,EAAI,OAEd,CACL,MAAMsK,EAAkB,KAAK,mBAAmBG,CAAY,EAE5D,UAAWzK,KAAQsK,EAAgB,QACjCnO,EAAI6D,EAAK,IAAI,EAAI,GAGnB,UAAWA,KAAQsK,EAAgB,WACjCnO,EAAI6D,EAAK,IAAI,EAAI,EAEpB,CAED,KAAK,YAAYyK,EAAa,IAAI,EAAItO,CACvC,CAED,OAAOA,EAAI4J,EAAa,IAAI,IAAM,MACnC,CAED,eAAgB,CACd,OAAO,KAAK,WACb,CAED,aAAatG,EAAM,CACjB,OAAO,KAAK,cAAa,EAAG,KAAMuH,GAAcA,EAAU,OAASvH,CAAI,CACxE,CAED,UAAW,CACT,MAAO,CACL,YAAa,KAAK,YAClB,MAAO,KAAK,aAAc,EAC1B,SAAU,KAAK,gBAAiB,EAChC,aAAc,KAAK,oBAAqB,EACxC,MAAO,OAAO,OAAO,KAAK,WAAU,CAAE,EACtC,WAAY,KAAK,cAAe,EAChC,WAAY,KAAK,WACjB,QAAS,KAAK,QACd,kBAAmB,KAAK,kBACxB,YAAa,KAAK,qBAAuB,MAC/C,CACG,CACH,CAEA,SAAS0K,GAAuBnK,EAAM2K,EAAS,CAC7C,MAAMP,EAAYnI,GAAajC,CAAI,EAEnC,GAAI,CAAC2K,EAAQ,IAAIP,CAAS,GAGxB,GAFAO,EAAQ,IAAIP,CAAS,EAEjBhK,GAAYgK,CAAS,EACvB,UAAWQ,KAAcR,EAAU,WACjCD,GAAuBS,EAAYD,CAAO,UAEnCzK,GAAakK,CAAS,GAAKjK,GAAgBiK,CAAS,EAAG,CAChE,UAAWM,KAAiBN,EAAU,gBACpCD,GAAuBO,EAAeC,CAAO,EAG/C,UAAWpL,KAAS,OAAO,OAAO6K,EAAU,UAAS,CAAE,EAAG,CACxDD,GAAuB5K,EAAM,KAAMoL,CAAO,EAE1C,UAAW5G,KAAOxE,EAAM,KACtB4K,GAAuBpG,EAAI,KAAM4G,CAAO,CAE3C,CACP,SAAerK,GAAkB8J,CAAS,EACpC,UAAW7K,KAAS,OAAO,OAAO6K,EAAU,UAAS,CAAE,EACrDD,GAAuB5K,EAAM,KAAMoL,CAAO,EAKhD,OAAOA,CACT,CChWO,SAASE,GAAe/E,EAAQ,CAIrC,GAFAkE,GAAalE,CAAM,EAEfA,EAAO,mBACT,OAAOA,EAAO,mBAGhB,MAAMgF,EAAU,IAAIC,GAAwBjF,CAAM,EAClDkF,GAAkBF,CAAO,EACzBG,GAAmBH,CAAO,EAC1BI,GAAcJ,CAAO,EAGrB,MAAMK,EAASL,EAAQ,YACvB,OAAAhF,EAAO,mBAAqBqF,EACrBA,CACT,CAMO,SAASC,GAAkBtF,EAAQ,CACxC,MAAMqF,EAASN,GAAe/E,CAAM,EAEpC,GAAIqF,EAAO,SAAW,EACpB,MAAM,IAAI,MAAMA,EAAO,IAAKE,GAAUA,EAAM,OAAO,EAAE,KAAK;AAAA;AAAA,CAAM,CAAC,CAErE,CAEA,MAAMN,EAAwB,CAC5B,YAAYjF,EAAQ,CAClB,KAAK,QAAU,GACf,KAAK,OAASA,CACf,CAED,YAAYxK,EAASgQ,EAAO,CAC1B,MAAMC,EAAS,MAAM,QAAQD,CAAK,EAAIA,EAAM,OAAO,OAAO,EAAIA,EAE9D,KAAK,QAAQ,KACX,IAAI3L,EAAarE,EAAS,CACxB,MAAOiQ,CACf,CAAO,CACP,CACG,CAED,WAAY,CACV,OAAO,KAAK,OACb,CACH,CAEA,SAASP,GAAkBF,EAAS,CAClC,MAAMhF,EAASgF,EAAQ,OACjBU,EAAY1F,EAAO,eAEzB,GAAI,CAAC0F,EACHV,EAAQ,YAAY,oCAAqChF,EAAO,OAAO,UAC9D,CAAC5F,GAAasL,CAAS,EAAG,CACnC,IAAIC,EAEJX,EAAQ,YACN,qDAAqDjK,EACnD2K,CACD,CAAA,KACAC,EAAwBC,GACvB5F,EACA0E,GAAkB,KAC1B,KAAa,MAAQiB,IAA0B,OACrCA,EACAD,EAAU,OACpB,CACG,CAED,MAAMG,EAAe7F,EAAO,kBAE5B,GAAI6F,GAAgB,CAACzL,GAAayL,CAAY,EAAG,CAC/C,IAAIC,EAEJd,EAAQ,YACN,oEACKjK,EAAQ8K,CAAY,CAAC,KACzBC,EAAyBF,GACxB5F,EACA0E,GAAkB,QAC1B,KAAa,MAAQoB,IAA2B,OACtCA,EACAD,EAAa,OACvB,CACG,CAED,MAAME,EAAmB/F,EAAO,sBAEhC,GAAI+F,GAAoB,CAAC3L,GAAa2L,CAAgB,EAAG,CACvD,IAAIC,EAEJhB,EAAQ,YACN,wEACKjK,EAAQgL,CAAgB,CAAC,KAC7BC,EAAyBJ,GACxB5F,EACA0E,GAAkB,YAC1B,KAAa,MAAQsB,IAA2B,OACtCA,EACAD,EAAiB,OAC3B,CACG,CACH,CAEA,SAASH,GAAqB5F,EAAQyE,EAAW,CAC/C,IAAIwB,EAEJ,OAAQA,EAAgB,CAACjG,EAAO,QAAS,GAAGA,EAAO,iBAAiB,EACjE,QAEEkG,GAAe,CACd,IAAIC,EAEJ,OAEGA,EACCD,GAAe,KACX,OACAA,EAAW,kBAAoB,MACnCC,IAA0B,OACxBA,EACA,CAAE,CAET,CACF,EACA,KAAMC,GAAkBA,EAAc,YAAc3B,CAAS,KAAO,MACrEwB,IAAkB,OAChB,OACAA,EAAc,IACpB,CAEA,SAASd,GAAmBH,EAAS,CACnC,UAAW9D,KAAa8D,EAAQ,OAAO,cAAa,EAAI,CAEtD,GAAI,CAAC/D,GAAYC,CAAS,EAAG,CAC3B8D,EAAQ,YACN,+BAA+BjK,EAAQmG,CAAS,CAAC,IACjDA,GAAc,KAA+B,OAASA,EAAU,OACxE,EACM,QACD,CAEDmF,GAAarB,EAAS9D,CAAS,EAG/B,UAAWjD,KAAOiD,EAAU,KAY1B,GAVAmF,GAAarB,EAAS/G,CAAG,EAEpB1C,GAAY0C,EAAI,IAAI,GACvB+G,EAAQ,YACN,gBAAgB9D,EAAU,IAAI,IAAIjD,EAAI,IAAI,kCAC5BlD,EAAQkD,EAAI,IAAI,CAAC,IAC/BA,EAAI,OACd,EAGUC,GAAmBD,CAAG,GAAKA,EAAI,mBAAqB,KAAM,CAC5D,IAAIqI,EAEJtB,EAAQ,YACN,sBAAsB9D,EAAU,IAAI,IAAIjD,EAAI,IAAI,2BAChD,CACEsI,GAA2BtI,EAAI,OAAO,GACrCqI,EAAerI,EAAI,WAAa,MAAQqI,IAAiB,OACtD,OACAA,EAAa,IAClB,CACX,CACO,CAEJ,CACH,CAEA,SAASD,GAAarB,EAASxL,EAAM,CAE/BA,EAAK,KAAK,WAAW,IAAI,GAC3BwL,EAAQ,YACN,SAASxL,EAAK,IAAI,0EAClBA,EAAK,OACX,CAEA,CAEA,SAAS4L,GAAcJ,EAAS,CAC9B,MAAMwB,EACJC,GAAuCzB,CAAO,EAC1C0B,EAAU1B,EAAQ,OAAO,WAAU,EAEzC,UAAW9K,KAAQ,OAAO,OAAOwM,CAAO,EAAG,CAEzC,GAAI,CAACxK,GAAYhC,CAAI,EAAG,CACtB8K,EAAQ,YACN,wCAAwCjK,EAAQb,CAAI,CAAC,IACrDA,EAAK,OACb,EACM,QACD,CAEI6J,GAAoB7J,CAAI,GAC3BmM,GAAarB,EAAS9K,CAAI,EAGxBE,GAAaF,CAAI,GAKVG,GAAgBH,CAAI,GAH7ByM,GAAe3B,EAAS9K,CAAI,EAE5B0M,GAAmB5B,EAAS9K,CAAI,GAMvBI,GAAYJ,CAAI,EAEzB2M,GAAqB7B,EAAS9K,CAAI,EACzBK,GAAWL,CAAI,EAExB4M,GAAmB9B,EAAS9K,CAAI,EACvBM,GAAkBN,CAAI,IAE/B6M,GAAoB/B,EAAS9K,CAAI,EAEjCsM,EAAgCtM,CAAI,EAEvC,CACH,CAEA,SAASyM,GAAe3B,EAAS9K,EAAM,CACrC,MAAM4D,EAAS,OAAO,OAAO5D,EAAK,UAAW,CAAA,EAEzC4D,EAAO,SAAW,GACpBkH,EAAQ,YAAY,QAAQ9K,EAAK,IAAI,mCAAoC,CACvEA,EAAK,QACL,GAAGA,EAAK,iBACd,CAAK,EAGH,UAAWT,KAASqE,EAAQ,CAI1B,GAFAuI,GAAarB,EAASvL,CAAK,EAEvB,CAACgC,GAAahC,EAAM,IAAI,EAAG,CAC7B,IAAIuN,EAEJhC,EAAQ,YACN,eAAe9K,EAAK,IAAI,IAAIT,EAAM,IAAI,iCACxBsB,EAAQtB,EAAM,IAAI,CAAC,KAChCuN,EAAiBvN,EAAM,WAAa,MAAQuN,IAAmB,OAC5D,OACAA,EAAe,IAC3B,CACK,CAED,UAAW/I,KAAOxE,EAAM,KAAM,CAC5B,MAAMkE,EAAUM,EAAI,KAIpB,GAFAoI,GAAarB,EAAS/G,CAAG,EAErB,CAAC1C,GAAY0C,EAAI,IAAI,EAAG,CAC1B,IAAIgJ,EAEJjC,EAAQ,YACN,eAAe9K,EAAK,IAAI,IAAIT,EAAM,IAAI,IAAIkE,CAAO,kCAC9B5C,EAAQkD,EAAI,IAAI,CAAC,KACnCgJ,EAAgBhJ,EAAI,WAAa,MAAQgJ,IAAkB,OACxD,OACAA,EAAc,IAC5B,CACO,CAED,GAAI/I,GAAmBD,CAAG,GAAKA,EAAI,mBAAqB,KAAM,CAC5D,IAAIiJ,EAEJlC,EAAQ,YACN,qBAAqB9K,EAAK,IAAI,IAAIT,EAAM,IAAI,IAAIkE,CAAO,2BACvD,CACE4I,GAA2BtI,EAAI,OAAO,GACrCiJ,EAAgBjJ,EAAI,WAAa,MAAQiJ,IAAkB,OACxD,OACAA,EAAc,IACnB,CACX,CACO,CACF,CACF,CACH,CAEA,SAASN,GAAmB5B,EAAS9K,EAAM,CACzC,MAAMiN,EAAiB,OAAO,OAAO,IAAI,EAEzC,UAAW5C,KAASrK,EAAK,gBAAiB,CACxC,GAAI,CAACG,GAAgBkK,CAAK,EAAG,CAC3BS,EAAQ,YACN,QAAQjK,EAAQb,CAAI,CAAC,6DACIa,EAAQwJ,CAAK,CAAC,IACvC6C,GAA+BlN,EAAMqK,CAAK,CAClD,EACM,QACD,CAED,GAAIrK,IAASqK,EAAO,CAClBS,EAAQ,YACN,QAAQ9K,EAAK,IAAI,yEACjBkN,GAA+BlN,EAAMqK,CAAK,CAClD,EACM,QACD,CAED,GAAI4C,EAAe5C,EAAM,IAAI,EAAG,CAC9BS,EAAQ,YACN,QAAQ9K,EAAK,IAAI,uBAAuBqK,EAAM,IAAI,SAClD6C,GAA+BlN,EAAMqK,CAAK,CAClD,EACM,QACD,CAED4C,EAAe5C,EAAM,IAAI,EAAI,GAC7B8C,GAAgCrC,EAAS9K,EAAMqK,CAAK,EACpD+C,GAAgCtC,EAAS9K,EAAMqK,CAAK,CACrD,CACH,CAEA,SAAS+C,GAAgCtC,EAAS9K,EAAMqK,EAAO,CAC7D,MAAMgD,EAAerN,EAAK,YAE1B,UAAWsN,KAAc,OAAO,OAAOjD,EAAM,UAAS,CAAE,EAAG,CACzD,MAAMhH,EAAYiK,EAAW,KACvBC,EAAYF,EAAahK,CAAS,EAExC,GAAI,CAACkK,EAAW,CACdzC,EAAQ,YACN,mBAAmBT,EAAM,IAAI,IAAIhH,CAAS,iBAAiBrD,EAAK,IAAI,wBACpE,CAACsN,EAAW,QAAStN,EAAK,QAAS,GAAGA,EAAK,iBAAiB,CACpE,EACM,QACD,CAGD,GAAI,CAAC6F,GAAgBiF,EAAQ,OAAQyC,EAAU,KAAMD,EAAW,IAAI,EAAG,CACrE,IAAIE,EAAqBC,EAEzB3C,EAAQ,YACN,mBAAmBT,EAAM,IAAI,IAAIhH,CAAS,iBACrCxC,EAAQyM,EAAW,IAAI,CAAC,QAAQtN,EAAK,IAAI,IAAIqD,CAAS,YAC9CxC,EAAQ0M,EAAU,IAAI,CAAC,IACpC,EACGC,EAAsBF,EAAW,WAAa,MAC/CE,IAAwB,OACpB,OACAA,EAAoB,MACvBC,EAAqBF,EAAU,WAAa,MAC7CE,IAAuB,OACnB,OACAA,EAAmB,IACxB,CACT,CACK,CAED,UAAWC,KAAYJ,EAAW,KAAM,CACtC,MAAM7J,EAAUiK,EAAS,KACnBC,EAAUJ,EAAU,KAAK,KAAMxJ,GAAQA,EAAI,OAASN,CAAO,EAEjE,GAAI,CAACkK,EAAS,CACZ7C,EAAQ,YACN,4BAA4BT,EAAM,IAAI,IAAIhH,CAAS,IAAII,CAAO,mBAAmBzD,EAAK,IAAI,IAAIqD,CAAS,wBACvG,CAACqK,EAAS,QAASH,EAAU,OAAO,CAC9C,EACQ,QACD,CAID,GAAI,CAAC7H,GAAYgI,EAAS,KAAMC,EAAQ,IAAI,EAAG,CAC7C,IAAIC,EAAmBC,EAEvB/C,EAAQ,YACN,4BAA4BT,EAAM,IAAI,IAAIhH,CAAS,IAAII,CAAO,mBAC5C5C,EAAQ6M,EAAS,IAAI,CAAC,QACnC1N,EAAK,IAAI,IAAIqD,CAAS,IAAII,CAAO,cACjC5C,EAAQ8M,EAAQ,IAAI,CAAC,IAC1B,EACGC,EAAoBF,EAAS,WAAa,MAC3CE,IAAsB,OAClB,OACAA,EAAkB,MACrBC,EAAmBF,EAAQ,WAAa,MACzCE,IAAqB,OACjB,OACAA,EAAiB,IACtB,CACX,CACO,CACF,CAED,UAAWF,KAAWJ,EAAU,KAAM,CACpC,MAAM9J,EAAUkK,EAAQ,KAGpB,CAFaL,EAAW,KAAK,KAAMvJ,GAAQA,EAAI,OAASN,CAAO,GAElDO,GAAmB2J,CAAO,GACzC7C,EAAQ,YACN,gBAAgB9K,EAAK,IAAI,IAAIqD,CAAS,+BAA+BI,CAAO,6CAA6C4G,EAAM,IAAI,IAAIhH,CAAS,IAChJ,CAACsK,EAAQ,QAASL,EAAW,OAAO,CAC9C,CAEK,CACF,CACH,CAEA,SAASH,GAAgCrC,EAAS9K,EAAMqK,EAAO,CAC7D,MAAMyD,EAAkB9N,EAAK,gBAE7B,UAAW+N,KAAc1D,EAAM,gBACxByD,EAAgB,SAASC,CAAU,GACtCjD,EAAQ,YACNiD,IAAe/N,EACX,QAAQA,EAAK,IAAI,qBAAqBqK,EAAM,IAAI,iDAChD,QAAQrK,EAAK,IAAI,mBAAmB+N,EAAW,IAAI,iCAAiC1D,EAAM,IAAI,IAClG,CACE,GAAG6C,GAA+B7C,EAAO0D,CAAU,EACnD,GAAGb,GAA+BlN,EAAMqK,CAAK,CAC9C,CACT,CAGA,CAEA,SAASsC,GAAqB7B,EAASkD,EAAO,CAC5C,MAAMC,EAAcD,EAAM,WAEtBC,EAAY,SAAW,GACzBnD,EAAQ,YACN,cAAckD,EAAM,IAAI,yCACxB,CAACA,EAAM,QAAS,GAAGA,EAAM,iBAAiB,CAChD,EAGE,MAAME,EAAoB,OAAO,OAAO,IAAI,EAE5C,UAAWtD,KAAcqD,EAAa,CACpC,GAAIC,EAAkBtD,EAAW,IAAI,EAAG,CACtCE,EAAQ,YACN,cAAckD,EAAM,IAAI,0BAA0BpD,EAAW,IAAI,SACjEuD,GAAwBH,EAAOpD,EAAW,IAAI,CACtD,EACM,QACD,CAEDsD,EAAkBtD,EAAW,IAAI,EAAI,GAEhC1K,GAAa0K,CAAU,GAC1BE,EAAQ,YACN,cAAckD,EAAM,IAAI,qDACDnN,EAAQ+J,CAAU,CAAC,IAC1CuD,GAAwBH,EAAO,OAAOpD,CAAU,CAAC,CACzD,CAEG,CACH,CAEA,SAASgC,GAAmB9B,EAAS/F,EAAU,CAC7C,MAAMqJ,EAAarJ,EAAS,YAExBqJ,EAAW,SAAW,GACxBtD,EAAQ,YACN,aAAa/F,EAAS,IAAI,mCAC1B,CAACA,EAAS,QAAS,GAAGA,EAAS,iBAAiB,CACtD,EAGE,UAAWR,KAAa6J,EAEtBjC,GAAarB,EAASvG,CAAS,CAEnC,CAEA,SAASsI,GAAoB/B,EAASuD,EAAU,CAC9C,MAAMzK,EAAS,OAAO,OAAOyK,EAAS,UAAW,CAAA,EAE7CzK,EAAO,SAAW,GACpBkH,EAAQ,YACN,qBAAqBuD,EAAS,IAAI,mCAClC,CAACA,EAAS,QAAS,GAAGA,EAAS,iBAAiB,CACtD,EAGE,UAAW9O,KAASqE,EAAQ,CAI1B,GAFAuI,GAAarB,EAASvL,CAAK,EAEvB,CAAC8B,GAAY9B,EAAM,IAAI,EAAG,CAC5B,IAAI+O,EAEJxD,EAAQ,YACN,eAAeuD,EAAS,IAAI,IAAI9O,EAAM,IAAI,gCAC5BsB,EAAQtB,EAAM,IAAI,CAAC,KAChC+O,EAAkB/O,EAAM,WAAa,MAAQ+O,IAAoB,OAC9D,OACAA,EAAgB,IAC5B,CACK,CAED,GAAI7I,GAAqBlG,CAAK,GAAKA,EAAM,mBAAqB,KAAM,CAClE,IAAIgP,EAEJzD,EAAQ,YACN,wBAAwBuD,EAAS,IAAI,IAAI9O,EAAM,IAAI,yBACnD,CACE8M,GAA2B9M,EAAM,OAAO,GACvCgP,EAAkBhP,EAAM,WAAa,MACtCgP,IAAoB,OAChB,OACAA,EAAgB,IACrB,CACT,CACK,CACF,CACH,CAEA,SAAShC,GAAuCzB,EAAS,CAIvD,MAAM0D,EAAe,OAAO,OAAO,IAAI,EAEjCC,EAAY,CAAA,EAEZC,EAA2B,OAAO,OAAO,IAAI,EACnD,OAAOC,EAIP,SAASA,EAAqBN,EAAU,CACtC,GAAIG,EAAaH,EAAS,IAAI,EAC5B,OAGFG,EAAaH,EAAS,IAAI,EAAI,GAC9BK,EAAyBL,EAAS,IAAI,EAAII,EAAU,OACpD,MAAM7K,EAAS,OAAO,OAAOyK,EAAS,UAAW,CAAA,EAEjD,UAAW9O,KAASqE,EAClB,GAAIpD,GAAcjB,EAAM,IAAI,GAAKe,GAAkBf,EAAM,KAAK,MAAM,EAAG,CACrE,MAAMqP,EAAYrP,EAAM,KAAK,OACvBsP,EAAaH,EAAyBE,EAAU,IAAI,EAG1D,GAFAH,EAAU,KAAKlP,CAAK,EAEhBsP,IAAe,OACjBF,EAAqBC,CAAS,MACzB,CACL,MAAME,EAAYL,EAAU,MAAMI,CAAU,EACtCE,EAAUD,EAAU,IAAKE,GAAaA,EAAS,IAAI,EAAE,KAAK,GAAG,EACnElE,EAAQ,YACN,kCAAkC8D,EAAU,IAAI,yDAAyDG,CAAO,KAChHD,EAAU,IAAKE,GAAaA,EAAS,OAAO,CACxD,CACS,CAEDP,EAAU,IAAG,CACd,CAGHC,EAAyBL,EAAS,IAAI,EAAI,MAC3C,CACH,CAEA,SAASnB,GAA+BlN,EAAMqK,EAAO,CACnD,KAAM,CAAE,QAAA4E,EAAS,kBAAAC,CAAmB,EAAGlP,EAIvC,OAFEiP,GAAW,KAAO,CAACA,EAAS,GAAGC,CAAiB,EAAIA,GAGnD,QAASC,GAAa,CACrB,IAAIC,EAEJ,OAEGA,EAAuBD,EAAS,cAAgB,MAC/CC,IAAyB,OACvBA,EACA,CAAE,CAEd,CAAK,EACA,OAAQC,GAAcA,EAAU,KAAK,QAAUhF,EAAM,IAAI,CAC9D,CAEA,SAAS8D,GAAwBH,EAAO7I,EAAU,CAChD,KAAM,CAAE,QAAA8J,EAAS,kBAAAC,CAAmB,EAAGlB,EAIvC,OAFEiB,GAAW,KAAO,CAACA,EAAS,GAAGC,CAAiB,EAAIA,GAGnD,QAASI,GAAc,CACtB,IAAIC,EAEJ,OAEGA,EAAmBD,EAAU,SAAW,MACvCC,IAAqB,OACnBA,EACA,CAAE,CAEd,CAAK,EACA,OAAQJ,GAAaA,EAAS,KAAK,QAAUhK,CAAQ,CAC1D,CAEA,SAASkH,GAA2BmD,EAAgB,CAClD,IAAIC,EAEJ,OAAOD,GAAmB,OAErBC,EAAwBD,EAAe,cAAgB,MACxDC,IAA0B,OAF1B,OAIAA,EAAsB,KACnBnQ,GAASA,EAAK,KAAK,QAAUkI,GAA2B,IACjE,CACA,CCxoBO,SAASkI,GAAY5J,EAAQqJ,EAAU,CAC5C,OAAQA,EAAS,KAAI,CACnB,KAAK9P,EAAK,UAAW,CACnB,MAAMsQ,EAAYD,GAAY5J,EAAQqJ,EAAS,IAAI,EACnD,OAAOQ,GAAa,IAAIxO,GAAYwO,CAAS,CAC9C,CAED,KAAKtQ,EAAK,cAAe,CACvB,MAAMsQ,EAAYD,GAAY5J,EAAQqJ,EAAS,IAAI,EACnD,OAAOQ,GAAa,IAAIvO,EAAeuO,CAAS,CACjD,CAED,KAAKtQ,EAAK,WACR,OAAOyG,EAAO,QAAQqJ,EAAS,KAAK,KAAK,CAC5C,CACH,CCUO,MAAMS,EAAS,CACpB,YACE9J,EAKA+J,EAEAC,EACA,CACA,KAAK,QAAUhK,EACf,KAAK,WAAa,GAClB,KAAK,iBAAmB,GACxB,KAAK,gBAAkB,GACvB,KAAK,eAAiB,GACtB,KAAK,mBAAqB,GAC1B,KAAK,WAAa,KAClB,KAAK,UAAY,KACjB,KAAK,WAAa,KAClB,KAAK,aACHgK,GAEIC,GAEFF,IACExO,GAAYwO,CAAW,GACzB,KAAK,gBAAgB,KAAKA,CAAW,EAGnCpO,GAAgBoO,CAAW,GAC7B,KAAK,iBAAiB,KAAKA,CAAW,EAGpCtO,GAAasO,CAAW,GAC1B,KAAK,WAAW,KAAKA,CAAW,EAGrC,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,UACR,CAED,SAAU,CACR,GAAI,KAAK,WAAW,OAAS,EAC3B,OAAO,KAAK,WAAW,KAAK,WAAW,OAAS,CAAC,CAEpD,CAED,eAAgB,CACd,GAAI,KAAK,iBAAiB,OAAS,EACjC,OAAO,KAAK,iBAAiB,KAAK,iBAAiB,OAAS,CAAC,CAEhE,CAED,cAAe,CACb,GAAI,KAAK,gBAAgB,OAAS,EAChC,OAAO,KAAK,gBAAgB,KAAK,gBAAgB,OAAS,CAAC,CAE9D,CAED,oBAAqB,CACnB,GAAI,KAAK,gBAAgB,OAAS,EAChC,OAAO,KAAK,gBAAgB,KAAK,gBAAgB,OAAS,CAAC,CAE9D,CAED,aAAc,CACZ,GAAI,KAAK,eAAe,OAAS,EAC/B,OAAO,KAAK,eAAe,KAAK,eAAe,OAAS,CAAC,CAE5D,CAED,iBAAkB,CAChB,GAAI,KAAK,mBAAmB,OAAS,EACnC,OAAO,KAAK,mBAAmB,KAAK,mBAAmB,OAAS,CAAC,CAEpE,CAED,cAAe,CACb,OAAO,KAAK,UACb,CAED,aAAc,CACZ,OAAO,KAAK,SACb,CAED,cAAe,CACb,OAAO,KAAK,UACb,CAED,MAAMvQ,EAAM,CACV,MAAMwG,EAAS,KAAK,QAKpB,OAAQxG,EAAK,KAAI,CACf,KAAKD,EAAK,cAAe,CACvB,MAAM+K,EAAYnI,GAAa,KAAK,QAAS,CAAA,EAE7C,KAAK,iBAAiB,KACpBR,GAAgB2I,CAAS,EAAIA,EAAY,MACnD,EAEQ,KACD,CAED,KAAK/K,EAAK,MAAO,CACf,MAAMsK,EAAa,KAAK,gBACxB,IAAIqG,EACApB,EAEAjF,IACFqG,EAAW,KAAK,aAAalK,EAAQ6D,EAAYrK,CAAI,EAEjD0Q,IACFpB,EAAYoB,EAAS,OAIzB,KAAK,eAAe,KAAKA,CAAQ,EAEjC,KAAK,WAAW,KAAKzO,GAAaqN,CAAS,EAAIA,EAAY,MAAS,EAEpE,KACD,CAED,KAAKvP,EAAK,UACR,KAAK,WAAayG,EAAO,aAAaxG,EAAK,KAAK,KAAK,EACrD,MAEF,KAAKD,EAAK,qBAAsB,CAC9B,MAAM4Q,EAAWnK,EAAO,YAAYxG,EAAK,SAAS,EAElD,KAAK,WAAW,KAAKY,GAAa+P,CAAQ,EAAIA,EAAW,MAAS,EAElE,KACD,CAED,KAAK5Q,EAAK,gBACV,KAAKA,EAAK,oBAAqB,CAC7B,MAAM6Q,EAAmB5Q,EAAK,cACxB6Q,EAAaD,EACfR,GAAY5J,EAAQoK,CAAgB,EACpCjO,GAAa,KAAK,QAAO,CAAE,EAE/B,KAAK,WAAW,KAAKV,GAAa4O,CAAU,EAAIA,EAAa,MAAS,EAEtE,KACD,CAED,KAAK9Q,EAAK,oBAAqB,CAC7B,MAAM+Q,EAAYV,GAAY5J,EAAQxG,EAAK,IAAI,EAE/C,KAAK,gBAAgB,KACnB+B,GAAY+O,CAAS,EAAIA,EAAY,MAC/C,EAEQ,KACD,CAED,KAAK/Q,EAAK,SAAU,CAClB,IAAIgR,EAEJ,IAAIC,EACAC,EACJ,MAAMC,GACHH,EAAqB,KAAK,aAAY,KAAQ,MAC/CA,IAAuB,OACnBA,EACA,KAAK,YAAW,EAElBG,IACFF,EAASE,EAAiB,KAAK,KAC5BzM,GAAQA,EAAI,OAASzE,EAAK,KAAK,KAC5C,EAEcgR,IACFC,EAAUD,EAAO,OAIrB,KAAK,UAAYA,EAEjB,KAAK,mBAAmB,KAAKA,EAASA,EAAO,aAAe,MAAS,EAErE,KAAK,gBAAgB,KAAKjP,GAAYkP,CAAO,EAAIA,EAAU,MAAS,EAEpE,KACD,CAED,KAAKlR,EAAK,KAAM,CACd,MAAMoR,EAAW1O,GAAgB,KAAK,aAAc,CAAA,EAC9CiG,EAAWzH,GAAWkQ,CAAQ,EAAIA,EAAS,OAASA,EAE1D,KAAK,mBAAmB,KAAK,MAAS,EAEtC,KAAK,gBAAgB,KAAKpP,GAAY2G,CAAQ,EAAIA,EAAW,MAAS,EAEtE,KACD,CAED,KAAK3I,EAAK,aAAc,CACtB,MAAMqR,EAAazO,GAAa,KAAK,aAAc,CAAA,EACnD,IAAI0O,EACAC,EAEAtQ,GAAkBoQ,CAAU,IAC9BE,EAAaF,EAAW,UAAS,EAAGpR,EAAK,KAAK,KAAK,EAE/CsR,IACFD,EAAiBC,EAAW,OAIhC,KAAK,mBAAmB,KACtBA,EAAaA,EAAW,aAAe,MACjD,EAEQ,KAAK,gBAAgB,KACnBvP,GAAYsP,CAAc,EAAIA,EAAiB,MACzD,EAEQ,KACD,CAED,KAAKtR,EAAK,KAAM,CACd,MAAM0F,EAAW9C,GAAa,KAAK,aAAc,CAAA,EACjD,IAAIsC,EAEAlE,GAAW0E,CAAQ,IACrBR,EAAYQ,EAAS,SAASzF,EAAK,KAAK,GAG1C,KAAK,WAAaiF,EAClB,KACD,CAGF,CACF,CAED,MAAMjF,EAAM,CACV,OAAQA,EAAK,KAAI,CACf,KAAKD,EAAK,cACR,KAAK,iBAAiB,MAEtB,MAEF,KAAKA,EAAK,MACR,KAAK,eAAe,MAEpB,KAAK,WAAW,MAEhB,MAEF,KAAKA,EAAK,UACR,KAAK,WAAa,KAClB,MAEF,KAAKA,EAAK,qBACV,KAAKA,EAAK,gBACV,KAAKA,EAAK,oBACR,KAAK,WAAW,MAEhB,MAEF,KAAKA,EAAK,oBACR,KAAK,gBAAgB,MAErB,MAEF,KAAKA,EAAK,SACR,KAAK,UAAY,KAEjB,KAAK,mBAAmB,MAExB,KAAK,gBAAgB,MAErB,MAEF,KAAKA,EAAK,KACV,KAAKA,EAAK,aACR,KAAK,mBAAmB,MAExB,KAAK,gBAAgB,MAErB,MAEF,KAAKA,EAAK,KACR,KAAK,WAAa,KAClB,KAGH,CACF,CACH,CAOA,SAAS0Q,GAAYjK,EAAQ6D,EAAYkH,EAAW,CAClD,MAAMpR,EAAOoR,EAAU,KAAK,MAE5B,GACEpR,IAAS8J,GAAmB,MAC5BzD,EAAO,aAAY,IAAO6D,EAE1B,OAAOJ,GAGT,GAAI9J,IAASgK,GAAiB,MAAQ3D,EAAO,aAAc,IAAK6D,EAC9D,OAAOF,GAGT,GAAIhK,IAASiK,GAAqB,MAAQjI,GAAgBkI,CAAU,EAClE,OAAOD,GAGT,GAAIxJ,GAAayJ,CAAU,GAAKxJ,GAAgBwJ,CAAU,EACxD,OAAOA,EAAW,YAAYlK,CAAI,CAEtC,CAMO,SAASqR,GAAkBC,EAAUC,EAAS,CACnD,MAAO,CACL,SAASlN,EAAM,CACb,MAAMxE,EAAOwE,EAAK,CAAC,EACnBiN,EAAS,MAAMzR,CAAI,EACnB,MAAMlD,EAAK6U,GAAqBD,EAAS1R,EAAK,IAAI,EAAE,MAEpD,GAAIlD,EAAI,CACN,MAAMN,EAASM,EAAG,MAAM4U,EAASlN,CAAI,EAErC,OAAIhI,IAAW,SACbiV,EAAS,MAAMzR,CAAI,EAEf4R,GAAOpV,CAAM,GACfiV,EAAS,MAAMjV,CAAM,GAIlBA,CACR,CACF,EAED,SAASgI,EAAM,CACb,MAAMxE,EAAOwE,EAAK,CAAC,EACb1H,EAAK6U,GAAqBD,EAAS1R,EAAK,IAAI,EAAE,MACpD,IAAIxD,EAEJ,OAAIM,IACFN,EAASM,EAAG,MAAM4U,EAASlN,CAAI,GAGjCiN,EAAS,MAAMzR,CAAI,EACZxD,CACR,CACL,CACA,CClYO,SAASqV,GAA2B7R,EAAM,CAC/C,OACEA,EAAK,OAASD,EAAK,sBACnBC,EAAK,OAASD,EAAK,mBAEvB,CAsCO,SAAS+R,GAA2B9R,EAAM,CAC/C,OACEA,EAAK,OAASD,EAAK,mBACnBgS,GAAqB/R,CAAI,GACzBA,EAAK,OAASD,EAAK,oBAEvB,CACO,SAASgS,GAAqB/R,EAAM,CACzC,OACEA,EAAK,OAASD,EAAK,wBACnBC,EAAK,OAASD,EAAK,wBACnBC,EAAK,OAASD,EAAK,2BACnBC,EAAK,OAASD,EAAK,uBACnBC,EAAK,OAASD,EAAK,sBACnBC,EAAK,OAASD,EAAK,4BAEvB,CACO,SAASiS,GAA0BhS,EAAM,CAC9C,OAAOA,EAAK,OAASD,EAAK,kBAAoBkS,GAAoBjS,CAAI,CACxE,CACO,SAASiS,GAAoBjS,EAAM,CACxC,OACEA,EAAK,OAASD,EAAK,uBACnBC,EAAK,OAASD,EAAK,uBACnBC,EAAK,OAASD,EAAK,0BACnBC,EAAK,OAASD,EAAK,sBACnBC,EAAK,OAASD,EAAK,qBACnBC,EAAK,OAASD,EAAK,2BAEvB,CCpEO,SAASmS,GAA0B1G,EAAS,CACjD,MAAO,CACL,SAASxL,EAAM,CACb,UAAWmS,KAAcnS,EAAK,YAC5B,GAAI,CAAC6R,GAA2BM,CAAU,EAAG,CAC3C,MAAMC,EACJD,EAAW,OAASpS,EAAK,mBACzBoS,EAAW,OAASpS,EAAK,iBACrB,SACA,IAAMoS,EAAW,KAAK,MAAQ,IACpC3G,EAAQ,YACN,IAAInL,EAAa,OAAO+R,CAAO,iCAAkC,CAC/D,MAAOD,CACrB,CAAa,CACb,CACS,CAGH,MAAO,EACR,CACL,CACA,CCfO,SAASE,GAAwB7G,EAAS,CAC/C,MAAO,CACL,MAAMxL,EAAM,CACV,MAAMU,EAAO8K,EAAQ,gBAErB,GAAI9K,GAGE,CAFa8K,EAAQ,cAEV,CAEb,MAAMhF,EAASgF,EAAQ,YACjBzH,EAAY/D,EAAK,KAAK,MAE5B,IAAIsS,EAAa3W,GACf,+BACA4W,GAAsB/L,EAAQ9F,EAAMqD,CAAS,CACzD,EAEcuO,IAAe,KACjBA,EAAa3W,GAAW6W,GAAuB9R,EAAMqD,CAAS,CAAC,GAGjEyH,EAAQ,YACN,IAAInL,EACF,uBAAuB0D,CAAS,cAAcrD,EAAK,IAAI,KACrD4R,EACF,CACE,MAAOtS,CACR,CACF,CACb,CACS,CAEJ,CACL,CACA,CAOA,SAASuS,GAAsB/L,EAAQ9F,EAAMqD,EAAW,CACtD,GAAI,CAAC3B,GAAe1B,CAAI,EAEtB,MAAO,GAGT,MAAM+R,EAAiB,IAAI,IACrBC,EAAa,OAAO,OAAO,IAAI,EAErC,UAAWC,KAAgBnM,EAAO,iBAAiB9F,CAAI,EACrD,GAAKiS,EAAa,UAAW,EAAC5O,CAAS,EAIvC,CAAA0O,EAAe,IAAIE,CAAY,EAC/BD,EAAWC,EAAa,IAAI,EAAI,EAEhC,UAAWC,KAAqBD,EAAa,gBAAiB,CAC5D,IAAIE,EAECD,EAAkB,UAAW,EAAC7O,CAAS,IAI5C0O,EAAe,IAAIG,CAAiB,EACpCF,EAAWE,EAAkB,IAAI,IAC7BC,EAAwBH,EAAWE,EAAkB,IAAI,KACzD,MAAQC,IAA0B,OAChCA,EACA,GAAK,EACZ,EAGH,MAAO,CAAC,GAAGJ,CAAc,EACtB,KAAK,CAACpM,EAAOC,IAAU,CAEtB,MAAMwM,EAAiBJ,EAAWpM,EAAM,IAAI,EAAIoM,EAAWrM,EAAM,IAAI,EAErE,OAAIyM,IAAmB,EACdA,EAGLjS,GAAgBwF,CAAK,GAAKG,EAAO,UAAUH,EAAOC,CAAK,EAClD,GAGLzF,GAAgByF,CAAK,GAAKE,EAAO,UAAUF,EAAOD,CAAK,EAClD,EAGFtJ,GAAesJ,EAAM,KAAMC,EAAM,IAAI,CAClD,CAAK,EACA,IAAKrL,GAAMA,EAAE,IAAI,CACtB,CAMA,SAASuX,GAAuB9R,EAAMqD,EAAW,CAC/C,GAAInD,GAAaF,CAAI,GAAKG,GAAgBH,CAAI,EAAG,CAC/C,MAAMqS,EAAqB,OAAO,KAAKrS,EAAK,UAAW,CAAA,EACvD,OAAO9C,GAAemG,EAAWgP,CAAkB,CACpD,CAED,MAAO,EACT,CChHO,SAASC,GAA8BxH,EAAS,CACrD,MAAO,CACL,eAAexL,EAAM,CACnB,MAAMiT,EAAgBjT,EAAK,cAE3B,GAAIiT,EAAe,CACjB,MAAMvS,EAAO0P,GAAY5E,EAAQ,UAAW,EAAEyH,CAAa,EAE3D,GAAIvS,GAAQ,CAACyB,GAAgBzB,CAAI,EAAG,CAClC,MAAMwS,EAAU3N,GAAM0N,CAAa,EACnCzH,EAAQ,YACN,IAAInL,EACF,oDAAoD6S,CAAO,KAC3D,CACE,MAAOD,CACR,CACF,CACb,CACS,CACF,CACF,EAED,mBAAmBjT,EAAM,CACvB,MAAMU,EAAO0P,GAAY5E,EAAQ,UAAS,EAAIxL,EAAK,aAAa,EAEhE,GAAIU,GAAQ,CAACyB,GAAgBzB,CAAI,EAAG,CAClC,MAAMwS,EAAU3N,GAAMvF,EAAK,aAAa,EACxCwL,EAAQ,YACN,IAAInL,EACF,aAAaL,EAAK,KAAK,KAAK,6CAA6CkT,CAAO,KAChF,CACE,MAAOlT,EAAK,aACb,CACF,CACX,CACO,CACF,CACL,CACA,CCrCO,SAASmT,GAAuB3H,EAAS,CAC9C,MAAO,CAEL,GAAG4H,GAAmC5H,CAAO,EAE7C,SAAS6H,EAAS,CAChB,MAAMrC,EAASxF,EAAQ,cACjBkF,EAAWlF,EAAQ,cACnBnB,EAAamB,EAAQ,gBAE3B,GAAI,CAACwF,GAAUN,GAAYrG,EAAY,CACrC,MAAMlG,EAAUkP,EAAQ,KAAK,MACvBC,EAAiB5C,EAAS,KAAK,IAAKjM,GAAQA,EAAI,IAAI,EACpDxI,EAAc2B,GAAeuG,EAASmP,CAAc,EAC1D9H,EAAQ,YACN,IAAInL,EACF,qBAAqB8D,CAAO,eAAekG,EAAW,IAAI,IAAIqG,EAAS,IAAI,KACzE/U,GAAWM,CAAW,EACxB,CACE,MAAOoX,CACR,CACF,CACX,CACO,CACF,CACL,CACA,CAKO,SAASD,GAAmC5H,EAAS,CAC1D,MAAM+H,EAAgB,OAAO,OAAO,IAAI,EAClC/M,EAASgF,EAAQ,YACjBgI,EAAoBhN,EACtBA,EAAO,cAAe,EACtB4B,GAEJ,UAAWV,KAAa8L,EACtBD,EAAc7L,EAAU,IAAI,EAAIA,EAAU,KAAK,IAAKjD,GAAQA,EAAI,IAAI,EAGtE,MAAMgP,EAAiBjI,EAAQ,YAAW,EAAG,YAE7C,UAAWkI,KAAOD,EAChB,GAAIC,EAAI,OAAS3T,EAAK,qBAAsB,CAC1C,IAAI4T,EAKJ,MAAMC,GACHD,EAAiBD,EAAI,aAAe,MAAQC,IAAmB,OAC5DA,EACA,GACNJ,EAAcG,EAAI,KAAK,KAAK,EAAIE,EAAU,IAAKnP,GAAQA,EAAI,KAAK,KAAK,CACtE,CAGH,MAAO,CACL,UAAUoP,EAAe,CACvB,MAAMC,EAAgBD,EAAc,KAAK,MACnCE,EAAYR,EAAcO,CAAa,EAE7C,GAAID,EAAc,WAAaE,EAC7B,UAAWV,KAAWQ,EAAc,UAAW,CAC7C,MAAM1P,EAAUkP,EAAQ,KAAK,MAE7B,GAAI,CAACU,EAAU,SAAS5P,CAAO,EAAG,CAChC,MAAMlI,EAAc2B,GAAeuG,EAAS4P,CAAS,EACrDvI,EAAQ,YACN,IAAInL,EACF,qBAAqB8D,CAAO,oBAAoB2P,CAAa,KAC3DnY,GAAWM,CAAW,EACxB,CACE,MAAOoX,CACR,CACF,CACf,CACW,CACF,CAGH,MAAO,EACR,CACL,CACA,CCrFO,SAASW,GAAoBxI,EAAS,CAC3C,MAAMyI,EAAe,OAAO,OAAO,IAAI,EACjCzN,EAASgF,EAAQ,YACjBgI,EAAoBhN,EACtBA,EAAO,cAAe,EACtB4B,GAEJ,UAAWV,KAAa8L,EACtBS,EAAavM,EAAU,IAAI,EAAIA,EAAU,UAG3C,MAAM+L,EAAiBjI,EAAQ,YAAW,EAAG,YAE7C,UAAWkI,KAAOD,EACZC,EAAI,OAAS3T,EAAK,uBACpBkU,EAAaP,EAAI,KAAK,KAAK,EAAIA,EAAI,UAAU,IAAKvT,GAASA,EAAK,KAAK,GAIzE,MAAO,CACL,UAAUH,EAAMkU,EAAMC,EAASC,EAAOC,EAAW,CAC/C,MAAMlU,EAAOH,EAAK,KAAK,MACjBsU,EAAYL,EAAa9T,CAAI,EAEnC,GAAI,CAACmU,EAAW,CACd9I,EAAQ,YACN,IAAInL,EAAa,uBAAuBF,CAAI,KAAM,CAChD,MAAOH,CACnB,CAAW,CACX,EACQ,MACD,CAED,MAAMuU,EAAoBC,GAA+BH,CAAS,EAE9DE,GAAqB,CAACD,EAAU,SAASC,CAAiB,GAC5D/I,EAAQ,YACN,IAAInL,EACF,eAAeF,CAAI,wBAAwBoU,CAAiB,IAC5D,CACE,MAAOvU,CACR,CACF,CACX,CAEK,CACL,CACA,CAEA,SAASwU,GAA+BH,EAAW,CACjD,MAAMI,EAAYJ,EAAUA,EAAU,OAAS,CAAC,EAGhD,OAFA,SAAUI,GAAavL,GAAU,EAAK,EAE9BuL,EAAU,KAAI,CACpB,KAAK1U,EAAK,qBACR,OAAO2U,GAAiCD,EAAU,SAAS,EAE7D,KAAK1U,EAAK,MACR,OAAOgI,EAAkB,MAE3B,KAAKhI,EAAK,gBACR,OAAOgI,EAAkB,gBAE3B,KAAKhI,EAAK,gBACR,OAAOgI,EAAkB,gBAE3B,KAAKhI,EAAK,oBACR,OAAOgI,EAAkB,oBAE3B,KAAKhI,EAAK,oBACR,OAAOgI,EAAkB,oBAE3B,KAAKhI,EAAK,kBACV,KAAKA,EAAK,iBACR,OAAOgI,EAAkB,OAE3B,KAAKhI,EAAK,uBACV,KAAKA,EAAK,sBACR,OAAOgI,EAAkB,OAE3B,KAAKhI,EAAK,uBACV,KAAKA,EAAK,sBACR,OAAOgI,EAAkB,OAE3B,KAAKhI,EAAK,iBACR,OAAOgI,EAAkB,iBAE3B,KAAKhI,EAAK,0BACV,KAAKA,EAAK,yBACR,OAAOgI,EAAkB,UAE3B,KAAKhI,EAAK,sBACV,KAAKA,EAAK,qBACR,OAAOgI,EAAkB,MAE3B,KAAKhI,EAAK,qBACV,KAAKA,EAAK,oBACR,OAAOgI,EAAkB,KAE3B,KAAKhI,EAAK,sBACR,OAAOgI,EAAkB,WAE3B,KAAKhI,EAAK,6BACV,KAAKA,EAAK,4BACR,OAAOgI,EAAkB,aAE3B,KAAKhI,EAAK,uBAAwB,CAChC,MAAM4U,EAAaN,EAAUA,EAAU,OAAS,CAAC,EACjD,eAAUM,GAAczL,GAAU,EAAK,EAChCyL,EAAW,OAAS5U,EAAK,6BAC5BgI,EAAkB,uBAClBA,EAAkB,mBACvB,CAKD,QACWmB,GAAU,GAAO,oBAAsB3H,EAAQkT,EAAU,IAAI,CAAC,CAC1E,CACH,CAEA,SAASC,GAAiCzJ,EAAW,CACnD,OAAQA,EAAS,CACf,KAAKC,GAAkB,MACrB,OAAOnD,EAAkB,MAE3B,KAAKmD,GAAkB,SACrB,OAAOnD,EAAkB,SAE3B,KAAKmD,GAAkB,aACrB,OAAOnD,EAAkB,YAC5B,CACH,CC3IO,SAAS6M,GAAuBpJ,EAAS,CAC9C,MAAO,CACL,eAAexL,EAAM,CACnB,MAAM6U,EAAe7U,EAAK,KAAK,MACdwL,EAAQ,YAAYqJ,CAAY,GAG/CrJ,EAAQ,YACN,IAAInL,EAAa,qBAAqBwU,CAAY,KAAM,CACtD,MAAO7U,EAAK,IACxB,CAAW,CACX,CAEK,CACL,CACA,CCNO,SAAS8U,GAAmBtJ,EAAS,CAC1C,MAAMhF,EAASgF,EAAQ,YACjBuJ,EAAmBvO,EAASA,EAAO,WAAY,EAAG,OAAO,OAAO,IAAI,EACpEwO,EAAe,OAAO,OAAO,IAAI,EAEvC,UAAWtB,KAAOlI,EAAQ,YAAW,EAAG,YAClCuG,GAAqB2B,CAAG,IAC1BsB,EAAatB,EAAI,KAAK,KAAK,EAAI,IAInC,MAAMuB,EAAY,CAChB,GAAG,OAAO,KAAKF,CAAgB,EAC/B,GAAG,OAAO,KAAKC,CAAY,CAC/B,EACE,MAAO,CACL,UAAUhV,EAAMkV,EAAIC,EAAQC,EAAIf,EAAW,CACzC,MAAMxO,EAAW7F,EAAK,KAAK,MAE3B,GAAI,CAAC+U,EAAiBlP,CAAQ,GAAK,CAACmP,EAAanP,CAAQ,EAAG,CAC1D,IAAIwP,EAEJ,MAAMnF,GACHmF,EAAchB,EAAU,CAAC,KAAO,MAAQgB,IAAgB,OACrDA,EACAF,EACAG,EAAQpF,GAAkB,MAAQqF,GAAUrF,CAAc,EAEhE,GAAIoF,GAASE,GAAkB,SAAS3P,CAAQ,EAC9C,OAGF,MAAM4M,EAAiB7U,GACrBiI,EACAyP,EAAQE,GAAkB,OAAOP,CAAS,EAAIA,CACxD,EACQzJ,EAAQ,YACN,IAAInL,EACF,iBAAiBwF,CAAQ,KAAOlK,GAAW8W,CAAc,EACzD,CACE,MAAOzS,CACR,CACF,CACX,CACO,CACF,CACL,CACA,CACA,MAAMwV,GAAoB,CAAC,GAAGlO,GAAsB,GAAGgD,EAAkB,EAAE,IACxE5J,GAASA,EAAK,IACjB,EAEA,SAAS6U,GAAU5V,EAAO,CACxB,MACE,SAAUA,IACTmS,GAA2BnS,CAAK,GAAKqS,GAA0BrS,CAAK,EAEzE,CCjEO,SAAS8V,GAA2BjK,EAAS,CAClD,IAAIkK,EAAiB,EACrB,MAAO,CACL,SAAS1V,EAAM,CACb0V,EAAiB1V,EAAK,YAAY,OAC/BmS,GAAeA,EAAW,OAASpS,EAAK,oBAC1C,EAAC,MACH,EAED,oBAAoBC,EAAM,CACpB,CAACA,EAAK,MAAQ0V,EAAiB,GACjClK,EAAQ,YACN,IAAInL,EACF,+DACA,CACE,MAAOL,CACR,CACF,CACX,CAEK,CACL,CACA,CCvBO,SAAS2V,GAAqBnK,EAAS,CAG5C,MAAMoK,EAAe,OAAO,OAAO,IAAI,EAEjCC,EAAa,CAAA,EAEbC,EAAwB,OAAO,OAAO,IAAI,EAChD,MAAO,CACL,oBAAqB,IAAM,GAE3B,mBAAmB9V,EAAM,CACvB,OAAAqP,EAAqBrP,CAAI,EAClB,EACR,CACL,EAIE,SAASqP,EAAqB0G,EAAU,CACtC,GAAIH,EAAaG,EAAS,KAAK,KAAK,EAClC,OAGF,MAAMlB,EAAekB,EAAS,KAAK,MACnCH,EAAaf,CAAY,EAAI,GAC7B,MAAMmB,EAAcxK,EAAQ,mBAAmBuK,EAAS,YAAY,EAEpE,GAAIC,EAAY,SAAW,EAI3B,CAAAF,EAAsBjB,CAAY,EAAIgB,EAAW,OAEjD,UAAWI,KAAcD,EAAa,CACpC,MAAME,EAAaD,EAAW,KAAK,MAC7B1G,EAAauG,EAAsBI,CAAU,EAGnD,GAFAL,EAAW,KAAKI,CAAU,EAEtB1G,IAAe,OAAW,CAC5B,MAAM4G,EAAiB3K,EAAQ,YAAY0K,CAAU,EAEjDC,GACF9G,EAAqB8G,CAAc,CAE7C,KAAa,CACL,MAAM3G,EAAYqG,EAAW,MAAMtG,CAAU,EACvC6G,EAAU5G,EACb,MAAM,EAAG,EAAE,EACX,IAAK6G,GAAM,IAAMA,EAAE,KAAK,MAAQ,GAAG,EACnC,KAAK,IAAI,EACZ7K,EAAQ,YACN,IAAInL,EACF,2BAA2B6V,CAAU,mBAClCE,IAAY,GAAK,QAAQA,CAAO,IAAM,KACzC,CACE,MAAO5G,CACR,CACF,CACX,CACO,CAEDqG,EAAW,IAAG,CACf,CAEDC,EAAsBjB,CAAY,EAAI,OACvC,CACH,CCnEO,SAASyB,GAAyB9K,EAAS,CAChD,IAAI+K,EAAsB,OAAO,OAAO,IAAI,EAC5C,MAAO,CACL,oBAAqB,CACnB,OAAQ,CACNA,EAAsB,OAAO,OAAO,IAAI,CACzC,EAED,MAAMtL,EAAW,CACf,MAAMuL,EAAShL,EAAQ,2BAA2BP,CAAS,EAE3D,SAAW,CAAE,KAAAjL,CAAM,IAAIwW,EAAQ,CAC7B,MAAMC,EAAUzW,EAAK,KAAK,MAEtBuW,EAAoBE,CAAO,IAAM,IACnCjL,EAAQ,YACN,IAAInL,EACF4K,EAAU,KACN,cAAcwL,CAAO,kCAAkCxL,EAAU,KAAK,KAAK,KAC3E,cAAcwL,CAAO,oBACzB,CACE,MAAO,CAACzW,EAAMiL,CAAS,CACxB,CACF,CACf,CAES,CACF,CACF,EAED,mBAAmBjL,EAAM,CACvBuW,EAAoBvW,EAAK,SAAS,KAAK,KAAK,EAAI,EACjD,CACL,CACA,CClCO,SAAS0W,GAAsBlL,EAAS,CAC7C,MAAMmL,EAAgB,CAAA,EAChBC,EAAe,CAAA,EACrB,MAAO,CACL,oBAAoB5W,EAAM,CACxB,OAAA2W,EAAc,KAAK3W,CAAI,EAChB,EACR,EAED,mBAAmBA,EAAM,CACvB,OAAA4W,EAAa,KAAK5W,CAAI,EACf,EACR,EAED,SAAU,CACR,OAAQ,CACN,MAAM6W,EAAmB,OAAO,OAAO,IAAI,EAE3C,UAAW5L,KAAa0L,EACtB,UAAWZ,KAAYvK,EAAQ,kCAC7BP,CACZ,EACY4L,EAAiBd,EAAS,KAAK,KAAK,EAAI,GAI5C,UAAWe,KAAeF,EAAc,CACtC,MAAMG,EAAWD,EAAY,KAAK,MAE9BD,EAAiBE,CAAQ,IAAM,IACjCvL,EAAQ,YACN,IAAInL,EAAa,aAAa0W,CAAQ,mBAAoB,CACxD,MAAOD,CACvB,CAAe,CACf,CAES,CACF,CACF,CACL,CACA,CCxCO,SAASE,GAAsBxL,EAAS,CAC7C,IAAIyL,EAAe,CAAA,EACnB,MAAO,CACL,oBAAqB,CACnB,OAAQ,CACNA,EAAe,CAAA,CAChB,EAED,MAAMhM,EAAW,CACf,MAAMiM,EAAmB,OAAO,OAAO,IAAI,EACrCV,EAAShL,EAAQ,2BAA2BP,CAAS,EAE3D,SAAW,CAAE,KAAAjL,CAAM,IAAIwW,EACrBU,EAAiBlX,EAAK,KAAK,KAAK,EAAI,GAGtC,UAAWmX,KAAeF,EAAc,CACtC,MAAMG,EAAeD,EAAY,SAAS,KAAK,MAE3CD,EAAiBE,CAAY,IAAM,IACrC5L,EAAQ,YACN,IAAInL,EACF4K,EAAU,KACN,cAAcmM,CAAY,iCAAiCnM,EAAU,KAAK,KAAK,KAC/E,cAAcmM,CAAY,mBAC9B,CACE,MAAOD,CACR,CACF,CACf,CAES,CACF,CACF,EAED,mBAAmBzD,EAAK,CACtBuD,EAAa,KAAKvD,CAAG,CACtB,CACL,CACA,CCvCO,SAAS2D,GAAcxX,EAAW,CACvC,OAAQA,EAAU,KAAI,CACpB,KAAKE,EAAK,OACR,MAAO,CAAE,GAAGF,EAAW,OAAQyX,GAAWzX,EAAU,MAAM,GAE5D,KAAKE,EAAK,KACR,MAAO,CAAE,GAAGF,EAAW,OAAQA,EAAU,OAAO,IAAIwX,EAAa,GAEnE,KAAKtX,EAAK,IACV,KAAKA,EAAK,MACV,KAAKA,EAAK,OACV,KAAKA,EAAK,QACV,KAAKA,EAAK,KACV,KAAKA,EAAK,KACV,KAAKA,EAAK,SACR,OAAOF,CACV,CACH,CAEA,SAASyX,GAAWhT,EAAQ,CAC1B,OAAOA,EACJ,IAAKiN,IAAe,CACnB,GAAGA,EACH,MAAO8F,GAAc9F,EAAU,KAAK,CAC1C,EAAM,EACD,KAAK,CAACgG,EAAQC,IACbza,GAAewa,EAAO,KAAK,MAAOC,EAAO,KAAK,KAAK,CACzD,CACA,CCvBA,SAASC,GAAcC,EAAQ,CAC7B,OAAI,MAAM,QAAQA,CAAM,EACfA,EACJ,IACC,CAAC,CAACC,EAAcC,CAAS,IACvB,cAAcD,CAAY,sBAC1BF,GAAcG,CAAS,CAC1B,EACA,KAAK,OAAO,EAGVF,CACT,CAWO,SAASG,GAAiCrM,EAAS,CAIxD,MAAMsM,EAAwB,IAAIC,GAI5BC,EAA+B,IAAI,IACzC,MAAO,CACL,aAAaC,EAAc,CACzB,MAAMC,EAAYC,GAChB3M,EACAwM,EACAF,EACAtM,EAAQ,cAAe,EACvByM,CACR,EAEM,SAAW,CAAC,CAACN,EAAcD,CAAM,EAAGU,EAASC,CAAO,IAAKH,EAAW,CAClE,MAAMI,EAAYb,GAAcC,CAAM,EACtClM,EAAQ,YACN,IAAInL,EACF,WAAWsX,CAAY,sBAAsBW,CAAS,+EACtD,CACE,MAAOF,EAAQ,OAAOC,CAAO,CAC9B,CACF,CACX,CACO,CACF,CACL,CACA,CA2DA,SAASF,GACP3M,EACAwM,EACAF,EACAzN,EACA4N,EACA,CACA,MAAMC,EAAY,CAAA,EACZ,CAACtU,EAAU2U,CAAa,EAAIC,GAChChN,EACAwM,EACA3N,EACA4N,CACJ,EAWE,GARAQ,GACEjN,EACA0M,EACAF,EACAF,EACAlU,CACJ,EAEM2U,EAAc,SAAW,EAG3B,QAASxZ,EAAI,EAAGA,EAAIwZ,EAAc,OAAQxZ,IAAK,CAC7C2Z,GACElN,EACA0M,EACAF,EACAF,EACA,GACAlU,EACA2U,EAAcxZ,CAAC,CACvB,EAKM,QAASD,EAAIC,EAAI,EAAGD,EAAIyZ,EAAc,OAAQzZ,IAC5C6Z,GACEnN,EACA0M,EACAF,EACAF,EACA,GACAS,EAAcxZ,CAAC,EACfwZ,EAAczZ,CAAC,CACzB,CAEK,CAGH,OAAOoZ,CACT,CAGA,SAASQ,GACPlN,EACA0M,EACAF,EACAF,EACAc,EACAhV,EACAiR,EACA,CACA,MAAMkB,EAAWvK,EAAQ,YAAYqJ,CAAY,EAEjD,GAAI,CAACkB,EACH,OAGF,KAAM,CAAC8C,EAAWC,CAAuB,EACvCC,GACEvN,EACAwM,EACAjC,CACN,EAEE,GAAInS,IAAaiV,EAKjB,CAAAG,GACExN,EACA0M,EACAF,EACAF,EACAc,EACAhV,EACAiV,CACJ,EAGE,UAAWI,KAA0BH,EAGjChB,EAAsB,IACpBmB,EACApE,EACA+D,CACD,IAKHd,EAAsB,IACpBmB,EACApE,EACA+D,CACN,EACIF,GACElN,EACA0M,EACAF,EACAF,EACAc,EACAhV,EACAqV,CACN,GAEA,CAGA,SAASN,GACPnN,EACA0M,EACAF,EACAF,EACAc,EACAM,EACAC,EACA,CAMA,GAJID,IAAkBC,GAKpBrB,EAAsB,IACpBoB,EACAC,EACAP,CACD,EAED,OAGFd,EAAsB,IAAIoB,EAAeC,EAAeP,CAAoB,EAC5E,MAAMQ,EAAY5N,EAAQ,YAAY0N,CAAa,EAC7CG,EAAY7N,EAAQ,YAAY2N,CAAa,EAEnD,GAAI,CAACC,GAAa,CAACC,EACjB,OAGF,KAAM,CAACC,EAAWC,CAAwB,EACxCR,GACEvN,EACAwM,EACAoB,CACN,EACQ,CAACP,EAAWW,CAAwB,EACxCT,GACEvN,EACAwM,EACAqB,CACN,EAGEL,GACExN,EACA0M,EACAF,EACAF,EACAc,EACAU,EACAT,CACJ,EAGE,UAAWY,KAA2BD,EACpCb,GACEnN,EACA0M,EACAF,EACAF,EACAc,EACAM,EACAO,CACN,EAIE,UAAWC,KAA2BH,EACpCZ,GACEnN,EACA0M,EACAF,EACAF,EACAc,EACAc,EACAP,CACN,CAEA,CAIA,SAASQ,GACPnO,EACAwM,EACAF,EACAc,EACAgB,EACAC,EACAC,EACAC,EACA,CACA,MAAM7B,EAAY,CAAA,EACZ,CAACoB,EAAWU,CAAc,EAAIxB,GAClChN,EACAwM,EACA4B,EACAC,CACJ,EACQ,CAAChB,EAAWoB,CAAc,EAAIzB,GAClChN,EACAwM,EACA8B,EACAC,CACJ,EAEEf,GACExN,EACA0M,EACAF,EACAF,EACAc,EACAU,EACAT,CACJ,EAGE,UAAWM,KAAiBc,EAC1BvB,GACElN,EACA0M,EACAF,EACAF,EACAc,EACAU,EACAH,CACN,EAIE,UAAWD,KAAiBc,EAC1BtB,GACElN,EACA0M,EACAF,EACAF,EACAc,EACAC,EACAK,CACN,EAKE,UAAWA,KAAiBc,EAC1B,UAAWb,KAAiBc,EAC1BtB,GACEnN,EACA0M,EACAF,EACAF,EACAc,EACAM,EACAC,CACR,EAIE,OAAOjB,CACT,CAEA,SAASO,GACPjN,EACA0M,EACAF,EACAF,EACAlU,EACA,CAKA,SAAW,CAAC+T,EAAcrT,CAAM,IAAK,OAAO,QAAQV,CAAQ,EAI1D,GAAIU,EAAO,OAAS,EAClB,QAASvF,EAAI,EAAGA,EAAIuF,EAAO,OAAQvF,IACjC,QAASD,EAAIC,EAAI,EAAGD,EAAIwF,EAAO,OAAQxF,IAAK,CAC1C,MAAMob,EAAWC,GACf3O,EACAwM,EACAF,EACA,GACAH,EACArT,EAAOvF,CAAC,EACRuF,EAAOxF,CAAC,CACpB,EAEcob,GACFhC,EAAU,KAAKgC,CAAQ,CAE1B,CAIT,CAMA,SAASlB,GACPxN,EACA0M,EACAF,EACAF,EACAsC,EACAd,EACAT,EACA,CAMA,SAAW,CAAClB,EAAcS,CAAO,IAAK,OAAO,QAAQkB,CAAS,EAAG,CAC/D,MAAMjB,EAAUQ,EAAUlB,CAAY,EAEtC,GAAIU,EACF,UAAWgC,KAAUjC,EACnB,UAAWkC,KAAUjC,EAAS,CAC5B,MAAM6B,EAAWC,GACf3O,EACAwM,EACAF,EACAsC,EACAzC,EACA0C,EACAC,CACZ,EAEcJ,GACFhC,EAAU,KAAKgC,CAAQ,CAE1B,CAGN,CACH,CAGA,SAASC,GACP3O,EACAwM,EACAF,EACAsC,EACAzC,EACA0C,EACAC,EACA,CACA,KAAM,CAACV,EAAaW,EAAOC,CAAI,EAAIH,EAC7B,CAACP,EAAaW,EAAOC,CAAI,EAAIJ,EAS7B1B,EACJwB,GACCR,IAAgBE,GACflZ,GAAagZ,CAAW,GACxBhZ,GAAakZ,CAAW,EAE5B,GAAI,CAAClB,EAAsB,CAEzB,MAAM+B,EAAQJ,EAAM,KAAK,MACnBK,EAAQH,EAAM,KAAK,MAEzB,GAAIE,IAAUC,EACZ,MAAO,CACL,CAACjD,EAAc,IAAIgD,CAAK,UAAUC,CAAK,wBAAwB,EAC/D,CAACL,CAAK,EACN,CAACE,CAAK,CACd,EAGI,GAAI,CAACI,GAAcN,EAAOE,CAAK,EAC7B,MAAO,CACL,CAAC9C,EAAc,+BAA+B,EAC9C,CAAC4C,CAAK,EACN,CAACE,CAAK,CACd,CAEG,CAED,MAAMK,EAAQN,GAAS,KAA0B,OAASA,EAAK,KACzDO,EAAQL,GAAS,KAA0B,OAASA,EAAK,KAE/D,GAAII,GAASC,GAASC,GAAgBF,EAAOC,CAAK,EAChD,MAAO,CACL,CACEpD,EACA,kCAAkCpW,EAAQuZ,CAAK,CAAC,UAAUvZ,EACxDwZ,CACD,CAAA,GACF,EACD,CAACR,CAAK,EACN,CAACE,CAAK,CACZ,EAKE,MAAMZ,EAAgBU,EAAM,aACtBR,EAAgBU,EAAM,aAE5B,GAAIZ,GAAiBE,EAAe,CAClC,MAAM7B,EAAYyB,GAChBnO,EACAwM,EACAF,EACAc,EACAjW,GAAamY,CAAK,EAClBjB,EACAlX,GAAaoY,CAAK,EAClBhB,CACN,EACI,OAAOkB,GAAkB/C,EAAWP,EAAc4C,EAAOE,CAAK,CAC/D,CACH,CAEA,SAASI,GAAcN,EAAOE,EAAO,CACnC,MAAMS,EAAQX,EAAM,UACdY,EAAQV,EAAM,UAEpB,GAAIS,IAAU,QAAaA,EAAM,SAAW,EAC1C,OAAOC,IAAU,QAAaA,EAAM,SAAW,EAQjD,GALIA,IAAU,QAAaA,EAAM,SAAW,GAKxCD,EAAM,SAAWC,EAAM,OAEzB,MAAO,GAIT,MAAMC,EAAU,IAAI,IAAID,EAAM,IAAI,CAAC,CAAE,KAAAhb,EAAM,MAAAR,CAAK,IAAO,CAACQ,EAAK,MAAOR,CAAK,CAAC,CAAC,EAC3E,OAAOub,EAAM,MAAOG,GAAS,CAC3B,MAAMC,EAASD,EAAK,MACdE,EAASH,EAAQ,IAAIC,EAAK,KAAK,KAAK,EAE1C,OAAIE,IAAW,OACN,GAGFC,GAAeF,CAAM,IAAME,GAAeD,CAAM,CAC3D,CAAG,CACH,CAEA,SAASC,GAAe7b,EAAO,CAC7B,OAAO4F,GAAM8R,GAAc1X,CAAK,CAAC,CACnC,CAIA,SAASqb,GAAgBF,EAAOC,EAAO,CACrC,OAAI9Z,GAAW6Z,CAAK,EACX7Z,GAAW8Z,CAAK,EACnBC,GAAgBF,EAAM,OAAQC,EAAM,MAAM,EAC1C,GAGF9Z,GAAW8Z,CAAK,EACX,GAGL7Z,GAAc4Z,CAAK,EACd5Z,GAAc6Z,CAAK,EACtBC,GAAgBF,EAAM,OAAQC,EAAM,MAAM,EAC1C,GAGF7Z,GAAc6Z,CAAK,EACd,GAGL7Y,GAAW4Y,CAAK,GAAK5Y,GAAW6Y,CAAK,EAChCD,IAAUC,EAGZ,EACT,CAIA,SAASvC,GACPhN,EACAwM,EACA3N,EACA4N,EACA,CACA,MAAMwD,EAASzD,EAA6B,IAAIC,CAAY,EAE5D,GAAIwD,EACF,OAAOA,EAGT,MAAMC,EAAc,OAAO,OAAO,IAAI,EAChCnD,EAAgB,OAAO,OAAO,IAAI,EAExCoD,GACEnQ,EACAnB,EACA4N,EACAyD,EACAnD,CACJ,EAEE,MAAM/b,EAAS,CAACkf,EAAa,OAAO,KAAKnD,CAAa,CAAC,EACvD,OAAAP,EAA6B,IAAIC,EAAczb,CAAM,EAC9CA,CACT,CAGA,SAASuc,GACPvN,EACAwM,EACAjC,EACA,CAEA,MAAM0F,EAASzD,EAA6B,IAAIjC,EAAS,YAAY,EAErE,GAAI0F,EACF,OAAOA,EAGT,MAAMG,EAAexL,GAAY5E,EAAQ,UAAS,EAAIuK,EAAS,aAAa,EAC5E,OAAOyC,GACLhN,EACAwM,EACA4D,EACA7F,EAAS,YACb,CACA,CAEA,SAAS4F,GACPnQ,EACAnB,EACA4N,EACAyD,EACAnD,EACA,CACA,UAAWsD,KAAa5D,EAAa,WACnC,OAAQ4D,EAAU,KAAI,CACpB,KAAK9b,EAAK,MAAO,CACf,MAAMgE,EAAY8X,EAAU,KAAK,MACjC,IAAInL,GAEA9P,GAAayJ,CAAU,GAAKxJ,GAAgBwJ,CAAU,KACxDqG,EAAWrG,EAAW,UAAW,EAACtG,CAAS,GAG7C,MAAM4T,EAAekE,EAAU,MAC3BA,EAAU,MAAM,MAChB9X,EAEC2X,EAAY/D,CAAY,IAC3B+D,EAAY/D,CAAY,EAAI,IAG9B+D,EAAY/D,CAAY,EAAE,KAAK,CAACtN,EAAYwR,EAAWnL,CAAQ,CAAC,EAChE,KACD,CAED,KAAK3Q,EAAK,gBACRwY,EAAcsD,EAAU,KAAK,KAAK,EAAI,GACtC,MAEF,KAAK9b,EAAK,gBAAiB,CACzB,MAAMkT,EAAgB4I,EAAU,cAC1BC,EAAqB7I,EACvB7C,GAAY5E,EAAQ,UAAW,EAAEyH,CAAa,EAC9C5I,EAEJsR,GACEnQ,EACAsQ,EACAD,EAAU,aACVH,EACAnD,CACV,EAEQ,KACD,CACF,CAEL,CAGA,SAAS0C,GAAkB/C,EAAWP,EAAc4C,EAAOE,EAAO,CAChE,GAAIvC,EAAU,OAAS,EACrB,MAAO,CACL,CAACP,EAAcO,EAAU,IAAI,CAAC,CAACR,CAAM,IAAMA,CAAM,CAAC,EAClD,CAAC6C,EAAO,GAAGrC,EAAU,IAAI,CAAC,CAAG,CAAAE,CAAO,IAAMA,CAAO,EAAE,MAAM,EACzD,CAACqC,EAAO,GAAGvC,EAAU,IAAI,CAAC,CAAK,CAAA,CAAAG,CAAO,IAAMA,CAAO,EAAE,MAAM,CACjE,CAEA,CAKA,MAAMN,EAAQ,CACZ,aAAc,CACZ,KAAK,MAAQ,IAAI,GAClB,CAED,IAAI1Z,EAAGC,EAAGsa,EAAsB,CAC9B,IAAImD,EAEJ,KAAM,CAACC,EAAMC,CAAI,EAAI5d,EAAIC,EAAI,CAACD,EAAGC,CAAC,EAAI,CAACA,EAAGD,CAAC,EACrC7B,GACHuf,EAAkB,KAAK,MAAM,IAAIC,CAAI,KAAO,MAC7CD,IAAoB,OAChB,OACAA,EAAgB,IAAIE,CAAI,EAE9B,OAAIzf,IAAW,OACN,GAKFoc,EAAuB,GAAOA,IAAyBpc,CAC/D,CAED,IAAI6B,EAAGC,EAAGsa,EAAsB,CAC9B,KAAM,CAACoD,EAAMC,CAAI,EAAI5d,EAAIC,EAAI,CAACD,EAAGC,CAAC,EAAI,CAACA,EAAGD,CAAC,EAErCxB,EAAM,KAAK,MAAM,IAAImf,CAAI,EAE3Bnf,IAAQ,OACV,KAAK,MAAM,IAAImf,EAAM,IAAI,IAAI,CAAC,CAACC,EAAMrD,CAAoB,CAAC,CAAC,CAAC,EAE5D/b,EAAI,IAAIof,EAAMrD,CAAoB,CAErC,CACH,CCvxBO,SAASsD,GAA4B1Q,EAAS,CACnD,MAAO,CACL,eAAexL,EAAM,CACnB,MAAMmc,EAAW3Q,EAAQ,UACnBnB,EAAamB,EAAQ,gBAE3B,GACErJ,GAAgBga,CAAQ,GACxBha,GAAgBkI,CAAU,GAC1B,CAAC1D,GAAe6E,EAAQ,UAAS,EAAI2Q,EAAU9R,CAAU,EACzD,CACA,MAAM+R,EAAgB7a,EAAQ8I,CAAU,EAClCgS,EAAc9a,EAAQ4a,CAAQ,EACpC3Q,EAAQ,YACN,IAAInL,EACF,sDAAsD+b,CAAa,2BAA2BC,CAAW,KACzG,CACE,MAAOrc,CACR,CACF,CACX,CACO,CACF,EAED,eAAeA,EAAM,CACnB,MAAM+W,EAAW/W,EAAK,KAAK,MACrBmc,EAAWG,GAAgB9Q,EAASuL,CAAQ,EAC5C1M,EAAamB,EAAQ,gBAE3B,GACE2Q,GACA9R,GACA,CAAC1D,GAAe6E,EAAQ,UAAS,EAAI2Q,EAAU9R,CAAU,EACzD,CACA,MAAM+R,EAAgB7a,EAAQ8I,CAAU,EAClCgS,EAAc9a,EAAQ4a,CAAQ,EACpC3Q,EAAQ,YACN,IAAInL,EACF,aAAa0W,CAAQ,+CAA+CqF,CAAa,2BAA2BC,CAAW,KACvH,CACE,MAAOrc,CACR,CACF,CACX,CACO,CACF,CACL,CACA,CAEA,SAASsc,GAAgB9Q,EAASrL,EAAM,CACtC,MAAMoc,EAAO/Q,EAAQ,YAAYrL,CAAI,EAErC,GAAIoc,EAAM,CACR,MAAM7b,EAAO0P,GAAY5E,EAAQ,UAAS,EAAI+Q,EAAK,aAAa,EAEhE,GAAIpa,GAAgBzB,CAAI,EACtB,OAAOA,CAEV,CACH,CC1DO,SAAS8b,GAA8BhR,EAAS,CACrD,MAAO,CAEL,GAAGiR,GAA0CjR,CAAO,EACpD,MAAO,CAEL,MAAM+F,EAAW,CACf,IAAImL,EAEJ,MAAMhM,EAAWlF,EAAQ,cAEzB,GAAI,CAACkF,EACH,MAAO,GAGT,MAAMiM,EAAe,IAAI,KAEtBD,EAAuBnL,EAAU,aAAe,MACjDmL,IAAyB,OACrB,OACAA,EAAqB,IAAKjY,GAAQA,EAAI,KAAK,KAAK,CAC9D,EAEQ,UAAWuM,KAAUN,EAAS,KAC5B,GAAI,CAACiM,EAAa,IAAI3L,EAAO,IAAI,GAAKtM,GAAmBsM,CAAM,EAAG,CAChE,MAAM4L,EAAarb,EAAQyP,EAAO,IAAI,EACtCxF,EAAQ,YACN,IAAInL,EACF,UAAUqQ,EAAS,IAAI,eAAeM,EAAO,IAAI,cAAc4L,CAAU,0CACzE,CACE,MAAOrL,CACR,CACF,CACf,CACW,CAEJ,CACF,CACL,CACA,CAKO,SAASkL,GAA0CjR,EAAS,CACjE,IAAIqR,EAEJ,MAAMC,EAAkB,OAAO,OAAO,IAAI,EACpCtW,EAASgF,EAAQ,YACjBgI,GACHqJ,EACCrW,GAAW,KACP,OACAA,EAAO,cAAe,KAAM,MAAQqW,IAA0B,OAChEA,EACAzU,GAEN,UAAWV,KAAa8L,EACtBsJ,EAAgBpV,EAAU,IAAI,EAAIrL,GAChCqL,EAAU,KAAK,OAAOhD,EAAkB,EACvCD,GAAQA,EAAI,IACnB,EAGE,MAAMgP,EAAiBjI,EAAQ,YAAW,EAAG,YAE7C,UAAWkI,KAAOD,EAChB,GAAIC,EAAI,OAAS3T,EAAK,qBAAsB,CAC1C,IAAI4T,EAKJ,MAAMoJ,GACHpJ,EAAiBD,EAAI,aAAe,MAAQC,IAAmB,OAC5DA,EACA,GACNmJ,EAAgBpJ,EAAI,KAAK,KAAK,EAAIrX,GAChC0gB,EAAS,OAAOC,EAAsB,EACrCvY,GAAQA,EAAI,KAAK,KAC1B,CACK,CAGH,MAAO,CACL,UAAW,CAET,MAAMoP,EAAe,CACnB,MAAMC,EAAgBD,EAAc,KAAK,MACnCoJ,EAAeH,EAAgBhJ,CAAa,EAElD,GAAImJ,EAAc,CAChB,IAAIC,EAKJ,MAAMH,GACHG,EAAwBrJ,EAAc,aAAe,MACtDqJ,IAA0B,OACtBA,EACA,GACAC,EAAa,IAAI,IAAIJ,EAAS,IAAKtY,GAAQA,EAAI,KAAK,KAAK,CAAC,EAEhE,SAAW,CAACN,EAAS6M,CAAM,IAAK,OAAO,QAAQiM,CAAY,EACzD,GAAI,CAACE,EAAW,IAAIhZ,CAAO,EAAG,CAC5B,MAAM8M,EAAUxQ,GAAOuQ,EAAO,IAAI,EAC9BzP,EAAQyP,EAAO,IAAI,EACnBzL,GAAMyL,EAAO,IAAI,EACrBxF,EAAQ,YACN,IAAInL,EACF,eAAeyT,CAAa,eAAe3P,CAAO,cAAc8M,CAAO,0CACvE,CACE,MAAO4C,CACR,CACF,CACjB,CACa,CAEJ,CACF,CACF,CACL,CACA,CAEA,SAASmJ,GAAuBvY,EAAK,CACnC,OAAOA,EAAI,KAAK,OAAS1E,EAAK,eAAiB0E,EAAI,cAAgB,IACrE,CCnIO,SAAS2Y,GAAgB5R,EAAS,CACvC,MAAO,CACL,MAAMxL,EAAM,CACV,MAAMU,EAAO8K,EAAQ,UACfyM,EAAejY,EAAK,aAE1B,GAAIU,GACF,GAAIwB,GAAWS,GAAajC,CAAI,CAAC,GAC/B,GAAIuX,EAAc,CAChB,MAAMlU,EAAY/D,EAAK,KAAK,MACtBkT,EAAU3R,EAAQb,CAAI,EAC5B8K,EAAQ,YACN,IAAInL,EACF,UAAU0D,CAAS,2CAA2CmP,CAAO,sBACrE,CACE,MAAO+E,CACR,CACF,CACf,CACW,UACQ,CAACA,EAAc,CACxB,MAAMlU,EAAY/D,EAAK,KAAK,MACtBkT,EAAU3R,EAAQb,CAAI,EAC5B8K,EAAQ,YACN,IAAInL,EACF,UAAU0D,CAAS,cAAcmP,CAAO,uDAAuDnP,CAAS,aACxG,CACE,MAAO/D,CACR,CACF,CACb,CACS,EAEJ,CACL,CACA,CCdO,SAASqd,GAAaxd,EAAWa,EAAMZ,EAAW,CACvD,GAAKD,EAML,IAAIA,EAAU,OAASE,EAAK,SAAU,CACpC,MAAMqX,EAAevX,EAAU,KAAK,MAEpC,GAAIC,GAAa,MAAQA,EAAUsX,CAAY,IAAM,OAEnD,OAGF,MAAMkG,EAAgBxd,EAAUsX,CAAY,EAE5C,OAAIkG,IAAkB,MAAQpc,GAAcR,CAAI,EAC9C,OAKK4c,CACR,CAED,GAAIpc,GAAcR,CAAI,EACpB,OAAIb,EAAU,OAASE,EAAK,KAC1B,OAGKsd,GAAaxd,EAAWa,EAAK,OAAQZ,CAAS,EAGvD,GAAID,EAAU,OAASE,EAAK,KAE1B,OAAO,KAGT,GAAIkB,GAAWP,CAAI,EAAG,CACpB,MAAMgI,EAAWhI,EAAK,OAEtB,GAAIb,EAAU,OAASE,EAAK,KAAM,CAChC,MAAMwd,EAAgB,CAAA,EAEtB,UAAW3U,KAAY/I,EAAU,OAC/B,GAAI2d,GAAkB5U,EAAU9I,CAAS,EAAG,CAG1C,GAAIoB,GAAcwH,CAAQ,EACxB,OAGF6U,EAAc,KAAK,IAAI,CACjC,KAAe,CACL,MAAME,EAAYJ,GAAazU,EAAUF,EAAU5I,CAAS,EAE5D,GAAI2d,IAAc,OAChB,OAGFF,EAAc,KAAKE,CAAS,CAC7B,CAGH,OAAOF,CACR,CAED,MAAMxW,EAAesW,GAAaxd,EAAW6I,EAAU5I,CAAS,EAEhE,OAAIiH,IAAiB,OACnB,OAGK,CAACA,CAAY,CACrB,CAED,GAAI/F,GAAkBN,CAAI,EAAG,CAC3B,GAAIb,EAAU,OAASE,EAAK,OAC1B,OAGF,MAAM2d,EAAa,OAAO,OAAO,IAAI,EAC/B7U,EAAaxM,GAAOwD,EAAU,OAASI,GAAUA,EAAM,KAAK,KAAK,EAEvE,UAAWA,KAAS,OAAO,OAAOS,EAAK,UAAS,CAAE,EAAG,CACnD,MAAM6Q,EAAY1I,EAAW5I,EAAM,IAAI,EAEvC,GAAI,CAACsR,GAAaiM,GAAkBjM,EAAU,MAAOzR,CAAS,EAAG,CAC/D,GAAIG,EAAM,eAAiB,OACzByd,EAAWzd,EAAM,IAAI,EAAIA,EAAM,qBACtBiB,GAAcjB,EAAM,IAAI,EACjC,OAGF,QACD,CAED,MAAM6I,EAAauU,GAAa9L,EAAU,MAAOtR,EAAM,KAAMH,CAAS,EAEtE,GAAIgJ,IAAe,OACjB,OAGF4U,EAAWzd,EAAM,IAAI,EAAI6I,CAC1B,CAED,OAAO4U,CACR,CAED,GAAIxb,GAAWxB,CAAI,EAAG,CAIpB,IAAIlE,EAEJ,GAAI,CACFA,EAASkE,EAAK,aAAab,EAAWC,CAAS,CAChD,MAAgB,CACf,MACD,CAED,OAAItD,IAAW,OACb,OAGKA,CACR,CAIQ0M,GAAU,GAAO,0BAA4B3H,EAAQb,CAAI,CAAC,EACrE,CAGA,SAAS8c,GAAkB3d,EAAWC,EAAW,CAC/C,OACED,EAAU,OAASE,EAAK,WACvBD,GAAa,MAAQA,EAAUD,EAAU,KAAK,KAAK,IAAM,OAE9D,CC7BO,SAAS8d,GAAkBjK,EAAK1T,EAAM4d,EAAgB,CAC3D,IAAIC,EAEJ,MAAMN,EAAgB,CAAA,EAIhBO,GACHD,EAAkB7d,EAAK,aAAe,MAAQ6d,IAAoB,OAC/DA,EACA,GACAV,EAAa9gB,GAAOyhB,EAAgBrZ,GAAQA,EAAI,KAAK,KAAK,EAEhE,UAAWuM,KAAU0C,EAAI,KAAM,CAC7B,MAAMvT,EAAO6Q,EAAO,KACdC,EAAUD,EAAO,KACjB+M,EAAeZ,EAAWhd,CAAI,EAEpC,GAAI,CAAC4d,EAAc,CACjB,GAAI/M,EAAO,eAAiB,OAC1BuM,EAAcpd,CAAI,EAAI6Q,EAAO,qBACpB9P,GAAc+P,CAAO,EAC9B,MAAM,IAAI5Q,EACR,aAAaF,CAAI,uBAAuBoB,EAAQ0P,CAAO,CAAC,sBAExD,CACE,MAAOjR,CACR,CACX,EAGM,QACD,CAED,MAAMH,EAAYke,EAAa,MAC/B,IAAIC,EAASne,EAAU,OAASE,EAAK,KAErC,GAAIF,EAAU,OAASE,EAAK,SAAU,CACpC,MAAMqX,EAAevX,EAAU,KAAK,MAEpC,GACE+d,GAAkB,MAClB,CAACK,GAAeL,EAAgBxG,CAAY,EAC5C,CACA,GAAIpG,EAAO,eAAiB,OAC1BuM,EAAcpd,CAAI,EAAI6Q,EAAO,qBACpB9P,GAAc+P,CAAO,EAC9B,MAAM,IAAI5Q,EACR,aAAaF,CAAI,uBAAuBoB,EAAQ0P,CAAO,CAAC,iCACvBmG,CAAY,4CAC7C,CACE,MAAOvX,CACR,CACb,EAGQ,QACD,CAEDme,EAASJ,EAAexG,CAAY,GAAK,IAC1C,CAED,GAAI4G,GAAU9c,GAAc+P,CAAO,EACjC,MAAM,IAAI5Q,EACR,aAAaF,CAAI,uBAAuBoB,EAAQ0P,CAAO,CAAC,sBAExD,CACE,MAAOpR,CACR,CACT,EAGI,MAAMkH,EAAesW,GAAaxd,EAAWoR,EAAS2M,CAAc,EAEpE,GAAI7W,IAAiB,OAInB,MAAM,IAAI1G,EACR,aAAaF,CAAI,uBAAuBoF,GAAM1F,CAAS,CAAC,IACxD,CACE,MAAOA,CACR,CACT,EAGI0d,EAAcpd,CAAI,EAAI4G,CACvB,CAED,OAAOwW,CACT,CAaO,SAASW,GAAmBC,EAAcne,EAAM4d,EAAgB,CACrE,IAAIQ,EAEJ,MAAMvK,GACHuK,EAAmBpe,EAAK,cAAgB,MAAQoe,IAAqB,OAClE,OACAA,EAAiB,KACd1W,GAAcA,EAAU,KAAK,QAAUyW,EAAa,IAC/D,EAEE,GAAItK,EACF,OAAO8J,GAAkBQ,EAActK,EAAe+J,CAAc,CAExE,CAEA,SAASK,GAAeve,EAAK2e,EAAM,CACjC,OAAO,OAAO,UAAU,eAAe,KAAK3e,EAAK2e,CAAI,CACvD,CCpPO,SAASC,GACd9X,EACA+X,EACAX,EACAY,EACAvG,EACA,CACA,MAAM3T,EAAS,IAAI,IACnB,OAAAma,GACEjY,EACA+X,EACAX,EACAY,EACAvG,EACA3T,EACA,IAAI,GACR,EACSA,CACT,CAuCA,SAASma,GACPjY,EACA+X,EACAX,EACAY,EACAvG,EACA3T,EACAoa,EACA,CACA,UAAW7C,KAAa5D,EAAa,WACnC,OAAQ4D,EAAU,KAAI,CACpB,KAAK9b,EAAK,MAAO,CACf,GAAI,CAAC4e,GAAkBf,EAAgB/B,CAAS,EAC9C,SAGF,MAAM1b,EAAOye,GAAiB/C,CAAS,EACjCgD,EAAYva,EAAO,IAAInE,CAAI,EAE7B0e,IAAc,OAChBA,EAAU,KAAKhD,CAAS,EAExBvX,EAAO,IAAInE,EAAM,CAAC0b,CAAS,CAAC,EAG9B,KACD,CAED,KAAK9b,EAAK,gBAAiB,CACzB,GACE,CAAC4e,GAAkBf,EAAgB/B,CAAS,GAC5C,CAACiD,GAA2BtY,EAAQqV,EAAW2C,CAAW,EAE1D,SAGFC,GACEjY,EACA+X,EACAX,EACAY,EACA3C,EAAU,aACVvX,EACAoa,CACV,EACQ,KACD,CAED,KAAK3e,EAAK,gBAAiB,CACzB,MAAMgX,EAAW8E,EAAU,KAAK,MAEhC,GACE6C,EAAqB,IAAI3H,CAAQ,GACjC,CAAC4H,GAAkBf,EAAgB/B,CAAS,EAE5C,SAGF6C,EAAqB,IAAI3H,CAAQ,EACjC,MAAMhB,EAAWwI,EAAUxH,CAAQ,EAEnC,GACE,CAAChB,GACD,CAAC+I,GAA2BtY,EAAQuP,EAAUyI,CAAW,EAEzD,SAGFC,GACEjY,EACA+X,EACAX,EACAY,EACAzI,EAAS,aACTzR,EACAoa,CACV,EACQ,KACD,CACF,CAEL,CAMA,SAASC,GAAkBf,EAAgB5d,EAAM,CAC/C,MAAM+e,EAAOb,GAAmBlW,GAAsBhI,EAAM4d,CAAc,EAE1E,IAAKmB,GAAS,KAA0B,OAASA,EAAK,MAAQ,GAC5D,MAAO,GAGT,MAAMC,EAAUd,GACdpW,GACA9H,EACA4d,CACJ,EAEE,OACGoB,GAAY,KAA6B,OAASA,EAAQ,MAAQ,EAMvE,CAKA,SAASF,GAA2BtY,EAAQuP,EAAUrV,EAAM,CAC1D,MAAMue,EAAoBlJ,EAAS,cAEnC,GAAI,CAACkJ,EACH,MAAO,GAGT,MAAMC,EAAkB9O,GAAY5J,EAAQyY,CAAiB,EAE7D,OAAIC,IAAoBxe,EACf,GAGL0B,GAAe8c,CAAe,EACzB1Y,EAAO,UAAU0Y,EAAiBxe,CAAI,EAGxC,EACT,CAKA,SAASke,GAAiB5e,EAAM,CAC9B,OAAOA,EAAK,MAAQA,EAAK,MAAM,MAAQA,EAAK,KAAK,KACnD,CCxMO,SAASmf,GAA6B3T,EAAS,CACpD,MAAO,CACL,oBAAoBxL,EAAM,CACxB,GAAIA,EAAK,YAAc,eAAgB,CACrC,MAAMwG,EAASgF,EAAQ,YACjBe,EAAmB/F,EAAO,sBAEhC,GAAI+F,EAAkB,CACpB,MAAM6S,EAAgBpf,EAAK,KAAOA,EAAK,KAAK,MAAQ,KAC9C4d,EAAiB,OAAO,OAAO,IAAI,EACnCyB,EAAW7T,EAAQ,cACnB+S,EAAY,OAAO,OAAO,IAAI,EAEpC,UAAWpM,KAAckN,EAAS,YAC5BlN,EAAW,OAASpS,EAAK,sBAC3Bwe,EAAUpM,EAAW,KAAK,KAAK,EAAIA,GAIvC,MAAM7N,EAASga,GACb9X,EACA+X,EACAX,EACArR,EACAvM,EAAK,YACjB,EAEU,GAAIsE,EAAO,KAAO,EAAG,CAGnB,MAAMgb,EAFsB,CAAC,GAAGhb,EAAO,OAAQ,CAAA,EACM,MAAM,CAAC,EACN,OACtDkH,EAAQ,YACN,IAAInL,EACF+e,GAAiB,KACb,iBAAiBA,CAAa,0CAC9B,+DACJ,CACE,MAAOE,CACR,CACF,CACf,CACW,CAED,UAAWzW,KAAcvE,EAAO,SAChBuE,EAAW,CAAC,EACF,KAAK,MAEf,WAAW,IAAI,GAC3B2C,EAAQ,YACN,IAAInL,EACF+e,GAAiB,KACb,iBAAiBA,CAAa,sDAC9B,2EACJ,CACE,MAAOvW,CACR,CACF,CACjB,CAGS,CACF,CACF,CACL,CACA,CCzEO,SAAS0W,GAAQjjB,EAAMC,EAAO,CACnC,MAAMC,EAAS,IAAI,IAEnB,UAAWC,KAAQH,EAAM,CACvB,MAAMf,EAAMgB,EAAME,CAAI,EAChB+iB,EAAQhjB,EAAO,IAAIjB,CAAG,EAExBikB,IAAU,OACZhjB,EAAO,IAAIjB,EAAK,CAACkB,CAAI,CAAC,EAEtB+iB,EAAM,KAAK/iB,CAAI,CAElB,CAED,OAAOD,CACT,CCPO,SAASijB,GAAwBjU,EAAS,CAC/C,MAAO,CACL,MAAOkU,EACP,UAAWA,CACf,EAEE,SAASA,EAAmB/K,EAAY,CACtC,IAAIgL,EAKJ,MAAM7B,GACH6B,EAAwBhL,EAAW,aAAe,MACnDgL,IAA0B,OACtBA,EACA,GACAC,EAAWL,GAAQzB,EAAgBrZ,GAAQA,EAAI,KAAK,KAAK,EAE/D,SAAW,CAACN,EAAS4Y,CAAQ,IAAK6C,EAC5B7C,EAAS,OAAS,GACpBvR,EAAQ,YACN,IAAInL,EACF,yCAAyC8D,CAAO,KAChD,CACE,MAAO4Y,EAAS,IAAK/c,GAASA,EAAK,IAAI,CACxC,CACF,CACX,CAGG,CACH,CC3BO,SAAS6f,GAAgCrU,EAAS,CACvD,MAAMsU,EAAqB,OAAO,OAAO,IAAI,EACvCtZ,EAASgF,EAAQ,YACjBgI,EAAoBhN,EACtBA,EAAO,cAAe,EACtB4B,GAEJ,UAAWV,KAAa8L,EACtBsM,EAAmBpY,EAAU,IAAI,EAAI,CAACA,EAAU,aAGlD,MAAM+L,EAAiBjI,EAAQ,YAAW,EAAG,YAE7C,UAAWkI,KAAOD,EACZC,EAAI,OAAS3T,EAAK,uBACpB+f,EAAmBpM,EAAI,KAAK,KAAK,EAAI,CAACA,EAAI,YAI9C,MAAMqM,EAAmB,OAAO,OAAO,IAAI,EACrCC,EAAoB,OAAO,OAAO,IAAI,EAC5C,MAAO,CAIL,MAAMhgB,EAAM,CACV,GAAI,EAAE,eAAgBA,IAAS,CAACA,EAAK,WACnC,OAGF,IAAIigB,EAEJ,GACEjgB,EAAK,OAASD,EAAK,mBACnBC,EAAK,OAASD,EAAK,iBAEnBkgB,EAAiBF,UACRhO,GAAqB/R,CAAI,GAAKiS,GAAoBjS,CAAI,EAAG,CAClE,MAAM6F,EAAW7F,EAAK,KAAK,MAC3BigB,EAAiBD,EAAkBna,CAAQ,EAEvCoa,IAAmB,SACrBD,EAAkBna,CAAQ,EAAIoa,EAAiB,OAAO,OAAO,IAAI,EAE3E,MACQA,EAAiB,OAAO,OAAO,IAAI,EAGrC,UAAWvY,KAAa1H,EAAK,WAAY,CACvC,MAAM8T,EAAgBpM,EAAU,KAAK,MAEjCoY,EAAmBhM,CAAa,IAC9BmM,EAAenM,CAAa,EAC9BtI,EAAQ,YACN,IAAInL,EACF,mBAAmByT,CAAa,4CAChC,CACE,MAAO,CAACmM,EAAenM,CAAa,EAAGpM,CAAS,CACjD,CACF,CACf,EAEYuY,EAAenM,CAAa,EAAIpM,EAGrC,CACF,CACL,CACA,CC3EO,SAASwY,GAAwB1U,EAAS,CAC/C,MAAM2U,EAAqB,OAAO,OAAO,IAAI,EAC7C,MAAO,CACL,oBAAqB,IAAM,GAE3B,mBAAmBngB,EAAM,CACvB,MAAM6U,EAAe7U,EAAK,KAAK,MAE/B,OAAImgB,EAAmBtL,CAAY,EACjCrJ,EAAQ,YACN,IAAInL,EACF,yCAAyCwU,CAAY,KACrD,CACE,MAAO,CAACsL,EAAmBtL,CAAY,EAAG7U,EAAK,IAAI,CACpD,CACF,CACX,EAEQmgB,EAAmBtL,CAAY,EAAI7U,EAAK,KAGnC,EACR,CACL,CACA,CCtBO,SAASogB,GAA0B5U,EAAS,CACjD,MAAM6U,EAAiB,CAAA,EACvB,IAAIC,EAAa,OAAO,OAAO,IAAI,EACnC,MAAO,CACL,YAAa,CACX,OAAQ,CACND,EAAe,KAAKC,CAAU,EAC9BA,EAAa,OAAO,OAAO,IAAI,CAChC,EAED,OAAQ,CACN,MAAMC,EAAiBF,EAAe,MACtCE,GAAkBrX,GAAU,EAAK,EACjCoX,EAAaC,CACd,CACF,EAED,YAAYvgB,EAAM,CAChB,MAAM+D,EAAY/D,EAAK,KAAK,MAExBsgB,EAAWvc,CAAS,EACtByH,EAAQ,YACN,IAAInL,EACF,4CAA4C0D,CAAS,KACrD,CACE,MAAO,CAACuc,EAAWvc,CAAS,EAAG/D,EAAK,IAAI,CACzC,CACF,CACX,EAEQsgB,EAAWvc,CAAS,EAAI/D,EAAK,IAEhC,CACL,CACA,CCpCO,SAASwgB,GAAyBhV,EAAS,CAChD,MAAMiV,EAAsB,OAAO,OAAO,IAAI,EAC9C,MAAO,CACL,oBAAoBzgB,EAAM,CACxB,MAAMof,EAAgBpf,EAAK,KAE3B,OAAIof,IACEqB,EAAoBrB,EAAc,KAAK,EACzC5T,EAAQ,YACN,IAAInL,EACF,0CAA0C+e,EAAc,KAAK,KAC7D,CACE,MAAO,CACLqB,EAAoBrB,EAAc,KAAK,EACvCA,CACD,CACF,CACF,CACb,EAEUqB,EAAoBrB,EAAc,KAAK,EAAIA,GAIxC,EACR,EAED,mBAAoB,IAAM,EAC9B,CACA,CC9BO,SAASsB,GAAwBlV,EAAS,CAC/C,MAAO,CACL,oBAAoBoB,EAAe,CACjC,IAAI+T,EAKJ,MAAMC,GACHD,EAAwB/T,EAAc,uBAAyB,MAChE+T,IAA0B,OACtBA,EACA,GACAE,EAA0BtB,GAC9BqB,EACC5gB,GAASA,EAAK,SAAS,KAAK,KACrC,EAEM,SAAW,CAACoX,EAAc0J,CAAa,IAAKD,EACtCC,EAAc,OAAS,GACzBtV,EAAQ,YACN,IAAInL,EACF,0CAA0C+W,CAAY,KACtD,CACE,MAAO0J,EAAc,IAAK9gB,GAASA,EAAK,SAAS,IAAI,CACtD,CACF,CACb,CAGK,CACL,CACA,CChBO,SAAS+gB,GAAwBvV,EAAS,CAC/C,MAAO,CACL,UAAUxL,EAAM,CAGd,MAAMU,EAAO+B,GAAgB+I,EAAQ,mBAAoB,CAAA,EAEzD,GAAI,CAACvK,GAAWP,CAAI,EAClB,OAAAsgB,GAAiBxV,EAASxL,CAAI,EACvB,EAEV,EAED,YAAYA,EAAM,CAChB,MAAMU,EAAOiC,GAAa6I,EAAQ,aAAc,CAAA,EAEhD,GAAI,CAACxK,GAAkBN,CAAI,EACzB,OAAAsgB,GAAiBxV,EAASxL,CAAI,EACvB,GAGT,MAAMihB,EAAe5kB,GAAO2D,EAAK,OAASC,GAAUA,EAAM,KAAK,KAAK,EAEpE,UAAWyQ,KAAY,OAAO,OAAOhQ,EAAK,UAAS,CAAE,EAGnD,GAAI,CAFcugB,EAAavQ,EAAS,IAAI,GAE1BvK,GAAqBuK,CAAQ,EAAG,CAChD,MAAMwC,EAAU3R,EAAQmP,EAAS,IAAI,EACrClF,EAAQ,YACN,IAAInL,EACF,UAAUK,EAAK,IAAI,IAAIgQ,EAAS,IAAI,uBAAuBwC,CAAO,sBAClE,CACE,MAAOlT,CACR,CACF,CACb,CACS,CAEJ,EAED,YAAYA,EAAM,CAChB,MAAMqK,EAAa1H,GAAa6I,EAAQ,mBAAoB,CAAA,EAG5D,GAAI,CAFcA,EAAQ,gBAERxK,GAAkBqJ,CAAU,EAAG,CAC/C,MAAMpO,EAAc2B,GAClBoC,EAAK,KAAK,MACV,OAAO,KAAKqK,EAAW,WAAW,CAC5C,EACQmB,EAAQ,YACN,IAAInL,EACF,UAAUL,EAAK,KAAK,KAAK,6BAA6BqK,EAAW,IAAI,KACnE1O,GAAWM,CAAW,EACxB,CACE,MAAO+D,CACR,CACF,CACX,CACO,CACF,EAED,UAAUA,EAAM,CACd,MAAMU,EAAO8K,EAAQ,eAEjBtK,GAAcR,CAAI,GACpB8K,EAAQ,YACN,IAAInL,EACF,2BAA2BkB,EAAQb,CAAI,CAAC,YAAY6E,GAAMvF,CAAI,CAAC,IAC/D,CACE,MAAOA,CACR,CACF,CACX,CAEK,EAED,UAAYA,GAASghB,GAAiBxV,EAASxL,CAAI,EACnD,SAAWA,GAASghB,GAAiBxV,EAASxL,CAAI,EAClD,WAAaA,GAASghB,GAAiBxV,EAASxL,CAAI,EACpD,YAAcA,GAASghB,GAAiBxV,EAASxL,CAAI,EACrD,aAAeA,GAASghB,GAAiBxV,EAASxL,CAAI,CAC1D,CACA,CAMA,SAASghB,GAAiBxV,EAASxL,EAAM,CAEvC,MAAMkhB,EAAe1V,EAAQ,eAE7B,GAAI,CAAC0V,EACH,OAGF,MAAMxgB,EAAOiC,GAAaue,CAAY,EAEtC,GAAI,CAAChf,GAAWxB,CAAI,EAAG,CACrB,MAAMwS,EAAU3R,EAAQ2f,CAAY,EACpC1V,EAAQ,YACN,IAAInL,EACF,2BAA2B6S,CAAO,YAAY3N,GAAMvF,CAAI,CAAC,IACzD,CACE,MAAOA,CACR,CACF,CACP,EACI,MACD,CAGD,GAAI,CAOF,GANoBU,EAAK,aACvBV,EACA,MAEN,IAEwB,OAAW,CAC7B,MAAMkT,EAAU3R,EAAQ2f,CAAY,EACpC1V,EAAQ,YACN,IAAInL,EACF,2BAA2B6S,CAAO,YAAY3N,GAAMvF,CAAI,CAAC,IACzD,CACE,MAAOA,CACR,CACF,CACT,CACK,CACF,OAAQ+L,EAAO,CACd,MAAMmH,EAAU3R,EAAQ2f,CAAY,EAEhCnV,aAAiB1L,EACnBmL,EAAQ,YAAYO,CAAK,EAEzBP,EAAQ,YACN,IAAInL,EACF,2BAA2B6S,CAAO,YAAY3N,GAAMvF,CAAI,CAAC,KACvD+L,EAAM,QACR,CACE,MAAO/L,EACP,cAAe+L,CAChB,CACF,CACT,CAEG,CACH,CC/JO,SAASoV,GAA2B3V,EAAS,CAClD,MAAO,CACL,mBAAmBxL,EAAM,CACvB,MAAMU,EAAO0P,GAAY5E,EAAQ,UAAS,EAAIxL,EAAK,IAAI,EAEvD,GAAIU,IAAS,QAAa,CAACqB,GAAYrB,CAAI,EAAG,CAC5C,MAAM0W,EAAepX,EAAK,SAAS,KAAK,MAClC6F,EAAWN,GAAMvF,EAAK,IAAI,EAChCwL,EAAQ,YACN,IAAInL,EACF,cAAc+W,CAAY,+BAA+BvR,CAAQ,KACjE,CACE,MAAO7F,EAAK,IACb,CACF,CACX,CACO,CACF,CACL,CACA,CClBO,SAASohB,GAA+B5V,EAAS,CACtD,IAAI6V,EAAY,OAAO,OAAO,IAAI,EAClC,MAAO,CACL,oBAAqB,CACnB,OAAQ,CACNA,EAAY,OAAO,OAAO,IAAI,CAC/B,EAED,MAAMpW,EAAW,CACf,MAAMuL,EAAShL,EAAQ,2BAA2BP,CAAS,EAE3D,SAAW,CAAE,KAAAjL,EAAM,KAAAU,EAAM,aAAAqJ,CAAY,IAAMyM,EAAQ,CACjD,MAAMC,EAAUzW,EAAK,KAAK,MACpBshB,EAASD,EAAU5K,CAAO,EAEhC,GAAI6K,GAAU5gB,EAAM,CAMlB,MAAM8F,EAASgF,EAAQ,YACjB+V,EAAUnR,GAAY5J,EAAQ8a,EAAO,IAAI,EAE/C,GACEC,GACA,CAACC,GACChb,EACA+a,EACAD,EAAO,aACP5gB,EACAqJ,CACD,EACD,CACA,MAAM0X,EAAalgB,EAAQggB,CAAO,EAC5BrO,EAAU3R,EAAQb,CAAI,EAC5B8K,EAAQ,YACN,IAAInL,EACF,cAAcoW,CAAO,cAAcgL,CAAU,sCAAsCvO,CAAO,KAC1F,CACE,MAAO,CAACoO,EAAQthB,CAAI,CACrB,CACF,CACjB,CACa,CACF,CACF,CACF,CACF,EAED,mBAAmBA,EAAM,CACvBqhB,EAAUrhB,EAAK,SAAS,KAAK,KAAK,EAAIA,CACvC,CACL,CACA,CAOA,SAASwhB,GACPhb,EACA+a,EACAG,EACAR,EACAS,EACA,CACA,GAAIzgB,GAAcggB,CAAY,GAAK,CAAChgB,GAAcqgB,CAAO,EAAG,CAK1D,GAAI,EAHFG,GAAmB,MAAQA,EAAgB,OAAS3hB,EAAK,OAGpB,EAFP4hB,IAAyB,QAGvD,MAAO,GAGT,MAAMC,EAAuBV,EAAa,OAC1C,OAAO3a,GAAgBC,EAAQ+a,EAASK,CAAoB,CAC7D,CAED,OAAOrb,GAAgBC,EAAQ+a,EAASL,CAAY,CACtD,CCtBO,MAAMW,GAAiB,OAAO,OAAO,CAC1C3P,GACAsO,GACA/K,GACA0J,GACArK,GACA9B,GACAmO,GACA/D,GACA/K,GACA6N,GACAtL,GACA8B,GACAwF,GACAvG,GACA+K,GACApK,GACAU,GACAhD,GACA6L,GACA1M,GACAsM,GACAsB,GACAvE,GACA4E,GACAvJ,GACAuI,EACF,CAAC,EC5FM,MAAM0B,EAAqB,CAChC,YAAYC,EAAKC,EAAS,CACxB,KAAK,KAAOD,EACZ,KAAK,WAAa,OAClB,KAAK,iBAAmB,IAAI,IAC5B,KAAK,gCAAkC,IAAI,IAC3C,KAAK,SAAWC,CACjB,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,sBACR,CAED,YAAYjW,EAAO,CACjB,KAAK,SAASA,CAAK,CACpB,CAED,aAAc,CACZ,OAAO,KAAK,IACb,CAED,YAAY5L,EAAM,CAChB,IAAIoe,EAEJ,GAAI,KAAK,WACPA,EAAY,KAAK,eACZ,CACLA,EAAY,OAAO,OAAO,IAAI,EAE9B,UAAW0D,KAAW,KAAK,YAAW,EAAG,YACnCA,EAAQ,OAASliB,EAAK,sBACxBwe,EAAU0D,EAAQ,KAAK,KAAK,EAAIA,GAIpC,KAAK,WAAa1D,CACnB,CAED,OAAOA,EAAUpe,CAAI,CACtB,CAED,mBAAmBH,EAAM,CACvB,IAAIkiB,EAAU,KAAK,iBAAiB,IAAIliB,CAAI,EAE5C,GAAI,CAACkiB,EAAS,CACZA,EAAU,CAAA,EACV,MAAMC,EAAc,CAACniB,CAAI,EACzB,IAAIoiB,EAEJ,KAAQA,EAAMD,EAAY,OACxB,UAAWtG,KAAauG,EAAI,WACtBvG,EAAU,OAAS9b,EAAK,gBAC1BmiB,EAAQ,KAAKrG,CAAS,EACbA,EAAU,cACnBsG,EAAY,KAAKtG,EAAU,YAAY,EAK7C,KAAK,iBAAiB,IAAI7b,EAAMkiB,CAAO,CACxC,CAED,OAAOA,CACR,CAED,kCAAkCjX,EAAW,CAC3C,IAAIsT,EAAY,KAAK,gCAAgC,IAAItT,CAAS,EAElE,GAAI,CAACsT,EAAW,CACdA,EAAY,CAAA,EACZ,MAAM8D,EAAiB,OAAO,OAAO,IAAI,EACnCC,EAAe,CAACrX,EAAU,YAAY,EAC5C,IAAIjL,EAEJ,KAAQA,EAAOsiB,EAAa,OAC1B,UAAWC,KAAU,KAAK,mBAAmBviB,CAAI,EAAG,CAClD,MAAM+W,EAAWwL,EAAO,KAAK,MAE7B,GAAIF,EAAetL,CAAQ,IAAM,GAAM,CACrCsL,EAAetL,CAAQ,EAAI,GAC3B,MAAMhB,EAAW,KAAK,YAAYgB,CAAQ,EAEtChB,IACFwI,EAAU,KAAKxI,CAAQ,EACvBuM,EAAa,KAAKvM,EAAS,YAAY,EAE1C,CACF,CAGH,KAAK,gCAAgC,IAAI9K,EAAWsT,CAAS,CAC9D,CAED,OAAOA,CACR,CACH,CAeO,MAAMiE,WAA0BV,EAAqB,CAC1D,YAAYtb,EAAQub,EAAKtQ,EAAUuQ,EAAS,CAC1C,MAAMD,EAAKC,CAAO,EAClB,KAAK,QAAUxb,EACf,KAAK,UAAYiL,EACjB,KAAK,gBAAkB,IAAI,IAC3B,KAAK,yBAA2B,IAAI,GACrC,CAED,IAAK,OAAO,WAAW,GAAI,CACzB,MAAO,mBACR,CAED,WAAY,CACV,OAAO,KAAK,OACb,CAED,kBAAkBzR,EAAM,CACtB,IAAIwW,EAAS,KAAK,gBAAgB,IAAIxW,CAAI,EAE1C,GAAI,CAACwW,EAAQ,CACX,MAAMiM,EAAY,CAAA,EACZhR,EAAW,IAAInB,GAAS,KAAK,OAAO,EAC1CoS,GACE1iB,EACAwR,GAAkBC,EAAU,CAC1B,mBAAoB,IAAM,GAE1B,SAASkR,EAAU,CACjBF,EAAU,KAAK,CACb,KAAME,EACN,KAAMlR,EAAS,aAAc,EAC7B,aAAcA,EAAS,gBAAiB,CACtD,CAAa,CACF,CACX,CAAS,CACT,EACM+E,EAASiM,EAET,KAAK,gBAAgB,IAAIziB,EAAMwW,CAAM,CACtC,CAED,OAAOA,CACR,CAED,2BAA2BvL,EAAW,CACpC,IAAIuL,EAAS,KAAK,yBAAyB,IAAIvL,CAAS,EAExD,GAAI,CAACuL,EAAQ,CACXA,EAAS,KAAK,kBAAkBvL,CAAS,EAEzC,UAAWsR,KAAQ,KAAK,kCAAkCtR,CAAS,EACjEuL,EAASA,EAAO,OAAO,KAAK,kBAAkB+F,CAAI,CAAC,EAGrD,KAAK,yBAAyB,IAAItR,EAAWuL,CAAM,CACpD,CAED,OAAOA,CACR,CAED,SAAU,CACR,OAAO,KAAK,UAAU,SACvB,CAED,eAAgB,CACd,OAAO,KAAK,UAAU,eACvB,CAED,cAAe,CACb,OAAO,KAAK,UAAU,cACvB,CAED,oBAAqB,CACnB,OAAO,KAAK,UAAU,oBACvB,CAED,aAAc,CACZ,OAAO,KAAK,UAAU,aACvB,CAED,cAAe,CACb,OAAO,KAAK,UAAU,cACvB,CAED,aAAc,CACZ,OAAO,KAAK,UAAU,aACvB,CAED,cAAe,CACb,OAAO,KAAK,UAAU,cACvB,CACH,CCpLO,SAASoM,GACdpc,EACAqc,EACAC,EAAQjB,GACR/jB,EAEA2T,EAAW,IAAInB,GAAS9J,CAAM,EAC9B,CACA,IAAIuc,EAEJ,MAAMC,GACHD,EACCjlB,GAAY,KAA6B,OAASA,EAAQ,aAC1D,MAAQilB,IAAuB,OAC7BA,EACA,IACNF,GAAeziB,GAAU,GAAO,wBAAwB,EAExD0L,GAAkBtF,CAAM,EACxB,MAAMyc,EAAW,OAAO,OAAO,CAAE,CAAA,EAC3BpX,EAAS,CAAA,EACTL,EAAU,IAAIgX,GAClBhc,EACAqc,EACApR,EACC1F,GAAU,CACT,GAAIF,EAAO,QAAUmX,EACnB,MAAAnX,EAAO,KACL,IAAIxL,EACF,sEACD,CACX,EAEc4iB,EAGRpX,EAAO,KAAKE,CAAK,CAClB,CACL,EAGQ2F,EAAUwR,GAAgBJ,EAAM,IAAKK,GAASA,EAAK3X,CAAO,CAAC,CAAC,EAElE,GAAI,CACFkX,GAAMG,EAAarR,GAAkBC,EAAUC,CAAO,CAAC,CACxD,OAAQ0R,EAAG,CACV,GAAIA,IAAMH,EACR,MAAMG,CAET,CAED,OAAOvX,CACT,CC/EO,SAASwX,GAAsBvlB,EAAS,CAC7C,MAAMwlB,EAAqB,CACzB,aAAc,GACd,eAAgB,GAChB,sBAAuB,GACvB,kBAAmB,GACnB,sBAAuB,GACvB,GAAGxlB,CACP,EACQylB,EAAeD,EAAmB,aAAe,cAAgB,GACjEE,EAAiBF,EAAmB,eACtC,iBACA,GACEG,EAAwBH,EAAmB,sBAC7C,eACA,GACEI,EAAoBJ,EAAmB,kBACzCC,EACA,GAEJ,SAASI,EAAiBrkB,EAAK,CAC7B,OAAOgkB,EAAmB,sBAAwBhkB,EAAM,EACzD,CAED,MAAO;AAAA;AAAA;AAAA,UAGCokB,CAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASfH,CAAY;AAAA,YACZE,CAAqB;AAAA;AAAA,gBAEjBE,EAAiB,2BAA2B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUrDJ,CAAY;AAAA,QACZC,CAAc;AAAA;AAAA;AAAA,UAGZD,CAAY;AAAA,cACRI,EAAiB,2BAA2B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASxCA,EAAiB,2BAA2B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQtDJ,CAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWdA,CAAY;AAAA;AAAA;AAAA,QAGZI,EAAiB,cAAc,CAAC;AAAA,QAChCA,EAAiB,mBAAmB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA4C7C,CChGO,SAASC,GAAkBC,EAAe/lB,EAAS,CACvDuG,GAAawf,CAAa,GAAKxf,GAAawf,EAAc,QAAQ,GACjEzjB,GACE,GACA,6JAA6JmB,EAC3JsiB,CACD,CAAA,GACP,EAEE,MAAMC,EAAsBD,EAAc,SAEpC3W,EAAUxQ,GACdonB,EAAoB,MACnBC,GAAsBA,EAAkB,KACxCA,GAAsBC,EAAUD,CAAiB,CACtD,EAEE,UAAWE,IAAW,CAAC,GAAG3c,GAAsB,GAAGgD,EAAkB,EAC/D4C,EAAQ+W,EAAQ,IAAI,IACtB/W,EAAQ+W,EAAQ,IAAI,EAAIA,GAI5B,MAAM/X,EAAY4X,EAAoB,UAClCI,EAAcJ,EAAoB,SAAS,EAC3C,KACEzX,EAAeyX,EAAoB,aACrCI,EAAcJ,EAAoB,YAAY,EAC9C,KACEvX,EAAmBuX,EAAoB,iBACzCI,EAAcJ,EAAoB,gBAAgB,EAClD,KAGEK,EAAaL,EAAoB,WACnCA,EAAoB,WAAW,IAAIM,CAAc,EACjD,GAEJ,OAAO,IAAI3Z,GAAc,CACvB,YAAaqZ,EAAoB,YACjC,MAAO5X,EACP,SAAUG,EACV,aAAcE,EACd,MAAO,OAAO,OAAOW,CAAO,EAC5B,WAAAiX,EACA,YACErmB,GAAY,KAA6B,OAASA,EAAQ,WAChE,CAAG,EAGD,SAASumB,EAAQC,EAAS,CACxB,GAAIA,EAAQ,OAAS5a,GAAS,KAAM,CAClC,MAAM6a,EAAUD,EAAQ,OAExB,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,iDAAiD,EAGnE,OAAO,IAAI1iB,GAAYwiB,EAAQE,CAAO,CAAC,CACxC,CAED,GAAID,EAAQ,OAAS5a,GAAS,SAAU,CACtC,MAAM8a,EAAcF,EAAQ,OAE5B,GAAI,CAACE,EACH,MAAM,IAAI,MAAM,iDAAiD,EAGnE,MAAMC,EAAeJ,EAAQG,CAAW,EACxC,OAAO,IAAI1iB,EAAeU,GAAmBiiB,CAAY,CAAC,CAC3D,CAED,OAAO9hB,EAAa2hB,CAAO,CAC5B,CAED,SAAS3hB,EAAa2hB,EAAS,CAC7B,MAAMze,EAAWye,EAAQ,KAEzB,GAAI,CAACze,EACH,MAAM,IAAI,MAAM,2BAA2BtE,EAAQ+iB,CAAO,CAAC,GAAG,EAGhE,MAAM5jB,EAAOwM,EAAQrH,CAAQ,EAE7B,GAAI,CAACnF,EACH,MAAM,IAAI,MACR,+CAA+CmF,CAAQ,qFAC/D,EAGI,OAAOnF,CACR,CAED,SAASwjB,EAAcI,EAAS,CAC9B,OAAOhjB,GAAiBqB,EAAa2hB,CAAO,CAAC,CAC9C,CAED,SAASI,EAAiBJ,EAAS,CACjC,OAAO7iB,GAAoBkB,EAAa2hB,CAAO,CAAC,CACjD,CAGD,SAASN,EAAUtjB,EAAM,CAEvB,GAAIA,GAAQ,MAAQA,EAAK,MAAQ,MAAQA,EAAK,MAAQ,KAGpD,OAAQA,EAAK,KAAI,CACf,KAAKgJ,GAAS,OACZ,OAAOib,EAAejkB,CAAI,EAE5B,KAAKgJ,GAAS,OACZ,OAAOkb,EAAelkB,CAAI,EAE5B,KAAKgJ,GAAS,UACZ,OAAOmb,EAAkBnkB,CAAI,EAE/B,KAAKgJ,GAAS,MACZ,OAAOob,EAAcpkB,CAAI,EAE3B,KAAKgJ,GAAS,KACZ,OAAOqb,EAAarkB,CAAI,EAE1B,KAAKgJ,GAAS,aACZ,OAAOsb,EAAoBtkB,CAAI,CAClC,CAGH,MAAMwS,EAAU3R,EAAQb,CAAI,EAC5B,MAAM,IAAI,MACR,iIAAiIwS,CAAO,GAC9I,CACG,CAED,SAASyR,EAAeM,EAAqB,CAC3C,OAAO,IAAI7jB,GAAkB,CAC3B,KAAM6jB,EAAoB,KAC1B,YAAaA,EAAoB,YACjC,eAAgBA,EAAoB,cAC1C,CAAK,CACF,CAED,SAASC,EAAyBC,EAA2B,CAG3D,GACEA,EAA0B,aAAe,MACzCA,EAA0B,OAASzb,GAAS,UAE5C,MAAO,GAGT,GAAI,CAACyb,EAA0B,WAAY,CACzC,MAAMC,EAA+B7jB,EAAQ4jB,CAAyB,EACtE,MAAM,IAAI,MACR,4CAA4CC,CAA4B,GAChF,CACK,CAED,OAAOD,EAA0B,WAAW,IAAIT,CAAgB,CACjE,CAED,SAASE,EAAeS,EAAqB,CAC3C,OAAO,IAAIhkB,GAAkB,CAC3B,KAAMgkB,EAAoB,KAC1B,YAAaA,EAAoB,YACjC,WAAY,IAAMH,EAAyBG,CAAmB,EAC9D,OAAQ,IAAMC,EAAiBD,CAAmB,CACxD,CAAK,CACF,CAED,SAASR,EAAkBU,EAAwB,CACjD,OAAO,IAAI/jB,GAAqB,CAC9B,KAAM+jB,EAAuB,KAC7B,YAAaA,EAAuB,YACpC,WAAY,IAAML,EAAyBK,CAAsB,EACjE,OAAQ,IAAMD,EAAiBC,CAAsB,CAC3D,CAAK,CACF,CAED,SAAST,EAAcU,EAAoB,CACzC,GAAI,CAACA,EAAmB,cAAe,CACrC,MAAMC,EAAwBlkB,EAAQikB,CAAkB,EACxD,MAAM,IAAI,MACR,+CAA+CC,CAAqB,GAC5E,CACK,CAED,OAAO,IAAI/jB,GAAiB,CAC1B,KAAM8jB,EAAmB,KACzB,YAAaA,EAAmB,YAChC,MAAO,IAAMA,EAAmB,cAAc,IAAItB,CAAa,CACrE,CAAK,CACF,CAED,SAASa,EAAaW,EAAmB,CACvC,GAAI,CAACA,EAAkB,WAAY,CACjC,MAAMC,EAAuBpkB,EAAQmkB,CAAiB,EACtD,MAAM,IAAI,MACR,4CAA4CC,CAAoB,GACxE,CACK,CAED,OAAO,IAAIhkB,GAAgB,CACzB,KAAM+jB,EAAkB,KACxB,YAAaA,EAAkB,YAC/B,OAAQhpB,GACNgpB,EAAkB,WACjBE,GAAuBA,EAAmB,KAC1CA,IAAwB,CACvB,YAAaA,EAAmB,YAChC,kBAAmBA,EAAmB,iBAChD,EACO,CACP,CAAK,CACF,CAED,SAASZ,EAAoBa,EAA0B,CACrD,GAAI,CAACA,EAAyB,YAAa,CACzC,MAAMC,EAA8BvkB,EAAQskB,CAAwB,EACpE,MAAM,IAAI,MACR,6CAA6CC,CAA2B,GAChF,CACK,CAED,OAAO,IAAIlkB,GAAuB,CAChC,KAAMikB,EAAyB,KAC/B,YAAaA,EAAyB,YACtC,OAAQ,IAAME,EAAsBF,EAAyB,WAAW,CAC9E,CAAK,CACF,CAED,SAASP,EAAiBvB,EAAmB,CAC3C,GAAI,CAACA,EAAkB,OACrB,MAAM,IAAI,MACR,wCAAwCxiB,EAAQwiB,CAAiB,CAAC,GAC1E,EAGI,OAAOrnB,GACLqnB,EAAkB,OACjBiC,GAAuBA,EAAmB,KAC3CC,CACN,CACG,CAED,SAASA,EAAWD,EAAoB,CACtC,MAAMtlB,EAAO2jB,EAAQ2B,EAAmB,IAAI,EAE5C,GAAI,CAAC/jB,GAAavB,CAAI,EAAG,CACvB,MAAMwS,EAAU3R,EAAQb,CAAI,EAC5B,MAAM,IAAI,MACR,oEAAoEwS,CAAO,GACnF,CACK,CAED,GAAI,CAAC8S,EAAmB,KAAM,CAC5B,MAAME,EAAwB3kB,EAAQykB,CAAkB,EACxD,MAAM,IAAI,MACR,4CAA4CE,CAAqB,GACzE,CACK,CAED,MAAO,CACL,YAAaF,EAAmB,YAChC,kBAAmBA,EAAmB,kBACtC,KAAAtlB,EACA,KAAMqlB,EAAsBC,EAAmB,IAAI,CACzD,CACG,CAED,SAASD,EAAsBI,EAA0B,CACvD,OAAOzpB,GACLypB,EACChhB,GAAeA,EAAW,KAC3BihB,CACN,CACG,CAED,SAASA,EAAgBC,EAAyB,CAChD,MAAM3lB,EAAO2jB,EAAQgC,EAAwB,IAAI,EAEjD,GAAI,CAACtkB,GAAYrB,CAAI,EAAG,CACtB,MAAMwS,EAAU3R,EAAQb,CAAI,EAC5B,MAAM,IAAI,MACR,sEAAsEwS,CAAO,GACrF,CACK,CAED,MAAMnJ,EACJsc,EAAwB,cAAgB,KACpChJ,GAAaha,GAAWgjB,EAAwB,YAAY,EAAG3lB,CAAI,EACnE,OACN,MAAO,CACL,YAAa2lB,EAAwB,YACrC,KAAA3lB,EACA,aAAAqJ,EACA,kBAAmBsc,EAAwB,iBACjD,CACG,CAED,SAASjC,EAAekC,EAAwB,CAC9C,GAAI,CAACA,EAAuB,KAAM,CAChC,MAAMC,EAA4BhlB,EAAQ+kB,CAAsB,EAChE,MAAM,IAAI,MACR,gDAAgDC,CAAyB,GACjF,CACK,CAED,GAAI,CAACD,EAAuB,UAAW,CACrC,MAAMC,EAA4BhlB,EAAQ+kB,CAAsB,EAChE,MAAM,IAAI,MACR,qDAAqDC,CAAyB,GACtF,CACK,CAED,OAAO,IAAI5e,GAAiB,CAC1B,KAAM2e,EAAuB,KAC7B,YAAaA,EAAuB,YACpC,aAAcA,EAAuB,aACrC,UAAWA,EAAuB,UAAU,MAAO,EACnD,KAAMP,EAAsBO,EAAuB,IAAI,CAC7D,CAAK,CACF,CACH,CCtVO,SAASE,GAAYhgB,EAAQ,CAClC,OAAOigB,GACLjgB,EACCkgB,GAAM,CAACre,GAAqBqe,CAAC,EAC9BC,EACJ,CACA,CAKA,SAASA,GAAcjmB,EAAM,CAC3B,MAAO,CAAC6G,GAAsB7G,CAAI,GAAK,CAAC6J,GAAoB7J,CAAI,CAClE,CAEA,SAAS+lB,GAAoBjgB,EAAQogB,EAAiBC,EAAY,CAChE,MAAM1C,EAAa3d,EAAO,cAAe,EAAC,OAAOogB,CAAe,EAC1D9hB,EAAQ,OAAO,OAAO0B,EAAO,YAAY,EAAE,OAAOqgB,CAAU,EAClE,MAAO,CACLC,GAAsBtgB,CAAM,EAC5B,GAAG2d,EAAW,IAAKzc,GAAcqf,GAAerf,CAAS,CAAC,EAC1D,GAAG5C,EAAM,IAAKpE,GAASsmB,GAAUtmB,CAAI,CAAC,CACvC,EACE,OAAO,OAAO,EACd,KAAK;AAAA;AAAA,CAAM,CAChB,CAEA,SAASomB,GAAsBtgB,EAAQ,CACrC,GAAIA,EAAO,aAAe,MAAQygB,GAAsBzgB,CAAM,EAC5D,OAGF,MAAM0gB,EAAiB,CAAA,EACjBhb,EAAY1F,EAAO,eAErB0F,GACFgb,EAAe,KAAK,YAAYhb,EAAU,IAAI,EAAE,EAGlD,MAAMG,EAAe7F,EAAO,kBAExB6F,GACF6a,EAAe,KAAK,eAAe7a,EAAa,IAAI,EAAE,EAGxD,MAAME,EAAmB/F,EAAO,sBAEhC,OAAI+F,GACF2a,EAAe,KAAK,mBAAmB3a,EAAiB,IAAI,EAAE,EAGzD4a,GAAiB3gB,CAAM,EAAI;AAAA,EAAa0gB,EAAe,KAAK;AAAA,CAAI,CAAC;AAAA,EAC1E,CAiBA,SAASD,GAAsBzgB,EAAQ,CACrC,MAAM0F,EAAY1F,EAAO,eAEzB,GAAI0F,GAAaA,EAAU,OAAS,QAClC,MAAO,GAGT,MAAMG,EAAe7F,EAAO,kBAE5B,GAAI6F,GAAgBA,EAAa,OAAS,WACxC,MAAO,GAGT,MAAME,EAAmB/F,EAAO,sBAEhC,MAAI,EAAA+F,GAAoBA,EAAiB,OAAS,eAKpD,CAEO,SAASya,GAAUtmB,EAAM,CAC9B,GAAIC,GAAaD,CAAI,EACnB,OAAO0mB,GAAY1mB,CAAI,EAGzB,GAAIE,GAAaF,CAAI,EACnB,OAAO2mB,GAAY3mB,CAAI,EAGzB,GAAIG,GAAgBH,CAAI,EACtB,OAAO4mB,GAAe5mB,CAAI,EAG5B,GAAII,GAAYJ,CAAI,EAClB,OAAO6mB,GAAW7mB,CAAI,EAGxB,GAAIK,GAAWL,CAAI,EACjB,OAAO8mB,GAAU9mB,CAAI,EAGvB,GAAIM,GAAkBN,CAAI,EACxB,OAAO+mB,GAAiB/mB,CAAI,EAKrBwI,GAAU,GAAO,oBAAsB3H,EAAQb,CAAI,CAAC,CAC/D,CAEA,SAAS0mB,GAAY1mB,EAAM,CACzB,OACEymB,GAAiBzmB,CAAI,EAAI,UAAUA,EAAK,IAAI,GAAKgnB,GAAoBhnB,CAAI,CAE7E,CAEA,SAASinB,GAA2BjnB,EAAM,CACxC,MAAMiD,EAAajD,EAAK,gBACxB,OAAOiD,EAAW,OACd,eAAiBA,EAAW,IAAK5E,GAAMA,EAAE,IAAI,EAAE,KAAK,KAAK,EACzD,EACN,CAEA,SAASsoB,GAAY3mB,EAAM,CACzB,OACEymB,GAAiBzmB,CAAI,EACrB,QAAQA,EAAK,IAAI,GACjBinB,GAA2BjnB,CAAI,EAC/BknB,GAAYlnB,CAAI,CAEpB,CAEA,SAAS4mB,GAAe5mB,EAAM,CAC5B,OACEymB,GAAiBzmB,CAAI,EACrB,aAAaA,EAAK,IAAI,GACtBinB,GAA2BjnB,CAAI,EAC/BknB,GAAYlnB,CAAI,CAEpB,CAEA,SAAS6mB,GAAW7mB,EAAM,CACxB,MAAMoE,EAAQpE,EAAK,WACbmnB,EAAgB/iB,EAAM,OAAS,MAAQA,EAAM,KAAK,KAAK,EAAI,GACjE,OAAOqiB,GAAiBzmB,CAAI,EAAI,SAAWA,EAAK,KAAOmnB,CACzD,CAEA,SAASL,GAAU9mB,EAAM,CACvB,MAAM8E,EAAS9E,EACZ,UAAW,EACX,IACC,CAACf,EAAO,IACNwnB,GAAiBxnB,EAAO,KAAM,CAAC,CAAC,EAChC,KACAA,EAAM,KACNmoB,GAAgBnoB,EAAM,iBAAiB,CAC/C,EACE,OAAOwnB,GAAiBzmB,CAAI,EAAI,QAAQA,EAAK,IAAI,GAAKqnB,GAAWviB,CAAM,CACzE,CAEA,SAASiiB,GAAiB/mB,EAAM,CAC9B,MAAM4D,EAAS,OAAO,OAAO5D,EAAK,UAAW,CAAA,EAAE,IAC7C,CAACsnB,EAAG,IAAMb,GAAiBa,EAAG,KAAM,CAAC,CAAC,EAAI,KAAOC,GAAgBD,CAAC,CACtE,EACE,OAAOb,GAAiBzmB,CAAI,EAAI,SAASA,EAAK,IAAI,GAAKqnB,GAAWzjB,CAAM,CAC1E,CAEA,SAASsjB,GAAYlnB,EAAM,CACzB,MAAM4D,EAAS,OAAO,OAAO5D,EAAK,UAAW,CAAA,EAAE,IAC7C,CAACsnB,EAAG,IACFb,GAAiBa,EAAG,KAAM,CAAC,CAAC,EAC5B,KACAA,EAAE,KACFE,GAAUF,EAAE,KAAM,IAAI,EACtB,KACA,OAAOA,EAAE,IAAI,EACbF,GAAgBE,EAAE,iBAAiB,CACzC,EACE,OAAOD,GAAWzjB,CAAM,CAC1B,CAEA,SAASyjB,GAAWI,EAAO,CACzB,OAAOA,EAAM,SAAW,EAAI;AAAA,EAASA,EAAM,KAAK;AAAA,CAAI,EAAI;AAAA,GAAQ,EAClE,CAEA,SAASD,GAAU1jB,EAAM4jB,EAAc,GAAI,CACzC,OAAI5jB,EAAK,SAAW,EACX,GAGLA,EAAK,MAAOC,GAAQ,CAACA,EAAI,WAAW,EAC/B,IAAMD,EAAK,IAAIyjB,EAAe,EAAE,KAAK,IAAI,EAAI,IAIpD;AAAA,EACAzjB,EACG,IACC,CAACC,EAAK,IACJ0iB,GAAiB1iB,EAAK,KAAO2jB,EAAa,CAAC,CAAC,EAC5C,KACAA,EACAH,GAAgBxjB,CAAG,CACtB,EACA,KAAK;AAAA,CAAI,EACZ;AAAA,EACA2jB,EACA,GAEJ,CAEA,SAASH,GAAgBxjB,EAAK,CAC5B,MAAM4jB,EAAa7f,GAAa/D,EAAI,aAAcA,EAAI,IAAI,EAC1D,IAAI6jB,EAAU7jB,EAAI,KAAO,KAAO,OAAOA,EAAI,IAAI,EAE/C,OAAI4jB,IACFC,GAAW,MAAM/iB,GAAM8iB,CAAU,CAAC,IAG7BC,EAAUR,GAAgBrjB,EAAI,iBAAiB,CACxD,CAEA,SAASsiB,GAAerf,EAAW,CACjC,OACEyf,GAAiBzf,CAAS,EAC1B,cACAA,EAAU,KACVwgB,GAAUxgB,EAAU,IAAI,GACvBA,EAAU,aAAe,cAAgB,IAC1C,OACAA,EAAU,UAAU,KAAK,KAAK,CAElC,CAEA,SAASogB,GAAgBpQ,EAAQ,CAC/B,OAAIA,GAAU,KACL,GAGLA,IAAWzP,GAKN,wBAJU1C,GAAM,CACrB,KAAMxF,EAAK,OACX,MAAO2X,CACb,CAAK,CACsC,IAGlC,cACT,CAEA,SAASgQ,GAAoBa,EAAQ,CACnC,OAAIA,EAAO,gBAAkB,KACpB,GAOF,sBAJUhjB,GAAM,CACrB,KAAMxF,EAAK,OACX,MAAOwoB,EAAO,cAClB,CAAG,CACoC,GACvC,CAEA,SAASpB,GAAiBzT,EAAK0U,EAAc,GAAII,EAAe,GAAM,CACpE,KAAM,CAAE,YAAAC,CAAa,EAAG/U,EAExB,GAAI+U,GAAe,KACjB,MAAO,GAGT,MAAMC,EAAcnjB,GAAM,CACxB,KAAMxF,EAAK,OACX,MAAO0oB,EACP,MAAOE,GAAyBF,CAAW,CAC/C,CAAG,EAGD,OADEL,GAAe,CAACI,EAAe;AAAA,EAAOJ,EAAcA,GACtCM,EAAY,QAAQ,MAAO;AAAA,EAAON,CAAW,EAAI;AAAA,CACnE,4FCvSA,MAAAQ,EAAAC,EAIAC,EAAAC,EAIAC,EAAAC,EAAA,IAAA,GAAAL,EAAA,OAAA,EAAA,EACAM,EAAAD,EAAA,IACEtmB,GAAAimB,EAAA,OAAA,YAAAxnB,EAA8C,EAGhD,SAAA+nB,GAAA,CACED,EAAA,OACAJ,EAAA,eAAAF,EAAA,OAAA,CAAkC,6lBCuCpC,MAAAQ,EAAAC,KAEAT,EAAAC,EAWAC,EAAAC,EAIAhlB,EAAAklB,EAAA,IAAAL,EAAA,SAAA,IAAA,EAEAU,EAAAL,EAAA,IAAAL,EAAA,SAAA,MAAA,CAAA,CAAA,EAEAO,EAAAzoB,GAAA,CACEooB,EAAA,eAAApoB,CAAA,CAAyB,47DCxB3B,MAAAkoB,EAAAC,EAWAU,EAAAN,EAAA,IACEL,EAAA,mBAAAhnB,EAAgC,EAGlC4nB,EAAAP,EAAA,IACEL,EAAA,mBAAApnB,EAAgC,EAElCioB,EAAAR,EAAA,IACEL,EAAA,mBAAAjnB,EAAgC,EAElCgC,EAAAslB,EAAA,IACEL,EAAA,QAAA,eAAAA,EAAA,QAAA,cAAA,GAAA,EAA0E,EAG5Ec,EAAAT,EAAA,IACEL,EAAA,SAAA,OAAsBloB,GAAAA,EAAA,eAAAA,EAAA,gBAAA,SAAAkoB,EAAA,OAAA,CACuD,CAC7E,EAGFe,EAAA,CAAA,CAAA,MAAA1pB,KACE,CAAA,CAAA2oB,EAAA,kBAAA,KAAA,CAAA,CAAA,KAAAzoB,CAAA,IAAAA,IAAAF,EAAA,IAAA,ixEC3EI2pB,GAA2B,IAkC3BC,GAAM,CACV,gBAAiB,kBACjB,eAAgB,iBAChB,iBAAkB,mBAClB,sBAAuB,KACvB,MAAO,QACP,KAAM,OACN,qBAAsB,uBACtB,KAAM,OACN,MAAO,QACP,SAAU,UACZ,EAcMC,GAAOC,GAAWC,EAAa,EAC/BC,GAAehB,EAAS,IAAMa,GAAK,aAAa,KAAK,EAE9CI,EAAaC,GAAqB,CAC7C,MAAO,eACP,sBAAuB,IACvB,OAAQ,OACR,OAAQ,KACR,MAAO,IACT,CAAC,EAEY3jB,GAASyiB,EAAS,IAAMiB,EAAW,MAAM,EACzCE,GAAoBnB,EAAS,IACjCiB,EAAW,kBAAkB,IAAID,GAAa,KAAK,CAC3D,EAEYI,GAAkBC,EAAgC,EAElDC,GAAetB,EAAS,IAC9BiB,EAAW,OAET1D,GAAY0D,EAAW,MAE7B,EAJ8B,EAKhC,EAEYM,GAAcvB,EAAS,IAAM,OACxC,GAAI,CAACiB,EAAW,OAAQ,MAAO,GAE/B,MAAM5lB,GAASmmB,EAAAP,EAAW,OAAO,iBAAlB,YAAAO,EAAkC,YACjD,OAAKnmB,EAEE,OAAO,OAAOA,CAAM,EAFP,EAGtB,CAAC,EAEYomB,GAAiBzB,EAAS,IAAM,OAC3C,GAAI,CAACiB,EAAW,OAAQ,MAAO,GAE/B,MAAM5lB,GAASmmB,EAAAP,EAAW,OAAO,oBAAlB,YAAAO,EAAqC,YACpD,OAAKnmB,EAEE,OAAO,OAAOA,CAAM,EAFP,EAGtB,CAAC,EAEYqmB,GAAqB1B,EAAS,IAAM,OAC/C,GAAI,CAACiB,EAAW,OAAQ,MAAO,GAE/B,MAAM5lB,GAASmmB,EAAAP,EAAW,OAAO,wBAAlB,YAAAO,EAAyC,YACxD,OAAKnmB,EAEE,OAAO,OAAOA,CAAM,EAFP,EAGtB,CAAC,EAEYsmB,GAAe3B,EAAS,IAAM,WACzC,GAAI,CAACiB,EAAW,OAAQ,MAAO,GAEzB,MAAAhd,EAAUgd,EAAW,OAAO,WAAW,EAEvCW,IAAgBJ,EAAAP,EAAW,OAAO,iBAAlB,YAAAO,EAAkC,OAAQ,GAC1DK,IAAmBC,EAAAb,EAAW,OAAO,oBAAlB,YAAAa,EAAqC,OAAQ,GAChEC,IACJC,EAAAf,EAAW,OAAO,wBAAlB,YAAAe,EAAyC,OAAQ,GAEnD,OAAO,OAAO,OAAO/d,CAAO,EAAE,OAAQxM,GAElC,CAACA,EAAK,KAAK,WAAW,IAAI,GAC1B,CAAC,CAACmqB,EAAeC,EAAkBE,CAAoB,EAAE,SACvDtqB,EAAK,IAAA,IAENA,aAAgBW,IACfX,aAAgBkB,IAChBlB,aAAgBiB,IAChBjB,aAAgBc,GAErB,CACH,CAAC,EAED,IAAI0pB,GAES,MAAAC,GAAU,CAACC,EAAaC,IAAyB,CACxD,GAAAnB,EAAW,QAAU,YACvB,MAAM,IAAI,MACR,oEAAA,EAKJA,EAAW,MAAQ,YAEnB,MAAMoB,EAAO,SAAY,CACjB,MAAAC,GAAUH,EAAKC,CAAO,EAC5BH,GAAsB,WAAW,IAAM,CAChCI,KACJ1B,EAAwB,CAAA,EAExB0B,GACP,EAEaE,GAAa,IAAM,CAC1B,GAAAtB,EAAW,QAAU,YACjB,MAAA,IAAI,MAAM,+CAA+C,EAGjE,aAAagB,EAAmB,EAChChB,EAAW,MAAQ,cACrB,EASMqB,GAAY,MAAOH,EAAaC,IAAyB,CACzD,GAAA,CACI,MAAAI,EAAqB,KAAK,UAAU,CACxC,MAAOpI,GAAsB,CAAA,CAC9B,EAEKqI,EAAuC,CAAA,EAC7CL,EACG,OAAQpwB,GAAMA,EAAE,QAAUA,EAAE,MAAQ,EAAE,EACtC,QAASA,GAAOywB,EAAazwB,EAAE,GAAG,EAAIA,EAAE,KAAM,EAEjD,MAAM0wB,EAAa,CACjB,OAAQ,OACR,IAAAP,EACA,QAAS,CACP,GAAGM,EACH,eAAgB,kBAClB,EACA,KAAMD,CAAA,EAKFG,EAAM,MAFe7B,GAAW8B,EAAkB,EAEnB,WAAWF,CAAU,EAAE,SAExD,GAAAG,GAASF,CAAG,EAEZ,MAAAA,EAAI,OAAS,gBACbA,EAAI,KAAK,QAAU,kBACnBA,EAAI,KAAK,eAET1B,EAAW,MAAQ,CACjB,KAAM0B,EAAI,KAAK,MACf,QAAUxC,GACRwC,EAAI,KAAK,aAAa,YAAYxC,CAAC,EACrC,UAAWwC,EAAI,KAAK,SAAA,GAIlB,IAAI,MAAMA,EAAI,KAAK,SAAU,CAAA,EAGrC,MAAMG,EAAOH,EAAI,MAGXI,EAAW,IAAI,YAAY,OAAO,EACrC,OAAOD,EAAK,IAAW,EACvB,QAAQ,OAAQ,EAAE,EAEfE,EAAqB,KAAK,MAAMD,CAAQ,EAExCxlB,EAASod,GAAkBqI,EAAmB,IAAI,EAExD/B,EAAW,OAAS1jB,EACpB0jB,EAAW,MAAQ,WACZ9G,EAAQ,CACf,QAAQ,MAAMA,CAAC,EACJoI,IACb,CACF,EAEaU,GAAkB,MAAOpuB,GAA6B,CAC3D,KAAA,CAAE,IAAAstB,EAAK,QAAAC,EAAS,MAAAc,EAAO,UAAArsB,EAAW,KAAAssB,EAAM,cAAAhN,EAAe,cAAAiN,CAC3D,EAAAvuB,EAEI4tB,EAAuC,CAAA,EAEvCY,EAAkB,KAAK,MAAMxsB,GAAa,IAAI,EAE9CysB,EAAiC,CAAA,EAEvC,GAAIH,EAAK,YACH,GAAAA,EAAK,WAAa,QAAS,CAC7B,MAAMI,EAAWJ,EAAK,SAChBK,EAAWL,EAAK,SACTV,EAAA,cAAgB,SAAS,KAAK,GAAGc,CAAQ,IAAIC,CAAQ,EAAE,CAAC,EAAA,SAC5DL,EAAK,WAAa,SACdV,EAAA,cAAgB,UAAUU,EAAK,KAAK,WACxCA,EAAK,WAAa,UAAW,CAChC,KAAA,CAAE,MAAAM,CAAU,EAAAN,EAEdM,IAAU,UACZhB,EAAa,cAAgB,UAAUU,EAAK,cAAc,KAAK,GACtDM,IAAU,iBACZH,EAAA,aAAkBH,EAAK,cAAc,MAC9C,SACSA,EAAK,WAAa,UAAW,CACtC,KAAM,CAAE,IAAA7wB,EAAK,MAAAoE,EAAO,MAAA+sB,CAAA,EAAUN,EAC1BM,IAAU,UACZhB,EAAanwB,CAAG,EAAIoE,EACX+sB,IAAU,iBACnBH,EAAOhxB,CAAG,EAAIoE,EAElB,EAGF0rB,EACG,OAAQ5uB,GAASA,EAAK,QAAUA,EAAK,MAAQ,EAAE,EAC/C,QAAQ,CAAC,CAAE,IAAAlB,EAAK,MAAAoE,CAAA,IAAa+rB,EAAanwB,CAAG,EAAIoE,CAAM,EAE1D,MAAMgsB,EAAa,CACjB,OAAQ,OACR,IAAAP,EACA,QAAS,CACP,GAAGM,EACH,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,CACnB,MAAAS,EACA,UAAWG,EACX,cAAAlN,CAAA,CACD,EACD,OAAQ,CACN,GAAGmN,CACL,CAAA,EAGF,GAAIF,IAAkB,eACb,OAAAM,GAAgB7uB,EAAS4tB,CAAY,EAI9C,MAAMlvB,EAAS,MADYutB,GAAW8B,EAAkB,EAChB,WAAWF,CAAU,EAAE,SAE3D,GAAAG,GAAStvB,CAAM,EAEf,MAAAA,EAAO,OAAS,gBAChBA,EAAO,KAAK,QAAU,kBACtBA,EAAO,KAAK,eAEZ0tB,EAAW,MAAQ,CACjB,KAAM1tB,EAAO,KAAK,MAClB,QAAU4sB,GACR5sB,EAAO,KAAK,aAAa,YAAY4sB,CAAC,EACxC,UAAW5sB,EAAO,KAAK,SAAA,GAGrB,IAAI,MAAMA,EAAO,KAAK,SAAU,CAAA,EAGxC,MAAMovB,EAAMpvB,EAAO,MAGbowB,EAAe,IAAI,YAAY,OAAO,EACzC,OAAOhB,EAAI,IAAW,EACtB,QAAQ,OAAQ,EAAE,EAErB,OAAAvB,GAAgB,MAAQ,CACtB,KAAM,WACN,KAAM,KAAK,IAAI,EACf,cAAejL,GAAiB,QAChC,KAAMwN,EACN,SAAU9uB,EACV,cAAAuuB,CAAA,EAGEnC,EAAW,QAAU,cACvBA,EAAW,MAAQ,aAGrB2C,GAAkB/uB,EAAS8uB,CAAY,EAEhCA,CACT,EAEaD,GAAkB,CAC7B7uB,EACAutB,IACG,CACH,KAAM,CAAE,IAAAD,EAAK,MAAAe,EAAO,cAAA/M,CAAA,EAAkBthB,EAChCgvB,EAAQ1B,EAAI,QAAQ,QAAS,IAAI,EAEvC,OAAAlB,EAAW,kBAAkB,IAAID,GAAa,MAAO,aAAa,EAElEC,EAAW,OAAS,IAAI,UAAU4C,EAAO,YAAY,EAE1C5C,EAAA,OAAO,OAAU6C,GAAU,SAC5B,QAAA,IAAI,yBAA0BA,CAAK,GAE3CtC,EAAAP,EAAW,SAAX,MAAAO,EAAmB,KACjB,KAAK,UAAU,CACb,KAAMZ,GAAI,gBACV,QAASwB,GAAW,CAAC,CAAA,CACtB,IAGHN,EAAAb,EAAW,SAAX,MAAAa,EAAmB,KACjB,KAAK,UAAU,CACb,KAAMlB,GAAI,MACV,GAAI,IACJ,QAAS,CAAE,MAAAsC,EAAO,cAAA/M,CAAc,CAAA,CACjC,EACH,EAGFiL,GAAgB,MAAQ,QAEbH,EAAA,OAAO,UAAa6C,GAAU,CACvC,MAAMhB,EAAO,KAAK,MAAMgB,EAAM,IAAI,EAClC,OAAQhB,EAAK,KAAM,CACjB,KAAKlC,GAAI,eAAgB,CACvBK,EAAW,kBAAkB,IAAID,GAAa,MAAO,YAAY,EACjE,KACF,CACA,KAAKJ,GAAI,iBAAkB,CACjB,QAAA,MAAMkC,EAAK,OAAO,EAC1B,KACF,CACA,KAAKlC,GAAI,sBACP,MAEF,KAAKA,GAAI,KAAM,CACbQ,GAAgB,MAAQ,CACtB,KAAM,WACN,KAAM,KAAK,IAAI,EACf,cAAAjL,EACA,KAAM,KAAK,UAAU2M,EAAK,OAAO,EACjC,cAAe,cAAA,EAEjB,KACF,CACA,KAAKlC,GAAI,SAAU,CACT,QAAA,IAAI,YAAakC,EAAK,EAAE,EAChC,KACF,CACF,CAAA,EAGS7B,EAAA,OAAO,QAAW6C,GAAU,CAC7B,QAAA,IAAI,2BAA4BA,CAAK,EAC7C7C,EAAW,kBAAkB,IAAID,GAAa,MAAO,cAAc,CAAA,EAGrE4C,GAAkB/uB,EAAS,EAAE,EAEtBosB,EAAW,MACpB,EAEa8C,GAAmB,IAAM,QACpCvC,EAAAP,EAAW,SAAX,MAAAO,EAAmB,OACrB,EAEMoC,GAAoB,CAAC/uB,EAA0BkuB,IAAqB,CACxE,KAAM,CAAE,KAAA7rB,EAAM,IAAAirB,EAAK,QAAAC,EAAS,MAAAc,EAAO,UAAArsB,EAAW,KAAAssB,CAAS,EAAAtuB,EACvDmvB,GACEC,GAAoB,CAClB,QAASC,GAAe,CACtB,KAAMhtB,GAAQ,mBACd,IAAAirB,EACA,MAAAe,EACA,QAAAd,EACA,UAAAvrB,EACA,KAAAssB,CAAA,CACD,EACD,SAAAJ,EACA,KAAM,EAAA,CACP,CAAA,CAEL,saCrPA,MAAAoB,EAAA9C,EAAA,MAAA,EACA+C,EAAA/C,EAAA,SAAA,EAEAlB,EAAAC,KACAiE,EAAAC,KAEA,SAAAC,EAAAC,EAAAxtB,EAAA,CAIE,MAAAytB,EAAAD,EAAA,cAEAE,EAAA1tB,EAAA,YAAAA,EAAA,YAAA,YAAA,EAAA,SAAAytB,CAAA,EAAA,GAGAE,EAAA3tB,EAAA,KAAA,YAAA,EAAA,SAAAytB,CAAA,EAIA,OAAAC,GAAAC,CAAyC,CAG3C,SAAAC,EAAAC,EAAAxpB,EAAA,CAIE,OAAAwpB,EAEAxpB,EAAA,OAAcrE,GAAAutB,EAAAM,EAAA7tB,CAAA,CACqC,EAHlCqE,CAIjB,CAGF,SAAAypB,EAAAD,EAAAhpB,EAAA,CACE,OAAAgpB,EAEAhpB,EAAA,OAAApE,GACE8sB,EAA6BM,EAC3BptB,CACA,EAIA,GAGF,OAAA,OAAmDA,EAAA,SAAA,CAAA,CACvB,EAAA,KAAAT,GAAAutB,EAAAM,EAAA7tB,CAAA,CAAA,CAGrB,EAhBQ6E,CAiBhB,CAGH,MAAAkpB,EAAAC,KAEAC,EAAAC,GAA2BC,GACzB,GACA,EAEFC,EAAAF,GAAuBG,GACrB,GACA,EAGFC,EAAAjE,EAAA,EAAA,EAEAkE,EAAAvF,EAAA,IACE4E,EAAOU,EAAA,MACmB/D,GAAA,KACZ,CACd,EAGFiE,EAAAxF,EAAA,IACE4E,EAAOU,EAAA,MACmB7D,GAAA,KACT,CACjB,EAGFgE,EAAAzF,EAAA,IACE4E,EAAOU,EAAA,MACmB5D,GAAA,KACL,CACrB,EAGFgE,EAAA1F,EAAA,IACE8E,EAAOQ,EAAA,MACmB3D,GAAA,KACX,CACf,EAGFgE,EAAAC,GACEN,EAAA,MAEAf,EAAOe,EAAA,MACmBM,CACxB,EAJkC,GAQtCC,EAAAD,GAAA,CACE,GAAA,CAAAN,EAAA,MAAoC,MAAA,GAEpC,MAAAjqB,EAAA,OAAA,OAAAuqB,EAAA,SAAA,CAAA,CAAA,EACA,MAAA,CAAAvqB,GAAAA,EAAA,SAAA,EAAoC,GAEpCA,EAAA,OAAcrE,GAAAutB,EAAAe,EAAA,MAAAtuB,CAAA,CAC+D,CAC7E,EAGF8uB,EAAA,MAAAruB,GAAA,CACE2sB,EAAA,MAAA,QACA,MAAA2B,GAAA,EAEA,MAAAC,EAAAtsB,GAAAjC,CAAA,EAAA,KACAwuB,EAAA,SAAA,eAAA,QAAAD,CAAA,EAAA,EACAC,IACEA,EAAA,eAAA,CAAA,MAAA,SAAA,SAAA,QAAA,CAAA,EACAA,EAAA,UAAA,IAAiB,iBACf,aACA,mBACA,QACA,EAEF,WAAA,IAAAA,EAAA,UAAA,OAEqB,aACf,mBACA,SACA,gBACA,EACF,GACF,EAEJ,EAGFC,EAAA7E,EAAA,IAAA,EACA8E,EAAAC,GAAA,aAAA,eAAA,EAEAC,GAAAH,EACE5E,GACAJ,GAAA,CACS,qBAAA,CACe,KAAA,UACd,SAAA,GACI,aAAAiF,CACI,EAChB,OAAA,KACQ,UAAA,KACG,sBAAA,EACY,CAAA,CACxB,EAGH,MAAAG,EAAA,SAAA,CACE,MAAAC,EAAAjF,GAAA,MACAkF,EAAA,IAAA,KAAA,CAAAD,CAAA,EAAA,CAAA,KAAA,qBAAA,CAAA,EACApE,EAAA,IAAA,gBAAAqE,CAAA,EAEAC,EAAA,GAAAtE,EAAA,MAAA,GAAA,EAAA,MAAA,MAAA,GAAA,EAAA,CAAA,EAAA,MAAA,GAAA,EAAA,CAAA,CAAA,WAIA,IAAA,gBAAAA,CAAA,EAEA,MAAA5uB,EAAA,MAAAmzB,GAAA,GAAA,mBAAA,CAAoD,KAAAH,EAC5C,YAAA,sBACO,kBAAAE,EACM,QAAA,CACV,CACP,KAAA,sBACQ,WAAA,CAAA,SAAA,CACgB,CACxB,CACF,CAAA,GAGFlzB,EAAA,OAAA,WAAAA,EAAA,OAAA,WACE0xB,EAAA,MAAA0B,GACA5B,EAAA,QAAA,GAAA5E,EAAA,wBAAA,CAAA,EAAA,EACF,EAGFyG,EAAA,IAAA,CACEtF,GAAA,QAEAuF,GAAAvF,GAAA,KAAA,EACA8D,EAAA,MAAAuB,GAAuB,k2ICzUzB,MAAAhH,EAAAC,EAQAC,EAAAC,EAIAK,EAAAC,KAEA0G,EAAAzF,EAAA,IAAA,EACA0F,EAAA1F,EAAA,IAAA,EAEA2F,EAAA3F,EAAA,EAAA,EAEA4F,EAAAC,GAAAH,CAAA,EAGAI,GAAAF,EAAA,YAAAG,GAAA,CACEA,GAAAH,EAAA,WAAA,MACED,EAAA,MAAA,GAA0B,CAAA,EAG9B,MAAAK,EAAAC,GAAA,WACEA,IAAA,OACE9F,EAAAuF,EAAA,QAAA,MAAAvF,EAAA,OAAA,CAAmB,SAAA,SACP,IAAA,CACL,GACN8F,IAAA,YAEDtF,EAAA+E,EAAA,QAAA,MAAA/E,EAAA,OAAA,CAAmB,SAAA,SACP,KAAAF,EAAAiF,EAAA,QAAA,YAAAjF,EAAA,YACO,GAErB,EAGFqF,GAAA,IAAAxH,EAAA,IACc4H,GAAA,IAAA,CAEVP,EAAA,OAA6BK,EAAA,QAAA,CAAiB,EAAA,GAAA,EAC1C,CAAA,MAAA,MAAA,CACU,EAGlB,MAAAG,EAAA,IAAA,CACER,EAAA,MAAA,CAAAA,EAAA,KAA6C,EAG/CS,EAAAzH,EAA8B,IAAAgH,EAAA,MAAA,iBAAA,cACiB,slDCZ/C,MAAA,EAAA5G,KAEAT,EAAAC,EASA8H,EAAA1H,EAAA,IAAA,CACE,MAAA+C,EAAApD,EAAA,SACA,OAAAoD,GAAAA,EAAA,CAAA,EAAA,OAAA,QACE,GAAOA,GAAAA,EAAA,SAAA,GAAAA,EAAA,CAAA,EAAA,OAAA,YAAAA,EAAA,CAAA,EAAA,KAOP,KAAA,UAAA,KAAA,MAAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,CAAA,EAEF,EAAO,CAAA,EAGTmD,EAAA7E,EAAA,IAAA,EACA8E,EAAAC,GAAA,aAAA,qBAAA,EACAuB,EAAAtG,EAAA,IAAA,EAEAgF,GAAAH,EACEwB,EACAxG,GAAA,CACS,qBAAA,CACe,KAAA,sBACd,SAAA,GACI,aAAAiF,CACI,EAChB,OAAA,KACQ,UAAA,KACG,sBAAA,EACY,CAAA,CACxB,EAGH,KAAA,CAAA,SAAAyB,EAAA,aAAAC,CAAA,EAAAC,GAAAJ,CAAA,EACA,CAAA,kBAAAK,EAAA,cAAAC,CAAA,EAAAC,GAAAP,CAAA,EACA,CAAA,aAAAQ,EAAA,iBAAAC,CAAA,EAAAC,GAA2C,mBACzCV,CACA,EAGFW,EAAAhH,EAAA,EAAA,EAEAiH,EAAAC,GAAA,CACEP,EAAAO,CAAA,EAAA,KAAA,IAAA,CACEF,EAAA,MAAAE,CAAgC,CAAA,CACjC,EAGH,OAAAC,GAAA,yBACE,IAAAL,EAAA,EACuBnI,EAAA,IAAA,CAAA,CAAAL,EAAA,UAAAA,EAAA,SAAA,OAAA,CAAA,CACqC,EAE9D6I,GAAA,gBACE,IAAAX,EAAA,EACmB7H,EAAA,IAAA,CAAA,CAAAL,EAAA,UAAAA,EAAA,SAAA,OAAA,CAAA,CACyC,2oFCyD9D,MAAAQ,EAAAC,KAEAiE,EAAAC,KAEA3E,EAAAC,EAOAC,EAAAC,EAIA2I,GAAA,IAAA,CACE9I,EAAA,kBAAAwD,EAAA,MAAA,WAAA,YACEA,EAAA,MAAA,CAAa,SAAA,OACD,WAAA,EACE,EAEhB,CAAA,EAGF,MAAAA,EAAAuF,GAAA/I,EAAA,aAAAE,CAAA,EAEA8I,EAAA,CAAsB,MAAA,aACb,OAAA,SACC,UAAA,YACG,UAAA,UACA,KAAA,OACL,QAAA,SACG,EAGXC,EAAAC,GAAA1F,EAAA,UAAA,EAEA2F,EAAA9I,EAAiB,IAAA2I,EAAAC,EAAA,KAAA,EAAAD,EAAAC,EAAA,KAAA,EAAA,MACiD,EAGlEG,EAAAtxB,GACEA,GACAkxB,EAAAlxB,CAAA,EAAAkxB,EAAAlxB,CAAA,EADW,OAIbuxB,EAAA,IAAA,CACE,MAAAC,EAAA,CAAiE,GAAAC,GAAA,EAC1B,UAAA,qBAC1B,MAAA,EACJ,EAITC,EAAAhG,EAAA,MAAA,cAIAiG,EAAAD,GAAAF,EAIA9F,EAAA,MAAA,CAAa,GAAAA,EAAA,MACH,SAAA,UACE,MAAA,UACH,cAAAiG,CACP,CACF,EAGFC,EAAAR,GAAA1F,EAAA,YAAA,EAEAmG,EAAA,IAAA,CACEnG,EAAA,MAAA,CAAa,SAAA,UACD,WAAA,EACE,CACd,EAIFoG,EAAAlI,EAAA,IAAA,y5JCIA,MAAAgD,EAAAC,KACAnE,EAAAC,KACA2E,EAAAC,KAGArF,EAAAC,EAUA4J,EAAAd,GAAA/I,EAAA,aAJAG,CAIA,EAEA2J,EAAApI,EAAA,CAAA,EAEA8E,EAAAC,GAAA,aAAA,gBAAA,EACAsD,EAAArI,EAAA,EAAA,EACAsI,EAAAtI,EAAA,EAAA,EAEAuI,EAAAvI,EAAA,IAAA,EAEAwI,EAAAxI,EAAA,IAAA,EAEAgF,GAAAwD,EACEF,EACAzI,GAAA,CACS,qBAAA,CACe,KAAA,cACd,YAAA,GAAAf,EAAA,6BAAA,CAAA,GAC0C,aAAAgG,CAClC,EAChB,OAAA,KACQ,UAAA,KACG,sBAAA,EACY,CAAA,CACxB,EAIH,MAAA2D,EAAAzI,EAAA,CAA8D,CAC5D,GAAAoI,EAAA,QACe,IAAA,GACR,MAAA,GACE,OAAA,EACC,CACV,CAAA,EAIFtC,GAAA2C,EAAAC,GAAA,CACEA,EAAA,OAAA,GAAAA,EAAAA,EAAA,OAAA,CAAA,EAAA,MAAA,IAIED,EAAA,MAAA,KAAA,CAA0B,GAAAL,EAAA,QACX,IAAA,GACR,MAAA,GACE,OAAA,EACC,CAAA,CAEZ,CAAA,EAIFtC,GAAAxH,EAAA,WAAA,QACmBqK,GAAA,CAGf,MAAAC,EAAAC,GAA+BJ,EAAA,MACdK,GACbC,GACAC,GAAAlQ,GAAAA,EAAA,MAAA,EAAA,EACqCmQ,GAAAC,GAAA,IAAA,CAAA,CACX,CAC1B,CACF,EAGFC,EAAAN,GAA4BO,GAAAd,EAAA,KAAA,EACgBe,GACxCN,GACAO,GAAAxQ,GAAAA,EAAA,MAAA,EAAA,EAC+ByQ,EAC1B,CACL,EACFC,GAAA,IAAA,CAAA,CAAA,CAC0C,EAG5CC,GAAAd,EAAAC,CAAA,IACEH,EAAA,MAAAI,GAAuBF,EACrBe,GAAA/4B,IAAA,CAAA,GAAAy3B,EAAA,QAAA,GAAAz3B,CAAA,EAAA,CAC6C,GAIjD84B,GAAAd,EAAAQ,CAAA,IACEb,EAAA,MAAAqB,GAAAhB,CAAA,EACF,EACF,CAAA,UAAA,EAAA,CACkB,EAGpB7C,GAAA2C,EAAAmB,GAAA,CACE,MAAAC,EAAAhB,GAAqBe,EACnBd,GACEC,GACAC,GAAAlQ,GAAAA,EAAA,MAAA,EAAA,EACqCmQ,GAAAC,GAAA,IAAA,CAAA,CACX,CAC1B,CACF,EAGFO,GAAAtB,EAAA,MAAA,QAAA0B,CAAA,IACE1B,EAAA,MAAA,QAAA2B,GAAAD,CAAA,EACF,CAAA,EAIF/D,GAAAwC,EAAAyB,GAAA,CACE,MAAAZ,EAAAN,GAA4BO,GAAAW,CAAA,EACaV,GACrCN,GACAO,GAAAxQ,GAAAA,EAAA,MAAA,EAAA,EAC+ByQ,EAC1B,CACL,EACFC,GAAA,IAAA,CAAA,CAAA,CAC0C,EAG5CC,GAAAtB,EAAA,MAAA,QAAAgB,CAAA,IACEhB,EAAA,MAAA,QAAAgB,EACF,CAAA,EAGFrD,GAAA2C,EAAAE,GAAA,CAEE,GAAA,CAAAN,EAAA,MAEA,GAAA,CACE,MAAA2B,EAAA1B,EAAA,MAAA,MAAA;AAAA,CAAA,EAAA,IAAAn2B,IAAA,CAAwE,IAAAA,EAAA,UAAA,EAAAA,EAAA,QAAA,GAAA,CAAA,EAAA,SAAA,EAAA,QAAA,KAAA,EAAA,EACD,MAAAA,EAAA,UAAAA,EAAA,QAAA,GAAA,EAAA,CAAA,EAAA,SAAA,EACf,OAAA,CAAAA,EAAA,KAAA,EAAA,WAAA,GAAA,CACnB,EAAA,EAGrC83B,EAAAtB,EAAA,OAAAh4B,GAAAA,EAAA,MAAA,EAAA,EAEA84B,GAAAO,EAAAC,CAAA,IACE3B,EAAA,MAAAqB,GAAAM,CAAA,EACF,OAAAnR,EAAA,CAEA4K,EAAA,MAAA,GAAA5E,EAAA,4BAAA,CAAA,EAAA,EACA,QAAA,MAAAhG,CAAA,CAAe,CACjB,CAAA,EAGF,MAAAoR,EAAA,IAAA,CACEzB,EAAA,MAAA,KAAA,CAA0B,GAAAL,EAAA,QACX,IAAA,GACR,MAAA,GACE,OAAA,EACC,CAAA,CACT,EAGH+B,EAAA,CAAAC,EAAAC,IAAA,CACE5B,EAAA,MAAAA,EAAA,MAAA,IAA4C,CAAA6B,EAAA71B,IAAAA,IAAA21B,EAAAC,EAAAC,CACnB,CACzB,EAGFC,EAAAH,GAAA,CACE,MAAAI,EAAAC,GAAAhC,EAAA,KAAA,EAEA+B,EAAA,OAAA,GAAAJ,IAAAI,EAAA,OAAA,IAMEjC,EAAA,QACEA,EAAA,MAAA,OAAA,CAAA,EACAA,EAAA,MAAA,MAGFA,EAAA,MAAA7E,EAAA,QAAA,GAAA5E,EAAA,eAAA,CAAA,GAAA,CAA6D,OAAA,CACnD,CACN,KAAA,GAAAA,EAAA,aAAA,CAAA,GAC2B,QAAA,CAAA4L,EAAAC,IAAA,CAEvBlC,EAAA,MAAA+B,EACAG,EAAA,OAAA,CAAA,EACApC,EAAA,MAAA,IAAsB,CACxB,CACF,EACF,WAAA,IAAA,CAGEA,EAAA,MAAA,IAAsB,CACxB,CAAA,GAIJE,EAAA,MAAAI,GAAuBJ,EAAA,MACNmC,GAAAR,CAAA,EACCS,GAAA,IAAAC,GAAA,wCAAA,CAAA,CACuD,CACzE,EAGF7C,EAAA,IAAA,CAEEQ,EAAA,MAAA,CAAuB,CACrB,GAAAL,EAAA,QACe,IAAA,GACR,MAAA,GACE,OAAA,EACC,CACV,EAGFE,EAAA,MAAA,EAAoB,EAGtByC,EAAA,CAAAC,EAAAlJ,IAAA,CAIE,MAAAmJ,EAAAnJ,EAAA,CAAA,KAAAA,GAAA,CAAA,WAAA,GAAA,EAAAkJ,EAEA,GAAAA,GAAAA,EAAA,QAAA,KAAAV,GAAAA,EAAA,IAAA,YAAA,IAAA,eAAA,EACE,MAAA,GAEF,GAAA,CAAAW,EAAc,MAAA,GAEd,GAAA,CAAAA,EAAA,MAAA,CAAAA,EAAA,KAAA,WAA+C,MAAA,GAE/C,MAAAlK,EAAA,CAAA,EAGA,GAAAkK,EAAA,KAAA,WAAA,QAAA,CACE,MAAA/I,EAAA+I,EAAA,KAAA,SACA9I,GAAA8I,EAAA,KAAA,SAEAlK,EAAA,KAAA,CAAa,OAAA,GACH,IAAA,gBACH,MAAA,SAAA,KAAA,GAAAmB,CAAA,IAAAC,EAAA,EAAA,CAAA,EAC0C,CAAA,CAChD,SAAA8I,EAAA,KAAA,WAAA,UAAAA,EAAA,KAAA,WAAA,WAAAA,EAAA,KAAA,QAAA,UAAA,CAKD,MAAAC,EAAAD,EAAA,KAIAE,EAFAD,EAAA,WAAA,UAEAA,EAAA,cAAA,MAAAA,EAAA,MAEAnK,EAAA,KAAA,CAAa,OAAA,GACH,IAAA,gBACH,MAAA,UAAAoK,CAAA,EACiB,CAAA,CACvB,SAAAF,EAAA,KAAA,WAAA,UAAA,CAED,KAAA,CAAA,IAAAh6B,EAAA,MAAAmxB,IAAA6I,EAAA,KAEA7I,KAAA,WAAAnxB,GACE8vB,EAAA,KAAA,CAAa,OAAA,GACH,IAAA9vB,EACR,MAAAg6B,EAAA,KAAA,OAAA,EAC6B,CAAA,CAEjC,CAGF,OAAAlK,CAAO,EAGTqK,EAAAJ,GACE,CAAO,GAAAD,EAAAC,CAAA,EAAA,IAAAX,IAAA,CAC2C,OAAA,OACtC,OAAAA,CACR,EAAA,CACA,EAINgB,EAAA1M,EAAwB,IAAAyM,EAAAjD,EAAA,KAAA,EAAA,IAAA,CAAAkC,EAAAD,KAAA,CACoC,GAAA,UAAAA,CAAA,GACrC,GAAAC,CAChB,EAAA,CACH,EAGJiB,EAAA3M,EAAA,IAAA,UACE,GAAA,GAAAwB,EAAA7B,EAAA,sBAAA,MAAA6B,EAAA,OAAA,CAAA7B,EAAA,oBAAA,QACE,MAAA,GAWF,MAAAyC,EAPAzC,EAAA,oBAAA,QAAA,OAA2D+L,GAAA,CAAAlC,EAAA,MAAA,QAAA,KAEhCoD,IAAA,OAAA,OAAAA,GAAA,QAAApL,EAAAkK,EAAA,kBAAA,YAAAlK,EAAA,KAC4C,CACnE,EAGJ,OACGkK,GAAAA,EAAA,kBAAA,MAAAA,EAAA,kBAAA,QAAAA,EAAA,gBAAA,MAI0B,EAAA,IAAA,CAAAA,EAAAD,KAAA,gBAAA,OAEF,eAAAjK,EAAA7B,EAAA,sBAAA,YAAA6B,EAAA,QAAAiK,IAAA,WACkC,OAAA,UACjD,GAAA,UAAAA,EAAA,GACW,OAAA,CACX,KAAA3J,GAAA4J,EAAA,kBAAA,YAAA5J,GAAA,IACuB,OAAAE,GAAA0J,EAAA,kBAAA,YAAA1J,GAAA,MACE,QAAA6K,GAAAnB,EAAA,kBAAA,YAAAmB,GAAA,MACC,CAClC,EAAA,EAGJ,IAAA1J,EAAA,CAAA,EAWA,MAAA2J,EAAAV,EAA2B5C,EAAA,MACjB7J,EAAA,oBAAA,KAAA,aACuB,EAAA,CAAA,EAGjC,OAAAmN,GAAAtD,EAAA,MAAA,KAAA,WAAA,WAAAA,EAAA,MAAA,KAAA,aAKErG,EAAA,CAAO,CACL,eAAArB,GAAAnC,EAAA,sBAAA,YAAAmC,GAAA,KAAA,WACiD,OAAA,OACvC,GAAA,cACJ,OAAAgL,CACI,CACV,GAIJ,CAAA,GAAA1K,EAAA,GAAAe,CAAA,CAA2B,CAAA,EAG7B4J,EAAA1L,EAAA,EAAA,EAEA2L,EAAA,IAAA,CACED,EAAA,MAAA,CAAAA,EAAA,KAAyB,EAG3BE,EAAAvB,GACEA,EAAA,SAAA,QAAAqB,EAAA,MACErB,EAAA,OAAA,MAAA,QAAA,OAAA,GAAA,EACFA,EAAA,OAAA,iuNCvlBF,MAAAvL,EAAAC,KACA2E,EAAAC,KAEArF,EAAAC,EAIAC,EAAAC,EAOAoN,EAAA7L,EAAA,IAAA,EAEA8L,EAAAzE,GAAA/I,EAAA,aAAAE,CAAA,EAEAuN,EAAA/L,EAAA,IAAA,EAEA8E,EAAAC,GAAA,aAAA,kBAAA,EAEAiH,EAAAnI,GAA0BG,GACxB,GACA,EAEFiI,EAAApI,GAAAqI,GAAA,GAAA,EAIAlH,GAAA+G,EACED,EACAjM,GAAA,CACS,qBAAA,CACe,KAAA,sBACd,YAAA,GAAAf,EAAA,mBAAA,CAAA,GACgC,aAAAgG,CACxB,EAChB,OAAAnG,EACQ,IAAAmN,EAAA,MAAA,OAAA,EAAAK,GAAA,IACyC,EACjD,UAAA,KACW,sBAAA,EACY,CAAA,CACxB,EAGH,MAAAC,EAAA,IAAA,CACE5G,GAAAsG,EAAA,KAAA,EACAE,EAAA,MAAA1G,GACA5B,EAAA,QAAA,GAAA5E,EAAA,2BAAA,CAAA,EAAA,CAAiD,EAGnDuN,EAAA,IAAA,CACE,GAAA,CACE,MAAAC,EAAA,KAAA,MAAAR,EAAA,KAAA,EACAA,EAAA,MAAA,KAAA,UAAAQ,EAAA,KAAA,CAAA,EACAL,EAAA,MAAA3G,EAA8B,OAAAxM,EAAA,CAE9B,QAAA,MAAAA,CAAA,EACAmT,EAAA,MAAAM,GACA7I,EAAA,MAAA,GAAA5E,EAAA,kCAAA,CAAA,EAAA,CAAsD,CACxD,EAGF0N,EAAA,IAAA,CACEV,EAAA,MAAA,EAAuB,EAGzBW,EAAA,CAAA5kB,EAAA,OAAA,CACE2W,EAAA,YAAA3W,CAAA,CAA4B,EAE9B6kB,EAAA,IAAA,CACEhK,IAAiB,ypDChKNiK,GAEYzwB,GAAuCinB,GAAS,CACvE,GAAIA,IAAS,GAAW,OAAA,QAAQ,QAAQ,CAAA,CAAE,EAC1C,GAAI,CAACjnB,EAAO,MAAc,OAAA,QAAQ,QAAQ,CAAA,CAAE,EAExC,GAAA,CACI,MAAA0wB,EAAMC,GAAS1J,CAAI,EAEnB2J,EAAUC,GAAY7wB,EAAO,MAAO0wB,CAAG,EAAE,IAC7C,CAAC,CAAE,UAAA5iB,EAAW,QAAAtY,MACE,CACZ,KAAM,CACJ,KAAMsY,EAAW,CAAC,EAAE,KACpB,GAAIA,EAAW,CAAC,EAAE,OAAS,CAC7B,EACA,GAAI,CACF,KAAMA,EAAW,CAAC,EAAE,KACpB,GAAIA,EAAW,CAAC,EAAE,OAAS,CAC7B,EACA,QAAAtY,EACA,SAAU,OAAA,EACZ,EAGG,OAAA,QAAQ,QAAQo7B,CAAO,QACvBhU,EAAG,CACV,MAAMkU,EAAMlU,EAEZ,OAAO,QAAQ,QAAQ,CACP,CACZ,KAAM,CACJ,KAAMkU,EAAI,UAAW,CAAC,EAAE,KACxB,GAAIA,EAAI,UAAW,CAAC,EAAE,OAAS,CACjC,EACA,GAAI,CACF,KAAMA,EAAI,UAAW,CAAC,EAAE,KACxB,GAAIA,EAAI,UAAW,CAAC,EAAE,MACxB,EACA,QAASA,EAAI,QACb,SAAU,OACZ,CAAA,CACD,CACH,CACF,ECvDO,SAASC,GAAmBC,EAAY,CAC3C,IAAIC,EACJ,OAAAC,GAAaF,EAAaG,GAAU,CAChC,OAAQA,EAAM,KAAI,CACd,IAAK,QACL,IAAK,aACL,IAAK,WACL,IAAK,eACL,IAAK,qBACDF,EAAkBE,EAClB,KACP,CACT,CAAK,EACMF,CACX,CACO,SAAShnB,GAAYjK,EAAQ9F,EAAMqD,EAAW,CACjD,OAAIA,IAAckG,GAAmB,MAAQzD,EAAO,aAAc,IAAK9F,EAC5DuJ,GAEPlG,IAAcoG,GAAiB,MAAQ3D,EAAO,aAAc,IAAK9F,EAC1DyJ,GAEPpG,IAAcqG,GAAqB,MAAQjI,GAAgBzB,CAAI,EACxD0J,GAEP,cAAe1J,EACRA,EAAK,YAAYqD,CAAS,EAE9B,IACX,CACO,SAAS2zB,GAAaE,EAAO96B,EAAI,CACpC,MAAM+6B,EAAoB,CAAA,EAC1B,IAAIF,EAAQC,EACZ,KAAOD,GAASA,EAAM,MAClBE,EAAkB,KAAKF,CAAK,EAC5BA,EAAQA,EAAM,UAElB,QAAS54B,EAAI84B,EAAkB,OAAS,EAAG94B,GAAK,EAAGA,IAC/CjC,EAAG+6B,EAAkB94B,CAAC,CAAC,CAE/B,CACO,SAAS+4B,GAAaC,EAAQ,CACjC,MAAMC,EAAO,OAAO,KAAKD,CAAM,EACzBE,EAAMD,EAAK,OACXxyB,EAAS,IAAI,MAAMyyB,CAAG,EAC5B,QAASl5B,EAAI,EAAGA,EAAIk5B,EAAK,EAAEl5B,EACvByG,EAAOzG,CAAC,EAAIg5B,EAAOC,EAAKj5B,CAAC,CAAC,EAE9B,OAAOyG,CACX,CACO,SAAS0yB,GAASzC,EAAOn5B,EAAM,CAClC,OAAO67B,GAAkB77B,EAAM87B,GAAc3C,EAAM,MAAM,CAAC,CAC9D,CACA,SAAS0C,GAAkB77B,EAAMmxB,EAAM,CACnC,GAAI,CAACA,EACD,OAAO4K,GAAe/7B,EAAMg8B,GAAS,CAACA,EAAM,YAAY,EAE5D,MAAMC,EAAcj8B,EAAK,IAAIg8B,IAAU,CACnC,UAAWE,GAAaJ,GAAcE,EAAM,KAAK,EAAG7K,CAAI,EACxD,MAAA6K,CACH,EAAC,EACF,OAAOD,GAAeA,GAAeE,EAAaE,GAAQA,EAAK,WAAa,CAAC,EAAGA,GAAQ,CAACA,EAAK,MAAM,YAAY,EAC3G,KAAK,CAACp6B,EAAGC,KAAOD,EAAE,MAAM,aAAe,EAAI,IAAMC,EAAE,MAAM,aAAe,EAAI,IAC7ED,EAAE,UAAYC,EAAE,WAChBD,EAAE,MAAM,MAAM,OAASC,EAAE,MAAM,MAAM,MAAM,EAC1C,IAAIm6B,GAAQA,EAAK,KAAK,CAC/B,CACA,SAASJ,GAAe74B,EAAOk5B,EAAW,CACtC,MAAMC,EAAWn5B,EAAM,OAAOk5B,CAAS,EACvC,OAAOC,EAAS,SAAW,EAAIn5B,EAAQm5B,CAC3C,CACA,SAASP,GAAc3K,EAAM,CACzB,OAAOA,EAAK,YAAa,EAAC,QAAQ,MAAO,EAAE,CAC/C,CACA,SAAS+K,GAAalmB,EAAYmb,EAAM,CACpC,IAAImL,EAAY56B,GAAgByvB,EAAMnb,CAAU,EAChD,OAAIA,EAAW,OAASmb,EAAK,SACzBmL,GAAatmB,EAAW,OAASmb,EAAK,OAAS,EAC/CmL,GAAatmB,EAAW,QAAQmb,CAAI,IAAM,EAAI,EAAI,IAE/CmL,CACX,CACA,SAAS56B,GAAgBK,EAAGC,EAAG,CAC3B,IAAIS,EACAD,EACJ,MAAM+5B,EAAI,CAAA,EACJl6B,EAAUN,EAAE,OACZO,EAAUN,EAAE,OAClB,IAAKS,EAAI,EAAGA,GAAKJ,EAASI,IACtB85B,EAAE95B,CAAC,EAAI,CAACA,CAAC,EAEb,IAAKD,EAAI,EAAGA,GAAKF,EAASE,IACtB+5B,EAAE,CAAC,EAAE/5B,CAAC,EAAIA,EAEd,IAAKC,EAAI,EAAGA,GAAKJ,EAASI,IACtB,IAAKD,EAAI,EAAGA,GAAKF,EAASE,IAAK,CAC3B,MAAMK,EAAOd,EAAEU,EAAI,CAAC,IAAMT,EAAEQ,EAAI,CAAC,EAAI,EAAI,EACzC+5B,EAAE95B,CAAC,EAAED,CAAC,EAAI,KAAK,IAAI+5B,EAAE95B,EAAI,CAAC,EAAED,CAAC,EAAI,EAAG+5B,EAAE95B,CAAC,EAAED,EAAI,CAAC,EAAI,EAAG+5B,EAAE95B,EAAI,CAAC,EAAED,EAAI,CAAC,EAAIK,CAAI,EACvEJ,EAAI,GAAKD,EAAI,GAAKT,EAAEU,EAAI,CAAC,IAAMT,EAAEQ,EAAI,CAAC,GAAKT,EAAEU,EAAI,CAAC,IAAMT,EAAEQ,EAAI,CAAC,IAC/D+5B,EAAE95B,CAAC,EAAED,CAAC,EAAI,KAAK,IAAI+5B,EAAE95B,CAAC,EAAED,CAAC,EAAG+5B,EAAE95B,EAAI,CAAC,EAAED,EAAI,CAAC,EAAIK,CAAI,EAEzD,CAEL,OAAO05B,EAAEl6B,CAAO,EAAEC,CAAO,CAC7B,CCrGO,IAAIk6B,IACV,SAAUA,EAAa,CACpB,SAASC,EAAGp5B,EAAO,CACf,OAAO,OAAOA,GAAU,QAC3B,CACDm5B,EAAY,GAAKC,CACrB,GAAGD,KAAgBA,GAAc,CAAE,EAAC,EAC7B,IAAIE,IACV,SAAUA,EAAK,CACZ,SAASD,EAAGp5B,EAAO,CACf,OAAO,OAAOA,GAAU,QAC3B,CACDq5B,EAAI,GAAKD,CACb,GAAGC,KAAQA,GAAM,CAAE,EAAC,EACb,IAAIC,IACV,SAAUA,EAAS,CAChBA,EAAQ,UAAY,YACpBA,EAAQ,UAAY,WACpB,SAASF,EAAGp5B,EAAO,CACf,OAAO,OAAOA,GAAU,UAAYs5B,EAAQ,WAAat5B,GAASA,GAASs5B,EAAQ,SACtF,CACDA,EAAQ,GAAKF,CACjB,GAAGE,KAAYA,GAAU,CAAE,EAAC,EACrB,IAAIC,IACV,SAAUA,EAAU,CACjBA,EAAS,UAAY,EACrBA,EAAS,UAAY,WACrB,SAASH,EAAGp5B,EAAO,CACf,OAAO,OAAOA,GAAU,UAAYu5B,EAAS,WAAav5B,GAASA,GAASu5B,EAAS,SACxF,CACDA,EAAS,GAAKH,CAClB,GAAGG,KAAaA,GAAW,CAAE,EAAC,EAKvB,IAAIC,IACV,SAAUA,EAAU,CAMjB,SAASC,EAAOC,EAAMC,EAAW,CAC7B,OAAID,IAAS,OAAO,YAChBA,EAAOH,GAAS,WAEhBI,IAAc,OAAO,YACrBA,EAAYJ,GAAS,WAElB,CAAE,KAAAG,EAAM,UAAAC,EAClB,CACDH,EAAS,OAASC,EAIlB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,cAAcD,CAAS,GAAKC,EAAG,SAASD,EAAU,IAAI,GAAKC,EAAG,SAASD,EAAU,SAAS,CACvG,CACDJ,EAAS,GAAKJ,CAClB,GAAGI,KAAaA,GAAW,CAAE,EAAC,EAKvB,IAAIM,IACV,SAAUA,EAAO,CACd,SAASL,EAAOM,EAAKC,EAAKC,EAAOC,EAAM,CACnC,GAAIL,EAAG,SAASE,CAAG,GAAKF,EAAG,SAASG,CAAG,GAAKH,EAAG,SAASI,CAAK,GAAKJ,EAAG,SAASK,CAAI,EAC9E,MAAO,CAAE,MAAOV,GAAS,OAAOO,EAAKC,CAAG,EAAG,IAAKR,GAAS,OAAOS,EAAOC,CAAI,CAAC,EAE3E,GAAIV,GAAS,GAAGO,CAAG,GAAKP,GAAS,GAAGQ,CAAG,EACxC,MAAO,CAAE,MAAOD,EAAK,IAAKC,CAAG,EAG7B,MAAM,IAAI,MAAM,8CAA8CD,CAAG,KAAKC,CAAG,KAAKC,CAAK,KAAKC,CAAI,GAAG,CAEtG,CACDJ,EAAM,OAASL,EAIf,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,cAAcD,CAAS,GAAKJ,GAAS,GAAGI,EAAU,KAAK,GAAKJ,GAAS,GAAGI,EAAU,GAAG,CAClG,CACDE,EAAM,GAAKV,CACf,GAAGU,KAAUA,GAAQ,CAAE,EAAC,EAKjB,IAAIK,IACV,SAAUA,EAAU,CAMjB,SAASV,EAAOW,EAAKC,EAAO,CACxB,MAAO,CAAE,IAAAD,EAAK,MAAAC,EACjB,CACDF,EAAS,OAASV,EAIlB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,cAAcD,CAAS,GAAKE,GAAM,GAAGF,EAAU,KAAK,IAAMC,EAAG,OAAOD,EAAU,GAAG,GAAKC,EAAG,UAAUD,EAAU,GAAG,EAC7H,CACDO,EAAS,GAAKf,CAClB,GAAGe,KAAaA,GAAW,CAAE,EAAC,EAKvB,IAAIG,IACV,SAAUA,EAAc,CAQrB,SAASb,EAAOc,EAAWC,EAAaC,EAAsBC,EAAsB,CAChF,MAAO,CAAE,UAAAH,EAAW,YAAAC,EAAa,qBAAAC,EAAsB,qBAAAC,CAAoB,CAC9E,CACDJ,EAAa,OAASb,EAItB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,cAAcD,CAAS,GAAKE,GAAM,GAAGF,EAAU,WAAW,GAAKC,EAAG,OAAOD,EAAU,SAAS,GAC/FE,GAAM,GAAGF,EAAU,oBAAoB,IACtCE,GAAM,GAAGF,EAAU,oBAAoB,GAAKC,EAAG,UAAUD,EAAU,oBAAoB,EAClG,CACDU,EAAa,GAAKlB,CACtB,GAAGkB,KAAiBA,GAAe,CAAE,EAAC,EAK/B,IAAIK,IACV,SAAUA,EAAO,CAId,SAASlB,EAAOmB,EAAKC,EAAOC,EAAMC,EAAO,CACrC,MAAO,CACH,IAAAH,EACA,MAAAC,EACA,KAAAC,EACA,MAAAC,CACZ,CACK,CACDJ,EAAM,OAASlB,EAIf,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,GAAKC,EAAG,YAAYD,EAAU,IAAK,EAAG,CAAC,GACjEC,EAAG,YAAYD,EAAU,MAAO,EAAG,CAAC,GACpCC,EAAG,YAAYD,EAAU,KAAM,EAAG,CAAC,GACnCC,EAAG,YAAYD,EAAU,MAAO,EAAG,CAAC,CAC9C,CACDe,EAAM,GAAKvB,CACf,GAAGuB,KAAUA,GAAQ,CAAE,EAAC,EAKjB,IAAIK,IACV,SAAUA,EAAkB,CAIzB,SAASvB,EAAOY,EAAOY,EAAO,CAC1B,MAAO,CACH,MAAAZ,EACA,MAAAY,CACZ,CACK,CACDD,EAAiB,OAASvB,EAI1B,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,GAAKE,GAAM,GAAGF,EAAU,KAAK,GAAKe,GAAM,GAAGf,EAAU,KAAK,CAC9F,CACDoB,EAAiB,GAAK5B,CAC1B,GAAG4B,KAAqBA,GAAmB,CAAE,EAAC,EAKvC,IAAIE,IACV,SAAUA,EAAmB,CAI1B,SAASzB,EAAO0B,EAAOC,EAAUC,EAAqB,CAClD,MAAO,CACH,MAAAF,EACA,SAAAC,EACA,oBAAAC,CACZ,CACK,CACDH,EAAkB,OAASzB,EAI3B,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,GAAKC,EAAG,OAAOD,EAAU,KAAK,IACvDC,EAAG,UAAUD,EAAU,QAAQ,GAAK0B,GAAS,GAAG1B,CAAS,KACzDC,EAAG,UAAUD,EAAU,mBAAmB,GAAKC,EAAG,WAAWD,EAAU,oBAAqB0B,GAAS,EAAE,EAClH,CACDJ,EAAkB,GAAK9B,CAC3B,GAAG8B,KAAsBA,GAAoB,CAAE,EAAC,EAIzC,IAAIK,IACV,SAAUA,EAAkB,CAIzBA,EAAiB,QAAU,UAI3BA,EAAiB,QAAU,UAI3BA,EAAiB,OAAS,QAC9B,GAAGA,KAAqBA,GAAmB,CAAE,EAAC,EAKvC,IAAIC,IACV,SAAUA,EAAc,CAIrB,SAAS/B,EAAOgC,EAAWC,EAASC,EAAgBC,EAAcC,EAAMC,EAAe,CACnF,MAAMj/B,EAAS,CACX,UAAA4+B,EACA,QAAAC,CACZ,EACQ,OAAI7B,EAAG,QAAQ8B,CAAc,IACzB9+B,EAAO,eAAiB8+B,GAExB9B,EAAG,QAAQ+B,CAAY,IACvB/+B,EAAO,aAAe++B,GAEtB/B,EAAG,QAAQgC,CAAI,IACfh/B,EAAO,KAAOg/B,GAEdhC,EAAG,QAAQiC,CAAa,IACxBj/B,EAAO,cAAgBi/B,GAEpBj/B,CACV,CACD2+B,EAAa,OAAS/B,EAItB,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,GAAKC,EAAG,SAASD,EAAU,SAAS,GAAKC,EAAG,SAASD,EAAU,SAAS,IACjGC,EAAG,UAAUD,EAAU,cAAc,GAAKC,EAAG,SAASD,EAAU,cAAc,KAC9EC,EAAG,UAAUD,EAAU,YAAY,GAAKC,EAAG,SAASD,EAAU,YAAY,KAC1EC,EAAG,UAAUD,EAAU,IAAI,GAAKC,EAAG,OAAOD,EAAU,IAAI,EACnE,CACD4B,EAAa,GAAKpC,CACtB,GAAGoC,KAAiBA,GAAe,CAAE,EAAC,EAK/B,IAAIO,IACV,SAAUA,EAA8B,CAIrC,SAAStC,EAAOuC,EAAU3/B,EAAS,CAC/B,MAAO,CACH,SAAA2/B,EACA,QAAA3/B,CACZ,CACK,CACD0/B,EAA6B,OAAStC,EAItC,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKO,GAAS,GAAGP,EAAU,QAAQ,GAAKC,EAAG,OAAOD,EAAU,OAAO,CACjG,CACDmC,EAA6B,GAAK3C,CACtC,GAAG2C,KAAiCA,GAA+B,CAAE,EAAC,EAI/D,IAAIE,IACV,SAAUA,EAAoB,CAI3BA,EAAmB,MAAQ,EAI3BA,EAAmB,QAAU,EAI7BA,EAAmB,YAAc,EAIjCA,EAAmB,KAAO,CAC9B,GAAGA,KAAuBA,GAAqB,CAAE,EAAC,EAM3C,IAAIC,IACV,SAAUA,EAAe,CAOtBA,EAAc,YAAc,EAM5BA,EAAc,WAAa,CAC/B,GAAGA,KAAkBA,GAAgB,CAAE,EAAC,EAMjC,IAAIC,IACV,SAAUA,EAAiB,CACxB,SAAS/C,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,GAAKC,EAAG,OAAOD,EAAU,IAAI,CACjE,CACDuC,EAAgB,GAAK/C,CACzB,GAAG+C,KAAoBA,GAAkB,CAAE,EAAC,EAKrC,IAAIC,IACV,SAAUA,EAAY,CAInB,SAAS3C,EAAOY,EAAOh+B,EAASggC,EAAUr+B,EAAMs+B,EAAQC,EAAoB,CACxE,IAAI1/B,EAAS,CAAE,MAAAw9B,EAAO,QAAAh+B,GACtB,OAAIw9B,EAAG,QAAQwC,CAAQ,IACnBx/B,EAAO,SAAWw/B,GAElBxC,EAAG,QAAQ77B,CAAI,IACfnB,EAAO,KAAOmB,GAEd67B,EAAG,QAAQyC,CAAM,IACjBz/B,EAAO,OAASy/B,GAEhBzC,EAAG,QAAQ0C,CAAkB,IAC7B1/B,EAAO,mBAAqB0/B,GAEzB1/B,CACV,CACDu/B,EAAW,OAAS3C,EAIpB,SAASL,EAAGp5B,EAAO,CACf,IAAI8qB,EACJ,IAAI8O,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GACpBE,GAAM,GAAGF,EAAU,KAAK,GACxBC,EAAG,OAAOD,EAAU,OAAO,IAC1BC,EAAG,OAAOD,EAAU,QAAQ,GAAKC,EAAG,UAAUD,EAAU,QAAQ,KAChEC,EAAG,QAAQD,EAAU,IAAI,GAAKC,EAAG,OAAOD,EAAU,IAAI,GAAKC,EAAG,UAAUD,EAAU,IAAI,KACtFC,EAAG,UAAUD,EAAU,eAAe,GAAMC,EAAG,QAAQ/O,EAAK8O,EAAU,mBAAqB,MAAQ9O,IAAO,OAAS,OAASA,EAAG,IAAI,KACnI+O,EAAG,OAAOD,EAAU,MAAM,GAAKC,EAAG,UAAUD,EAAU,MAAM,KAC5DC,EAAG,UAAUD,EAAU,kBAAkB,GAAKC,EAAG,WAAWD,EAAU,mBAAoBmC,GAA6B,EAAE,EACpI,CACDK,EAAW,GAAKhD,CACpB,GAAGgD,KAAeA,GAAa,CAAE,EAAC,EAK3B,IAAII,IACV,SAAUA,EAAS,CAIhB,SAAS/C,EAAOgD,EAAOC,KAAY73B,EAAM,CACrC,IAAIhI,EAAS,CAAE,MAAA4/B,EAAO,QAAAC,GACtB,OAAI7C,EAAG,QAAQh1B,CAAI,GAAKA,EAAK,OAAS,IAClChI,EAAO,UAAYgI,GAEhBhI,CACV,CACD2/B,EAAQ,OAAS/C,EAIjB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKC,EAAG,OAAOD,EAAU,KAAK,GAAKC,EAAG,OAAOD,EAAU,OAAO,CAC5F,CACD4C,EAAQ,GAAKpD,CACjB,GAAGoD,KAAYA,GAAU,CAAE,EAAC,EAKrB,IAAIlB,IACV,SAAUA,EAAU,CAMjB,SAASqB,EAAQtC,EAAOuC,EAAS,CAC7B,MAAO,CAAE,MAAAvC,EAAO,QAAAuC,EACnB,CACDtB,EAAS,QAAUqB,EAMnB,SAASE,EAAOjM,EAAUgM,EAAS,CAC/B,MAAO,CAAE,MAAO,CAAE,MAAOhM,EAAU,IAAKA,CAAQ,EAAI,QAAAgM,EACvD,CACDtB,EAAS,OAASuB,EAKlB,SAASC,EAAIzC,EAAO,CAChB,MAAO,CAAE,MAAAA,EAAO,QAAS,GAC5B,CACDiB,EAAS,IAAMwB,EACf,SAAS1D,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,GAC1BC,EAAG,OAAOD,EAAU,OAAO,GAC3BE,GAAM,GAAGF,EAAU,KAAK,CAClC,CACD0B,EAAS,GAAKlC,CAClB,GAAGkC,KAAaA,GAAW,CAAE,EAAC,EACvB,IAAIyB,IACV,SAAUA,EAAkB,CACzB,SAAStD,EAAO0B,EAAO6B,EAAmBlU,EAAa,CACnD,MAAMjsB,EAAS,CAAE,MAAAs+B,GACjB,OAAI6B,IAAsB,SACtBngC,EAAO,kBAAoBmgC,GAE3BlU,IAAgB,SAChBjsB,EAAO,YAAcisB,GAElBjsB,CACV,CACDkgC,EAAiB,OAAStD,EAC1B,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,GAAKC,EAAG,OAAOD,EAAU,KAAK,IAC1DC,EAAG,QAAQD,EAAU,iBAAiB,GAAKA,EAAU,oBAAsB,UAC3EC,EAAG,OAAOD,EAAU,WAAW,GAAKA,EAAU,cAAgB,OACtE,CACDmD,EAAiB,GAAK3D,CAC1B,GAAG2D,KAAqBA,GAAmB,CAAE,EAAC,EACvC,IAAIE,IACV,SAAUA,EAA4B,CACnC,SAAS7D,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,OAAOD,CAAS,CAC7B,CACDqD,EAA2B,GAAK7D,CACpC,GAAG6D,KAA+BA,GAA6B,CAAE,EAAC,EAC3D,IAAIC,IACV,SAAUA,EAAmB,CAQ1B,SAASP,EAAQtC,EAAOuC,EAASO,EAAY,CACzC,MAAO,CAAE,MAAA9C,EAAO,QAAAuC,EAAS,aAAcO,CAAU,CACpD,CACDD,EAAkB,QAAUP,EAQ5B,SAASE,EAAOjM,EAAUgM,EAASO,EAAY,CAC3C,MAAO,CAAE,MAAO,CAAE,MAAOvM,EAAU,IAAKA,CAAQ,EAAI,QAAAgM,EAAS,aAAcO,EAC9E,CACDD,EAAkB,OAASL,EAO3B,SAASC,EAAIzC,EAAO8C,EAAY,CAC5B,MAAO,CAAE,MAAA9C,EAAO,QAAS,GAAI,aAAc8C,CAAU,CACxD,CACDD,EAAkB,IAAMJ,EACxB,SAAS1D,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAOs7B,GAAS,GAAG1B,CAAS,IAAMmD,GAAiB,GAAGnD,EAAU,YAAY,GAAKqD,GAA2B,GAAGrD,EAAU,YAAY,EACxI,CACDsD,EAAkB,GAAK9D,CAC3B,GAAG8D,KAAsBA,GAAoB,CAAE,EAAC,EAKzC,IAAIE,IACV,SAAUA,EAAkB,CAIzB,SAAS3D,EAAO4D,EAAcC,EAAO,CACjC,MAAO,CAAE,aAAAD,EAAc,MAAAC,EAC1B,CACDF,EAAiB,OAAS3D,EAC1B,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GACpB2D,GAAwC,GAAG3D,EAAU,YAAY,GACjE,MAAM,QAAQA,EAAU,KAAK,CACvC,CACDwD,EAAiB,GAAKhE,CAC1B,GAAGgE,KAAqBA,GAAmB,CAAE,EAAC,EACvC,IAAII,IACV,SAAUA,EAAY,CACnB,SAAS/D,EAAOW,EAAKj8B,EAASg/B,EAAY,CACtC,IAAItgC,EAAS,CACT,KAAM,SACN,IAAAu9B,CACZ,EACQ,OAAIj8B,IAAY,SAAcA,EAAQ,YAAc,QAAaA,EAAQ,iBAAmB,UACxFtB,EAAO,QAAUsB,GAEjBg/B,IAAe,SACftgC,EAAO,aAAesgC,GAEnBtgC,CACV,CACD2gC,EAAW,OAAS/D,EACpB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO45B,GAAaA,EAAU,OAAS,UAAYC,EAAG,OAAOD,EAAU,GAAG,IAAMA,EAAU,UAAY,SAChGA,EAAU,QAAQ,YAAc,QAAaC,EAAG,QAAQD,EAAU,QAAQ,SAAS,KAAOA,EAAU,QAAQ,iBAAmB,QAAaC,EAAG,QAAQD,EAAU,QAAQ,cAAc,MAASA,EAAU,eAAiB,QAAaqD,GAA2B,GAAGrD,EAAU,YAAY,EACrS,CACD4D,EAAW,GAAKpE,CACpB,GAAGoE,KAAeA,GAAa,CAAE,EAAC,EAC3B,IAAIC,IACV,SAAUA,EAAY,CACnB,SAAShE,EAAOiE,EAAQC,EAAQx/B,EAASg/B,EAAY,CACjD,IAAItgC,EAAS,CACT,KAAM,SACN,OAAA6gC,EACA,OAAAC,CACZ,EACQ,OAAIx/B,IAAY,SAAcA,EAAQ,YAAc,QAAaA,EAAQ,iBAAmB,UACxFtB,EAAO,QAAUsB,GAEjBg/B,IAAe,SACftgC,EAAO,aAAesgC,GAEnBtgC,CACV,CACD4gC,EAAW,OAAShE,EACpB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO45B,GAAaA,EAAU,OAAS,UAAYC,EAAG,OAAOD,EAAU,MAAM,GAAKC,EAAG,OAAOD,EAAU,MAAM,IAAMA,EAAU,UAAY,SAClIA,EAAU,QAAQ,YAAc,QAAaC,EAAG,QAAQD,EAAU,QAAQ,SAAS,KAAOA,EAAU,QAAQ,iBAAmB,QAAaC,EAAG,QAAQD,EAAU,QAAQ,cAAc,MAASA,EAAU,eAAiB,QAAaqD,GAA2B,GAAGrD,EAAU,YAAY,EACrS,CACD6D,EAAW,GAAKrE,CACpB,GAAGqE,KAAeA,GAAa,CAAE,EAAC,EAC3B,IAAIG,IACV,SAAUA,EAAY,CACnB,SAASnE,EAAOW,EAAKj8B,EAASg/B,EAAY,CACtC,IAAItgC,EAAS,CACT,KAAM,SACN,IAAAu9B,CACZ,EACQ,OAAIj8B,IAAY,SAAcA,EAAQ,YAAc,QAAaA,EAAQ,oBAAsB,UAC3FtB,EAAO,QAAUsB,GAEjBg/B,IAAe,SACftgC,EAAO,aAAesgC,GAEnBtgC,CACV,CACD+gC,EAAW,OAASnE,EACpB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO45B,GAAaA,EAAU,OAAS,UAAYC,EAAG,OAAOD,EAAU,GAAG,IAAMA,EAAU,UAAY,SAChGA,EAAU,QAAQ,YAAc,QAAaC,EAAG,QAAQD,EAAU,QAAQ,SAAS,KAAOA,EAAU,QAAQ,oBAAsB,QAAaC,EAAG,QAAQD,EAAU,QAAQ,iBAAiB,MAASA,EAAU,eAAiB,QAAaqD,GAA2B,GAAGrD,EAAU,YAAY,EAC3S,CACDgE,EAAW,GAAKxE,CACpB,GAAGwE,KAAeA,GAAa,CAAE,EAAC,EAC3B,IAAIC,IACV,SAAUA,EAAe,CACtB,SAASzE,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO45B,IACFA,EAAU,UAAY,QAAaA,EAAU,kBAAoB,UACjEA,EAAU,kBAAoB,QAAaA,EAAU,gBAAgB,MAAOkE,GACrEjE,EAAG,OAAOiE,EAAO,IAAI,EACdN,GAAW,GAAGM,CAAM,GAAKL,GAAW,GAAGK,CAAM,GAAKF,GAAW,GAAGE,CAAM,EAGtEV,GAAiB,GAAGU,CAAM,CAExC,EACR,CACDD,EAAc,GAAKzE,CACvB,GAAGyE,KAAkBA,GAAgB,CAAE,EAAC,EAuSjC,IAAIE,IACV,SAAUA,EAAwB,CAK/B,SAAStE,EAAOW,EAAK,CACjB,MAAO,CAAE,IAAAA,CAAG,CACf,CACD2D,EAAuB,OAAStE,EAIhC,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKC,EAAG,OAAOD,EAAU,GAAG,CAC1D,CACDmE,EAAuB,GAAK3E,CAChC,GAAG2E,KAA2BA,GAAyB,CAAE,EAAC,EAKnD,IAAIC,IACV,SAAUA,EAAiC,CAMxC,SAASvE,EAAOW,EAAK6D,EAAS,CAC1B,MAAO,CAAE,IAAA7D,EAAK,QAAA6D,EACjB,CACDD,EAAgC,OAASvE,EAIzC,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKC,EAAG,OAAOD,EAAU,GAAG,GAAKC,EAAG,QAAQD,EAAU,OAAO,CAC3F,CACDoE,EAAgC,GAAK5E,CACzC,GAAG4E,KAAoCA,GAAkC,CAAE,EAAC,EAKrE,IAAIT,IACV,SAAUA,EAAyC,CAMhD,SAAS9D,EAAOW,EAAK6D,EAAS,CAC1B,MAAO,CAAE,IAAA7D,EAAK,QAAA6D,EACjB,CACDV,EAAwC,OAAS9D,EAIjD,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKC,EAAG,OAAOD,EAAU,GAAG,IAAMA,EAAU,UAAY,MAAQC,EAAG,QAAQD,EAAU,OAAO,EAC1H,CACD2D,EAAwC,GAAKnE,CACjD,GAAGmE,KAA4CA,GAA0C,CAAE,EAAC,EAKrF,IAAIW,IACV,SAAUA,EAAkB,CAQzB,SAASzE,EAAOW,EAAK+D,EAAYF,EAASnQ,EAAM,CAC5C,MAAO,CAAE,IAAAsM,EAAK,WAAA+D,EAAY,QAAAF,EAAS,KAAAnQ,CAAI,CAC1C,CACDoQ,EAAiB,OAASzE,EAI1B,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKC,EAAG,OAAOD,EAAU,GAAG,GAAKC,EAAG,OAAOD,EAAU,UAAU,GAAKC,EAAG,QAAQD,EAAU,OAAO,GAAKC,EAAG,OAAOD,EAAU,IAAI,CAC3J,CACDsE,EAAiB,GAAK9E,CAC1B,GAAG8E,KAAqBA,GAAmB,CAAE,EAAC,EAQvC,IAAIE,IACV,SAAUA,EAAY,CAInBA,EAAW,UAAY,YAIvBA,EAAW,SAAW,WAItB,SAAShF,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO45B,IAAcwE,EAAW,WAAaxE,IAAcwE,EAAW,QACzE,CACDA,EAAW,GAAKhF,CACpB,GAAGgF,KAAeA,GAAa,CAAE,EAAC,EAC3B,IAAIC,IACV,SAAUA,EAAe,CAItB,SAASjF,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAc75B,CAAK,GAAKo+B,GAAW,GAAGxE,EAAU,IAAI,GAAKC,EAAG,OAAOD,EAAU,KAAK,CAC/F,CACDyE,EAAc,GAAKjF,CACvB,GAAGiF,KAAkBA,GAAgB,CAAE,EAAC,EAIjC,IAAIC,IACV,SAAUA,EAAoB,CAC3BA,EAAmB,KAAO,EAC1BA,EAAmB,OAAS,EAC5BA,EAAmB,SAAW,EAC9BA,EAAmB,YAAc,EACjCA,EAAmB,MAAQ,EAC3BA,EAAmB,SAAW,EAC9BA,EAAmB,MAAQ,EAC3BA,EAAmB,UAAY,EAC/BA,EAAmB,OAAS,EAC5BA,EAAmB,SAAW,GAC9BA,EAAmB,KAAO,GAC1BA,EAAmB,MAAQ,GAC3BA,EAAmB,KAAO,GAC1BA,EAAmB,QAAU,GAC7BA,EAAmB,QAAU,GAC7BA,EAAmB,MAAQ,GAC3BA,EAAmB,KAAO,GAC1BA,EAAmB,UAAY,GAC/BA,EAAmB,OAAS,GAC5BA,EAAmB,WAAa,GAChCA,EAAmB,SAAW,GAC9BA,EAAmB,OAAS,GAC5BA,EAAmB,MAAQ,GAC3BA,EAAmB,SAAW,GAC9BA,EAAmB,cAAgB,EACvC,GAAGA,KAAuBA,GAAqB,CAAE,EAAC,EAK3C,IAAIC,IACV,SAAUA,EAAkB,CAIzBA,EAAiB,UAAY,EAW7BA,EAAiB,QAAU,CAC/B,GAAGA,KAAqBA,GAAmB,CAAE,EAAC,EAOvC,IAAIC,IACV,SAAUA,EAAmB,CAI1BA,EAAkB,WAAa,CACnC,GAAGA,KAAsBA,GAAoB,CAAE,EAAC,EAMzC,IAAIC,IACV,SAAUA,EAAmB,CAI1B,SAAShF,EAAOmD,EAASC,EAAQF,EAAS,CACtC,MAAO,CAAE,QAAAC,EAAS,OAAAC,EAAQ,QAAAF,EAC7B,CACD8B,EAAkB,OAAShF,EAI3B,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO45B,GAAaC,EAAG,OAAOD,EAAU,OAAO,GAAKE,GAAM,GAAGF,EAAU,MAAM,GAAKE,GAAM,GAAGF,EAAU,OAAO,CAC/G,CACD6E,EAAkB,GAAKrF,CAC3B,GAAGqF,KAAsBA,GAAoB,CAAE,EAAC,EAOzC,IAAIC,IACV,SAAUA,EAAgB,CAQvBA,EAAe,KAAO,EAUtBA,EAAe,kBAAoB,CACvC,GAAGA,KAAmBA,GAAiB,CAAE,EAAC,EACnC,IAAIC,IACV,SAAUA,EAA4B,CACnC,SAASvF,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO45B,IAAcC,EAAG,OAAOD,EAAU,MAAM,GAAKA,EAAU,SAAW,UACpEC,EAAG,OAAOD,EAAU,WAAW,GAAKA,EAAU,cAAgB,OACtE,CACD+E,EAA2B,GAAKvF,CACpC,GAAGuF,KAA+BA,GAA6B,CAAE,EAAC,EAK3D,IAAIC,IACV,SAAUA,EAAgB,CAKvB,SAASnF,EAAO0B,EAAO,CACnB,MAAO,CAAE,MAAAA,CAAK,CACjB,CACDyD,EAAe,OAASnF,CAC5B,GAAGmF,KAAmBA,GAAiB,CAAE,EAAC,EAKnC,IAAIC,IACV,SAAUA,EAAgB,CAOvB,SAASpF,EAAOjR,EAAOsW,EAAc,CACjC,MAAO,CAAE,MAAOtW,GAAgB,CAAE,EAAE,aAAc,CAAC,CAACsW,EACvD,CACDD,EAAe,OAASpF,CAC5B,GAAGoF,KAAmBA,GAAiB,CAAE,EAAC,EACnC,IAAIE,IACV,SAAUA,EAAc,CAMrB,SAASC,EAAcC,EAAW,CAC9B,OAAOA,EAAU,QAAQ,wBAAyB,MAAM,CAC3D,CACDF,EAAa,cAAgBC,EAI7B,SAAS5F,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,OAAOD,CAAS,GAAMC,EAAG,cAAcD,CAAS,GAAKC,EAAG,OAAOD,EAAU,QAAQ,GAAKC,EAAG,OAAOD,EAAU,KAAK,CAC5H,CACDmF,EAAa,GAAK3F,CACtB,GAAG2F,KAAiBA,GAAe,CAAE,EAAC,EAC/B,IAAIG,IACV,SAAUA,EAAO,CAId,SAAS9F,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,MAAO,CAAC,CAAC45B,GAAaC,EAAG,cAAcD,CAAS,IAAMyE,GAAc,GAAGzE,EAAU,QAAQ,GACrFmF,GAAa,GAAGnF,EAAU,QAAQ,GAClCC,EAAG,WAAWD,EAAU,SAAUmF,GAAa,EAAE,KAAO/+B,EAAM,QAAU,QAAa85B,GAAM,GAAG95B,EAAM,KAAK,EAChH,CACDk/B,EAAM,GAAK9F,CACf,GAAG8F,KAAUA,GAAQ,CAAE,EAAC,EAKjB,IAAIC,IACV,SAAUA,EAAsB,CAO7B,SAAS1F,EAAO0B,EAAOiE,EAAe,CAClC,OAAOA,EAAgB,CAAE,MAAAjE,EAAO,cAAAiE,CAAa,EAAK,CAAE,MAAAjE,CAAK,CAC5D,CACDgE,EAAqB,OAAS1F,CAClC,GAAG0F,KAAyBA,GAAuB,CAAE,EAAC,EAK/C,IAAIE,IACV,SAAUA,EAAsB,CAC7B,SAAS5F,EAAO0B,EAAOiE,KAAkBE,EAAY,CACjD,IAAIziC,EAAS,CAAE,MAAAs+B,GACf,OAAItB,EAAG,QAAQuF,CAAa,IACxBviC,EAAO,cAAgBuiC,GAEvBvF,EAAG,QAAQyF,CAAU,EACrBziC,EAAO,WAAayiC,EAGpBziC,EAAO,WAAa,GAEjBA,CACV,CACDwiC,EAAqB,OAAS5F,CAClC,GAAG4F,KAAyBA,GAAuB,CAAE,EAAC,EAI/C,IAAIE,IACV,SAAUA,EAAuB,CAI9BA,EAAsB,KAAO,EAI7BA,EAAsB,KAAO,EAI7BA,EAAsB,MAAQ,CAClC,GAAGA,KAA0BA,GAAwB,CAAE,EAAC,EAKjD,IAAIC,IACV,SAAUA,EAAmB,CAM1B,SAAS/F,EAAOY,EAAOwB,EAAM,CACzB,IAAIh/B,EAAS,CAAE,MAAAw9B,GACf,OAAIR,EAAG,OAAOgC,CAAI,IACdh/B,EAAO,KAAOg/B,GAEXh/B,CACV,CACD2iC,EAAkB,OAAS/F,CAC/B,GAAG+F,KAAsBA,GAAoB,CAAE,EAAC,EAIzC,IAAIC,IACV,SAAUA,EAAY,CACnBA,EAAW,KAAO,EAClBA,EAAW,OAAS,EACpBA,EAAW,UAAY,EACvBA,EAAW,QAAU,EACrBA,EAAW,MAAQ,EACnBA,EAAW,OAAS,EACpBA,EAAW,SAAW,EACtBA,EAAW,MAAQ,EACnBA,EAAW,YAAc,EACzBA,EAAW,KAAO,GAClBA,EAAW,UAAY,GACvBA,EAAW,SAAW,GACtBA,EAAW,SAAW,GACtBA,EAAW,SAAW,GACtBA,EAAW,OAAS,GACpBA,EAAW,OAAS,GACpBA,EAAW,QAAU,GACrBA,EAAW,MAAQ,GACnBA,EAAW,OAAS,GACpBA,EAAW,IAAM,GACjBA,EAAW,KAAO,GAClBA,EAAW,WAAa,GACxBA,EAAW,OAAS,GACpBA,EAAW,MAAQ,GACnBA,EAAW,SAAW,GACtBA,EAAW,cAAgB,EAC/B,GAAGA,KAAeA,GAAa,CAAE,EAAC,EAM3B,IAAIC,IACV,SAAUA,EAAW,CAIlBA,EAAU,WAAa,CAC3B,GAAGA,KAAcA,GAAY,CAAE,EAAC,EACzB,IAAIC,IACV,SAAUA,EAAmB,CAU1B,SAASlG,EAAOj5B,EAAMq7B,EAAMxB,EAAOD,EAAKwF,EAAe,CACnD,IAAI/iC,EAAS,CACT,KAAA2D,EACA,KAAAq7B,EACA,SAAU,CAAE,IAAAzB,EAAK,MAAAC,CAAO,CACpC,EACQ,OAAIuF,IACA/iC,EAAO,cAAgB+iC,GAEpB/iC,CACV,CACD8iC,EAAkB,OAASlG,CAC/B,GAAGkG,KAAsBA,GAAoB,CAAE,EAAC,EACzC,IAAIE,IACV,SAAUA,EAAiB,CAUxB,SAASpG,EAAOj5B,EAAMq7B,EAAMzB,EAAKC,EAAO,CACpC,OAAOA,IAAU,OACX,CAAE,KAAA75B,EAAM,KAAAq7B,EAAM,SAAU,CAAE,IAAAzB,EAAK,MAAAC,CAAK,CAAI,EACxC,CAAE,KAAA75B,EAAM,KAAAq7B,EAAM,SAAU,CAAE,IAAAzB,CAAK,CAAA,CACxC,CACDyF,EAAgB,OAASpG,CAC7B,GAAGoG,KAAoBA,GAAkB,CAAE,EAAC,EACrC,IAAIC,IACV,SAAUA,EAAgB,CAWvB,SAASrG,EAAOj5B,EAAMu/B,EAAQlE,EAAMxB,EAAO2F,EAAgBjW,EAAU,CACjE,IAAIltB,EAAS,CACT,KAAA2D,EACA,OAAAu/B,EACA,KAAAlE,EACA,MAAAxB,EACA,eAAA2F,CACZ,EACQ,OAAIjW,IAAa,SACbltB,EAAO,SAAWktB,GAEfltB,CACV,CACDijC,EAAe,OAASrG,EAIxB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO45B,GACHC,EAAG,OAAOD,EAAU,IAAI,GAAKC,EAAG,OAAOD,EAAU,IAAI,GACrDE,GAAM,GAAGF,EAAU,KAAK,GAAKE,GAAM,GAAGF,EAAU,cAAc,IAC7DA,EAAU,SAAW,QAAaC,EAAG,OAAOD,EAAU,MAAM,KAC5DA,EAAU,aAAe,QAAaC,EAAG,QAAQD,EAAU,UAAU,KACrEA,EAAU,WAAa,QAAa,MAAM,QAAQA,EAAU,QAAQ,KACpEA,EAAU,OAAS,QAAa,MAAM,QAAQA,EAAU,IAAI,EACpE,CACDkG,EAAe,GAAK1G,CACxB,GAAG0G,KAAmBA,GAAiB,CAAE,EAAC,EAInC,IAAIG,IACV,SAAUA,EAAgB,CAIvBA,EAAe,MAAQ,GAIvBA,EAAe,SAAW,WAI1BA,EAAe,SAAW,WAY1BA,EAAe,gBAAkB,mBAWjCA,EAAe,eAAiB,kBAahCA,EAAe,gBAAkB,mBAMjCA,EAAe,OAAS,SAIxBA,EAAe,sBAAwB,yBASvCA,EAAe,aAAe,eAClC,GAAGA,KAAmBA,GAAiB,CAAE,EAAC,EAMnC,IAAIC,IACV,SAAUA,EAAuB,CAI9BA,EAAsB,QAAU,EAOhCA,EAAsB,UAAY,CACtC,GAAGA,KAA0BA,GAAwB,CAAE,EAAC,EAKjD,IAAIC,IACV,SAAUA,EAAmB,CAI1B,SAAS1G,EAAO2G,EAAaC,EAAMC,EAAa,CAC5C,IAAIzjC,EAAS,CAAE,YAAAujC,GACf,OAA0BC,GAAS,OAC/BxjC,EAAO,KAAOwjC,GAEeC,GAAgB,OAC7CzjC,EAAO,YAAcyjC,GAElBzjC,CACV,CACDsjC,EAAkB,OAAS1G,EAI3B,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKC,EAAG,WAAWD,EAAU,YAAawC,GAAW,EAAE,IAC1ExC,EAAU,OAAS,QAAaC,EAAG,WAAWD,EAAU,KAAMC,EAAG,MAAM,KACvED,EAAU,cAAgB,QAAaA,EAAU,cAAgBsG,GAAsB,SAAWtG,EAAU,cAAgBsG,GAAsB,UAC7J,CACDC,EAAkB,GAAK/G,CAC3B,GAAG+G,KAAsBA,GAAoB,CAAE,EAAC,EACzC,IAAII,IACV,SAAUA,EAAY,CACnB,SAAS9G,EAAOgD,EAAO+D,EAAqB3E,EAAM,CAC9C,IAAIh/B,EAAS,CAAE,MAAA4/B,GACXgE,EAAY,GAChB,OAAI,OAAOD,GAAwB,UAC/BC,EAAY,GACZ5jC,EAAO,KAAO2jC,GAEThE,GAAQ,GAAGgE,CAAmB,EACnC3jC,EAAO,QAAU2jC,EAGjB3jC,EAAO,KAAO2jC,EAEdC,GAAa5E,IAAS,SACtBh/B,EAAO,KAAOg/B,GAEXh/B,CACV,CACD0jC,EAAW,OAAS9G,EACpB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO45B,GAAaC,EAAG,OAAOD,EAAU,KAAK,IACxCA,EAAU,cAAgB,QAAaC,EAAG,WAAWD,EAAU,YAAawC,GAAW,EAAE,KACzFxC,EAAU,OAAS,QAAaC,EAAG,OAAOD,EAAU,IAAI,KACxDA,EAAU,OAAS,QAAaA,EAAU,UAAY,UACtDA,EAAU,UAAY,QAAa4C,GAAQ,GAAG5C,EAAU,OAAO,KAC/DA,EAAU,cAAgB,QAAaC,EAAG,QAAQD,EAAU,WAAW,KACvEA,EAAU,OAAS,QAAaiE,GAAc,GAAGjE,EAAU,IAAI,EACvE,CACD2G,EAAW,GAAKnH,CACpB,GAAGmH,KAAeA,GAAa,CAAE,EAAC,EAK3B,IAAIG,IACV,SAAUA,EAAU,CAIjB,SAASjH,EAAOY,EAAOjO,EAAM,CACzB,IAAIvvB,EAAS,CAAE,MAAAw9B,GACf,OAAIR,EAAG,QAAQzN,CAAI,IACfvvB,EAAO,KAAOuvB,GAEXvvB,CACV,CACD6jC,EAAS,OAASjH,EAIlB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKE,GAAM,GAAGF,EAAU,KAAK,IAAMC,EAAG,UAAUD,EAAU,OAAO,GAAK4C,GAAQ,GAAG5C,EAAU,OAAO,EAChI,CACD8G,EAAS,GAAKtH,CAClB,GAAGsH,KAAaA,GAAW,CAAE,EAAC,EAKvB,IAAIC,IACV,SAAUA,EAAmB,CAI1B,SAASlH,EAAOmH,EAASC,EAAc,CACnC,MAAO,CAAE,QAAAD,EAAS,aAAAC,EACrB,CACDF,EAAkB,OAASlH,EAI3B,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKC,EAAG,SAASD,EAAU,OAAO,GAAKC,EAAG,QAAQD,EAAU,YAAY,CACtG,CACD+G,EAAkB,GAAKvH,CAC3B,GAAGuH,KAAsBA,GAAoB,CAAE,EAAC,EAKzC,IAAIG,IACV,SAAUA,EAAc,CAIrB,SAASrH,EAAOY,EAAO9K,EAAQnD,EAAM,CACjC,MAAO,CAAE,MAAAiO,EAAO,OAAA9K,EAAQ,KAAAnD,EAC3B,CACD0U,EAAa,OAASrH,EAItB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,QAAQD,CAAS,GAAKE,GAAM,GAAGF,EAAU,KAAK,IAAMC,EAAG,UAAUD,EAAU,MAAM,GAAKC,EAAG,OAAOD,EAAU,MAAM,EAC7H,CACDkH,EAAa,GAAK1H,CACtB,GAAG0H,KAAiBA,GAAe,CAAE,EAAC,EAK/B,IAAIC,IACV,SAAUA,EAAgB,CAMvB,SAAStH,EAAOY,EAAO7kB,EAAQ,CAC3B,MAAO,CAAE,MAAA6kB,EAAO,OAAA7kB,EACnB,CACDurB,EAAe,OAAStH,EACxB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,OAAO65B,EAAG,cAAcD,CAAS,GAAKE,GAAM,GAAGF,EAAU,KAAK,IAAMA,EAAU,SAAW,QAAamH,EAAe,GAAGnH,EAAU,MAAM,EAC3I,CACDmH,EAAe,GAAK3H,CACxB,GAAG2H,KAAmBA,GAAiB,CAAE,EAAC,EAQnC,IAAIC,IACV,SAAUA,EAAoB,CAC3BA,EAAmB,UAAe,YAKlCA,EAAmB,KAAU,OAC7BA,EAAmB,MAAW,QAC9BA,EAAmB,KAAU,OAC7BA,EAAmB,UAAe,YAClCA,EAAmB,OAAY,SAC/BA,EAAmB,cAAmB,gBACtCA,EAAmB,UAAe,YAClCA,EAAmB,SAAc,WACjCA,EAAmB,SAAc,WACjCA,EAAmB,WAAgB,aACnCA,EAAmB,MAAW,QAC9BA,EAAmB,SAAc,WACjCA,EAAmB,OAAY,SAC/BA,EAAmB,MAAW,QAC9BA,EAAmB,QAAa,UAChCA,EAAmB,SAAc,WACjCA,EAAmB,QAAa,UAChCA,EAAmB,OAAY,SAC/BA,EAAmB,OAAY,SAC/BA,EAAmB,OAAY,SAC/BA,EAAmB,SAAc,WAIjCA,EAAmB,UAAe,WACtC,GAAGA,KAAuBA,GAAqB,CAAE,EAAC,EAQ3C,IAAIC,IACV,SAAUA,EAAwB,CAC/BA,EAAuB,YAAiB,cACxCA,EAAuB,WAAgB,aACvCA,EAAuB,SAAc,WACrCA,EAAuB,OAAY,SACnCA,EAAuB,WAAgB,aACvCA,EAAuB,SAAc,WACrCA,EAAuB,MAAW,QAClCA,EAAuB,aAAkB,eACzCA,EAAuB,cAAmB,gBAC1CA,EAAuB,eAAoB,gBAC/C,GAAGA,KAA2BA,GAAyB,CAAE,EAAC,EAInD,IAAIC,IACV,SAAUA,EAAgB,CACvB,SAAS9H,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,IAAMA,EAAU,WAAa,QAAa,OAAOA,EAAU,UAAa,WACrG,MAAM,QAAQA,EAAU,IAAI,IAAMA,EAAU,KAAK,SAAW,GAAK,OAAOA,EAAU,KAAK,CAAC,GAAM,SACrG,CACDsH,EAAe,GAAK9H,CACxB,GAAG8H,KAAmBA,GAAiB,CAAE,EAAC,EAMnC,IAAIC,IACV,SAAUA,EAAiB,CAIxB,SAAS1H,EAAOY,EAAOvM,EAAM,CACzB,MAAO,CAAE,MAAAuM,EAAO,KAAAvM,EACnB,CACDqT,EAAgB,OAAS1H,EACzB,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAkC45B,GAAc,MAAQE,GAAM,GAAGF,EAAU,KAAK,GAAKC,EAAG,OAAOD,EAAU,IAAI,CAChH,CACDuH,EAAgB,GAAK/H,CACzB,GAAG+H,KAAoBA,GAAkB,CAAE,EAAC,EAMrC,IAAIC,IACV,SAAUA,EAA2B,CAIlC,SAAS3H,EAAOY,EAAO5iB,EAAc4pB,EAAqB,CACtD,MAAO,CAAE,MAAAhH,EAAO,aAAA5iB,EAAc,oBAAA4pB,EACjC,CACDD,EAA0B,OAAS3H,EACnC,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAkC45B,GAAc,MAAQE,GAAM,GAAGF,EAAU,KAAK,GAAKC,EAAG,QAAQD,EAAU,mBAAmB,IACrHC,EAAG,OAAOD,EAAU,YAAY,GAAKA,EAAU,eAAiB,OAC3E,CACDwH,EAA0B,GAAKhI,CACnC,GAAGgI,KAA8BA,GAA4B,CAAE,EAAC,EAMzD,IAAIE,IACV,SAAUA,EAAkC,CAIzC,SAAS7H,EAAOY,EAAOkH,EAAY,CAC/B,MAAO,CAAE,MAAAlH,EAAO,WAAAkH,EACnB,CACDD,EAAiC,OAAS7H,EAC1C,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAkC45B,GAAc,MAAQE,GAAM,GAAGF,EAAU,KAAK,IACxEC,EAAG,OAAOD,EAAU,UAAU,GAAKA,EAAU,aAAe,OACvE,CACD0H,EAAiC,GAAKlI,CAC1C,GAAGkI,KAAqCA,GAAmC,CAAE,EAAC,EAOvE,IAAIE,IACV,SAAUA,EAAoB,CAI3B,SAAS/H,EAAOgI,EAASC,EAAiB,CACtC,MAAO,CAAE,QAAAD,EAAS,gBAAAC,EACrB,CACDF,EAAmB,OAAS/H,EAI5B,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,QAAQD,CAAS,GAAKE,GAAM,GAAG95B,EAAM,eAAe,CACjE,CACDwhC,EAAmB,GAAKpI,CAC5B,GAAGoI,KAAuBA,GAAqB,CAAE,EAAC,EAM3C,IAAIG,IACV,SAAUA,EAAe,CAItBA,EAAc,KAAO,EAIrBA,EAAc,UAAY,EAC1B,SAASvI,EAAGp5B,EAAO,CACf,OAAOA,IAAU,GAAKA,IAAU,CACnC,CACD2hC,EAAc,GAAKvI,CACvB,GAAGuI,KAAkBA,GAAgB,CAAE,EAAC,EACjC,IAAIC,IACV,SAAUA,EAAoB,CAC3B,SAASnI,EAAOz5B,EAAO,CACnB,MAAO,CAAE,MAAAA,CAAK,CACjB,CACD4hC,EAAmB,OAASnI,EAC5B,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,IACzBA,EAAU,UAAY,QAAaC,EAAG,OAAOD,EAAU,OAAO,GAAKyE,GAAc,GAAGzE,EAAU,OAAO,KACrGA,EAAU,WAAa,QAAaO,GAAS,GAAGP,EAAU,QAAQ,KAClEA,EAAU,UAAY,QAAa4C,GAAQ,GAAG5C,EAAU,OAAO,EAC1E,CACDgI,EAAmB,GAAKxI,CAC5B,GAAGwI,KAAuBA,GAAqB,CAAE,EAAC,EAC3C,IAAIC,IACV,SAAUA,EAAW,CAClB,SAASpI,EAAO7I,EAAUuK,EAAOU,EAAM,CACnC,MAAMh/B,EAAS,CAAE,SAAA+zB,EAAU,MAAAuK,GAC3B,OAAIU,IAAS,SACTh/B,EAAO,KAAOg/B,GAEXh/B,CACV,CACDglC,EAAU,OAASpI,EACnB,SAASL,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,GAAKJ,GAAS,GAAGI,EAAU,QAAQ,IAC5DC,EAAG,OAAOD,EAAU,KAAK,GAAKC,EAAG,WAAWD,EAAU,MAAOgI,GAAmB,EAAE,KAClFhI,EAAU,OAAS,QAAa+H,GAAc,GAAG/H,EAAU,IAAI,IAC/DA,EAAU,YAAc,QAAcC,EAAG,WAAWD,EAAU,UAAW0B,GAAS,EAAE,IACpF1B,EAAU,UAAY,QAAaC,EAAG,OAAOD,EAAU,OAAO,GAAKyE,GAAc,GAAGzE,EAAU,OAAO,KACrGA,EAAU,cAAgB,QAAaC,EAAG,QAAQD,EAAU,WAAW,KACvEA,EAAU,eAAiB,QAAaC,EAAG,QAAQD,EAAU,YAAY,EACpF,CACDiI,EAAU,GAAKzI,CACnB,GAAGyI,KAAcA,GAAY,CAAE,EAAC,EACzB,IAAIC,IACV,SAAUA,EAAa,CACpB,SAASC,EAAc/hC,EAAO,CAC1B,MAAO,CAAE,KAAM,UAAW,MAAAA,EAC7B,CACD8hC,EAAY,cAAgBC,CAChC,GAAGD,KAAgBA,GAAc,CAAE,EAAC,EAC7B,IAAIE,IACV,SAAUA,EAAsB,CAC7B,SAASvI,EAAOwI,EAAY9T,EAAYkM,EAAOqC,EAAS,CACpD,MAAO,CAAE,WAAAuF,EAAY,WAAA9T,EAAY,MAAAkM,EAAO,QAAAqC,CAAO,CAClD,CACDsF,EAAqB,OAASvI,CAClC,GAAGuI,KAAyBA,GAAuB,CAAE,EAAC,EAC/C,IAAIE,IACV,SAAUA,EAAsB,CAC7B,SAASzI,EAAOjR,EAAO,CACnB,MAAO,CAAE,MAAAA,CAAK,CACjB,CACD0Z,EAAqB,OAASzI,CAClC,GAAGyI,KAAyBA,GAAuB,CAAE,EAAC,EAO/C,IAAIC,IACV,SAAUA,EAA6B,CAIpCA,EAA4B,QAAU,EAItCA,EAA4B,UAAY,CAC5C,GAAGA,KAAgCA,GAA8B,CAAE,EAAC,EAC7D,IAAIC,IACV,SAAUA,EAAwB,CAC/B,SAAS3I,EAAOY,EAAOvM,EAAM,CACzB,MAAO,CAAE,MAAAuM,EAAO,KAAAvM,EACnB,CACDsU,EAAuB,OAAS3I,CACpC,GAAG2I,KAA2BA,GAAyB,CAAE,EAAC,EACnD,IAAIC,IACV,SAAUA,EAAyB,CAChC,SAAS5I,EAAO6G,EAAagC,EAAwB,CACjD,MAAO,CAAE,YAAAhC,EAAa,uBAAAgC,EACzB,CACDD,EAAwB,OAAS5I,CACrC,GAAG4I,KAA4BA,GAA0B,CAAE,EAAC,EACrD,IAAIE,IACV,SAAUA,EAAiB,CACxB,SAASnJ,EAAGp5B,EAAO,CACf,MAAM45B,EAAY55B,EAClB,OAAO65B,EAAG,cAAcD,CAAS,GAAKP,GAAI,GAAGO,EAAU,GAAG,GAAKC,EAAG,OAAOD,EAAU,IAAI,CAC1F,CACD2I,EAAgB,GAAKnJ,CACzB,GAAGmJ,KAAoBA,GAAkB,CAAE,EAAC,EAKrC,IAAIC,IACV,SAAUA,EAAc,CAQrB,SAAS/I,EAAOW,EAAK+D,EAAYF,EAASwE,EAAS,CAC/C,OAAO,IAAIC,GAAiBtI,EAAK+D,EAAYF,EAASwE,CAAO,CAChE,CACDD,EAAa,OAAS/I,EAItB,SAASL,EAAGp5B,EAAO,CACf,IAAI45B,EAAY55B,EAChB,MAAO,GAAA65B,EAAG,QAAQD,CAAS,GAAKC,EAAG,OAAOD,EAAU,GAAG,IAAMC,EAAG,UAAUD,EAAU,UAAU,GAAKC,EAAG,OAAOD,EAAU,UAAU,IAAMC,EAAG,SAASD,EAAU,SAAS,GAC/JC,EAAG,KAAKD,EAAU,OAAO,GAAKC,EAAG,KAAKD,EAAU,UAAU,GAAKC,EAAG,KAAKD,EAAU,QAAQ,EACnG,CACD4I,EAAa,GAAKpJ,EAClB,SAASuJ,EAAWjjB,EAAU4d,EAAO,CACjC,IAAIxP,EAAOpO,EAAS,UAChBkjB,EAAcC,EAAUvF,EAAO,CAAC5+B,EAAGC,IAAM,CACzC,IAAImkC,EAAOpkC,EAAE,MAAM,MAAM,KAAOC,EAAE,MAAM,MAAM,KAC9C,OAAImkC,IAAS,EACFpkC,EAAE,MAAM,MAAM,UAAYC,EAAE,MAAM,MAAM,UAE5CmkC,CACnB,CAAS,EACGC,EAAqBjV,EAAK,OAC9B,QAAS1uB,EAAIwjC,EAAY,OAAS,EAAGxjC,GAAK,EAAGA,IAAK,CAC9C,IAAIqkB,EAAImf,EAAYxjC,CAAC,EACjB4jC,EAActjB,EAAS,SAAS+D,EAAE,MAAM,KAAK,EAC7Cwf,EAAYvjB,EAAS,SAAS+D,EAAE,MAAM,GAAG,EAC7C,GAAIwf,GAAaF,EACbjV,EAAOA,EAAK,UAAU,EAAGkV,CAAW,EAAIvf,EAAE,QAAUqK,EAAK,UAAUmV,EAAWnV,EAAK,MAAM,MAGzF,OAAM,IAAI,MAAM,kBAAkB,EAEtCiV,EAAqBC,CACxB,CACD,OAAOlV,CACV,CACD0U,EAAa,WAAaG,EAC1B,SAASE,EAAUzW,EAAM8W,EAAS,CAC9B,GAAI9W,EAAK,QAAU,EAEf,OAAOA,EAEX,MAAM+W,EAAK/W,EAAK,OAAS,EAAK,EACxBgX,EAAOhX,EAAK,MAAM,EAAG+W,CAAC,EACtBE,EAAQjX,EAAK,MAAM+W,CAAC,EAC1BN,EAAUO,EAAMF,CAAO,EACvBL,EAAUQ,EAAOH,CAAO,EACxB,IAAII,EAAU,EACVC,EAAW,EACXnkC,EAAI,EACR,KAAOkkC,EAAUF,EAAK,QAAUG,EAAWF,EAAM,QACnCH,EAAQE,EAAKE,CAAO,EAAGD,EAAME,CAAQ,CAAC,GACrC,EAEPnX,EAAKhtB,GAAG,EAAIgkC,EAAKE,GAAS,EAI1BlX,EAAKhtB,GAAG,EAAIikC,EAAME,GAAU,EAGpC,KAAOD,EAAUF,EAAK,QAClBhX,EAAKhtB,GAAG,EAAIgkC,EAAKE,GAAS,EAE9B,KAAOC,EAAWF,EAAM,QACpBjX,EAAKhtB,GAAG,EAAIikC,EAAME,GAAU,EAEhC,OAAOnX,CACV,CACL,GAAGoW,KAAiBA,GAAe,CAAE,EAAC,EAItC,MAAME,EAAiB,CACnB,YAAYtI,EAAK+D,EAAYF,EAASwE,EAAS,CAC3C,KAAK,KAAOrI,EACZ,KAAK,YAAc+D,EACnB,KAAK,SAAWF,EAChB,KAAK,SAAWwE,EAChB,KAAK,aAAe,MACvB,CACD,IAAI,KAAM,CACN,OAAO,KAAK,IACf,CACD,IAAI,YAAa,CACb,OAAO,KAAK,WACf,CACD,IAAI,SAAU,CACV,OAAO,KAAK,QACf,CACD,QAAQpI,EAAO,CACX,GAAIA,EAAO,CACP,IAAImJ,EAAQ,KAAK,SAASnJ,EAAM,KAAK,EACjCoJ,EAAM,KAAK,SAASpJ,EAAM,GAAG,EACjC,OAAO,KAAK,SAAS,UAAUmJ,EAAOC,CAAG,CAC5C,CACD,OAAO,KAAK,QACf,CACD,OAAOrW,EAAO6Q,EAAS,CACnB,KAAK,SAAW7Q,EAAM,KACtB,KAAK,SAAW6Q,EAChB,KAAK,aAAe,MACvB,CACD,gBAAiB,CACb,GAAI,KAAK,eAAiB,OAAW,CACjC,IAAIyF,EAAc,CAAA,EACd5V,EAAO,KAAK,SACZ6V,EAAc,GAClB,QAASvkC,EAAI,EAAGA,EAAI0uB,EAAK,OAAQ1uB,IAAK,CAC9BukC,IACAD,EAAY,KAAKtkC,CAAC,EAClBukC,EAAc,IAElB,IAAIC,EAAK9V,EAAK,OAAO1uB,CAAC,EACtBukC,EAAeC,IAAO,MAAQA,IAAO;AAAA,EACjCA,IAAO,MAAQxkC,EAAI,EAAI0uB,EAAK,QAAUA,EAAK,OAAO1uB,EAAI,CAAC,IAAM;AAAA,GAC7DA,GAEP,CACGukC,GAAe7V,EAAK,OAAS,GAC7B4V,EAAY,KAAK5V,EAAK,MAAM,EAEhC,KAAK,aAAe4V,CACvB,CACD,OAAO,KAAK,YACf,CACD,WAAWG,EAAQ,CACfA,EAAS,KAAK,IAAI,KAAK,IAAIA,EAAQ,KAAK,SAAS,MAAM,EAAG,CAAC,EAC3D,IAAIH,EAAc,KAAK,iBACnBI,EAAM,EAAGC,EAAOL,EAAY,OAChC,GAAIK,IAAS,EACT,OAAOvK,GAAS,OAAO,EAAGqK,CAAM,EAEpC,KAAOC,EAAMC,GAAM,CACf,IAAIC,EAAM,KAAK,OAAOF,EAAMC,GAAQ,CAAC,EACjCL,EAAYM,CAAG,EAAIH,EACnBE,EAAOC,EAGPF,EAAME,EAAM,CAEnB,CAGD,IAAItK,EAAOoK,EAAM,EACjB,OAAOtK,GAAS,OAAOE,EAAMmK,EAASH,EAAYhK,CAAI,CAAC,CAC1D,CACD,SAAS9I,EAAU,CACf,IAAI8S,EAAc,KAAK,iBACvB,GAAI9S,EAAS,MAAQ8S,EAAY,OAC7B,OAAO,KAAK,SAAS,OAEpB,GAAI9S,EAAS,KAAO,EACrB,MAAO,GAEX,IAAIqT,EAAaP,EAAY9S,EAAS,IAAI,EACtCsT,EAAkBtT,EAAS,KAAO,EAAI8S,EAAY,OAAUA,EAAY9S,EAAS,KAAO,CAAC,EAAI,KAAK,SAAS,OAC/G,OAAO,KAAK,IAAI,KAAK,IAAIqT,EAAarT,EAAS,UAAWsT,CAAc,EAAGD,CAAU,CACxF,CACD,IAAI,WAAY,CACZ,OAAO,KAAK,eAAgB,EAAC,MAChC,CACL,CACA,IAAIpK,GACH,SAAUA,EAAI,CACX,MAAMsK,EAAW,OAAO,UAAU,SAClC,SAASC,EAAQpkC,EAAO,CACpB,OAAO,OAAOA,EAAU,GAC3B,CACD65B,EAAG,QAAUuK,EACb,SAASC,EAAUrkC,EAAO,CACtB,OAAO,OAAOA,EAAU,GAC3B,CACD65B,EAAG,UAAYwK,EACf,SAASC,EAAQtkC,EAAO,CACpB,OAAOA,IAAU,IAAQA,IAAU,EACtC,CACD65B,EAAG,QAAUyK,EACb,SAASC,EAAOvkC,EAAO,CACnB,OAAOmkC,EAAS,KAAKnkC,CAAK,IAAM,iBACnC,CACD65B,EAAG,OAAS0K,EACZ,SAASC,EAAOxkC,EAAO,CACnB,OAAOmkC,EAAS,KAAKnkC,CAAK,IAAM,iBACnC,CACD65B,EAAG,OAAS2K,EACZ,SAASC,EAAYzkC,EAAO0kC,EAAKC,EAAK,CAClC,OAAOR,EAAS,KAAKnkC,CAAK,IAAM,mBAAqB0kC,GAAO1kC,GAASA,GAAS2kC,CACjF,CACD9K,EAAG,YAAc4K,EACjB,SAASnL,EAAQt5B,EAAO,CACpB,OAAOmkC,EAAS,KAAKnkC,CAAK,IAAM,mBAAqB,aAAeA,GAASA,GAAS,UACzF,CACD65B,EAAG,QAAUP,EACb,SAASC,EAASv5B,EAAO,CACrB,OAAOmkC,EAAS,KAAKnkC,CAAK,IAAM,mBAAqB,GAAKA,GAASA,GAAS,UAC/E,CACD65B,EAAG,SAAWN,EACd,SAASqL,EAAK5kC,EAAO,CACjB,OAAOmkC,EAAS,KAAKnkC,CAAK,IAAM,mBACnC,CACD65B,EAAG,KAAO+K,EACV,SAASC,EAAc7kC,EAAO,CAI1B,OAAOA,IAAU,MAAQ,OAAOA,GAAU,QAC7C,CACD65B,EAAG,cAAgBgL,EACnB,SAASC,EAAW9kC,EAAO+kC,EAAO,CAC9B,OAAO,MAAM,QAAQ/kC,CAAK,GAAKA,EAAM,MAAM+kC,CAAK,CACnD,CACDlL,EAAG,WAAaiL,CACpB,GAAGjL,IAAOA,EAAK,CAAA,EAAG,EC7qEH,MAAMmL,EAAgB,CACjC,YAAYC,EAAY,CACpB,KAAK,gBAAkB,IAAM,KAAK,OAClC,KAAK,mBAAqB,IAAM,KAAK,KACrC,KAAK,IAAM,IAAM,KAAK,YAAY,SAAW,KAAK,KAClD,KAAK,IAAM,IAAM,KAAK,OAAS,EAC/B,KAAK,KAAO,IACD,KAAK,YAAY,OAAO,KAAK,IAAI,EAClC,KAAK,YAAY,OAAO,KAAK,IAAI,EACjC,KAEV,KAAK,KAAO,IAAM,CACd,MAAMC,EAAO,KAAK,YAAY,OAAO,KAAK,IAAI,EAC9C,YAAK,OACEA,CACnB,EACQ,KAAK,IAAOC,GAAY,CAEpB,GADkB,KAAK,mBAAmBA,CAAO,EAE7C,YAAK,OAAS,KAAK,KACnB,KAAK,OACE,KAAK,YAAY,OAAO,KAAK,KAAO,CAAC,CAG5D,EACQ,KAAK,SAAYC,GAAU,CACvB,IAAIC,EAAY,KAAK,mBAAmBD,CAAK,EACzCE,EAAS,GAKb,IAJID,IACAC,EAASD,EACT,KAAK,OAAS,KAAK,MAEhBA,GACH,KAAK,OACLA,EAAY,KAAK,mBAAmBD,CAAK,EACzCE,EAAS,GAEb,OAAOA,CACnB,EACQ,KAAK,SAAW,IAAM,KAAK,SAAS,YAAY,EAChD,KAAK,UAAY,IAAM,CACnB,KAAK,KAAO,KAAK,YAAY,MACzC,EACQ,KAAK,OAAU1U,GAAa,CACxB,KAAK,KAAOA,CACxB,EACQ,KAAK,MAAQ,CAACuU,EAASI,EAAU,GAAMC,EAAW,KAAU,CACxD,IAAI1P,EAAQ,KACRsP,EAAQ,KAUZ,OATI,OAAOD,GAAY,UAEnBC,EADc,IAAI,OAAOD,EAASK,EAAW,IAAM,GAAG,EACxC,KAAK,KAAK,YAAY,OAAO,KAAK,KAAML,EAAQ,MAAM,CAAC,EACrErP,EAAQqP,GAEHA,aAAmB,SACxBC,EAAQ,KAAK,YAAY,MAAM,KAAK,IAAI,EAAE,MAAMD,CAAO,EACvDrP,EAAQsP,GAASA,EAAM,CAAC,GAExBA,GAAS,OACL,OAAOD,GAAY,UAClBC,aAAiB,OACd,KAAK,YAAY,WAAWA,EAAM,CAAC,EAAG,KAAK,IAAI,IAC/CG,IACA,KAAK,OAAS,KAAK,KACfzP,GAASA,EAAM,SACf,KAAK,MAAQA,EAAM,SAGpBsP,GAGR,EACnB,EACQ,KAAK,OAAU99B,GAAQ,CACnB,KAAK,MAAQA,CACzB,EACQ,KAAK,OAAS,IAAM,KAAK,KACzB,KAAK,YAAc,IAAM,CACrB,MAAM89B,EAAQ,KAAK,YAAY,MAAM,KAAK,EAC1C,IAAIK,EAAS,EACb,GAAIL,GAASA,EAAM,SAAW,EAAG,CAC7B,MAAMM,EAAcN,EAAM,CAAC,EAC3B,IAAIO,EAAM,EACV,KAAOD,EAAY,OAASC,GACpBD,EAAY,WAAWC,CAAG,IAAM,EAChCF,GAAU,EAGVA,IAEJE,GAEP,CACD,OAAOF,CACnB,EACQ,KAAK,QAAU,IAAM,KAAK,YAAY,MAAM,KAAK,OAAQ,KAAK,IAAI,EAClE,KAAK,OAAS,EACd,KAAK,KAAO,EACZ,KAAK,YAAcR,CACtB,CACD,mBAAmBE,EAAS,CACxB,MAAMxL,EAAY,KAAK,YAAY,OAAO,KAAK,IAAI,EACnD,IAAI0L,EAAY,GAChB,OAAI,OAAOF,GAAY,SACnBE,EAAY1L,IAAcwL,EAG1BE,EACIF,aAAmB,OACbA,EAAQ,KAAKxL,CAAS,EACtBwL,EAAQxL,CAAS,EAExB0L,CACV,CACL,CClHO,SAASO,GAAIC,EAAQ,CACxB,MAAO,CAAE,OAAAA,CAAM,CACnB,CACO,SAASlpC,EAAKkpC,EAAQC,EAAW,CACpC,MAAO,CAAE,OAAAD,EAAQ,OAAQ,GAAM,UAAAC,CAAS,CAC5C,CACO,SAASC,GAAOviB,EAAMwiB,EAAY,CACrC,MAAMC,EAAYziB,EAAK,MACvB,OAAAA,EAAK,MAAQsS,GAAS,CAClB,IAAIiP,EAAQ,GACZ,OAAIkB,IACAlB,EAAQkB,EAAUnQ,CAAK,GAEnBiP,GACJiB,EAAW,MAAME,GAAaA,EAAU,OAAS,CAACA,EAAU,MAAMpQ,CAAK,CAAC,CACpF,EACWtS,CACX,CACO,SAASiG,GAAEoS,EAAMsK,EAAO,CAC3B,MAAO,CAAE,MAAAA,EAAO,MAAQrQ,GAAUA,EAAM,OAAS+F,EACrD,CACO,SAASsH,EAAEnjC,EAAOmmC,EAAO,CAC5B,MAAO,CACH,MAAOA,GAAS,cAChB,MAAQrQ,GAAUA,EAAM,OAAS,eAAiBA,EAAM,QAAU91B,CAC1E,CACA,CCxBO,MAAMomC,GAAaxC,GAAOA,IAAO,KACpCA,IAAO,KACPA,IAAO,KACPA,IAAO;AAAA,GACPA,IAAO,MACPA,IAAO,UACPA,IAAO,IACEyC,GAAW,CACpB,KAAM,0BACN,YAAa,+CACb,OAAQ,4DACR,OAAQ,sGACR,QAAS,MACb,EACaC,GAAa,CACtB,SAAU,CAAC3pC,EAAK,YAAY,CAAC,EAC7B,WAAWm5B,EAAO,CACd,OAAQA,EAAM,MAAK,CACf,IAAK,IACD,MAAO,aACX,IAAK,QACD,MAAO,QACX,IAAK,WACD,MAAO,WACX,IAAK,eACD,MAAO,eACX,IAAK,WACD,OAAO11B,EAAK,oBAChB,IAAK,SACD,MAAO,YACX,IAAK,SACD,MAAO,YACX,IAAK,OACD,MAAO,gBACX,IAAK,YACD,MAAO,eACX,IAAK,QACD,MAAO,WACX,IAAK,OACD,MAAO,UACX,IAAK,QACD,MAAO,WACX,IAAK,SACD,MAAO,YACX,IAAK,YACD,MAAO,cACd,CACJ,EACD,WAAY,CAAC,cAAc,EAC3B,MAAO,CACHmmC,GAAK,OAAO,EACZX,GAAIplC,GAAK,KAAK,CAAC,EACfolC,GAAI,qBAAqB,EACzBjpC,EAAK,WAAW,EAChB,cACH,EACD,SAAU,CACN4pC,GAAK,UAAU,EACfX,GAAIplC,GAAK,KAAK,CAAC,EACfolC,GAAI,qBAAqB,EACzBjpC,EAAK,WAAW,EAChB,cACH,EACD,aAAc,CACV4pC,GAAK,cAAc,EACnBX,GAAIplC,GAAK,KAAK,CAAC,EACfolC,GAAI,qBAAqB,EACzBjpC,EAAK,WAAW,EAChB,cACH,EACD,oBAAqB,CAACwmC,EAAE,GAAG,EAAGxmC,EAAK,oBAAoB,EAAGwmC,EAAE,GAAG,CAAC,EAChE,mBAAoB,CAAC,WAAYA,EAAE,GAAG,EAAG,OAAQyC,GAAI,cAAc,CAAC,EACpE,SAAU,CAACzC,EAAE,IAAK,UAAU,EAAG3iC,GAAK,UAAU,CAAC,EAC/C,aAAc,CAAC2iC,EAAE,GAAG,EAAG,OAAO,EAC9B,aAAc,CAACA,EAAE,GAAG,EAAGxmC,EAAK,WAAW,EAAGwmC,EAAE,GAAG,CAAC,EAChD,UAAUrN,EAAO0Q,EAAQ,CACrB,OAAO1Q,EAAM,QAAU,MACjB0Q,EAAO,MAAM,yBAA0B,EAAK,EACxC,iBACA,iBACJA,EAAO,MAAM,gBAAiB,EAAK,EAC/B,eACA,OACb,EACD,aAAc,CACVhmC,GAAK,UAAU,EACf2iC,EAAE,GAAG,EACL3iC,GAAK,WAAW,EAChBolC,GAAI,WAAW,EACfjpC,EAAK,WAAW,EAChBipC,GAAI,cAAc,CACrB,EACD,MAAO,CACHplC,GAAK,UAAU,EACfolC,GAAI,WAAW,EACfjpC,EAAK,WAAW,EAChBipC,GAAI,cAAc,CACrB,EACD,UAAW,CAACzC,EAAE,GAAG,EAAGxmC,EAAK,UAAU,EAAGwmC,EAAE,GAAG,CAAC,EAC5C,SAAU,CAAC3iC,GAAK,WAAW,EAAG2iC,EAAE,GAAG,EAAG,OAAO,EAC7C,eAAgB,CAACA,EAAE,KAAK,EAAG3iC,GAAK,KAAK,EAAG7D,EAAK,WAAW,CAAC,EACzD,eAAgB,CACZwmC,EAAE,KAAK,EACPyC,GAAI,eAAe,EACnBjpC,EAAK,WAAW,EAChB,cACH,EACD,mBAAoB,CAChB4pC,GAAK,UAAU,EACfX,GAAIG,GAAOvlC,GAAK,KAAK,EAAG,CAAC+lC,GAAK,IAAI,CAAC,CAAC,CAAC,EACrC,gBACA5pC,EAAK,WAAW,EAChB,cACH,EACD,cAAe,CAAC4pC,GAAK,IAAI,EAAG,WAAW,EACvC,MAAMzQ,EAAO,CACT,OAAQA,EAAM,KAAI,CACd,IAAK,SACD,MAAO,cACX,IAAK,SACD,MAAO,cACX,IAAK,cACD,OAAQA,EAAM,MAAK,CACf,IAAK,IACD,MAAO,YACX,IAAK,IACD,MAAO,cACX,IAAK,IACD,MAAO,WACX,IAAK,IACD,MAAO,WACd,CACD,OAAO,KACX,IAAK,OACD,OAAQA,EAAM,MAAK,CACf,IAAK,OACL,IAAK,QACD,MAAO,cACd,CACD,OAAIA,EAAM,QAAU,OACT,YAEJ,WACd,CACJ,EACD,YAAa,CAACrM,GAAE,SAAU,QAAQ,CAAC,EACnC,YAAa,CACT,CACI,MAAO,SACP,MAAOqM,GAASA,EAAM,OAAS,SAC/B,OAAOkC,EAAOlC,EAAO,CACbA,EAAM,MAAM,WAAW,KAAK,IAC5BkC,EAAM,cAAgB,CAAClC,EAAM,MAAM,MAAM,CAAC,EAAE,SAAS,KAAK,EAEjE,CACJ,CACJ,EACD,aAAc,CAACrM,GAAE,OAAQ,SAAS,CAAC,EACnC,UAAW,CAACA,GAAE,OAAQ,SAAS,CAAC,EAChC,UAAW,CAACjpB,GAAK,UAAU,CAAC,EAC5B,UAAW,CAAC2iC,EAAE,GAAG,EAAGxmC,EAAK,OAAO,EAAGwmC,EAAE,GAAG,CAAC,EACzC,YAAa,CAACA,EAAE,GAAG,EAAGxmC,EAAK,aAAa,EAAGwmC,EAAE,GAAG,CAAC,EACjD,YAAa,CAAC3iC,GAAK,WAAW,EAAG2iC,EAAE,GAAG,EAAG,OAAO,EAChD,KAAKrN,EAAO,CACR,OAAOA,EAAM,QAAU,IAAM,WAAa,aAC7C,EACD,SAAU,CAACqN,EAAE,GAAG,EAAG,OAAQA,EAAE,GAAG,EAAGyC,GAAIzC,EAAE,GAAG,CAAC,CAAC,EAC9C,YAAa,CAAC,YAAayC,GAAIzC,EAAE,GAAG,CAAC,CAAC,EACtC,UAAW,CAACpiC,GAAK,MAAM,CAAC,EACxB,UAAW,CAACoiC,EAAE,IAAK,MAAM,EAAG3iC,GAAK,MAAM,EAAGolC,GAAI,WAAW,CAAC,EAC1D,aAAc,CACVW,GAAK,WAAW,EAChBpD,EAAE,IAAK,MAAM,EACb3iC,GAAK,MAAM,EACXolC,GAAI,cAAc,EAClBW,GAAK,IAAI,EACT5pC,EAAK,oBAAqBwmC,EAAE,GAAG,CAAC,CACnC,EACD,aAAc,CACVoD,GAAK,WAAW,EAChB/lC,GAAK,MAAM,EACXolC,GAAI,YAAY,EAChBjpC,EAAK,WAAW,EAChBwmC,EAAE,GAAG,EACLxmC,EAAK,UAAU,EACfwmC,EAAE,GAAG,CACR,EACD,WAAY,CAACoD,GAAK,YAAY,EAAG5pC,EAAK,YAAawmC,EAAE,GAAG,CAAC,CAAC,EAC1D,kBAAmB,CAAC3iC,GAAK,UAAU,CAAC,EACpC,UAAW,CACP+lC,GAAK,QAAQ,EACb5pC,EAAK,WAAW,EAChBwmC,EAAE,GAAG,EACLxmC,EAAK,kBAAkB,EACvBwmC,EAAE,GAAG,CACR,EACD,iBAAkB,CAAC3iC,GAAK,SAAS,EAAG2iC,EAAE,GAAG,EAAG3iC,GAAK,MAAM,CAAC,EACxD,UAAW,CAAC+lC,GAAK,QAAQ,EAAG/lC,GAAK,MAAM,EAAG7D,EAAK,WAAW,CAAC,EAC3D,cAAe,CACX4pC,GAAK,MAAM,EACX/lC,GAAK,MAAM,EACXolC,GAAI,YAAY,EAChBjpC,EAAK,WAAW,EAChBwmC,EAAE,GAAG,EACLxmC,EAAK,UAAU,EACfwmC,EAAE,GAAG,CACR,EACD,SAAU,CACN3iC,GAAK,UAAU,EACfolC,GAAI,cAAc,EAClBzC,EAAE,GAAG,EACL,OACAxmC,EAAK,WAAW,CACnB,EACD,aAAc,CAACwmC,EAAE,GAAG,EAAGxmC,EAAK,eAAe,EAAGwmC,EAAE,GAAG,CAAC,EACpD,cAAe,CACX3iC,GAAK,WAAW,EAChB2iC,EAAE,GAAG,EACL,OACAyC,GAAI,cAAc,EAClBjpC,EAAK,WAAW,CACnB,EACD,SAAU,CACN4pC,GAAK,OAAO,EACZ/lC,GAAK,MAAM,EACX7D,EAAK,WAAW,EAChBwmC,EAAE,GAAG,EACLxmC,EAAK,cAAewmC,EAAE,GAAG,CAAC,CAC7B,EACD,YAAa,CAAC,WAAW,EACzB,QAAS,CACLoD,GAAK,MAAM,EACX/lC,GAAK,MAAM,EACX7D,EAAK,WAAW,EAChBwmC,EAAE,GAAG,EACLxmC,EAAK,cAAc,EACnBwmC,EAAE,GAAG,CACR,EACD,aAAc,CAAC3iC,GAAK,UAAU,EAAG7D,EAAK,WAAW,CAAC,EAClD,SAAU,CACN4pC,GAAK,OAAO,EACZ/lC,GAAK,MAAM,EACX7D,EAAK,WAAW,EAChBwmC,EAAE,GAAG,EACLxmC,EAAK,eAAe,EACpBwmC,EAAE,GAAG,CACR,EACD,UAAW,CAACoD,GAAK,QAAQ,EAAG,eAAe,CAC/C,EACA,SAASA,GAAKvmC,EAAO,CACjB,MAAO,CACH,MAAO,UACP,MAAQ81B,GAAUA,EAAM,OAAS,QAAUA,EAAM,QAAU91B,CACnE,CACA,CACA,SAASQ,GAAK2lC,EAAO,CACjB,MAAO,CACH,MAAAA,EACA,MAAQrQ,GAAUA,EAAM,OAAS,OACjC,OAAOkC,EAAOlC,EAAO,CACjBkC,EAAM,KAAOlC,EAAM,KACtB,CACT,CACA,CACA,SAAS/0B,GAAKolC,EAAO,CACjB,MAAO,CACH,MAAAA,EACA,MAAQrQ,GAAUA,EAAM,OAAS,OACjC,OAAOkC,EAAOlC,EAAO,CACbkC,EAAM,WAAaA,EAAM,UAAU,YACnCA,EAAM,KAAOlC,EAAM,MACnBkC,EAAM,UAAU,UAAU,KAAOlC,EAAM,MAE9C,CACT,CACA,CCnRe,SAAS2Q,GAAatoC,EAAU,CAC3C,cAAeqoC,GAAUA,EAAO,SAASJ,EAAS,EAClD,SAAUC,GACV,WAAYC,GACZ,aAAc,CAAE,CACpB,EAAG,CACC,MAAO,CACH,YAAa,CACT,MAAMI,EAAe,CACjB,MAAO,EACP,KAAM,EACN,KAAM,KACN,KAAM,KACN,KAAM,KACN,KAAM,KACN,eAAgB,GAChB,UAAW,IAC3B,EACY,OAAAC,GAASxoC,EAAQ,WAAYuoC,EAActmC,EAAK,QAAQ,EACjDsmC,CACV,EACD,MAAMF,EAAQxO,EAAO,CACjB,OAAO4O,GAASJ,EAAQxO,EAAO75B,CAAO,CACzC,CACT,CACA,CACA,SAASyoC,GAASJ,EAAQxO,EAAO75B,EAAS,CACtC,GAAI65B,EAAM,cACN,OAAIwO,EAAO,MAAM,OAAO,GACpBxO,EAAM,cAAgB,GACf,WAGPwO,EAAO,UAAS,EACT,UAGf,KAAM,CAAE,SAAAK,EAAU,WAAAC,EAAY,cAAAC,EAAe,aAAAC,CAAY,EAAK7oC,EAQ9D,GAPI65B,EAAM,MAAQA,EAAM,KAAK,SAAW,EACpCiP,GAAQjP,CAAK,EAERA,EAAM,eACXA,EAAM,aAAe,GACrBkP,GAAYlP,EAAO,EAAI,GAEvBwO,EAAO,MAAO,CACd,MAAM5F,EAAWoG,GAAgBA,EAAa,SAAY,EAC1DhP,EAAM,YAAc,KAAK,MAAMwO,EAAO,YAAW,EAAK5F,CAAO,CAChE,CACD,GAAImG,EAAcP,CAAM,EACpB,MAAO,KAEX,MAAM1Q,EAAQqR,GAAIN,EAAUL,CAAM,EAClC,GAAI,CAAC1Q,EAED,OADyB0Q,EAAO,MAAM,KAAK,GAEvCA,EAAO,MAAM,IAAI,EAErBG,GAASS,GAAmBpP,EAAO,SAAS,EACrC,cAEX,GAAIlC,EAAM,OAAS,UACf,OAAA6Q,GAASS,GAAmBpP,EAAO,SAAS,EACrC,UAEX,MAAMqP,EAAcC,GAAO,CAAE,EAAEtP,CAAK,EACpC,GAAIlC,EAAM,OAAS,eACf,GAAI,SAAS,KAAKA,EAAM,KAAK,EACrBkC,EAAM,cAAgB,SACtBA,EAAM,QAAUA,EAAM,QAAU,IAAI,OAAOA,EAAM,YAAc,CAAC,WAG/D,UAAU,KAAKlC,EAAM,KAAK,EAAG,CAClC,MAAMyR,EAAUvP,EAAM,QAAUA,EAAM,QAAU,CAAE,GAAE,MAAM,EAAG,EAAE,EAC3DA,EAAM,aACFuP,EAAO,OAAS,GAChBA,EAAOA,EAAO,OAAS,CAAC,EAAIvP,EAAM,cAClCA,EAAM,YAAcuP,EAAOA,EAAO,OAAS,CAAC,EAGvD,EAEL,KAAOvP,EAAM,MAAM,CACf,IAAIwP,EAAW,OAAOxP,EAAM,MAAS,WAC/BA,EAAM,OAAS,EACXA,EAAM,KAAKlC,EAAO0Q,CAAM,EACxB,KACJxO,EAAM,KAAKA,EAAM,IAAI,EAI3B,GAHIA,EAAM,iBACNwP,EAAWA,IAAaA,GAAa,KAA8B,OAASA,EAAS,YAErFA,EAAU,CAIV,GAHIA,EAAS,SACTA,EAAWA,EAAS,QAEpB,OAAOA,GAAa,SAAU,CAC9Bb,GAASG,EAAY9O,EAAOwP,CAAQ,EACpC,QACH,CACD,GAAIA,EAAS,OAASA,EAAS,MAAM1R,CAAK,EACtC,OAAI0R,EAAS,QACTA,EAAS,OAAOxP,EAAOlC,CAAK,EAE5BA,EAAM,OAAS,cACfoR,GAAYlP,EAAO,EAAI,EAGvBA,EAAM,aAAe,GAElBwP,EAAS,KAEvB,CACDC,GAAazP,CAAK,CACrB,CACD,OAAAsP,GAAOtP,EAAOqP,CAAW,EACzBV,GAASS,GAAmBpP,EAAO,SAAS,EACrC,aACX,CACA,SAASsP,GAAOI,EAAIC,EAAM,CACtB,MAAMtP,EAAO,OAAO,KAAKsP,CAAI,EAC7B,QAAS,EAAI,EAAG,EAAItP,EAAK,OAAQ,IAC7BqP,EAAGrP,EAAK,CAAC,CAAC,EAAIsP,EAAKtP,EAAK,CAAC,CAAC,EAE9B,OAAOqP,CACX,CACA,MAAMN,GAAoB,CACtB,QAAS,CAAE,EACX,QAAS,CAAE,CACf,EACA,SAAST,GAASxjB,EAAO6U,EAAO4P,EAAU,CACtC,GAAI,CAACzkB,EAAMykB,CAAQ,EACf,MAAM,IAAI,UAAU,iBAAmBA,CAAQ,EAEnD5P,EAAM,UAAY,OAAO,OAAO,CAAE,EAAEA,CAAK,EACzCA,EAAM,KAAO4P,EACb5P,EAAM,KAAO,KACbA,EAAM,KAAO,KACbA,EAAM,KAAO7U,EAAMykB,CAAQ,EAC3B5P,EAAM,KAAO,EACbA,EAAM,eAAiB,EAC3B,CACA,SAASiP,GAAQjP,EAAO,CACfA,EAAM,YAGXA,EAAM,KAAOA,EAAM,UAAU,KAC7BA,EAAM,KAAOA,EAAM,UAAU,KAC7BA,EAAM,KAAOA,EAAM,UAAU,KAC7BA,EAAM,KAAOA,EAAM,UAAU,KAC7BA,EAAM,KAAOA,EAAM,UAAU,KAC7BA,EAAM,eAAiBA,EAAM,UAAU,eACvCA,EAAM,UAAYA,EAAM,UAAU,UACtC,CACA,SAASkP,GAAYlP,EAAO6P,EAAY,CACpC,GAAIC,GAAO9P,CAAK,GAAKA,EAAM,KAAM,CAC7B,MAAM+P,EAAO/P,EAAM,KAAKA,EAAM,IAAI,EAClC,GAAI+P,EAAK,UAAW,CAChB,MAAMjC,EAAYiC,EAAK,UAEvB,GADA/P,EAAM,eAAiB,CAACA,EAAM,eAC1B,CAACA,EAAM,gBAAkB8N,EAAU,OACnC,MAEP,CACD,GAAI+B,EACA,MAEP,CAGD,IAFA7P,EAAM,eAAiB,GACvBA,EAAM,OACCA,EAAM,MACT,EAAE,MAAM,QAAQA,EAAM,IAAI,GAAKA,EAAM,KAAOA,EAAM,KAAK,SACvDiP,GAAQjP,CAAK,EACTA,EAAM,OACF8P,GAAO9P,CAAK,EACRA,EAAM,MAAQA,EAAM,KAAKA,EAAM,IAAI,EAAE,YACrCA,EAAM,eAAiB,CAACA,EAAM,iBAIlCA,EAAM,eAAiB,GACvBA,EAAM,QAItB,CACA,SAAS8P,GAAO9P,EAAO,CACnB,MAAM+P,EAAO,MAAM,QAAQ/P,EAAM,IAAI,GACjC,OAAOA,EAAM,KAAKA,EAAM,IAAI,GAAM,UAClCA,EAAM,KAAKA,EAAM,IAAI,EACzB,OAAO+P,GAAQA,EAAK,MACxB,CACA,SAASN,GAAazP,EAAO,CACzB,KAAOA,EAAM,MACT,EAAE,MAAM,QAAQA,EAAM,IAAI,GAAKA,EAAM,KAAKA,EAAM,IAAI,EAAE,SACtDiP,GAAQjP,CAAK,EAEbA,EAAM,MACNkP,GAAYlP,EAAO,EAAK,CAEhC,CACA,SAASmP,GAAIN,EAAUL,EAAQ,CAC3B,MAAMwB,EAAQ,OAAO,KAAKnB,CAAQ,EAClC,QAAS,EAAI,EAAG,EAAImB,EAAM,OAAQ,IAAK,CACnC,MAAM5C,EAAQoB,EAAO,MAAMK,EAASmB,EAAM,CAAC,CAAC,CAAC,EAC7C,GAAI5C,GAASA,aAAiB,MAC1B,MAAO,CAAE,KAAM4C,EAAM,CAAC,EAAG,MAAO5C,EAAM,CAAC,EAE9C,CACL,CCjNO,MAAM6C,GAAsB,CAC/B,cAAe,eACf,UAAW,YACX,YAAa,aACb,MAAO,QACP,SAAU,WACV,aAAc,eACd,eAAgB,gBAChB,QAAS,UACT,QAAS,UACT,WAAY,YACZ,WAAY,YACZ,gBAAiB,gBACjB,aAAc,cACd,WAAY,YACZ,cAAe,eACf,UAAW,WACX,SAAU,UACV,WAAY,YACZ,UAAW,WACX,UAAW,WACX,gBAAiB,gBACjB,cAAe,eACf,WAAY,YACZ,cAAe,eACf,WAAY,aACZ,qBAAsB,sBACtB,KAAM,MACV,EACaC,EAAY,OAAO,OAAO,OAAO,OAAO,GAAI9nC,CAAI,EAAG6nC,EAAmB,ECzBtEE,GAAoB,CAC7B,QAAS,+BACT,MAAO,aACX,EACMC,GAAuBC,GAAO,CAChC,MAAMC,EAAoB,CAAA,EAC1B,OAAID,GACAtlB,GAAMwlB,GAAMF,CAAE,EAAG,CACb,mBAAmBt0B,EAAK,CACpBu0B,EAAkB,KAAKv0B,CAAG,CAC7B,CACb,CAAS,EAEEu0B,CACX,EACO,SAASE,GAA2B3hC,EAAQ4hC,EAAWC,EAAQC,EAAc1xB,EAAc9Y,EAAS,CACvG,IAAI2sB,EACJ,MAAM8d,EAAO,OAAO,OAAO,OAAO,OAAO,CAAE,EAAEzqC,CAAO,EAAG,CAAE,OAAA0I,CAAM,CAAE,EAC3DivB,EAAQ6S,GAAgBE,GAAmBJ,EAAWC,CAAM,EAC5D1Q,EAAQlC,EAAM,MAAM,OAAS,UAAYA,EAAM,MAAM,UAAYA,EAAM,MAC7E,GAAI,CAACkC,EACD,MAAO,GAEX,MAAM6D,EAAO7D,EAAM,KACb+P,EAAO/P,EAAM,KACblmB,EAAWg3B,GAAYjiC,EAAQivB,EAAM,KAAK,EAChD,GAAI+F,IAASqM,EAAU,SACnB,OAAO3P,GAASzC,EAAO,CACnB,CAAE,MAAO,QAAS,KAAMwI,GAAmB,QAAU,EACrD,CAAE,MAAO,WAAY,KAAMA,GAAmB,QAAU,EACxD,CAAE,MAAO,eAAgB,KAAMA,GAAmB,QAAU,EAC5D,CAAE,MAAO,WAAY,KAAMA,GAAmB,QAAU,EACxD,CAAE,MAAO,IAAK,KAAMA,GAAmB,WAAa,CAChE,CAAS,EAEL,GAAIzC,IAASqM,EAAU,YAClBrM,IAASqM,EAAU,cACdpd,EAAKkN,EAAM,aAAe,MAAQlN,IAAO,OAAS,OAASA,EAAG,QAAUod,EAAU,WACxF,OAAOa,GAA4BjT,EAAOkC,EAAOnxB,EAAQ4hC,EAAW32B,CAAQ,EAEhF,GAAI+pB,IAASqM,EAAU,eACnBrM,IAASqM,EAAU,OACnBrM,IAASqM,EAAU,cACnB,OAAOc,GAA4BlT,EAAOhkB,EAAU82B,CAAI,EAE5D,GAAI/M,IAASqM,EAAU,WAClBrM,IAASqM,EAAU,UAAYH,IAAS,EAAI,CAC7C,MAAMkB,EAAUn3B,EAAS,QACzB,GAAIm3B,EACA,OAAO1Q,GAASzC,EAAOmT,EAAQ,IAAK53B,GAAW,CAC3C,IAAIyZ,EACJ,MAAQ,CACJ,MAAOzZ,EAAO,KACd,WAAYA,EAAO,KAAO,KAC1B,QAAS82B,GACT,OAAQ,OAAO92B,EAAO,IAAI,EAC1B,eAAgByZ,EAAKzZ,EAAO,eAAiB,MAAQyZ,IAAO,OAASA,EAAK,OAC1E,KAAMwT,GAAmB,SACzB,KAAMjtB,EAAO,IACjC,CACa,CAAA,CAAC,CAET,CACD,IAAIwqB,IAASqM,EAAU,cAClBrM,IAASqM,EAAU,cAAgBH,IAAS,IACzCj2B,EAAS,gBAAiB,CAC1B,MAAMo3B,EAAe/Q,GAAarmB,EAAS,eAAe,EACpDq3B,EAAiBtN,IAASqM,EAAU,aACpC5J,GAAmB,MACnBA,GAAmB,MACzB,OAAO/F,GAASzC,EAAOoT,EAAa,IAAI5oC,GAAS,CAC7C,IAAIwqB,EACJ,MAAQ,CACJ,MAAOxqB,EAAM,KACb,OAAQ,OAAOA,EAAM,IAAI,EACzB,eAAgBwqB,EAAKxqB,EAAM,eAAiB,MAAQwqB,IAAO,OAASA,EAAK,OACzE,KAAMqe,EACN,KAAM7oC,EAAM,IAChC,CACa,CAAA,CAAC,CACL,CAEL,GAAIu7B,IAASqM,EAAU,YAClBrM,IAASqM,EAAU,YAAcH,IAAS,GAC1ClM,IAASqM,EAAU,cAAgBH,IAAS,GAC5ClM,IAASqM,EAAU,UAAYH,IAAS,EACzC,OAAOqB,GAA6BtT,EAAOhkB,EAAU22B,EAAW5hC,CAAM,EAE1E,GAAIg1B,IAASqM,EAAU,UAAYH,IAAS,EAAG,CAC3C,MAAMsB,EAAiBrmC,GAAa8O,EAAS,SAAS,EAChDmP,EAAsBqoB,GAAuBb,EAAW5hC,EAAQivB,CAAK,EAC3E,OAAOyC,GAASzC,EAAO7U,EAAoB,OAAOsoB,GAAKA,EAAE,UAAYF,GAAmB,KAAoC,OAASA,EAAe,KAAK,CAAC,CAC7J,CACD,OAAKxN,IAASqM,EAAU,gBAAkBH,IAAS,GAC9ClM,IAASqM,EAAU,YAChBlQ,EAAM,WAAa,MACnBA,EAAM,UAAU,OAASkQ,EAAU,eAChCsB,GAAwC1T,EAAOhkB,EAAUjL,CAAY,EAE5Eg1B,IAASqM,EAAU,iBAAmBH,IAAS,EACxC0B,GAAgC3T,EAAOhkB,EAAUjL,EAAQ4hC,EAAW,MAAM,QAAQxxB,CAAY,EAC/FA,EACAmxB,GAAoBnxB,CAAY,CAAC,EAEtC4kB,IAASqM,EAAU,qBAAuBH,IAAS,GACnDlM,IAASqM,EAAU,WAAaH,IAAS,GACzClM,IAASqM,EAAU,YAChBlQ,EAAM,YACLA,EAAM,UAAU,OAASkQ,EAAU,qBAChClQ,EAAM,UAAU,OAASkQ,EAAU,WACnClQ,EAAM,UAAU,OAASkQ,EAAU,eACpCwB,GAAoC5T,EAAOjvB,CAAY,EAE9Dg1B,IAASqM,EAAU,UACZyB,GAA2B7T,EAAOkC,EAAOnxB,CAAY,EAEzD,EACX,CACA,MAAM+iC,GAAe;AAAA;AAAA,GACfC,GAAiBvpC,GAAU,CAC7B,MAAMS,EAAOT,EAAM,KAOnB,OANIkC,GAAgBzB,CAAI,GAGpBO,GAAWP,CAAI,GAAKyB,GAAgBzB,EAAK,MAAM,GAG/CQ,GAAcR,CAAI,IACdyB,GAAgBzB,EAAK,MAAM,GAG3BO,GAAWP,EAAK,MAAM,GAAKyB,GAAgBzB,EAAK,OAAO,MAAM,GACtD6oC,GAGR,IACX,EACA,SAASZ,GAA4BlT,EAAOhkB,EAAU3T,EAAS,CAC3D,IAAI2sB,EACJ,GAAIhZ,EAAS,WAAY,CACrB,MAAMpH,EAAaoH,EAAS,WAC5B,IAAInN,EAAS,CAAA,EACb,MAAI,cAAe+F,IACf/F,EAASwzB,GAAaztB,EAAW,UAAW,CAAA,GAE5ClI,GAAgBkI,CAAU,GAC1B/F,EAAO,KAAK8F,EAAoB,EAEhCC,MAAiBogB,EAAK3sB,GAAY,KAA6B,OAASA,EAAQ,UAAY,MAAQ2sB,IAAO,OAAS,OAASA,EAAG,aAAY,IAC5InmB,EAAO,KAAK2F,GAAoBE,EAAgB,EAE7C+tB,GAASzC,EAAOnxB,EAAO,IAAI,CAACrE,EAAOy0B,IAAU,CAChD,IAAIjK,EACJ,MAAMnY,EAAa,CACf,SAAU,OAAOoiB,CAAK,EAAIz0B,EAAM,KAChC,MAAOA,EAAM,KACb,OAAQ,OAAOA,EAAM,IAAI,EACzB,eAAgBwqB,EAAKxqB,EAAM,eAAiB,MAAQwqB,IAAO,OAASA,EAAK,OACzE,WAAY,EAAQxqB,EAAM,kBAC1B,aAAc,EAAQA,EAAM,kBAC5B,kBAAmBA,EAAM,kBACzB,KAAMg+B,GAAmB,MACzB,KAAMh+B,EAAM,IAC5B,EACkB2hC,EAAa4H,GAAcvpC,CAAK,EACtC,OAAI2hC,IACAtvB,EAAW,WAAarS,EAAM,KAAO2hC,EACrCtvB,EAAW,iBAAmB4rB,GAAiB,QAC/C5rB,EAAW,QAAUw1B,IAElBx1B,CACV,CAAA,CAAC,CACL,CACD,MAAO,EACX,CACA,SAASy2B,GAA6BtT,EAAOhkB,EAAU22B,EAAW5hC,EAAQ,CACtE,MAAMwiC,EAAiBrmC,GAAa8O,EAAS,SAAS,EAChDg4B,EAAiBR,GAAuBb,EAAW5hC,EAAQivB,CAAK,EAAE,OAAOyT,GAAKA,EAAE,SAAWF,EAAe,IAAI,EACpH,GAAIA,aAA0BrnC,GAAiB,CAC3C,MAAM6D,EAASwjC,EAAe,YAC9B,OAAO9Q,GAASzC,EAAOjwB,EAClB,IAAK7F,GAAU,CAChB,IAAI8qB,EACJ,MAAQ,CACJ,MAAO9qB,EAAM,KACb,OAAQ,OAAOqpC,CAAc,EAC7B,eAAgBve,EAAK9qB,EAAM,eAAiB,MAAQ8qB,IAAO,OAASA,EAAK,OACzE,WAAY,EAAQ9qB,EAAM,kBAC1B,aAAc,EAAQA,EAAM,kBAC5B,kBAAmBA,EAAM,kBACzB,KAAMs+B,GAAmB,WACzB,KAAM+K,CACtB,CACA,CAAS,EACI,OAAOS,CAAc,CAAC,CAC9B,SACQT,IAAmB5hC,GACxB,OAAO8wB,GAASzC,EAAOgU,EAAe,OAAO,CACzC,CACI,MAAO,OACP,OAAQ,OAAOriC,EAAc,EAC7B,cAAe,aACf,KAAM62B,GAAmB,SACzB,KAAM72B,EACT,EACD,CACI,MAAO,QACP,OAAQ,OAAOA,EAAc,EAC7B,cAAe,YACf,KAAM62B,GAAmB,SACzB,KAAM72B,EACT,CACJ,CAAA,CAAC,EAEN,OAAOqiC,CACX,CACA,SAASf,GAA4BjT,EAAO+B,EAAYhxB,EAAQkjC,EAAcj4B,EAAU,CACpF,GAAI+lB,EAAW,eACX,MAAO,GAEX,MAAMtqB,EAAU1G,EAAO,aACjBmjC,EAAmB7R,GAAa5qB,CAAO,EAAE,OAAOrM,EAAe,EAC/D+oC,EAAuBD,EAAiB,IAAI,CAAC,CAAE,KAAAxpC,CAAI,IAAOA,CAAI,EAC9D0pC,EAAmB,IAAI,IAC7BC,GAAgBJ,EAAc,CAAC1U,EAAG2C,IAAU,CACxC,IAAIlN,EAAIM,EAAIE,EAAI6K,EAAIiU,EACpB,GAAIpS,EAAM,OACFA,EAAM,OAASkQ,EAAU,eACzB,CAAC+B,EAAqB,SAASjS,EAAM,IAAI,GACzCkS,EAAiB,IAAIlS,EAAM,IAAI,EAE/BA,EAAM,OAASkQ,EAAU,cACvBpd,EAAKkN,EAAM,aAAe,MAAQlN,IAAO,OAAS,OAASA,EAAG,QAAUod,EAAU,aACpF,GAAIp2B,EAAS,aAAc,CAEvB,IADsBsZ,EAAKtZ,EAAS,gBAAkB,MAAQsZ,IAAO,OAAS,OAASA,EAAG,cAAa,EAAG,KAAK,CAAC,CAAE,KAAA5qB,CAAI,IAAOA,IAASw3B,EAAM,IAAI,EAE5I,OAEJ,MAAMj3B,EAAO8F,EAAO,QAAQmxB,EAAM,IAAI,EAChCqS,GAAmB/e,EAAKxZ,EAAS,gBAAkB,MAAQwZ,IAAO,OAAS,OAASA,EAAG,SAAQ,EACrGxZ,EAAS,aAAe,IAAIjQ,GAAqB,OAAO,OAAO,OAAO,OAAO,CAAE,EAAEwoC,CAAe,EAAG,CAAE,WAAY,CACzG,GAAGA,EAAgB,WACnBtpC,GACI,IAAIc,GAAqB,CAAE,KAAMm2B,EAAM,KAAM,OAAQ,CAAA,EAAI,CAChE,CAAA,CAAE,CAAC,CACX,SACQlmB,EAAS,cAAe,CAE7B,IADsBqkB,EAAKrkB,EAAS,iBAAmB,MAAQqkB,IAAO,OAAS,OAASA,EAAG,cAAa,EAAG,KAAK,CAAC,CAAE,KAAA31B,CAAI,IAAOA,IAASw3B,EAAM,IAAI,EAE7I,OAEJ,MAAMj3B,EAAO8F,EAAO,QAAQmxB,EAAM,IAAI,EAChCsS,GAAoBF,EAAKt4B,EAAS,iBAAmB,MAAQs4B,IAAO,OAAS,OAASA,EAAG,SAAQ,EACvGt4B,EAAS,cAAgB,IAAIpQ,GAAkB,OAAO,OAAO,OAAO,OAAO,CAAE,EAAE4oC,CAAgB,EAAG,CAAE,WAAY,CACxG,GAAGA,EAAiB,WACpBvpC,GACI,IAAIc,GAAqB,CAAE,KAAMm2B,EAAM,KAAM,OAAQ,CAAA,EAAI,CAChE,CAAA,CAAE,CAAC,CACX,EAGjB,CAAK,EACD,MAAMuS,EAAsBz4B,EAAS,cAAgBA,EAAS,cAExD04B,IADqBD,GAAwB,KAAyC,OAASA,EAAoB,cAAa,IAAO,CAAA,GAC7F,IAAI,CAAC,CAAE,KAAA/pC,CAAI,IAAOA,CAAI,EAChEiqC,EAAqBT,EACtB,OAAO,CAAC,GAAGE,CAAgB,EAAE,IAAI1pC,IAAS,CAAE,KAAAA,CAAM,EAAC,CAAC,EACpD,OAAO,CAAC,CAAE,KAAAA,KAAWA,KAAU+pC,GAAwB,KAAyC,OAASA,EAAoB,OAC9H,CAACC,EAAsB,SAAShqC,CAAI,CAAC,EACzC,OAAO+3B,GAASzC,EAAO2U,EAAmB,IAAI1pC,GAAQ,CAClD,MAAMlE,EAAS,CACX,MAAOkE,EAAK,KACZ,KAAMu9B,GAAmB,UACzB,KAAAv9B,CACZ,EACQ,OAAIA,GAAS,MAAmCA,EAAK,cACjDlE,EAAO,cAAgBkE,EAAK,aAEzBlE,CACV,CAAA,CAAC,CACN,CACA,SAAS2sC,GAAwC1T,EAAOhkB,EAAUjL,EAAQ6jC,EAAO,CAC7E,IAAIxiB,EACJ,GAAIpW,EAAS,WACT,GAAIrP,GAAeqP,EAAS,UAAU,EAAG,CACrC,MAAMtG,EAAe9I,GAAmBoP,EAAS,UAAU,EACrD64B,EAAmB9jC,EAAO,iBAAiB2E,CAAY,EACvDo/B,EAAmB,OAAO,OAAO,IAAI,EAC3CD,EAAiB,QAAQ5pC,GAAQ,CAC7BA,EAAK,cAAa,EAAG,QAAQqK,GAAS,CAClCw/B,EAAiBx/B,EAAM,IAAI,EAAIA,CACnD,CAAiB,CACjB,CAAa,EACD8c,EAAgByiB,EAAiB,OAAOxS,GAAayS,CAAgB,CAAC,CACzE,MAEG1iB,EAAgB,CAACpW,EAAS,UAAU,MAGvC,CACD,MAAMvE,EAAU1G,EAAO,aACvBqhB,EAAgBiQ,GAAa5qB,CAAO,EAAE,OAAO/K,EAAe,CAC/D,CACD,OAAO+1B,GAASzC,EAAO5N,EAAc,IAAInnB,GAAQ,CAC7C,MAAMoK,EAAYnI,GAAajC,CAAI,EACnC,MAAO,CACH,MAAO,OAAOA,CAAI,EAClB,cAAgBoK,GAAaA,EAAU,aAAgB,GACvD,KAAMmzB,GAAmB,KACrC,CACK,CAAA,CAAC,CACN,CACA,SAASmL,GAAgC3T,EAAOhkB,EAAUjL,EAAQ4hC,EAAWxxB,EAAc,CACvF,GAAI,CAACwxB,EACD,MAAO,GAEX,MAAMl7B,EAAU1G,EAAO,aACjBgkC,EAAWjT,GAAmB9B,EAAM,KAAK,EACzClX,EAAYksB,GAAuBrC,CAAS,EAC9CxxB,GAAgBA,EAAa,OAAS,GACtC2H,EAAU,KAAK,GAAG3H,CAAY,EAElC,MAAM8zB,EAAgBnsB,EAAU,OAAOhC,GAAQrP,EAAQqP,EAAK,cAAc,KAAK,KAAK,GAChF,EAAEiuB,GACEA,EAAS,OAAS3C,EAAU,qBAC5B2C,EAAS,OAASjuB,EAAK,KAAK,QAChCpa,GAAgBsP,EAAS,UAAU,GACnCtP,GAAgB+K,EAAQqP,EAAK,cAAc,KAAK,KAAK,CAAC,GACtD5V,GAAeH,EAAQiL,EAAS,WAAYvE,EAAQqP,EAAK,cAAc,KAAK,KAAK,CAAC,CAAC,EACvF,OAAO2b,GAASzC,EAAOiV,EAAc,IAAInuB,IAAS,CAC9C,MAAOA,EAAK,KAAK,MACjB,OAAQ,OAAOrP,EAAQqP,EAAK,cAAc,KAAK,KAAK,CAAC,EACrD,cAAe,YAAYA,EAAK,KAAK,KAAK,OAAOA,EAAK,cAAc,KAAK,KAAK,GAC9E,KAAM0hB,GAAmB,MACzB,KAAM/wB,EAAQqP,EAAK,cAAc,KAAK,KAAK,CAC9C,EAAC,CAAC,CACP,CACA,MAAMouB,GAAsB,CAAChT,EAAO6D,IAAS,CACzC,IAAI/Q,EAAIM,EAAIE,EAAI6K,EAAIiU,EAAIa,EAAIC,EAAIC,EAAIC,EAAIC,EACxC,KAAMvgB,EAAKkN,EAAM,aAAe,MAAQlN,IAAO,OAAS,OAASA,EAAG,QAAU+Q,EAC1E,OAAO7D,EAAM,UAEjB,KAAM1M,GAAMF,EAAK4M,EAAM,aAAe,MAAQ5M,IAAO,OAAS,OAASA,EAAG,aAAe,MAAQE,IAAO,OAAS,OAASA,EAAG,QAAUuQ,EACnI,OAAO7D,EAAM,UAAU,UAE3B,KAAMiT,GAAMb,GAAMjU,EAAK6B,EAAM,aAAe,MAAQ7B,IAAO,OAAS,OAASA,EAAG,aAAe,MAAQiU,IAAO,OAAS,OAASA,EAAG,aAAe,MAAQa,IAAO,OAAS,OAASA,EAAG,QAAUpP,EAC5L,OAAO7D,EAAM,UAAU,UAAU,UAErC,KAAMqT,GAAMD,GAAMD,GAAMD,EAAKlT,EAAM,aAAe,MAAQkT,IAAO,OAAS,OAASA,EAAG,aAAe,MAAQC,IAAO,OAAS,OAASA,EAAG,aAAe,MAAQC,IAAO,OAAS,OAASA,EAAG,aAAe,MAAQC,IAAO,OAAS,OAASA,EAAG,QAAUxP,EACrP,OAAO7D,EAAM,UAAU,UAAU,UAAU,SAEnD,EACO,SAASsR,GAAuBb,EAAW5hC,EAAQivB,EAAO,CAC7D,IAAIre,EAAe,KACf6zB,EACJ,MAAMC,EAAc,OAAO,OAAO,CAAE,CAAA,EACpC,OAAApB,GAAgB1B,EAAW,CAACpT,EAAG2C,IAAU,CAIrC,IAHKA,GAAU,KAA2B,OAASA,EAAM,QAAUkQ,EAAU,UAAYlQ,EAAM,OAC3FvgB,EAAeugB,EAAM,OAEpBA,GAAU,KAA2B,OAASA,EAAM,QAAUkQ,EAAU,YAAczwB,EAAc,CACrG,MAAM+zB,EAAmBR,GAAoBhT,EAAOkQ,EAAU,IAAI,EAC9DsD,GAAqB,MAA+CA,EAAiB,OACrFF,EAAezkC,EAAO,QAAQ2kC,GAAqB,KAAsC,OAASA,EAAiB,IAAI,EAE9H,CACG/zB,GAAgB6zB,IACXC,EAAY9zB,CAAY,IACzB8zB,EAAY9zB,CAAY,EAAI,CACxB,OAAQ6zB,EAAa,SAAU,EAC/B,WAAYxV,EAAM,SAAW,IAAMre,EAAe,IAAMA,EACxD,MAAOA,EACP,KAAM6zB,EACN,KAAMhN,GAAmB,QAC7C,EACgB7mB,EAAe,KACf6zB,EAAe,MAG/B,CAAK,EACMnT,GAAaoT,CAAW,CACnC,CACO,SAAST,GAAuBrC,EAAW,CAC9C,MAAMxxB,EAAe,CAAA,EACrB,OAAAkzB,GAAgB1B,EAAW,CAACpT,EAAG2C,IAAU,CACjCA,EAAM,OAASkQ,EAAU,qBACzBlQ,EAAM,MACNA,EAAM,MACN/gB,EAAa,KAAK,CACd,KAAMixB,EAAU,oBAChB,KAAM,CACF,KAAM9nC,EAAK,KACX,MAAO43B,EAAM,IAChB,EACD,aAAc,CACV,KAAMkQ,EAAU,cAChB,WAAY,CAAE,CACjB,EACD,cAAe,CACX,KAAMA,EAAU,WAChB,KAAM,CACF,KAAM9nC,EAAK,KACX,MAAO43B,EAAM,IAChB,CACJ,CACjB,CAAa,CAEb,CAAK,EACM/gB,CACX,CACA,SAASyyB,GAAoC5T,EAAOjvB,EAAQ6jC,EAAO,CAC/D,MAAMe,EAAe5kC,EAAO,aACtB6kC,EAAavT,GAAasT,CAAY,EAAE,OAAOrpC,EAAW,EAChE,OAAOm2B,GAASzC,EAAO4V,EAAW,IAAK3qC,IAAU,CAC7C,MAAOA,EAAK,KACZ,cAAeA,EAAK,YACpB,KAAMu9B,GAAmB,QAC5B,EAAC,CAAC,CACP,CACA,SAASqL,GAA2B7T,EAAOkC,EAAOnxB,EAAQ6jC,EAAO,CAC7D,GAAI1S,EAAM,WAAaA,EAAM,UAAU,KAAM,CACzC,MAAMxT,EAAa3d,EACd,cAAe,EACf,OAAOkB,GAAa4jC,GAAgB3T,EAAM,UAAWjwB,CAAS,CAAC,EACpE,OAAOwwB,GAASzC,EAAOtR,EAAW,IAAIzc,IAAc,CAChD,MAAOA,EAAU,KACjB,cAAeA,EAAU,aAAe,GACxC,KAAMu2B,GAAmB,QAC5B,EAAC,CAAC,CACN,CACD,MAAO,EACX,CACO,SAASuK,GAAmBJ,EAAWC,EAAQ,CAClD,IAAIkD,EAAgB,KAChBC,EAAgB,KAChBC,EAAiB,KACrB,MAAMhW,EAAQqU,GAAgB1B,EAAW,CAACjC,EAAQxO,EAAOmO,EAAOpR,IAAU,CACtE,GAAIA,IAAU2T,EAAO,MACblC,EAAO,sBAAwBkC,EAAO,UACtC,OAAAkD,EAAgBzF,EAChB0F,EAAgB,OAAO,OAAO,CAAE,EAAE7T,CAAK,EACvC8T,EAAiBtF,EAAO,UACjB,OAGvB,CAAK,EACD,MAAO,CACH,MAAO1Q,EAAM,MACb,IAAKA,EAAM,IACX,OAAQgW,GAAkBhW,EAAM,OAChC,MAAO+V,GAAiB/V,EAAM,MAC9B,MAAO8V,GAAiB9V,EAAM,KACtC,CACA,CACO,SAASqU,GAAgB1B,EAAWsD,EAAU,CACjD,MAAMC,EAAQvD,EAAU,MAAM;AAAA,CAAI,EAC5BwD,EAASxF,KACf,IAAIzO,EAAQiU,EAAO,aACf9F,EAAQ,GACRK,EAAS,IAAIxB,GAAgB,EAAE,EACnC,QAAS5lC,EAAI,EAAGA,EAAI4sC,EAAM,OAAQ5sC,IAAK,CAEnC,IADAonC,EAAS,IAAIxB,GAAgBgH,EAAM5sC,CAAC,CAAC,EAC9B,CAAConC,EAAO,QACXL,EAAQ8F,EAAO,MAAMzF,EAAQxO,CAAK,EACrB+T,EAASvF,EAAQxO,EAAOmO,EAAO/mC,CAAC,IAChC,UAAb,CAIJ2sC,EAASvF,EAAQxO,EAAOmO,EAAO/mC,CAAC,EAC3B44B,EAAM,OACPA,EAAQiU,EAAO,aAEtB,CACD,MAAO,CACH,MAAOzF,EAAO,gBAAiB,EAC/B,IAAKA,EAAO,mBAAoB,EAChC,OAAQA,EAAO,QAAS,EACxB,MAAAxO,EACA,MAAAmO,CACR,CACA,CACO,SAASwF,GAAgB3T,EAAOjwB,EAAW,CAC9C,GAAI,CAACiwB,GAAS,CAACA,EAAM,KACjB,MAAO,GAEX,MAAM6D,EAAO7D,EAAM,KACbrjB,EAAY5M,EAAU,UAC5B,OAAQ8zB,EAAI,CACR,KAAKqM,EAAU,MACX,OAAOvzB,EAAU,QAAQvM,EAAkB,KAAK,IAAM,GAC1D,KAAK8/B,EAAU,SACX,OAAOvzB,EAAU,QAAQvM,EAAkB,QAAQ,IAAM,GAC7D,KAAK8/B,EAAU,aACX,OAAOvzB,EAAU,QAAQvM,EAAkB,YAAY,IAAM,GACjE,KAAK8/B,EAAU,MACf,KAAKA,EAAU,cACX,OAAOvzB,EAAU,QAAQvM,EAAkB,KAAK,IAAM,GAC1D,KAAK8/B,EAAU,oBACX,OAAOvzB,EAAU,QAAQvM,EAAkB,mBAAmB,IAAM,GACxE,KAAK8/B,EAAU,gBACX,OAAOvzB,EAAU,QAAQvM,EAAkB,eAAe,IAAM,GACpE,KAAK8/B,EAAU,gBACX,OAAOvzB,EAAU,QAAQvM,EAAkB,eAAe,IAAM,GACpE,KAAK8/B,EAAU,WACX,OAAOvzB,EAAU,QAAQvM,EAAkB,MAAM,IAAM,GAC3D,KAAK8/B,EAAU,WACX,OAAOvzB,EAAU,QAAQvM,EAAkB,MAAM,IAAM,GAC3D,KAAK8/B,EAAU,gBACX,OAAOvzB,EAAU,QAAQvM,EAAkB,MAAM,IAAM,GAC3D,KAAK8/B,EAAU,UACX,OAAOvzB,EAAU,QAAQvM,EAAkB,gBAAgB,IAAM,GACrE,KAAK8/B,EAAU,cACX,OAAOvzB,EAAU,QAAQvM,EAAkB,SAAS,IAAM,GAC9D,KAAK8/B,EAAU,UACX,OAAOvzB,EAAU,QAAQvM,EAAkB,KAAK,IAAM,GAC1D,KAAK8/B,EAAU,SACX,OAAOvzB,EAAU,QAAQvM,EAAkB,IAAI,IAAM,GACzD,KAAK8/B,EAAU,WACX,OAAOvzB,EAAU,QAAQvM,EAAkB,UAAU,IAAM,GAC/D,KAAK8/B,EAAU,UACX,OAAOvzB,EAAU,QAAQvM,EAAkB,YAAY,IAAM,GACjE,KAAK8/B,EAAU,gBAEX,OADsBlQ,EAAM,WAAaA,EAAM,UAAU,KACpC,CACjB,KAAKkQ,EAAU,cACX,OAAQvzB,EAAU,QAAQvM,EAAkB,mBAAmB,IAAM,GACzE,KAAK8/B,EAAU,UACX,OAAQvzB,EAAU,QAAQvM,EAAkB,sBAAsB,IAAM,EAC/E,CACR,CACD,MAAO,EACX,CACO,SAAS0gC,GAAYjiC,EAAQgxB,EAAY,CAC5C,IAAIxmB,EACA43B,EACAzqB,EACAlZ,EACAyL,EACAI,EACA+6B,EACAC,EACAzhC,EACA3J,EACAqrC,EACJ,OAAArU,GAAaF,EAAYG,GAAS,CAC9B,OAAQA,EAAM,KAAI,CACd,KAAKkQ,EAAU,MACf,IAAK,aACDnnC,EAAO8F,EAAO,eACd,MACJ,KAAKqhC,EAAU,SACXnnC,EAAO8F,EAAO,kBACd,MACJ,KAAKqhC,EAAU,aACXnnC,EAAO8F,EAAO,sBACd,MACJ,KAAKqhC,EAAU,gBACf,KAAKA,EAAU,oBACPlQ,EAAM,OACNj3B,EAAO8F,EAAO,QAAQmxB,EAAM,IAAI,GAEpC,MACJ,KAAKkQ,EAAU,MACf,KAAKA,EAAU,cAAe,CACtB,CAACnnC,GAAQ,CAACi3B,EAAM,KAChBjnB,EAAW,MAGXA,EAAWrG,EACLoG,GAAYjK,EAAQ6D,EAAYstB,EAAM,IAAI,EAC1C,KACNj3B,EAAOgQ,EAAWA,EAAS,KAAO,MAEtC,KACH,CACD,KAAKm3B,EAAU,cACXx9B,EAAa1H,GAAajC,CAAI,EAC9B,MACJ,KAAKmnC,EAAU,UACX1pB,EAAewZ,EAAM,KAAOnxB,EAAO,aAAamxB,EAAM,IAAI,EAAI,KAC9D,MACJ,KAAKkQ,EAAU,cACPlQ,EAAM,OACNkU,EAAgB,KAChBE,EAAe,IAAIvqC,GAAqB,CACpC,KAAMm2B,EAAM,KACZ,WAAY,CAAE,EACd,OAAQ,CAAE,CAClC,CAAqB,GAEL,MACJ,KAAKkQ,EAAU,gBACPlQ,EAAM,OACNoU,EAAe,KACfF,EAAgB,IAAIxqC,GAAkB,CAClC,KAAMs2B,EAAM,KACZ,WAAY,CAAE,EACd,OAAQ,CAAE,CAClC,CAAqB,GAEL,MACJ,KAAKkQ,EAAU,UAAW,CACtB,GAAI,CAAClQ,EAAM,UACPiR,EAAU,SAGV,QAAQjR,EAAM,UAAU,KAAI,CACxB,KAAKkQ,EAAU,MACXe,EAAUl4B,GAAYA,EAAS,KAC/B,MACJ,KAAKm3B,EAAU,UACXe,EACIzqB,GAAgBA,EAAa,KACjC,MACJ,KAAK0pB,EAAU,cAAe,CAC1B,MAAM1nC,EAAOw3B,EAAM,WAAaA,EAAM,UAAU,KAChD,GAAI,CAACx3B,EAAM,CACPyoC,EAAU,KACV,KACH,CACD,MAAM3oC,EAAQoK,EACRoG,GAAYjK,EAAQ6D,EAAYlK,CAAI,EACpC,KACN,GAAI,CAACF,EAAO,CACR2oC,EAAU,KACV,KACH,CACDA,EAAU3oC,EAAM,KAChB,KACH,CACD,QACI2oC,EAAU,KACV,KACP,CAEL,KACH,CACD,KAAKf,EAAU,SACX,GAAIe,GACA,QAAS7pC,EAAI,EAAGA,EAAI6pC,EAAQ,OAAQ7pC,IAChC,GAAI6pC,EAAQ7pC,CAAC,EAAE,OAAS44B,EAAM,KAAM,CAChC3mB,EAAS43B,EAAQ7pC,CAAC,EAClB,KACH,EAGT+R,EAAYE,GAAUA,EAAO,KAC7B,MACJ,KAAK62B,EAAU,WACX,MAAMpiC,EAAW9C,GAAamO,CAAS,EACvC7L,EACIQ,aAAoB9D,GACd8D,EACG,UAAW,EACX,KAAMumC,GAAQA,EAAI,QAAUrU,EAAM,IAAI,EACzC,KACV,MACJ,KAAKkQ,EAAU,WACX,MAAMpjB,EAAehiB,GAAgBqO,CAAS,EAC9CA,EACI2T,aAAwB5iB,GAAc4iB,EAAa,OAAS,KAChE,MACJ,KAAKojB,EAAU,aACX,MAAMz2B,EAAazO,GAAamO,CAAS,EACzCg7B,EACI16B,aAAsBxP,GAChBwP,EAAW,UAAW,EACtB,KACV,MACJ,KAAKy2B,EAAU,aACX,MAAMoE,EAActU,EAAM,MAAQmU,EAAkBA,EAAgBnU,EAAM,IAAI,EAAI,KAClF7mB,EAAYm7B,GAAeA,EAAY,KACvC,MACJ,KAAKpE,EAAU,WACPlQ,EAAM,OACNj3B,EAAO8F,EAAO,QAAQmxB,EAAM,IAAI,GAEpC,KACP,CACT,CAAK,EACM,CACH,OAAA3mB,EACA,QAAA43B,EACA,aAAAzqB,EACA,UAAAlZ,EACA,SAAAyL,EACA,UAAAI,EACA,gBAAAg7B,EACA,WAAAzhC,EACA,KAAA3J,EACA,aAAAqrC,EACA,cAAAF,CACR,CACA,qBCzrBA,SAASK,GAAWjxC,EAAGe,EAAS,CAC9B,GAAIf,GAAK,KACP,OAAOA,EAET,IAAI8Q,EAAQ,IAAI,MAAM/P,IAAY,OAAYA,EAAU,kBAAoBf,CAAC,EAC7E,MAAA8Q,EAAM,YAAc,EACdA,CACR,CAEAogC,GAAc,QAAGD,GACKC,GAAA,QAAA,QAAGD,GAEzB,OAAO,eAAeC,GAAA,QAAgB,aAAc,CAAC,MAAO,EAAI,CAAC,ECdhDC,YAAQA,WAAK,UCAbA,YAAQA,WAAK,UAmBzBrsC,EAAK,MAAL,GAAaq/B,GAAW,MACxBr/B,EAAK,qBAAL,GAA4Bq/B,GAAW,MACvCr/B,EAAK,oBAAL,GAA2Bq/B,GAAW,MACtCr/B,EAAK,gBAAL,GAAuBq/B,GAAW,OAClCr/B,EAAK,uBAAL,GAA8Bq/B,GAAW,MACzCr/B,EAAK,qBAAL,GAA4Bq/B,GAAW,KACvCr/B,EAAK,sBAAL,GAA6Bq/B,GAAW,WACxCr/B,EAAK,6BAAL,GAAoCq/B,GAAW,MAC/Cr/B,EAAK,uBAAL,GAA8Bq/B,GAAW,MACzCr/B,EAAK,iBAAL,GAAwBq/B,GAAW,MACnCr/B,EAAK,0BAAL,GAAiCq/B,GAAW,UAC5Cr/B,EAAK,SAAL,GAAgBq/B,GAAW,KACRA,GAAW,OC1BnC,MAAMiN,GACHC,GAAyC,CAAC7e,EAAM8e,IAAgB,CAC/D,GAAI,CAACD,EAAU,MAAc,OAAA,QAAQ,QAAQ,IAAI,EAEjD,MAAME,EAAcrE,GAA2BmE,EAAU,MAAO7e,EAAM,CACpE,KAAM8e,EAAY,KAClB,UAAWA,EAAY,EAAA,CACjB,EAER,OAAO,QAAQ,QAAyB,CACtC,YAAaC,EAAY,IACvB,CAACvxC,EAAG8D,KACe,CACf,KAAM9D,EAAE,MACR,KAAMA,EAAE,OACR,MAAOuxC,EAAY,OAASztC,CAAA,EAElC,CAAA,CACD,CACH,ECpBF,SAAS0tC,GAA4B9U,EAAoB,CACjD,MAAA+U,EAAOC,GAAWhV,CAAK,EAEvBiV,EAA4C,CAAA,EAElD,OAAAF,EAAK,QAAQ,CACX,MAAM,CAAE,KAAAvsC,EAAM,KAAAmnC,EAAM,GAAAD,GAAM,CACpBlnC,IAAS,uBACXysC,EAAK,KAAK,CAAE,KAAAtF,EAAM,GAAAD,CAAI,CAAA,CAE1B,CAAA,CACD,EAEMuF,CACT,CAEA,SAASC,GAAyBlV,EAAoB,CAC9C,MAAAmV,EAAcnV,EAAM,UAAU,KAAK,KAEnCoV,EAAgBN,GAA4B9U,CAAK,EAEvD,GAAIoV,EAAc,SAAW,EAAG,OAAOC,GAAW,KAElD,MAAMC,EAASF,EACZ,IAAI,CAAC,CAAE,KAAAzF,EAAM,GAAAD,MAAU,CACtB,SAAUyF,GAAexF,GAAQwF,GAAezF,EAChD,KAAAC,EACA,GAAAD,CAAA,EACA,EACD,IAAK6F,IAAU,CACd,GAAGA,EACH,MAAOF,GAAW,KAAK,CACrB,MAAOE,EAAK,SACR,0BACA,8BACJ,UAAW,EAAA,CACZ,CACD,EAAA,EACD,IAAI,CAAC,CAAE,KAAA5F,EAAM,GAAAD,EAAI,MAAA8F,MAA+B,CAAE,KAAA7F,EAAM,GAAAD,EAAI,MAAO8F,GAAO,EAEtE,OAAAH,GAAW,IAAIC,CAAM,CAC9B,CAEO,MAAMG,GAAyBC,GAAW,OAC9CC,IAAU,CACT,YAAaT,GAAyBS,EAAK,KAAK,EAChD,OAAOC,EAAG,CACH,KAAA,YAAcV,GAAyBU,EAAE,KAAK,CACrD,CAAA,GAEF,CACE,YAAcrE,GAAMA,EAAE,WACxB,CACF,6TC6DA,MAAAsE,EAAAljB,EAAA,IAAA,EAEAlB,EAAAC,KACA2E,EAAAC,KAEArF,EAAAC,EAIAC,EAAAC,EAMA0kB,EAAAtf,GAAsBG,GACpB,GACA,EAEFof,EAAAvf,GAAAqI,GAAA,GAAA,EAIApH,EAAAC,GAAA,aAAA,cAAA,EAEA8G,EAAA7L,EAAA,IAAA,EAEAqjB,EAAAhc,GAAA/I,EAAA,aAAAE,CAAA,EAEA8kB,EAAAC,GAAAC,GAAA,CACE,MAAAhB,EAAAgB,EAAA,MAAA,UAAA,KAAA,KACAC,EAAAD,EAAA,MAAA,IAAA,SAAA,KAAAA,EAAA,MAAA,SAAA,EAEA,GAAA,CACE,MAAAE,EAAAC,GAAAF,CAAA,EACA,GAAAC,EAAA,YAAA,SAAA,EAAA,CACE7X,EAAA,MAAA6X,EAAA,YAAA,CAAA,EAEA,MAAA,CAGF7X,EAAA,MAAA6X,EAAA,YAAA,KAAAt6B,GAAA,CAEI,GAAAA,EAAA,OAAA,sBAAwC,MAAA,GACxC,KAAA,CAAA,MAAAyvB,EAAA,IAAAC,GAAA1vB,EAAA,IACA,OAAAo5B,GAAA3J,GAAA2J,GAAA1J,CAA8C,CAAA,GAAA,IACV,MAAA,CAC1B,CAEhB,EAAA,GAAA,EAGF1R,GAAA,IAAA,CACE,GAAA,CACE,MAAAsc,EAAAC,GAAAN,EAAA,KAAA,EACA,GAAAK,EAAA,YAAA,OAAA,CACE7X,EAAA,MAAA6X,EAAA,YAAA,CAAA,EAEA,MAAA,CACF,MAAA,CACc,CAAC,CAAA,EAGnB1e,GAAAke,EACEG,EACAxjB,GAAA,CACS,qBAAA,CACe,KAAA,UACd,YAAA,GAAAf,EAAA,eAAA,CAAA,GAC4B,aAAAgG,CACpB,EAChB,OAAA6H,GAAAzwB,EAAA,EACmC,UAAA0nC,GAAA1nC,EAAA,EACH,sBAAA,GACT,eAAA,CAAA2nC,GAAAf,EAAA,CAAA,EACyB,SAAAQ,CACtC,CAAA,CACX,EAMH,MAAAQ,EAAA,IAAA,CACE,GAAA,CACET,EAAA,MAAAU,GAA2BJ,GAAAN,EAAA,MAAA,CACO,6BAAA,EACA,CAAA,CAC/B,EAEHD,EAAA,MAAA9d,EAA0B,MAAA,CAE1B5B,EAAA,MAAA,GAAA5E,EAAA,kCAAA,CAAA,EAAA,EACAskB,EAAA,MAAA7W,EAA0B,CAC5B,EAGFyX,EAAA,IAAA,CACExe,GAAA6d,EAAA,KAAA,EACAF,EAAA,MAAA7d,GACA5B,EAAA,QAAA,GAAA5E,EAAA,2BAAA,CAAA,EAAA,CAAiD,EAGnDmlB,EAAA,IAAA,CACEZ,EAAA,MAAA,EAAuB,EAGzB5W,EAAA,CAAA5kB,EAAA,OAAA,CACE2W,EAAA,YAAA3W,CAAA,CAA4B,EAE9B6kB,EAAA,IAAA,CACEhK,IAAiB,EAEnBwhB,EAAA,IAAA,CACE1lB,EAAA,cAAA,CAAmB,EAGrB,OAAA2I,GAAA,gBAAA2c,CAAA,olECnJA,MAAAK,EAAAC,GAAA7iB,EAAA,EAEAzC,EAAAC,KACA2E,EAAAC,KAEAnE,EAAA4kB,GAAA1kB,EAAA,EAGApB,EAAAC,EAaAC,EAAAC,EAMA4lB,EAAAhd,GAAA/I,EAAA,YAAAE,CAAA,EAEA2J,EAAAd,GAAA/I,EAAA,aAAAE,CAAA,EAEAsC,EAAAwjB,GAAY,IAAA9kB,EAAA,iBAAA,MACkB,IAAAA,EAAA,iBAAA,MAAA,SAAA,QAAA,GACuB,EAGrD+kB,EAAA5lB,EAA8B,IAAAwJ,EAAA,MAAA,QAAA,OAEJx3B,GAAAA,EAAA,SAAAA,EAAA,MAAA,IAAAA,EAAA,QAAA,GAC4B,EAAA,MAChD,EAEN6zC,EAAAxkB,EAAA,EAAA,EACAyM,EAAA,MAAA5kB,EAAA,OAAA,aAGE,MAAA48B,EAAA,KAAA,MACAC,KACA,GAAA,CACE,MAAAC,EAAAla,GAAA3J,EAAA,KAAA,EACA8jB,EAAAna,GAAAtC,EAAA,MAAA,KAAA,EACA0c,EAAApa,GAAAtC,EAAA,MAAA,SAAA,EACA2c,EAAA3c,EAAA,MAAA,KAAA,WAAA,WAAAA,EAAA,MAAA,KAAA,WAAAsC,IAEMtK,EAAAX,EAAA,iBAAA,MAAA,SAAA,sBAAA,YAAAW,EAAA,KAAA,aAEK,EAAAsK,GAAAtC,EAAA,MAAA,IAAA,EAIX4c,GAAAtkB,EAAAjB,EAAA,iBAAA,MAAA,SAAA,sBAAA,YAAAiB,EAAA,QAAA,IACoE4J,GAE9DA,EAAA,gBACEA,EAAA,gBAEF,IAIN,IAAA2a,EAAA,CAAA,EAEAD,EACEC,EAAA,CAAA,GAAAD,EAAA,GAAAta,GAAAtC,EAAA,MAAA,OAAA,CAAA,EAEA6c,EAAAva,GAAAtC,EAAA,MAAA,OAAA,EAGF,MAAAvG,GAAA,CAAsB,KAAAuG,EAAA,MAAA,KACA,IAAAwc,EACf,QAAAK,EACI,MAAAJ,EACF,UAAAC,EACI,KAAAC,GAAA,CAAA,SAAA,OAAA,WAAA,EAAA,EAC4C,eAAAnkB,EAAA9Y,GAAA,YAAAA,EAAA,OAAA,YAAA8Y,EAAA,MACtB,eAAA9Y,GAAA,YAAAA,EAAA,YAAA,OACO,CAAA,EAE1C,MAAAo9B,EAAA,KAAA,IAAA,EAAAR,EACAS,KACAxhB,EAAA,QAAA,GAAA5E,EAAA,oBAAA,CAAA,SAAAmmB,CAAA,CAAA,CAAA,EAAA,GACAp9B,GAAA,YAAAA,EAAA,aAAA,gBAAAsgB,EAAA,MAAA,MACEzE,EAAA,QAAA5E,EAAA,+BAAA,CAAA,CACF,OAAAhG,EAAA,CAEAosB,KACA,QAAA,MAAApsB,CAAA,CAAe,EAEjB0S,EAAAnG,GAAA,YAAA,MAAAmG,EAAA,SAAA,CAA6B,KAAA,mBACrB,SAAA,gBACI,SAAA2Y,EAAA,qBAAA,KACwC,EACnD,EAGHre,GAAA,IAAA/F,GAAA,MACwB0C,GAAA,CAEpB,GAAAA,IAAA,QAAA,CACEjE,EAAA,kBAAA,CAAA,CAAA,EACA,MAAA,CAGF,GAAA,EACEiE,GAAA,YAAAA,EAAA,QAAA,aAAAA,GAAA,YAAAA,EAAA,iBAAA,eAKEjE,EAAA,kBAAA,CAAAiE,CAAA,CAAA,EAEAjE,EAAA,kBAAA,CAAA,GAAAF,EAAA,UAAA,CAAA,EAAAmE,CAAA,CAAA,CAGF,OAAAhhB,EAAA,CAEA,QAAA,IAAAA,CAAA,CAAiB,CACnB,EACF,CAAA,KAAA,EAAA,CACa,EAGfqkB,GAAA,IAAAlG,EACQulB,GAAA,CAEJ,GAAAA,EAAA,OAAAA,EAAA,QAAA,eAAA,CACE,MAAAzjB,EAAA,CAAiB,CACf,KAAA,QACQ,MAAA,CACC,QAAAyjB,EAAA,MAAA,QAAArmB,CAAA,EAC0B,KAAAqmB,EAAA,MAAA,KACZ,UAAAA,EAAA,MAAA,SACK,CAC1B,CACF,EAEF3mB,EAAA,kBAAAkD,CAAA,CAAgC,CAClC,EACF,CAAA,KAAA,EAAA,CACa,EAGf,MAAA0jB,EAAA,IAAA,CACEZ,EAAA,MAAA,EAA6B,EAE/BN,EAAA,IAAA,CACE1kB,EAAA,iBAAA,MAAA,SAAA,aAAAA,EAAA,iBAAA,MAAA,SAAA,YAAA,iBAAA,mBAKE6lB,GAAA7lB,EAAA,iBAAA,MAAA,SAAA,YAAA,WACmDA,EAAA,iBAAA,MAAA,SAAA,YAAA,aACAA,EAAA,iBAAA,MAAA,SAAA,OACZ,EAGvCA,EAAA,iBAAA,MAAA,SAAA,QAAA,IAEAglB,EAAA,MAAA,EACF,EAEFP,EAAA,IAAA,CACE9b,EAAA,MAAA,MAAA,EAAsB,EAExB,OAAAhB,GAAA,sBAAAsF,CAAA,EACAtF,GAAA,eAAA+c,CAAA,EACA/c,GAAA,kBAAA,IAAA,CACEqd,EAAA,MAAA,EAA6B,CAAA,EAE/Brd,GAAA,gBAAA8c,CAAA,EAEA9c,GAAA,mBAAA,CAAA,CAAA,IAAAme,KAAA,CACEjB,EAAA,MAAAiB,CAA0B,CAAA,o/CCjQfC,GAAkBC,IAAwC,CACrE,OAAO70C,EAAkBC,EAAkB,CACrC,OAAAD,IAAM,QAAaC,IAAM,OACpB40C,EAAG,OAAO70C,EAAGC,CAAC,EAGhBD,IAAM,QAAaC,IAAM,MAClC,CACF,GAQa60C,GAAY,CAAOlzC,EAAkBizC,KAA4B,CAC5E,OAAO70C,EAAMC,EAAM,CACjB,OAAO40C,EAAG,OAAOjzC,EAAI5B,CAAC,EAAG4B,EAAI3B,CAAC,CAAC,CACjC,CACF,GAaa80C,GAA8B,CACzC,OAAO/0C,EAAQC,EAAQ,CACd,OAAA64B,GAAQ94B,EAAGC,CAAC,CACrB,CACF,ECZa+0C,GAAmBC,GAA0B,CACxD,GAAIL,GAAYM,EAAI,EACpB,EAAGC,GACH,KAAMD,GACN,IAAKA,GACL,QAASJ,GACNM,GAAQA,EAAI,OAAQzb,GAAMA,EAAE,MAAQ,IAAMA,EAAE,QAAU,EAAE,EACzDob,EACF,EACA,MAAOG,GACP,UAAWA,GACX,KAAMH,EACR,CAAC,EAEYM,GAAwBL,GAAiB,sGCpBtD,MAAAL,EAAAje,GANA9I,EAMA,aAJAE,CAIA,EAGA,IAAAwnB,EAAAnc,GAAAwb,EAAA,MAAA,SAAA,OAAA,EACA,OAAAxf,GAAA,IAAAwf,EAAA,MAAA,SAAA,QAC2BY,GAAA,CAGvB,CAAAZ,EAAA,MAAA,SAAA,SAAA,CAAAU,GAAAC,EAAAC,CAAA,IAIEZ,EAAA,MAAA,SAAA,QAAA,IAGFW,EAAAnc,GAAAoc,CAAA,CAAmC,EACrC,CAAA,KAAA,EAAA,CACa,26BC+Cf,MAAApnB,EAAAC,KAOAP,EAAAC,EAOAyJ,EAAAlI,EAAA,IAAA,EACAxsB,EAAAwsB,EAAA,IAAA,EAEAmmB,EAAAnmB,EAAA,IAAA,EACAomB,EAAApmB,EAAA,IAAA,EACAqmB,EAAArmB,EAAA,IAAA,EACAsmB,EAAAtmB,EAAA,IAAA,knEC1CA,MAAA,EAAAjB,KACAS,EAAA4kB,GAAA1kB,EAAA,EAEAykB,EAAAC,GAAA7iB,EAAA,EAEAglB,EAAAvmB,EAAA,EAAA,EAEAwmB,EAAA7nB,EAAA,IAAAiB,EAAA,QAAA,WAAA,EAEAkB,EAAAnC,EAAA,CAAqB,IAAA,IAAA,OAAA,QAAAwB,EAAAX,EAAA,iBAAA,QAAA,YAAAW,EAAA,SAAA,QAAA,MAAA,IAC6C,IAAA9qB,GAAA,CAE9DmqB,EAAA,iBAAA,MAAA,SAAA,QAAA,IAAAnqB,CAAoD,CACtD,CAAA,EAGFoxC,EAAA,IAAA,CACED,EAAA,MAGEtlB,KAFAwlB,GAGF,EAGFA,EAAA,IAAA,SACE7lB,GAAAC,EAAA,OAAAX,EAAAX,EAAA,iBAAA,QAAA,YAAAW,EAAA,SAAA,QAAA,OAAA,GAEAM,EAAA4E,GAAA,YAAA,MAAA5E,EAAA,SAAA,CAA6B,KAAA,mBACrB,SAAA,iBACI,SAAA0jB,EAAA,qBAAA,KACwC,EACnD,EAGHwC,EAAA,IAAA,CACED,IACAH,EAAA,MAAA,EAA8B,EAGhCK,EAAA5mB,EAAA,CAAA,CAAA,EAEA8F,GAAAtG,EAAA,iBACO2lB,GAAA,CAEHA,IACEyB,EAAA,MAAA,KAAAzB,EAAA,SAAA,QAAA,GAAA,EACAyB,EAAA,MAAA,OAAA,GACEA,EAAA,MAAA,SAIJJ,EAAA,OAAAI,EAAA,MAAA,SAAA,GAAAA,EAAA,MAAA,GAAA,CAAA,IAAAA,EAAA,MAAA,GAAA,CAAA,IAKE1lB,KACAqlB,EAAA,MAAA,GACF,EACF,CACA,UAAA,EACa,CACb,EAGF,MAAAM,EAAA,IAAA,CACEL,EAAA,OAAqBtlB,KACrBqlB,EAAA,MAAA,EAA8B,EAGhC,OAAApf,GAAA,cACEuf,EACA/nB,EAAA,IAAA,CAAA6nB,EAAA,KAAA,CAC+B,EAGjCrf,GAAA,iBAAAjG,GAAAslB,CAAA,yhDCtDA,MAAA,EAAAznB,KACAS,EAAA4kB,GAAA1kB,EAAA,EAEAC,EAAAhB,EAAA,IAAAa,EAAA,aAAA,KAAA,EAEAsnB,EAAA1C,GAAA2C,EAAA,EAEAC,EAAAhnB,EAAA,IAAA,EAEAinB,GAAA,CAAY,MAAAtoB,EAAA,IAAA,EAAA,oBAAA,CAAA,CACmC,CAAA,EAG/C,MAAAuoB,EAAA1nB,EAAA,gBAEA2nB,EAAA,IAAA,CACE,MAAA7B,EAAA9lB,EAAA,aAAA,CAA8B,QAAA4nB,GAAA,EACE,QAAA,EACrB,CAAA,EAGX5nB,EAAA,aAAA8lB,EAAA,EAAA,CAAwB,EAE1B+B,EAAAvuB,GAAA,CACE0G,EAAA,kBAAA1G,EAAA,SAAAA,EAAA,QAAA,CAA6C,EAG/CwuB,EAAAC,GAAA,CACE,MAAAC,EAAAhoB,EAAA,UAAA+nB,CAAA,EAAA,MAEAC,EAAA,SAAA,QACER,EAAA,MAAAO,GAEA/nB,EAAA,SAAAgoB,EAAA,EAAA,EACAV,EAAA,yBAAAU,EAAA,EAAA,EACF,EAMFC,EAAA,IAAA,CACET,EAAA,MAAA,IAAgC,EAMlCU,EAAA,IAAA,CACEV,EAAA,QACExnB,EAAA,SAAAwnB,EAAA,KAAA,EACAA,EAAA,MAAA,KACF,EAGFW,EAAA3nB,EAAA,EAAA,EACA4nB,EAAA5nB,EAAA,CAAA,EACA6nB,EAAA7nB,EAAA,IAAA,EAEA8nB,EAAAP,GAAA,CACE,MAAAQ,EAAAvoB,EAAA,oBAEAuoB,EAAA,GACEJ,EAAA,MAAA,GACAC,EAAA,MAAAG,EACAF,EAAA,MAAAN,GAEA/nB,EAAA,eAAA+nB,CAAA,CACF,EAGFS,EAAA,IAAA,CACEH,EAAA,OAAyBroB,EAAA,eAAAqoB,EAAA,KAAA,EACzBF,EAAA,MAAA,EAA+B,EAGjCM,EAAA3C,GAAA,CACE9lB,EAAA,UAAA8lB,CAAA,CAAkB,EAGpB4C,GAAA,IAAA,CACEtoB,EAAA,QAAA,aACEsB,IACF,CAAA,EAGF,MAAAinB,EAAAnoB,EAAA,EAAA,EACAooB,EAAApoB,IAEAqoB,EAAA/C,GAAA,CACE6C,EAAA,MAAA7C,EAAA,SAAA,QAAA,KACA8C,EAAA,MAAA9C,EAAA,EAA6C,EAG/CgD,EAAA,IAAA,CACE,MAAAhD,EAAA9lB,EAAA,UAAA4oB,EAAA,KAAA,EACA9C,EAAA,QACEA,EAAA,MAAA,SAAA,QAAA,KAAA6C,EAAA,MACA3oB,EAAA,UAAA8lB,EAAA,KAAA,GAEF8C,EAAA,MAAA,MAAyC,EAG3CG,EAAAhB,GAAA,CACE,MAAAjC,EAAA9lB,EAAA,UAAA+nB,CAAA,EACA,GAAAjC,EAAA,MAAA,CACE,MAAAkD,EAAAhpB,EAAA,aAAA,CAAiC,QAAA8lB,EAAA,MAAA,SAAA,QACH,QAAA,EACnB,CAAA,EAEX9lB,EAAA,aAAAgpB,EAAA,EAAA,CAA2B,CAC7B,EAGF,OAAArhB,GAAA,mBAAA,CAAA,CAAA,QAAAgB,EAAA,YAAAsgB,CAAA,IAAA,CACEjpB,EAAA,aAAA,CAAkB,YAAAipB,EAChB,QAAAtgB,EACA,QAAA,EACS,CAAA,CACV,CAAA,EAGHhB,GAAA,iBAAA,IAAA,CACEkhB,EAAA7oB,EAAA,UAAAG,EAAA,KAAA,EAAA,KAAA,CAA4D,CAAA,EAG9DwH,GAAA,oBAAA,CAAA,CAAA,MAAAogB,KAAA,CACEgB,EAAAhB,GAAA5nB,EAAA,KAAA,CAAwC,CAAA,EAE1CwH,GAAA,oBAAA,IAAA,CACEmgB,EAAA3nB,EAAA,KAAA,CAA4B,CAAA,EAE9BwH,GAAA,kBAAA,IAAA,CACE3H,EAAA,eAAAG,EAAA,KAAA,CAAsC,CAAA,EAExCwH,GAAA,eAAAggB,CAAA","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,72,73,74,75,76,77,78,79,80,81,82]}