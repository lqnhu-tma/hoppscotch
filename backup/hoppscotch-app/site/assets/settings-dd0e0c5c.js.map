{"version":3,"file":"settings-dd0e0c5c.js","sources":["../../../hoppscotch-common/src/components/smart/ChangeLanguage.vue","../../../hoppscotch-common/src/components/smart/AccentModePicker.vue","../../../hoppscotch-common/src/components/smart/ColorModePicker.vue","../../../hoppscotch-common/src/pages/settings.vue"],"sourcesContent":["<template>\n  <span class=\"inline-flex\">\n    <tippy\n      interactive\n      trigger=\"click\"\n      theme=\"popover\"\n      :on-shown=\"() => tippyActions.focus()\"\n    >\n      <HoppSmartSelectWrapper>\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('settings.choose_language')\"\n          class=\"pr-8\"\n          :icon=\"IconLanguages\"\n          outline\n          :label=\"currentLocale.name\"\n        />\n      </HoppSmartSelectWrapper>\n      <template #content=\"{ hide }\">\n        <div class=\"flex flex-col space-y-2\">\n          <HoppSmartInput\n            v-model=\"searchQuery\"\n            styles=\"ticky z-10 top-0 flex-shrink-0 overflow-x-auto\"\n            :placeholder=\"`${t('action.search')}`\"\n            type=\"search\"\n            input-styles=\"flex w-full p-4 py-2 input !bg-primaryContrast\"\n          />\n          <div\n            ref=\"tippyActions\"\n            class=\"flex flex-col focus:outline-none\"\n            tabindex=\"0\"\n            @keyup.escape=\"hide()\"\n          >\n            <HoppSmartLink\n              v-for=\"locale in filteredAppLanguages\"\n              :key=\"`locale-${locale.code}`\"\n              class=\"flex flex-1\"\n              @click=\"\n                () => {\n                  changeLocale(locale.code)\n                  hide()\n                }\n              \"\n            >\n              <HoppSmartItem\n                :label=\"locale.name\"\n                :active-info-icon=\"currentLocale.code === locale.code\"\n                :info-icon=\"\n                  currentLocale.code === locale.code ? IconDone : null\n                \"\n              />\n            </HoppSmartLink>\n            <HoppSmartPlaceholder\n              v-if=\"\n                !(\n                  filteredAppLanguages.length !== 0 ||\n                  APP_LANGUAGES.length === 0\n                )\n              \"\n              :text=\"`${t('state.nothing_found')} ‟${searchQuery}”`\"\n            >\n              <template #icon>\n                <icon-lucide-search class=\"svg-icons opacity-75\" />\n              </template>\n            </HoppSmartPlaceholder>\n          </div>\n        </div>\n      </template>\n    </tippy>\n  </span>\n</template>\n\n<script setup lang=\"ts\">\nimport { pipe } from \"fp-ts/function\"\nimport * as A from \"fp-ts/Array\"\nimport * as O from \"fp-ts/Option\"\nimport { computed, ref } from \"vue\"\nimport { APP_LANGUAGES, FALLBACK_LANG, changeAppLanguage } from \"@modules/i18n\"\nimport { useFullI18n } from \"@composables/i18n\"\nimport IconLanguages from \"~icons/lucide/languages\"\nimport IconDone from \"~icons/lucide/check\"\n\n// TODO: This component might be completely whack right now\n\nconst i18n = useFullI18n()\nconst t = i18n.t\n\nconst currentLocale = computed(() =>\n  pipe(\n    APP_LANGUAGES,\n    A.findFirst(({ code }) => code === i18n.locale.value),\n    O.getOrElse(() => FALLBACK_LANG)\n  )\n)\n\nconst changeLocale = (locale: string) => {\n  // TODO: Implement\n  changeAppLanguage(locale)\n}\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst searchQuery = ref(\"\")\n\nconst filteredAppLanguages = computed(() => {\n  return APP_LANGUAGES.filter((obj) =>\n    Object.values(obj).some((val) =>\n      val.toLowerCase().includes(searchQuery.value.toLowerCase())\n    )\n  )\n})\n</script>\n","<template>\n  <div class=\"flex\">\n    <!-- text-green-500 -->\n    <!-- text-teal-500 -->\n    <!-- text-blue-500 -->\n    <!-- text-indigo-500 -->\n    <!-- text-purple-500 -->\n    <!-- text-yellow-500 -->\n    <!-- text-orange-500 -->\n    <!-- text-red-500 -->\n    <!-- text-pink-500 -->\n    <HoppButtonSecondary\n      v-for=\"(color, index) of accentColors\"\n      :key=\"`color-${index}`\"\n      v-tippy=\"{ theme: 'tooltip' }\"\n      :title=\"`${color.charAt(0).toUpperCase()}${color.slice(1)}`\"\n      :class=\"[{ 'bg-primaryLight': color === active }]\"\n      class=\"rounded\"\n      :icon=\"color === active ? IconCircleDot : IconCircle\"\n      :color=\"color\"\n      @click=\"setActiveColor(color)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconCircle from \"~icons/lucide/circle\"\nimport IconCircleDot from \"~icons/lucide/circle-dot\"\nimport {\n  HoppAccentColors,\n  HoppAccentColor,\n  applySetting,\n} from \"~/newstore/settings\"\nimport { useSetting } from \"@composables/settings\"\n\nconst accentColors = HoppAccentColors\nconst active = useSetting(\"THEME_COLOR\")\n\nconst setActiveColor = (color: HoppAccentColor) => {\n  document.documentElement.setAttribute(\"data-accent\", color)\n  applySetting(\"THEME_COLOR\", color)\n}\n</script>\n","<template>\n  <div class=\"flex\">\n    <HoppButtonSecondary\n      v-for=\"(color, index) of colors\"\n      :key=\"`color-${index}`\"\n      v-tippy=\"{ theme: 'tooltip' }\"\n      :title=\"t(getColorModeName(color))\"\n      :class=\"{\n        'bg-primaryLight !text-accent hover:text-accent': color === active,\n      }\"\n      class=\"rounded\"\n      :icon=\"getIcon(color)\"\n      @click=\"setBGMode(color)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconMonitor from \"~icons/lucide/monitor\"\nimport IconSun from \"~icons/lucide/sun\"\nimport IconCloud from \"~icons/lucide/cloud\"\nimport IconMoon from \"~icons/lucide/moon\"\nimport { applySetting, HoppBgColor, HoppBgColors } from \"~/newstore/settings\"\nimport { useSetting } from \"@composables/settings\"\nimport { useI18n } from \"@composables/i18n\"\n\nconst t = useI18n()\n\nconst colors = HoppBgColors\nconst active = useSetting(\"BG_COLOR\")\n\nconst setBGMode = (color: HoppBgColor) => {\n  applySetting(\"BG_COLOR\", color)\n}\n\nconst getIcon = (color: HoppBgColor) => {\n  switch (color) {\n    case \"system\":\n      return IconMonitor\n    case \"light\":\n      return IconSun\n    case \"dark\":\n      return IconCloud\n    case \"black\":\n      return IconMoon\n    default:\n      return IconMonitor\n  }\n}\n\nconst getColorModeName = (colorMode: string) => {\n  switch (colorMode) {\n    case \"system\":\n      return \"settings.system_mode\"\n    case \"light\":\n      return \"settings.light_mode\"\n    case \"dark\":\n      return \"settings.dark_mode\"\n    case \"black\":\n      return \"settings.black_mode\"\n    default:\n      return \"settings.system_mode\"\n  }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"container divide-y divide-dividerLight\">\n      <div class=\"md:grid md:grid-cols-3 md:gap-4\">\n        <div class=\"p-8 md:col-span-1\">\n          <h3 class=\"heading\">\n            {{ t(\"settings.theme\") }}\n          </h3>\n          <p class=\"my-1 text-secondaryLight\">\n            {{ t(\"settings.theme_description\") }}\n          </p>\n        </div>\n        <div class=\"space-y-8 p-8 md:col-span-2\">\n          <section>\n            <h4 class=\"font-semibold text-secondaryDark\">\n              {{ t(\"settings.background\") }}\n            </h4>\n            <div class=\"my-1 text-secondaryLight\">\n              {{ t(getColorModeName(colorMode.preference)) }}\n              <span v-if=\"colorMode.preference === 'system'\">\n                ({{ t(getColorModeName(colorMode.value)) }})\n              </span>\n            </div>\n            <div class=\"mt-4\">\n              <SmartColorModePicker />\n            </div>\n          </section>\n          <section>\n            <h4 class=\"font-semibold text-secondaryDark\">\n              {{ t(\"settings.accent_color\") }}\n            </h4>\n            <div class=\"my-1 text-secondaryLight\">\n              {{ ACCENT_COLOR.charAt(0).toUpperCase() + ACCENT_COLOR.slice(1) }}\n            </div>\n            <div class=\"mt-4\">\n              <SmartAccentModePicker />\n            </div>\n          </section>\n          <section>\n            <h4 class=\"font-semibold text-secondaryDark\">\n              {{ t(\"settings.language\") }}\n            </h4>\n            <div class=\"mt-4\">\n              <SmartChangeLanguage />\n            </div>\n          </section>\n          <section>\n            <h4 class=\"font-semibold text-secondaryDark\">\n              {{ t(\"settings.experiments\") }}\n            </h4>\n            <div class=\"my-1 text-secondaryLight\">\n              {{ t(\"settings.experiments_notice\") }}\n              <HoppSmartAnchor\n                class=\"link\"\n                to=\"https://github.com/hoppscotch/hoppscotch/issues/new/choose\"\n                blank\n                :label=\"t('app.contact_us')\"\n              />.\n            </div>\n            <div class=\"space-y-4 py-4\">\n              <div class=\"flex items-center\">\n                <HoppSmartToggle\n                  v-if=\"hasPlatformTelemetry\"\n                  :on=\"TELEMETRY_ENABLED\"\n                  @change=\"showConfirmModal\"\n                >\n                  {{ t(\"settings.telemetry\") }}\n                </HoppSmartToggle>\n              </div>\n              <div class=\"flex items-center\">\n                <HoppSmartToggle\n                  :on=\"EXPAND_NAVIGATION\"\n                  @change=\"toggleSetting('EXPAND_NAVIGATION')\"\n                >\n                  {{ t(\"settings.expand_navigation\") }}\n                </HoppSmartToggle>\n              </div>\n              <div class=\"flex items-center\">\n                <HoppSmartToggle\n                  :on=\"SIDEBAR_ON_LEFT\"\n                  @change=\"toggleSetting('SIDEBAR_ON_LEFT')\"\n                >\n                  {{ t(\"settings.sidebar_on_left\") }}\n                </HoppSmartToggle>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n\n      <div class=\"md:grid md:grid-cols-3 md:gap-4\">\n        <div class=\"p-8 md:col-span-1\">\n          <h3 class=\"heading\">\n            {{ t(\"settings.interceptor\") }}\n          </h3>\n          <p class=\"my-1 text-secondaryLight\">\n            {{ t(\"settings.interceptor_description\") }}\n          </p>\n        </div>\n        <div class=\"space-y-8 p-8 md:col-span-2\">\n          <section class=\"flex flex-col space-y-2\">\n            <h4 class=\"font-semibold text-secondaryDark\">\n              {{ t(\"settings.interceptor\") }}\n            </h4>\n            <AppInterceptor :is-tooltip-component=\"false\" />\n          </section>\n          <section v-for=\"[id, settings] in interceptorsWithSettings\" :key=\"id\">\n            <h4 class=\"font-semibold text-secondaryDark\">\n              {{ settings.entryTitle(t) }}\n            </h4>\n            <component :is=\"settings.component\" />\n          </section>\n        </div>\n      </div>\n\n      <template v-if=\"platform.ui?.additionalSettingsSections?.length\">\n        <template\n          v-for=\"item in platform.ui?.additionalSettingsSections\"\n          :key=\"item.id\"\n        >\n          <component :is=\"item\" />\n        </template>\n      </template>\n    </div>\n    <HoppSmartConfirmModal\n      :show=\"confirmRemove\"\n      :title=\"`${t('confirm.remove_telemetry')} ${t(\n        'settings.telemetry_helps_us'\n      )}`\"\n      @hide-modal=\"confirmRemove = false\"\n      @resolve=\"\n        () => {\n          toggleSetting('TELEMETRY_ENABLED')\n          confirmRemove = false\n        }\n      \"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch } from \"vue\"\nimport { applySetting, toggleSetting } from \"~/newstore/settings\"\nimport { useSetting } from \"@composables/settings\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { usePageHead } from \"@composables/head\"\nimport { useService } from \"dioc/vue\"\nimport { InterceptorService } from \"~/services/interceptor.service\"\nimport { pipe } from \"fp-ts/function\"\nimport * as O from \"fp-ts/Option\"\nimport * as A from \"fp-ts/Array\"\nimport { platform } from \"~/platform\"\n\nconst t = useI18n()\nconst colorMode = useColorMode()\n\nusePageHead({\n  title: computed(() => t(\"navigation.settings\")),\n})\n\nconst interceptorService = useService(InterceptorService)\nconst interceptorsWithSettings = computed(() =>\n  pipe(\n    interceptorService.availableInterceptors.value,\n    A.filterMap((interceptor) =>\n      interceptor.settingsPageEntry\n        ? O.some([\n            interceptor.interceptorID,\n            interceptor.settingsPageEntry,\n          ] as const)\n        : O.none\n    )\n  )\n)\n\nconst ACCENT_COLOR = useSetting(\"THEME_COLOR\")\nconst PROXY_URL = useSetting(\"PROXY_URL\")\nconst TELEMETRY_ENABLED = useSetting(\"TELEMETRY_ENABLED\")\nconst EXPAND_NAVIGATION = useSetting(\"EXPAND_NAVIGATION\")\nconst SIDEBAR_ON_LEFT = useSetting(\"SIDEBAR_ON_LEFT\")\n\nconst hasPlatformTelemetry = Boolean(platform.platformFeatureFlags.hasTelemetry)\n\nconst confirmRemove = ref(false)\n\nconst proxySettings = computed(() => ({\n  url: PROXY_URL.value,\n}))\n\nwatch(\n  proxySettings,\n  ({ url }) => {\n    applySetting(\"PROXY_URL\", url)\n  },\n  { deep: true }\n)\n\nconst showConfirmModal = () => {\n  if (TELEMETRY_ENABLED.value) confirmRemove.value = true\n  else toggleSetting(\"TELEMETRY_ENABLED\")\n}\n\nconst getColorModeName = (colorMode: string) => {\n  switch (colorMode) {\n    case \"system\":\n      return \"settings.system_mode\"\n    case \"light\":\n      return \"settings.light_mode\"\n    case \"dark\":\n      return \"settings.dark_mode\"\n    case \"black\":\n      return \"settings.black_mode\"\n    default:\n      return \"settings.system_mode\"\n  }\n}\n</script>\n"],"names":["i18n","useFullI18n","t","currentLocale","computed","pipe","APP_LANGUAGES","A.findFirst","code","O.getOrElse","FALLBACK_LANG","changeLocale","locale","changeAppLanguage","tippyActions","ref","searchQuery","filteredAppLanguages","obj","val","accentColors","HoppAccentColors","active","useSetting","setActiveColor","color","applySetting","useI18n","colors","HoppBgColors","setBGMode","getIcon","IconMonitor","IconSun","IconCloud","IconMoon","getColorModeName","colorMode","useColorMode","usePageHead","interceptorService","useService","InterceptorService","interceptorsWithSettings","A.filterMap","interceptor","O.some","O.none","ACCENT_COLOR","PROXY_URL","TELEMETRY_ENABLED","EXPAND_NAVIGATION","SIDEBAR_ON_LEFT","hasPlatformTelemetry","platform","confirmRemove","proxySettings","watch","url","showConfirmModal","toggleSetting","colorMode2"],"mappings":"08BAoFA,MAAAA,EAAAC,KACAC,EAAAF,EAAA,EAEAG,EAAAC,EAAsB,IAAAC,EACpBC,EACEC,GAAA,CAAA,CAAA,KAAAC,CAAA,IAAAA,IAAAR,EAAA,OAAA,KAAA,EACoDS,GAAA,IAAAC,EAAA,CACrB,CACjC,EAGFC,EAAAC,GAAA,CAEEC,GAAAD,CAAA,CAAwB,EAI1BE,EAAAC,EAAA,IAAA,EACAC,EAAAD,EAAA,EAAA,EAEAE,EAAAb,EAAA,IACEE,EAAA,OAAqBY,GAAA,OAAA,OAAAA,CAAA,EAAA,KACAC,GAAAA,EAAA,YAAA,EAAA,SAAAH,EAAA,MAAA,aAAA,CACyC,CAC5D,CACF,65CC1EF,MAAAI,EAAAC,GACAC,EAAAC,EAAA,aAAA,EAEAC,EAAAC,GAAA,CACE,SAAA,gBAAA,aAAA,cAAAA,CAAA,EACAC,EAAA,cAAAD,CAAA,CAAiC,saCdnC,MAAAvB,EAAAyB,KAEAC,EAAAC,GACAP,EAAAC,EAAA,UAAA,EAEAO,EAAAL,GAAA,CACEC,EAAA,WAAAD,CAAA,CAA8B,EAGhCM,EAAAN,GAAA,CACE,OAAAA,EAAA,CAAe,IAAA,SAEX,OAAAO,EAAO,IAAA,QAEP,OAAAC,GAAO,IAAA,OAEP,OAAAC,GAAO,IAAA,QAEP,OAAAC,GAAO,QAEP,OAAAH,CAAO,CACX,EAGFI,EAAAC,GAAA,CACE,OAAAA,EAAA,CAAmB,IAAA,SAEf,MAAA,uBAAO,IAAA,QAEP,MAAA,sBAAO,IAAA,OAEP,MAAA,qBAAO,IAAA,QAEP,MAAA,sBAAO,QAEP,MAAA,sBAAO,CACX,k2CC4FF,MAAAnC,EAAAyB,KACAU,EAAAC,KAEAC,GAAA,CAAY,MAAAnC,EAAA,IAAAF,EAAA,qBAAA,CAAA,CACoC,CAAA,EAGhD,MAAAsC,EAAAC,GAAAC,EAAA,EACAC,EAAAvC,EAAiC,IAAAC,EAC/BmC,EAAA,sBAAA,MAC2CI,GACvCC,GAAAA,EAAA,kBAAAC,GAAA,CAEWD,EAAA,cACOA,EAAA,iBACA,CAAA,EAAAE,EAEZ,CACR,CACF,EAGFC,EAAAzB,EAAA,aAAA,EACA0B,EAAA1B,EAAA,WAAA,EACA2B,EAAA3B,EAAA,mBAAA,EACA4B,EAAA5B,EAAA,mBAAA,EACA6B,EAAA7B,EAAA,iBAAA,EAEA8B,EAAA,EAAAC,EAAA,qBAAA,aAEAC,EAAAxC,EAAA,EAAA,EAEAyC,EAAApD,EAAA,KAAA,CAAsC,IAAA6C,EAAA,KACrB,EAAA,EAGjBQ,GAAAD,EACE,CAAA,CAAA,IAAAE,CAAA,IAAA,CAEEhC,EAAA,YAAAgC,CAAA,CAA6B,EAC/B,CAAA,KAAA,EAAA,CACa,EAGf,MAAAC,EAAA,IAAA,CACET,EAAA,MAA6BK,EAAA,MAAA,GACxBK,EAAA,mBAAA,CAAiC,EAGxCxB,EAAAyB,GAAA,CACE,OAAAA,EAAA,CAAmB,IAAA,SAEf,MAAA,uBAAO,IAAA,QAEP,MAAA,sBAAO,IAAA,OAEP,MAAA,qBAAO,IAAA,QAEP,MAAA,sBAAO,QAEP,MAAA,sBAAO,CACX"}