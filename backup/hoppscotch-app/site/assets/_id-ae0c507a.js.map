{"version":3,"file":"_id-ae0c507a.js","sources":["../../../hoppscotch-common/src/components/embeds/index.vue","../../../hoppscotch-common/src/pages/e/_id.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col flex-1\">\n    <header\n      class=\"flex items-center justify-between flex-1 flex-shrink-0 px-2 py-2 space-x-2 overflow-x-auto overflow-y-hidden\"\n    >\n      <div class=\"flex items-center justify-between flex-1 space-x-2\">\n        <HoppButtonSecondary\n          class=\"!font-bold uppercase tracking-wide !text-secondaryDark hover:bg-primaryDark focus-visible:bg-primaryDark\"\n          :label=\"t('app.name')\"\n          to=\"https://hoppscotch.io\"\n          blank\n        />\n        <div class=\"flex\">\n          <HoppButtonSecondary\n            :label=\"t('app.open_in_hoppscotch')\"\n            :to=\"sharedRequestURL\"\n            blank\n          />\n        </div>\n      </div>\n    </header>\n    <div class=\"sticky top-0 z-10 flex-1\">\n      <div\n        class=\"flex-none flex-shrink-0 p-4 bg-primary sm:flex sm:flex-shrink-0 sm:space-x-2\"\n      >\n        <div\n          class=\"flex flex-1 overflow-hidden border divide-x rounded text-secondaryDark divide-divider min-w-[12rem] overflow-x-auto border-divider\"\n        >\n          <span\n            class=\"flex items-center justify-center px-4 py-2 font-semibold transition rounded-l\"\n          >\n            {{ tab.document.request.method }}\n          </span>\n          <div\n            class=\"flex items-center flex-1 flex-shrink-0 min-w-0 truncate rounded-r\"\n          >\n            <SmartEnvInput\n              v-model=\"tab.document.request.endpoint\"\n              :readonly=\"true\"\n              :envs=\"tabRequestVariables\"\n            />\n          </div>\n        </div>\n        <div class=\"flex mt-2 space-x-2 sm:mt-0\">\n          <HoppButtonPrimary\n            id=\"send\"\n            :title=\"`${t(\n              'action.send'\n            )} <kbd>${getSpecialKey()}</kbd><kbd>â†©</kbd>`\"\n            :label=\"`${!loading ? t('action.send') : t('action.cancel')}`\"\n            class=\"flex-1 min-w-20\"\n            outline\n            @click=\"!loading ? newSendRequest() : cancelRequest()\"\n          />\n          <div class=\"flex\">\n            <HoppButtonSecondary\n              :title=\"`${t(\n                'request.save'\n              )} <kbd>${getSpecialKey()}</kbd><kbd>S</kbd>`\"\n              :label=\"t('request.save')\"\n              filled\n              :icon=\"IconSave\"\n              class=\"flex-1 rounded\"\n              blank\n              outline\n              :to=\"sharedRequestURL\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <HttpRequestOptions\n      v-model=\"tab.document.request\"\n      v-model:option-tab=\"selectedOptionTab\"\n      :properties=\"properties\"\n      :envs=\"tabRequestVariables\"\n    />\n    <HttpResponse\n      v-if=\"tab.document.response\"\n      :document=\"tab.document\"\n      :is-embed=\"true\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { Ref } from \"vue\"\nimport { computed, useModel } from \"vue\"\nimport { ref } from \"vue\"\nimport { useI18n } from \"~/composables/i18n\"\nimport { useToast } from \"~/composables/toast\"\nimport { getPlatformSpecialKey as getSpecialKey } from \"~/helpers/platformutils\"\nimport * as E from \"fp-ts/Either\"\nimport { useStreamSubscriber } from \"~/composables/stream\"\nimport { HoppRESTResponse } from \"~/helpers/types/HoppRESTResponse\"\nimport { runRESTRequest$ } from \"~/helpers/RequestRunner\"\nimport { HoppTab } from \"~/services/tab\"\nimport { HoppRESTDocument } from \"~/helpers/rest/document\"\nimport IconSave from \"~icons/lucide/save\"\nimport { RESTOptionTabs } from \"../http/RequestOptions.vue\"\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  modelTab: HoppTab<HoppRESTDocument>\n  properties: RESTOptionTabs[]\n  sharedRequestID: string\n}>()\n\nconst tab = useModel(props, \"modelTab\")\n\nconst selectedOptionTab = ref<RESTOptionTabs>(props.properties[0])\n\nconst requestCancelFunc: Ref<(() => void) | null> = ref(null)\n\nconst loading = ref(false)\n\nconst shortcodeBaseURL =\n  Object.create(globalThis.import_meta_env || null).VITE_SHORTCODE_BASE_URL ?? \"https://hopp.sh\"\n\nconst sharedRequestURL = computed(() => {\n  return `${shortcodeBaseURL}/r/${props.sharedRequestID}`\n})\n\nconst tabRequestVariables = computed(() => {\n  return tab.value.document.request.requestVariables.map(({ key, value }) => ({\n    key,\n    value,\n    secret: false,\n    sourceEnv: \"RequestVariable\",\n  }))\n})\n\nconst { subscribeToStream } = useStreamSubscriber()\n\nconst newSendRequest = async () => {\n  if (newEndpoint.value === \"\" || /^\\s+$/.test(newEndpoint.value)) {\n    toast.error(`${t(\"empty.endpoint\")}`)\n    return\n  }\n\n  ensureMethodInEndpoint()\n\n  loading.value = true\n\n  const [cancel, streamPromise] = runRESTRequest$(tab)\n  const streamResult = await streamPromise\n\n  requestCancelFunc.value = cancel\n  if (E.isRight(streamResult)) {\n    subscribeToStream(\n      streamResult.right,\n      (responseState) => {\n        if (loading.value) {\n          // Check exists because, loading can be set to false\n          // when cancelled\n          updateRESTResponse(responseState)\n        }\n      },\n      () => {\n        loading.value = false\n      },\n      () => {\n        // TODO: Change this any to a proper type\n        const result = (streamResult.right as any).value\n        if (\n          result.type === \"network_fail\" &&\n          result.error?.error === \"NO_PW_EXT_HOOK\"\n        ) {\n          const errorResponse: HoppRESTResponse = {\n            type: \"extension_error\",\n            error: result.error.humanMessage.heading,\n            component: result.error.component,\n            req: result.req,\n          }\n          updateRESTResponse(errorResponse)\n        }\n        loading.value = false\n      }\n    )\n  } else {\n    loading.value = false\n    toast.error(`${t(\"error.script_fail\")}`)\n    let error: Error\n    if (typeof streamResult.left === \"string\") {\n      error = { name: \"RequestFailure\", message: streamResult.left }\n    } else {\n      error = streamResult.left\n    }\n    updateRESTResponse({\n      type: \"script_fail\",\n      error,\n    })\n  }\n}\n\nconst updateRESTResponse = (response: HoppRESTResponse | null) => {\n  tab.value.document.response = response\n}\n\nconst newEndpoint = computed(() => {\n  return tab.value.document.request.endpoint\n})\n\nconst ensureMethodInEndpoint = () => {\n  if (\n    !/^http[s]?:\\/\\//.test(newEndpoint.value) &&\n    !newEndpoint.value.startsWith(\"<<\")\n  ) {\n    const domain = newEndpoint.value.split(/[/:#?]+/)[0]\n    if (domain === \"localhost\" || /([0-9]+\\.)*[0-9]/.test(domain)) {\n      tab.value.document.request.endpoint =\n        \"http://\" + tab.value.document.request.endpoint\n    } else {\n      tab.value.document.request.endpoint =\n        \"https://\" + tab.value.document.request.endpoint\n    }\n  }\n}\n\nconst cancelRequest = () => {\n  loading.value = false\n  requestCancelFunc.value?.()\n\n  updateRESTResponse(null)\n}\n</script>\n","<template>\n  <div class=\"flex flex-col justify-center\">\n    <div\n      v-if=\"sharedRequestDetails.loading\"\n      class=\"flex justify-center items-center py-5\"\n    >\n      <HoppSmartSpinner />\n    </div>\n\n    <div\n      v-else-if=\"E.isLeft(sharedRequestDetails.data) || invalidLink\"\n      class=\"flex flex-1 flex-col items-center justify-center p-8\"\n    >\n      <icon-lucide-alert-triangle class=\"svg-icons mb-2 opacity-75\" />\n      <h1 class=\"heading text-center\">\n        {{ t(\"error.invalid_link\") }}\n      </h1>\n      <p class=\"mt-2 text-center\">\n        {{ t(\"error.invalid_embed_link\") }}\n      </p>\n    </div>\n\n    <Embeds\n      v-else-if=\"tab\"\n      v-model:modelTab=\"tab\"\n      :properties=\"properties\"\n      :shared-request-i-d=\"sharedRequestID\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\"\nimport { watch } from \"vue\"\nimport { useRoute } from \"vue-router\"\nimport { useGQLQuery } from \"~/composables/graphql\"\nimport {\n  ResolveShortcodeDocument,\n  ResolveShortcodeQuery,\n  ResolveShortcodeQueryVariables,\n} from \"~/helpers/backend/graphql\"\nimport * as E from \"fp-ts/Either\"\nimport { onMounted } from \"vue\"\nimport {\n  getDefaultRESTRequest,\n  safelyExtractRESTRequest,\n} from \"@hoppscotch/data\"\nimport { HoppTab } from \"~/services/tab\"\nimport { HoppRESTDocument } from \"~/helpers/rest/document\"\nimport { applySetting } from \"~/newstore/settings\"\nimport { useI18n } from \"~/composables/i18n\"\n\nconst t = useI18n()\n\nconst route = useRoute()\n\nconst sharedRequestID = ref(\"\")\nconst invalidLink = ref(false)\nconst properties = ref([])\n\nconst sharedRequestDetails = useGQLQuery<\n  ResolveShortcodeQuery,\n  ResolveShortcodeQueryVariables,\n  \"\"\n>({\n  query: ResolveShortcodeDocument,\n  variables: {\n    code: route.params.id.toString(),\n  },\n})\n\nconst tab = ref<HoppTab<HoppRESTDocument>>({\n  id: \"0\",\n  document: {\n    request: getDefaultRESTRequest(),\n    response: null,\n    isDirty: false,\n  },\n})\n\nwatch(\n  () => sharedRequestDetails.data,\n  () => {\n    if (sharedRequestDetails.loading) return\n\n    const data = sharedRequestDetails.data\n\n    if (E.isRight(data)) {\n      if (!data.right.shortcode?.request) {\n        invalidLink.value = true\n        return\n      }\n\n      const request: unknown = JSON.parse(\n        data.right.shortcode?.request as string\n      )\n\n      tab.value.document.request = safelyExtractRESTRequest(\n        request,\n        getDefaultRESTRequest()\n      )\n\n      if (data.right.shortcode && data.right.shortcode.properties) {\n        const parsedProperties = JSON.parse(data.right.shortcode.properties)\n        if (parsedProperties.theme === \"dark\") {\n          applySetting(\"BG_COLOR\", \"dark\")\n        } else if (parsedProperties.theme === \"light\") {\n          applySetting(\"BG_COLOR\", \"light\")\n        } else if (parsedProperties.theme === \"system\") {\n          applySetting(\"BG_COLOR\", \"system\")\n        }\n        properties.value = parsedProperties.options\n      }\n    }\n  }\n)\n\nonMounted(() => {\n  if (typeof route.params.id === \"string\") {\n    sharedRequestID.value = route.params.id\n    sharedRequestDetails.execute()\n  }\n  invalidLink.value = !sharedRequestID.value\n})\n</script>\n\n<route lang=\"yaml\">\nmeta:\n  layout: empty\n</route>\n"],"names":["t","useI18n","toast","useToast","props","__props","tab","useModel","selectedOptionTab","ref","requestCancelFunc","loading","shortcodeBaseURL","sharedRequestURL","computed","tabRequestVariables","key","value","subscribeToStream","useStreamSubscriber","newSendRequest","newEndpoint","ensureMethodInEndpoint","cancel","streamPromise","runRESTRequest$","streamResult","E.isRight","responseState","updateRESTResponse","result","_a","errorResponse","error","response","domain","cancelRequest","route","useRoute","sharedRequestID","invalidLink","properties","sharedRequestDetails","useGQLQuery","ResolveShortcodeDocument","getDefaultRESTRequest","watch","data","request","_b","safelyExtractRESTRequest","parsedProperties","applySetting","onMounted"],"mappings":"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"}