{"version":3,"file":"HTMLLensRenderer-7ea05c0e.js","sources":["../../../hoppscotch-common/src/components/lenses/renderers/HTMLLensRenderer.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-1 flex-col\">\n    <div\n      class=\"sticky top-lowerSecondaryStickyFold z-10 flex flex-shrink-0 items-center justify-between overflow-x-auto border-b border-dividerLight bg-primary pl-4\"\n    >\n      <label class=\"truncate font-semibold text-secondaryLight\">\n        {{ t(\"response.body\") }}\n      </label>\n      <div class=\"flex\">\n        <HoppButtonSecondary\n          v-if=\"response.body\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('state.linewrap')\"\n          :class=\"{ '!text-accent': WRAP_LINES }\"\n          :icon=\"IconWrapText\"\n          @click.prevent=\"toggleNestedSetting('WRAP_LINES', 'httpResponseBody')\"\n        />\n        <HoppButtonSecondary\n          v-if=\"response.body\"\n          v-tippy=\"{ theme: 'tooltip', allowHTML: true }\"\n          :title=\"`${\n            previewEnabled ? t('hide.preview') : t('response.preview_html')\n          } <kbd>${getSpecialKey()}</kbd><kbd>Shift</kbd><kbd>P</kbd>`\"\n          :icon=\"!previewEnabled ? IconEye : IconEyeOff\"\n          @click.prevent=\"togglePreview\"\n        />\n        <HoppButtonSecondary\n          v-if=\"response.body\"\n          v-tippy=\"{ theme: 'tooltip', allowHTML: true }\"\n          :title=\"`${t(\n            'action.download_file'\n          )} <kbd>${getSpecialKey()}</kbd><kbd>J</kbd>`\"\n          :icon=\"downloadIcon\"\n          @click=\"downloadResponse\"\n        />\n        <HoppButtonSecondary\n          v-if=\"response.body\"\n          v-tippy=\"{ theme: 'tooltip', allowHTML: true }\"\n          :title=\"`${t(\n            'action.copy'\n          )} <kbd>${getSpecialKey()}</kbd><kbd>.</kbd>`\"\n          :icon=\"copyIcon\"\n          @click=\"copyResponse\"\n        />\n      </div>\n    </div>\n    <div v-show=\"!previewEnabled\" class=\"h-full\">\n      <div ref=\"htmlResponse\" class=\"flex flex-1 flex-col\"></div>\n    </div>\n    <iframe\n      v-show=\"previewEnabled\"\n      ref=\"previewFrame\"\n      class=\"covers-response\"\n      src=\"about:blank\"\n      loading=\"lazy\"\n      sandbox=\"\"\n    ></iframe>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport IconEye from \"~icons/lucide/eye\"\nimport IconEyeOff from \"~icons/lucide/eye-off\"\nimport { ref, reactive } from \"vue\"\nimport {\n  usePreview,\n  useResponseBody,\n  useCopyResponse,\n  useDownloadResponse,\n} from \"@composables/lens-actions\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport { useI18n } from \"@composables/i18n\"\nimport type { HoppRESTResponse } from \"~/helpers/types/HoppRESTResponse\"\nimport { defineActionHandler } from \"~/helpers/actions\"\nimport { getPlatformSpecialKey as getSpecialKey } from \"~/helpers/platformutils\"\nimport { useNestedSetting } from \"~/composables/settings\"\nimport { toggleNestedSetting } from \"~/newstore/settings\"\n\nconst t = useI18n()\n\nconst props = defineProps<{\n  response: HoppRESTResponse & { type: \"success\" | \"fail\" }\n}>()\n\nconst htmlResponse = ref<any | null>(null)\nconst WRAP_LINES = useNestedSetting(\"WRAP_LINES\", \"httpResponseBody\")\n\nconst { responseBodyText } = useResponseBody(props.response)\nconst { downloadIcon, downloadResponse } = useDownloadResponse(\n  \"text/html\",\n  responseBodyText\n)\nconst { previewFrame, previewEnabled, togglePreview } = usePreview(\n  false,\n  responseBodyText\n)\nconst { copyIcon, copyResponse } = useCopyResponse(responseBodyText)\n\nuseCodemirror(\n  htmlResponse,\n  responseBodyText,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"htmlmixed\",\n      readOnly: true,\n      lineWrapping: WRAP_LINES,\n    },\n    linter: null,\n    completer: null,\n    environmentHighlights: true,\n  })\n)\n\ndefineActionHandler(\"response.preview.toggle\", () => togglePreview())\ndefineActionHandler(\"response.file.download\", () => downloadResponse())\ndefineActionHandler(\"response.copy\", () => copyResponse())\n</script>\n\n<style lang=\"scss\" scoped>\n.covers-response {\n  @apply bg-white;\n  @apply h-full;\n  @apply w-full;\n  @apply border;\n  @apply border-dividerLight;\n  @apply z-10;\n}\n</style>\n"],"names":["t","useI18n","props","__props","htmlResponse","ref","WRAP_LINES","useNestedSetting","responseBodyText","useResponseBody","downloadIcon","downloadResponse","useDownloadResponse","previewFrame","previewEnabled","togglePreview","usePreview","copyIcon","copyResponse","useCopyResponse","useCodemirror","reactive","defineActionHandler"],"mappings":"ooBA+EA,MAAAA,EAAAC,IAEAC,EAAAC,EAIAC,EAAAC,EAAA,IAAA,EACAC,EAAAC,EAAA,aAAA,kBAAA,EAEA,CAAA,iBAAAC,CAAA,EAAAC,EAAAP,EAAA,QAAA,EACA,CAAA,aAAAQ,EAAA,iBAAAC,CAAA,EAAAC,EAA2C,YACzCJ,CACA,EAEF,CAAA,aAAAK,EAAA,eAAAC,EAAA,cAAAC,CAAA,EAAAC,EAAwD,GACtDR,CACA,EAEF,CAAA,SAAAS,EAAA,aAAAC,CAAA,EAAAC,EAAAX,CAAA,EAEA,OAAAY,EAAAhB,EACEI,EACAa,EAAA,CACS,qBAAA,CACe,KAAA,YACd,SAAA,GACI,aAAAf,CACI,EAChB,OAAA,KACQ,UAAA,KACG,sBAAA,EACY,CAAA,CACxB,EAGHgB,EAAA,0BAAA,IAAAP,EAAA,CAAA,EACAO,EAAA,yBAAA,IAAAX,EAAA,CAAA,EACAW,EAAA,gBAAA,IAAAJ,EAAA,CAAA"}