{"version":3,"file":"arrow-down-075bb51a.js","sources":["../../../hoppscotch-common/src/components/realtime/LogEntry.vue"],"sourcesContent":["<template>\n  <div v-if=\"entry\" class=\"divide-y divide-dividerLight\">\n    <div :style=\"{ color: entryColor }\" class=\"realtime-log\">\n      <div class=\"group flex\">\n        <div class=\"flex flex-1 divide-x divide-dividerLight\">\n          <div class=\"inline-flex items-center p-2\">\n            <component\n              :is=\"icon\"\n              :style=\"{ color: iconColor }\"\n              @click=\"copyQuery(entry.payload)\"\n            />\n          </div>\n          <div\n            v-if=\"entry.ts !== undefined\"\n            class=\"w-36 hidden items-center px-1 sm:inline-flex\"\n          >\n            <span\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"relativeTime\"\n              class=\"mx-auto truncate text-tiny text-secondaryLight hover:text-center hover:text-secondary\"\n            >\n              {{ shortDateTime(entry.ts) }}\n            </span>\n          </div>\n          <div\n            class=\"inline-grid min-w-0 flex-1 items-center p-2\"\n            @click=\"toggleExpandPayload()\"\n          >\n            <div class=\"truncate\">\n              <span v-if=\"entry.prefix !== undefined\" class=\"!inline\">{{\n                entry.prefix\n              }}</span>\n              {{ entry.payload }}\n            </div>\n          </div>\n        </div>\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.copy')\"\n          :icon=\"copyQueryIcon\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"copyQuery(entry.payload)\"\n        />\n        <HoppButtonSecondary\n          :icon=\"IconChevronDown\"\n          class=\"transform\"\n          :class=\"{ 'rotate-180': !minimized }\"\n          @click=\"toggleExpandPayload()\"\n        />\n      </div>\n    </div>\n    <div v-if=\"!minimized\" class=\"overflow-hidden bg-primaryContrast\">\n      <HoppSmartTabs\n        v-model=\"selectedTab\"\n        styles=\"bg-primaryLight\"\n        render-inactive-tabs\n      >\n        <HoppSmartTab v-if=\"isJSON(entry.payload)\" id=\"json\" label=\"JSON\" />\n        <HoppSmartTab id=\"raw\" label=\"Raw\" />\n      </HoppSmartTabs>\n      <div\n        class=\"top-lowerSecondaryStickyFold z-10 flex items-center justify-between border-b border-dividerLight pl-4\"\n      >\n        <label class=\"truncate font-semibold text-secondaryLight\">\n          {{ t(\"response.body\") }}\n        </label>\n        <div class=\"flex\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('state.linewrap')\"\n            :class=\"{ '!text-accent': linewrapEnabled }\"\n            :icon=\"IconWrapText\"\n            @click.prevent=\"linewrapEnabled = !linewrapEnabled\"\n          />\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('action.download_file')\"\n            :icon=\"downloadIcon\"\n            @click=\"downloadResponse\"\n          />\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('action.copy')\"\n            :icon=\"copyIcon\"\n            @click=\"copyResponse\"\n          />\n        </div>\n      </div>\n      <div ref=\"editor\"></div>\n      <div\n        v-if=\"outlinePath && selectedTab === 'json'\"\n        class=\"sticky bottom-0 z-10 flex flex-shrink-0 flex-nowrap overflow-auto overflow-x-auto border-t border-dividerLight bg-primaryLight px-2\"\n      >\n        <div\n          v-for=\"(item, index) in outlinePath\"\n          :key=\"`item-${index}`\"\n          class=\"flex items-center\"\n        >\n          <tippy\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => tippyActions.focus()\"\n          >\n            <div v-if=\"item.kind === 'RootObject'\" class=\"outline-item\">{}</div>\n            <div v-if=\"item.kind === 'RootArray'\" class=\"outline-item\">[]</div>\n            <div v-if=\"item.kind === 'ArrayMember'\" class=\"outline-item\">\n              {{ item.index }}\n            </div>\n            <div v-if=\"item.kind === 'ObjectMember'\" class=\"outline-item\">\n              {{ item.name }}\n            </div>\n            <template #content=\"{ hide }\">\n              <div\n                v-if=\"\n                  item.kind === 'ArrayMember' || item.kind === 'ObjectMember'\n                \"\n              >\n                <div\n                  v-if=\"item.kind === 'ArrayMember'\"\n                  ref=\"tippyActions\"\n                  class=\"flex flex-col focus:outline-none\"\n                  tabindex=\"0\"\n                  @keyup.escape=\"hide()\"\n                >\n                  <HoppSmartItem\n                    v-for=\"(arrayMember, astIndex) in item.astParent.values\"\n                    :key=\"`ast-${astIndex}`\"\n                    :label=\"`${astIndex}`\"\n                    @click=\"\n                      () => {\n                        jumpCursor(arrayMember)\n                        hide()\n                      }\n                    \"\n                  />\n                </div>\n                <div\n                  v-if=\"item.kind === 'ObjectMember'\"\n                  ref=\"tippyActions\"\n                  class=\"flex flex-col focus:outline-none\"\n                  tabindex=\"0\"\n                  @keyup.escape=\"hide()\"\n                >\n                  <HoppSmartItem\n                    v-for=\"(objectMember, astIndex) in item.astParent.members\"\n                    :key=\"`ast-${astIndex}`\"\n                    :label=\"objectMember.key.value\"\n                    @click=\"\n                      () => {\n                        jumpCursor(objectMember)\n                        hide()\n                      }\n                    \"\n                  />\n                </div>\n              </div>\n              <div\n                v-if=\"item.kind === 'RootObject'\"\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n              >\n                <HoppSmartItem\n                  label=\"{}\"\n                  @click=\"\n                    () => {\n                      jumpCursor(item.astValue)\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n              <div\n                v-if=\"item.kind === 'RootArray'\"\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n              >\n                <HoppSmartItem\n                  label=\"[]\"\n                  @click=\"\n                    () => {\n                      jumpCursor(item.astValue)\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n            </template>\n          </tippy>\n          <icon-lucide-chevron-right\n            v-if=\"index + 1 !== outlinePath.length\"\n            class=\"svg-icons text-secondaryLight opacity-50\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n  <div v-else>{{ t(\"response.waiting_for_connection\") }}</div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconInfo from \"~icons/lucide/info\"\nimport IconUpRight from \"~icons/lucide/arrow-up-right\"\nimport IconDownLeft from \"~icons/lucide/arrow-down-left\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconCheck from \"~icons/lucide/check\"\nimport IconChevronDown from \"~icons/lucide/chevron-down\"\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport * as LJSON from \"lossless-json\"\nimport * as O from \"fp-ts/Option\"\nimport { pipe } from \"fp-ts/function\"\nimport { ref, computed, reactive, watch, markRaw, PropType } from \"vue\"\nimport { refAutoReset, useTimeAgo } from \"@vueuse/core\"\nimport { LogEntryData } from \"./Log.vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { copyToClipboard } from \"~/helpers/utils/clipboard\"\nimport { isJSON } from \"~/helpers/functional/json\"\nimport { useCopyResponse, useDownloadResponse } from \"@composables/lens-actions\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport jsonParse, { JSONObjectMember, JSONValue } from \"~/helpers/jsonParse\"\nimport { getJSONOutlineAtPos } from \"~/helpers/newOutline\"\nimport {\n  convertIndexToLineCh,\n  convertLineChToIndex,\n} from \"~/helpers/editor/utils\"\nimport { shortDateTime } from \"~/helpers/utils/date\"\n\nconst t = useI18n()\n\nconst props = defineProps({\n  entry: {\n    type: Object as PropType<LogEntryData>,\n    required: true,\n  },\n  isOpen: {\n    type: Boolean,\n    default: false,\n  },\n})\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst editor = ref<any | null>(null)\nconst linewrapEnabled = ref(true)\n\nconst logPayload = computed(() => props.entry.payload)\n\nconst selectedTab = ref<\"json\" | \"raw\">(\n  isJSON(props.entry.payload) ? \"json\" : \"raw\"\n)\n\n// CodeMirror Implementation\nconst jsonBodyText = computed(() =>\n  pipe(\n    logPayload.value,\n    O.tryCatchK(LJSON.parse),\n    O.map((val) => LJSON.stringify(val, undefined, 2)),\n    O.getOrElse(() => logPayload.value)\n  )\n)\n\nconst ast = computed(() =>\n  pipe(\n    jsonBodyText.value,\n    O.tryCatchK(jsonParse),\n    O.getOrElseW(() => null)\n  )\n)\n\nconst editorText = computed(() => {\n  if (selectedTab.value === \"json\") return jsonBodyText.value\n  return logPayload.value\n})\n\nconst editorMode = computed(() => {\n  if (selectedTab.value === \"json\") return \"application/ld+json\"\n  return \"text/plain\"\n})\n\nconst { cursor } = useCodemirror(\n  editor,\n  editorText,\n  reactive({\n    extendedEditorConfig: {\n      mode: editorMode,\n      readOnly: true,\n      lineWrapping: linewrapEnabled,\n    },\n    linter: null,\n    completer: null,\n    environmentHighlights: false,\n  })\n)\n\nconst jumpCursor = (ast: JSONValue | JSONObjectMember) => {\n  const pos = convertIndexToLineCh(jsonBodyText.value, ast.start)\n  pos.line--\n  cursor.value = pos\n}\n\nconst outlinePath = computed(() =>\n  pipe(\n    ast.value,\n    O.fromNullable,\n    O.map((ast) =>\n      getJSONOutlineAtPos(\n        ast,\n        convertLineChToIndex(jsonBodyText.value, cursor.value)\n      )\n    ),\n    O.getOrElseW(() => null)\n  )\n)\n\n// Code for UI Changes\nconst minimized = ref(props.isOpen ? false : true)\nwatch(minimized, () => {\n  selectedTab.value = isJSON(props.entry.payload) ? \"json\" : \"raw\"\n})\n\nconst toggleExpandPayload = () => {\n  minimized.value = !minimized.value\n}\n\nconst { copyIcon, copyResponse } = useCopyResponse(logPayload)\n\nconst { downloadIcon, downloadResponse } = useDownloadResponse(\n  \"application/json\",\n  logPayload\n)\n\nconst copyQueryIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\n\nconst copyQuery = (entry: string) => {\n  copyToClipboard(entry)\n  copyQueryIcon.value = IconCheck\n}\n\n// Relative Time\n// TS could be undefined here. We're just assigning a default value to 0 because we're not showing it in the UI\nconst relativeTime = useTimeAgo(computed(() => props.entry.ts ?? 0))\n\nconst ENTRY_COLORS = {\n  connected: \"#10b981\",\n  connecting: \"#10b981\",\n  error: \"#ff5555\",\n  disconnected: \"#ff5555\",\n} as const\n\n// Assigns color based on entry event\nconst entryColor = computed(\n  () => props.entry.event && ENTRY_COLORS[props.entry.event]\n)\n\nconst ICONS = {\n  info: {\n    icon: IconInfo,\n    iconColor: \"#10b981\",\n  },\n  client: {\n    icon: IconUpRight,\n    iconColor: \"#eaaa45\",\n  },\n  server: {\n    icon: IconDownLeft,\n    iconColor: \"#38d4ea\",\n  },\n  disconnected: {\n    icon: IconInfo,\n    iconColor: \"#ff5555\",\n  },\n} as const\n\nconst iconColor = computed(() => ICONS[props.entry.source].iconColor)\nconst icon = computed(() => markRaw(ICONS[props.entry.source].icon))\n</script>\n\n<style lang=\"scss\" scoped>\n.realtime-log {\n  @apply text-secondary;\n  @apply overflow-hidden;\n  @apply hover:cursor-nsResize;\n\n  &,\n  span {\n    @apply select-text;\n  }\n\n  span {\n    @apply block;\n    @apply break-words break-all;\n  }\n}\n\n.outline-item {\n  @apply cursor-pointer;\n  @apply flex-shrink-0 flex-grow-0;\n  @apply text-secondaryLight;\n  @apply inline-flex;\n  @apply items-center;\n  @apply px-2;\n  @apply py-1;\n  @apply transition;\n  @apply hover:text-secondary;\n}\n</style>\n"],"names":["t","useI18n","props","__props","tippyActions","ref","editor","linewrapEnabled","logPayload","computed","selectedTab","isJSON","jsonBodyText","pipe","O.tryCatchK","LJSON.parse","O.map","val","LJSON.stringify","O.getOrElse","ast","jsonParse","O.getOrElseW","editorText","editorMode","cursor","useCodemirror","reactive","jumpCursor","ast2","pos","convertIndexToLineCh","outlinePath","O.fromNullable","getJSONOutlineAtPos","convertLineChToIndex","minimized","watch","toggleExpandPayload","copyIcon","copyResponse","useCopyResponse","downloadIcon","downloadResponse","useDownloadResponse","copyQueryIcon","refAutoReset","IconCopy","copyQuery","entry","copyToClipboard","IconCheck","relativeTime","useTimeAgo","ENTRY_COLORS","entryColor","ICONS","IconInfo","IconUpRight","IconDownLeft","iconColor","icon","markRaw"],"mappings":"m5DAmOA,MAAAA,EAAAC,KAEAC,EAAAC,EAYAC,EAAAC,EAAA,IAAA,EACAC,EAAAD,EAAA,IAAA,EACAE,EAAAF,EAAA,EAAA,EAEAG,EAAAC,EAAA,IAAAP,EAAA,MAAA,OAAA,EAEAQ,EAAAL,EAAoBM,EAAAT,EAAA,MAAA,OAAA,EAAA,OAAA,KACqB,EAIzCU,EAAAH,EAAqB,IAAAI,EACnBL,EAAA,MACaM,EAAAC,EAAA,EACYC,EAAAC,GAAAC,GAAAD,EAAA,OAAA,CAAA,CAAA,EAC0BE,GAAA,IAAAX,EAAA,KAAA,CACf,CACpC,EAGFY,EAAAX,EAAY,IAAAI,EACVD,EAAA,MACeE,EAAAO,EAAA,EACQC,EAAA,IAAA,IAAA,CACE,CACzB,EAGFC,EAAAd,EAAA,IACEC,EAAA,QAAA,OAAkCE,EAAA,MAClCJ,EAAA,KAAkB,EAGpBgB,GAAAf,EAAA,IACEC,EAAA,QAAA,OAAkC,sBAClC,YAAO,EAGT,CAAA,OAAAe,CAAA,EAAAC,GAAmBpB,EACjBiB,EACAI,GAAA,CACS,qBAAA,CACe,KAAAH,GACd,SAAA,GACI,aAAAjB,CACI,EAChB,OAAA,KACQ,UAAA,KACG,sBAAA,EACY,CAAA,CACxB,EAGHqB,EAAAC,GAAA,CACE,MAAAC,EAAAC,GAAAnB,EAAA,MAAAiB,EAAA,KAAA,EACAC,EAAA,OACAL,EAAA,MAAAK,CAAe,EAGjBE,EAAAvB,EAAoB,IAAAI,EAClBO,EAAA,MACMa,GACFjB,EACAa,GAAAK,GACAL,EACEM,GAAAvB,EAAA,MAAAa,EAAA,KAAA,CACqD,CACvD,EACFH,EAAA,IAAA,IAAA,CACuB,CACzB,EAIFc,EAAA/B,EAAA,CAAAH,EAAA,MAAA,EACAmC,GAAAD,EAAA,IAAA,CACE1B,EAAA,MAAAC,EAAAT,EAAA,MAAA,OAAA,EAAA,OAAA,KAA2D,CAAA,EAG7D,MAAAoC,EAAA,IAAA,CACEF,EAAA,MAAA,CAAAA,EAAA,KAA6B,EAG/B,CAAA,SAAAG,GAAA,aAAAC,EAAA,EAAAC,GAAAjC,CAAA,EAEA,CAAA,aAAAkC,GAAA,iBAAAC,EAAA,EAAAC,GAA2C,mBACzCpC,CACA,EAGFqC,EAAAC,GAAsBC,GACpB,GACA,EAGFC,EAAAC,GAAA,CACEC,GAAAD,CAAA,EACAJ,EAAA,MAAAM,EAAsB,EAKxBC,GAAAC,GAAA5C,EAAA,IAAAP,EAAA,MAAA,IAAA,CAAA,CAAA,EAEAoD,GAAA,CAAqB,UAAA,UACR,WAAA,UACC,MAAA,UACL,aAAA,SACO,EAIhBC,GAAA9C,EAAmB,IAAAP,EAAA,MAAA,OAAAoD,GAAApD,EAAA,MAAA,KAAA,CACwC,EAG3DsD,EAAA,CAAc,KAAA,CACN,KAAAC,EACE,UAAA,SACK,EACb,OAAA,CACQ,KAAAC,GACA,UAAA,SACK,EACb,OAAA,CACQ,KAAAC,GACA,UAAA,SACK,EACb,aAAA,CACc,KAAAF,EACN,UAAA,SACK,CACb,EAGFG,GAAAnD,EAAA,IAAA+C,EAAAtD,EAAA,MAAA,MAAA,EAAA,SAAA,EACA2D,GAAApD,EAAA,IAAAqD,GAAAN,EAAAtD,EAAA,MAAA,MAAA,EAAA,IAAA,CAAA"}