{"version":3,"file":"profile-1820b818.js","sources":["../../../hoppscotch-common/src/components/accessTokens/GenerateModal.vue","../../../hoppscotch-common/src/components/accessTokens/List.vue","../../../hoppscotch-common/src/components/accessTokens/Overview.vue","../../../hoppscotch-common/src/components/accessTokens/index.vue","../../../hoppscotch-common/src/helpers/backend/mutations/Profile.ts","../../../hoppscotch-common/src/components/profile/UserDelete.vue","../../../hoppscotch-common/src/pages/profile.vue"],"sourcesContent":["<template>\n  <HoppSmartModal\n    dialog\n    :title=\"t('access_tokens.generate_modal_title')\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <template v-if=\"accessToken\">\n        <p class=\"p-4 mb-4 border rounded-md text-amber-500 border-amber-600\">\n          {{ t(\"access_tokens.copy_token_warning\") }}\n        </p>\n\n        <div\n          class=\"flex items-center justify-between p-4 mt-4 rounded-md bg-primaryLight\"\n        >\n          <div class=\"text-secondaryDark\">{{ accessToken }}</div>\n          <HoppButtonSecondary\n            outline\n            filled\n            :icon=\"copyIcon\"\n            @click=\"copyAccessToken\"\n          />\n        </div>\n      </template>\n\n      <div v-else class=\"space-y-4\">\n        <div class=\"space-y-2\">\n          <div class=\"font-semibold text-secondaryDark\">\n            {{ t(\"action.label\") }}\n          </div>\n          <HoppSmartInput\n            v-model=\"accessTokenLabel\"\n            :placeholder=\"t('access_tokens.token_purpose')\"\n          />\n        </div>\n\n        <div class=\"space-y-2\">\n          <label for=\"expiration\" class=\"font-semibold text-secondaryDark\">{{\n            t(\"access_tokens.expiration_label\")\n          }}</label>\n\n          <div class=\"grid items-center grid-cols-2 gap-x-2\">\n            <tippy\n              interactive\n              trigger=\"click\"\n              theme=\"popover\"\n              :on-shown=\"() => tippyActions?.focus()\"\n            >\n              <HoppSmartSelectWrapper>\n                <input\n                  id=\"expiration\"\n                  :value=\"expiration\"\n                  readonly\n                  class=\"flex flex-1 px-4 py-2 bg-transparent border rounded cursor-pointer border-divider\"\n                />\n              </HoppSmartSelectWrapper>\n\n              <template #content=\"{ hide }\">\n                <div\n                  ref=\"tippyActions\"\n                  tabindex=\"0\"\n                  role=\"menu\"\n                  class=\"flex flex-col focus:outline-none\"\n                  @keyup.escape=\"hide\"\n                >\n                  <HoppSmartItem\n                    v-for=\"expirationOption in Object.keys(expirationOptions)\"\n                    :key=\"expirationOption\"\n                    :label=\"expirationOption\"\n                    :icon=\"\n                      expirationOption === expiration\n                        ? IconCircleDot\n                        : IconCircle\n                    \"\n                    :active=\"expirationOption === expiration\"\n                    :aria-selected=\"expirationOption === expiration\"\n                    @click=\"\n                      () => {\n                        expiration = expirationOption\n                        hide()\n                      }\n                    \"\n                  />\n                </div>\n              </template>\n            </tippy>\n\n            <span class=\"text-secondaryLight\">{{ expirationDateText }}</span>\n          </div>\n        </div>\n\n        <div class=\"space-y-2\">\n          <div class=\"font-semibold text-secondaryDark\">\n            {{ t(\"access_tokens.scope_label\") }}\n          </div>\n\n          <p class=\"text-secondaryLight\">\n            {{ t(\"access_tokens.workspace_read_only_access\") }}<br />\n            {{ t(\"access_tokens.personal_workspace_access_limitation\") }}\n          </p>\n        </div>\n      </div>\n    </template>\n    <template #footer>\n      <HoppButtonSecondary\n        v-if=\"accessToken\"\n        :label=\"t('action.close')\"\n        outline\n        filled\n        @click=\"hideModal\"\n      />\n\n      <div v-else class=\"flex items-center gap-x-2\">\n        <HoppButtonPrimary\n          :loading=\"tokenGenerateActionLoading\"\n          filled\n          outline\n          :label=\"t('access_tokens.generate_token')\"\n          @click=\"generateAccessToken\"\n        />\n\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </div>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { refAutoReset } from \"@vueuse/core\"\nimport { VNodeRef, computed, ref } from \"vue\"\n\nimport { copyToClipboard } from \"~/helpers/utils/clipboard\"\nimport { shortDateTime } from \"~/helpers/utils/date\"\n\nimport IconCheck from \"~icons/lucide/check\"\nimport IconCircle from \"~icons/lucide/circle\"\nimport IconCircleDot from \"~icons/lucide/circle-dot\"\nimport IconCopy from \"~icons/lucide/copy\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  tokenGenerateActionLoading: boolean\n  accessToken: string | null\n}>()\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n  (\n    e: \"generate-access-token\",\n    { label, expiryInDays }: { label: string; expiryInDays: number | null }\n  ): void\n}>()\n\n// Template refs\nconst tippyActions = ref<VNodeRef | null>(null)\n\nconst copyIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\n\nconst accessTokenLabel = ref<string>(\"\")\nconst expiration = ref<string>(\"30 days\")\n\nconst expirationOptions: Record<string, number | null> = {\n  \"7 days\": 7,\n  \"30 days\": 30,\n  \"60 days\": 60,\n  \"90 days\": 90,\n  \"No expiration\": null,\n}\n\nconst expirationDateText = computed(() => {\n  const chosenExpiryInDays = expirationOptions[expiration.value]\n\n  if (chosenExpiryInDays === null) {\n    return t(\"access_tokens.no_expiration_verbose\")\n  }\n\n  const currentDate = new Date()\n  currentDate.setDate(currentDate.getDate() + chosenExpiryInDays)\n\n  const expirationDate = shortDateTime(currentDate, false)\n  return `${t(\"access_tokens.token_expires_on\")} ${expirationDate}`\n})\n\nconst copyAccessToken = () => {\n  if (!props.accessToken) {\n    toast.error(\"error.something_went_wrong\")\n    return\n  }\n\n  copyToClipboard(props.accessToken)\n  copyIcon.value = IconCheck\n\n  toast.success(`${t(\"state.copied_to_clipboard\")}`)\n}\n\nconst generateAccessToken = async () => {\n  if (!accessTokenLabel.value) {\n    toast.error(t(\"access_tokens.invalid_label\"))\n    return\n  }\n\n  emit(\"generate-access-token\", {\n    label: accessTokenLabel.value,\n    expiryInDays: expirationOptions[expiration.value],\n  })\n}\n\nconst hideModal = () => emit(\"hide-modal\")\n</script>\n","<template>\n  <div v-if=\"isInitialPageLoad\" class=\"flex flex-col items-center py-3\">\n    <HoppSmartSpinner />\n  </div>\n\n  <div\n    v-else-if=\"initialPageLoadHasError\"\n    class=\"flex flex-col items-center py-4\"\n  >\n    <icon-lucide-help-circle class=\"mb-4 svg-icons\" />\n    {{ t(\"error.something_went_wrong\") }}\n  </div>\n\n  <HoppSmartPlaceholder\n    v-else-if=\"accessTokens.length === 0\"\n    :src=\"`/images/states/${colorMode}/pack.svg`\"\n    :alt=\"`${t('empty.access_tokens')}`\"\n    :text=\"t('empty.access_tokens')\"\n    @drop.stop\n  />\n\n  <div\n    v-else\n    class=\"grid gap-4 p-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\"\n  >\n    <div\n      v-for=\"{ id, label, lastUsedOn, expiresOn } in accessTokens\"\n      :key=\"id\"\n      class=\"flex flex-col items-center gap-4 p-4 border rounded border-divider\"\n    >\n      <div class=\"w-full text-sm font-semibold truncate text-secondaryDark\">\n        {{ label }}\n      </div>\n\n      <div class=\"flex items-center justify-between w-full gap-x-4\">\n        <div class=\"space-y-1 text-secondaryLight\">\n          <div class=\"space-x-1\">\n            <span class=\"font-semibold\"\n              >{{ t(\"access_tokens.last_used_on\") }}:</span\n            >\n            <span>\n              {{ shortDateTime(lastUsedOn, false) }}\n            </span>\n          </div>\n\n          <div class=\"space-x-1\">\n            <span class=\"font-semibold\"\n              >{{ t(\"access_tokens.expires_on\") }}:</span\n            >\n            <span>\n              {{ getTokenExpiryText(expiresOn) }}\n            </span>\n          </div>\n        </div>\n\n        <HoppButtonSecondary\n          :label=\"t('action.delete')\"\n          filled\n          outline\n          @click=\"\n            emit('delete-access-token', {\n              tokenId: id,\n              tokenLabel: label,\n            })\n          \"\n        />\n      </div>\n    </div>\n  </div>\n\n  <HoppSmartIntersection\n    v-if=\"hasMoreTokens\"\n    @intersecting=\"emit('fetch-more-tokens')\"\n  >\n    <div v-if=\"loading\" class=\"flex flex-col items-center py-3\">\n      <HoppSmartSpinner />\n    </div>\n\n    <div v-else-if=\"hasError\" class=\"flex flex-col items-center py-4\">\n      <icon-lucide-help-circle class=\"mb-4 svg-icons\" />\n      {{ t(\"error.something_went_wrong\") }}\n    </div>\n  </HoppSmartIntersection>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@vueuse/core\"\nimport { computed } from \"vue\"\n\nimport { shortDateTime } from \"~/helpers/utils/date\"\nimport { AccessToken } from \"./index.vue\"\n\nconst colorMode = useColorMode()\nconst t = useI18n()\n\nconst props = defineProps<{\n  accessTokens: AccessToken[]\n  hasMoreTokens: boolean\n  loading: boolean\n  hasError: boolean\n}>()\n\nconst emit = defineEmits<{\n  (e: \"fetch-more-tokens\"): void\n  (\n    e: \"delete-access-token\",\n    { tokenId, tokenLabel }: { tokenId: string; tokenLabel: string }\n  ): void\n}>()\n\nconst isInitialPageLoad = computed(() => props.loading && !props.hasMoreTokens)\nconst initialPageLoadHasError = computed(\n  () => props.hasError && !props.hasMoreTokens\n)\n\nconst getTokenExpiryText = (tokenExpiresOn: string | null) => {\n  if (!tokenExpiresOn) {\n    return t(\"access_tokens.no_expiration\")\n  }\n\n  const isTokenExpired = new Date(tokenExpiresOn).toISOString() > tokenExpiresOn\n\n  return isTokenExpired\n    ? t(\"access_tokens.expired\")\n    : shortDateTime(tokenExpiresOn, false)\n}\n</script>\n","<template>\n  <div class=\"p-4 space-y-4\">\n    <div class=\"space-y-1\">\n      <h4 class=\"font-semibold text-secondaryDark\">\n        {{ t(\"access_tokens.section_title\") }}\n      </h4>\n\n      <p class=\"text-secondaryLight\">\n        {{ t(\"access_tokens.section_description\") }}\n      </p>\n    </div>\n\n    <HoppButtonSecondary\n      filled\n      outline\n      :label=\"t('access_tokens.generate_new_token')\"\n      @click=\"emit('show-access-tokens-generate-modal')\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"~/composables/i18n\"\n\nconst t = useI18n()\n\nconst emit = defineEmits<{\n  (e: \"show-access-tokens-generate-modal\"): void\n}>()\n</script>\n","<template>\n  <AccessTokensOverview\n    @show-access-tokens-generate-modal=\"showAccessTokensGenerateModal = true\"\n  />\n\n  <AccessTokensList\n    :access-tokens=\"accessTokens\"\n    :has-error=\"tokensListFetchErrored\"\n    :has-more-tokens=\"hasMoreTokens\"\n    :loading=\"tokensListLoading\"\n    @delete-access-token=\"displayDeleteAccessTokenConfirmationModal\"\n    @fetch-more-tokens=\"fetchAccessTokens\"\n  />\n\n  <AccessTokensGenerateModal\n    v-if=\"showAccessTokensGenerateModal\"\n    :access-token=\"accessToken\"\n    :token-generate-action-loading=\"tokenGenerateActionLoading\"\n    @generate-access-token=\"generateAccessToken\"\n    @hide-modal=\"hideAccessTokenGenerateModal\"\n  />\n\n  <HoppSmartConfirmModal\n    :show=\"confirmDeleteAccessToken\"\n    :loading-state=\"tokenDeleteActionLoading\"\n    :title=\"\n      t('confirm.delete_access_token', { tokenLabel: tokenToDelete?.label })\n    \"\n    @hide-modal=\"confirmDeleteAccessToken = false\"\n    @resolve=\"deleteAccessToken\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport axios from \"axios\"\nimport { Ref, onMounted, ref } from \"vue\"\nimport { platform } from \"~/platform\"\n\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\n\nexport type AccessToken = {\n  id: string\n  label: string\n  createdOn: string\n  lastUsedOn: string\n  expiresOn: string | null\n}\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst confirmDeleteAccessToken = ref(false)\nconst hasMoreTokens = ref(false)\nconst showAccessTokensGenerateModal = ref(false)\nconst tokenDeleteActionLoading = ref(false)\nconst tokenGenerateActionLoading = ref(false)\nconst tokensListFetchErrored = ref(false)\nconst tokensListLoading = ref(false)\n\nconst accessToken: Ref<string | null> = ref(null)\nconst tokenToDelete = ref<{ id: string; label: string } | null>(null)\n\nconst accessTokens: Ref<AccessToken[]> = ref([])\n\nconst limit = 12\nlet offset = 0\n\nconst endpointPrefix = `${Object.create(globalThis.import_meta_env || null).VITE_BACKEND_API_URL}/access-tokens`\n\nconst getAxiosPlatformConfig = async () => {\n  await platform.auth.waitProbableLoginToConfirm()\n  return platform.auth.axiosPlatformConfig?.() ?? {}\n}\n\nonMounted(async () => {\n  await fetchAccessTokens()\n})\n\nconst fetchAccessTokens = async () => {\n  tokensListLoading.value = true\n\n  const axiosConfig = await getAxiosPlatformConfig()\n  const endpoint = `${endpointPrefix}/list?offset=${offset}&limit=${limit}`\n\n  try {\n    const { data } = await axios.get(endpoint, axiosConfig)\n\n    accessTokens.value.push(...data)\n\n    if (data.length > 0) {\n      offset += data.length\n    }\n\n    hasMoreTokens.value = data.length === limit\n\n    if (tokensListFetchErrored.value) {\n      tokensListFetchErrored.value = false\n    }\n  } catch (err) {\n    toast.error(t(\"error.fetching_access_tokens_list\"))\n    tokensListFetchErrored.value = true\n  } finally {\n    tokensListLoading.value = false\n  }\n}\n\nconst generateAccessToken = async ({\n  label,\n  expiryInDays,\n}: {\n  label: string\n  expiryInDays: number | null\n}) => {\n  tokenGenerateActionLoading.value = true\n\n  const axiosConfig = await getAxiosPlatformConfig()\n  const endpoint = `${endpointPrefix}/create`\n\n  const body = {\n    label,\n    expiryInDays,\n  }\n\n  try {\n    const { data }: { data: { token: string; info: AccessToken } } =\n      await axios.post(endpoint, body, axiosConfig)\n\n    accessTokens.value.unshift(data.info)\n    accessToken.value = data.token\n\n    // Incrementing the offset value by 1 to account for the newly generated token\n    offset += 1\n\n    // Toggle the error state in case it was set\n    if (tokensListFetchErrored.value) {\n      tokensListFetchErrored.value = false\n    }\n  } catch (err) {\n    toast.error(t(\"error.generate_access_token\"))\n    showAccessTokensGenerateModal.value = false\n  } finally {\n    tokenGenerateActionLoading.value = false\n  }\n}\n\nconst deleteAccessToken = async () => {\n  if (tokenToDelete.value === null) {\n    toast.error(t(\"error.something_went_wrong\"))\n    return\n  }\n\n  const { id: tokenIdToDelete, label: tokenLabelToDelete } = tokenToDelete.value\n\n  tokenDeleteActionLoading.value = true\n\n  const axiosConfig = await getAxiosPlatformConfig()\n  const endpoint = `${endpointPrefix}/revoke?id=${tokenIdToDelete}`\n\n  try {\n    await axios.delete(endpoint, axiosConfig)\n\n    accessTokens.value = accessTokens.value.filter(\n      (token) => token.id !== tokenIdToDelete\n    )\n\n    // Decreasing the offset value by 1 to account for the deleted token\n    offset = offset > 0 ? offset - 1 : offset\n\n    toast.success(\n      t(\"access_tokens.deletion_success\", { label: tokenLabelToDelete })\n    )\n\n    // Toggle the error state in case it was set\n    if (tokensListFetchErrored.value) {\n      tokensListFetchErrored.value = false\n    }\n  } catch (err) {\n    toast.error(t(\"error.delete_access_token\"))\n  } finally {\n    tokenDeleteActionLoading.value = false\n    confirmDeleteAccessToken.value = false\n\n    tokenToDelete.value = null\n  }\n}\n\nconst hideAccessTokenGenerateModal = () => {\n  // Reset the reactive state variable holding access token value and hide the modal\n  accessToken.value = null\n  showAccessTokensGenerateModal.value = false\n}\n\nconst displayDeleteAccessTokenConfirmationModal = ({\n  tokenId,\n  tokenLabel,\n}: {\n  tokenId: string\n  tokenLabel: string\n}) => {\n  confirmDeleteAccessToken.value = true\n\n  tokenToDelete.value = {\n    id: tokenId,\n    label: tokenLabel,\n  }\n}\n</script>\n","import { runMutation } from \"../GQLClient\"\nimport {\n  DeleteUserDocument,\n  DeleteUserMutation,\n  DeleteUserMutationVariables,\n} from \"../graphql\"\n\ntype DeleteUserErrors = \"user/not_found\"\n\nexport const deleteUser = () =>\n  runMutation<\n    DeleteUserMutation,\n    DeleteUserMutationVariables,\n    DeleteUserErrors\n  >(DeleteUserDocument, {})\n","<template>\n  <section class=\"p-4\">\n    <h4 class=\"font-semibold text-secondaryDark\">\n      {{ t(\"settings.delete_account\") }}\n    </h4>\n    <div class=\"my-1 mb-4 text-secondaryLight\">\n      {{ t(\"settings.delete_account_description\") }}\n    </div>\n    <HoppButtonSecondary\n      filled\n      outline\n      :label=\"t('settings.delete_account')\"\n      type=\"submit\"\n      @click=\"showDeleteAccountModal = true\"\n    />\n    <HoppSmartModal\n      v-if=\"showDeleteAccountModal\"\n      dialog\n      :title=\"t('settings.delete_account')\"\n      @close=\"showDeleteAccountModal = false\"\n    >\n      <template #body>\n        <div v-if=\"loading\" class=\"flex flex-col items-center justify-center\">\n          <HoppSmartSpinner class=\"mb-4\" />\n          <span class=\"text-secondaryLight\">{{ t(\"state.loading\") }}</span>\n        </div>\n        <div\n          v-else-if=\"myTeams.length\"\n          class=\"bg-bannerInfo flex flex-col space-y-2 rounded-lg border border-red-500 p-4 text-secondaryDark\"\n        >\n          <h2 class=\"font-bold text-red-500\">\n            {{ t(\"error.danger_zone\") }}\n          </h2>\n          <div>\n            {{ t(\"error.delete_account\") }}\n            <ul class=\"my-4 ml-8 list-disc space-y-2\">\n              <li v-for=\"team in myTeams\" :key=\"team.id\">\n                {{ team.name }}\n              </li>\n            </ul>\n            <span class=\"font-semibold\">\n              {{ t(\"error.delete_account_description\") }}\n            </span>\n          </div>\n        </div>\n        <div v-else>\n          <div\n            class=\"bg-bannerInfo mb-4 flex flex-col space-y-2 rounded-lg border border-red-500 p-4 text-secondaryDark\"\n          >\n            <h2 class=\"font-bold text-red-500\">\n              {{ t(\"error.danger_zone\") }}\n            </h2>\n            <div class=\"font-medium text-secondaryDark\">\n              {{ t(\"settings.delete_account_description\") }}\n            </div>\n          </div>\n          <div class=\"flex flex-col\">\n            <input\n              id=\"deleteUserAccount\"\n              v-model=\"userVerificationInput\"\n              class=\"input floating-input\"\n              placeholder=\" \"\n              type=\"text\"\n              autocomplete=\"off\"\n            />\n            <label for=\"deleteUserAccount\">\n              Type\n              <span class=\"font-bold\"> delete my account </span>\n              to confirm\n            </label>\n          </div>\n        </div>\n      </template>\n      <template #footer>\n        <span class=\"flex space-x-2\">\n          <HoppButtonPrimary\n            :label=\"t('settings.delete_account')\"\n            :loading=\"deletingUser\"\n            filled\n            outline\n            :disabled=\"\n              loading ||\n              myTeams.length > 0 ||\n              userVerificationInput !== 'delete my account'\n            \"\n            class=\"!hover:bg-red-600 !hover:border-red-600 !border-red-500 !bg-red-500\"\n            @click=\"deleteUserAccount\"\n          />\n          <HoppButtonSecondary\n            :label=\"t('action.cancel')\"\n            outline\n            filled\n            @click=\"showDeleteAccountModal = false\"\n          />\n        </span>\n      </template>\n    </HoppSmartModal>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { pipe } from \"fp-ts/function\"\nimport * as TE from \"fp-ts/TaskEither\"\nimport { ref, watch } from \"vue\"\nimport { GQLError, runGQLQuery } from \"~/helpers/backend/GQLClient\"\nimport * as E from \"fp-ts/Either\"\nimport { useRouter } from \"vue-router\"\nimport { useI18n } from \"~/composables/i18n\"\nimport { useToast } from \"~/composables/toast\"\nimport { GetMyTeamsDocument, GetMyTeamsQuery } from \"~/helpers/backend/graphql\"\nimport { deleteUser } from \"~/helpers/backend/mutations/Profile\"\nimport { platform } from \"~/platform\"\n\nconst t = useI18n()\nconst toast = useToast()\nconst router = useRouter()\n\nconst showDeleteAccountModal = ref(false)\nconst userVerificationInput = ref(\"\")\n\nconst loading = ref(true)\nconst myTeams = ref<GetMyTeamsQuery[\"myTeams\"]>([])\n\nwatch(showDeleteAccountModal, (isModalOpen) => {\n  if (isModalOpen) {\n    fetchMyTeams()\n  }\n})\n\nconst fetchMyTeams = async () => {\n  loading.value = true\n  const result = await runGQLQuery({\n    query: GetMyTeamsDocument,\n    variables: {},\n  })\n  loading.value = false\n\n  if (E.isLeft(result)) {\n    throw new Error(\n      `Failed fetching teams list: ${JSON.stringify(result.left)}`\n    )\n  }\n\n  myTeams.value = result.right.myTeams.filter((team) => {\n    return team.ownersCount === 1 && team.myRole === \"OWNER\"\n  })\n}\n\nconst deletingUser = ref(false)\n\nconst deleteUserAccount = async () => {\n  if (deletingUser.value) return\n  deletingUser.value = true\n\n  pipe(\n    deleteUser(),\n    TE.match(\n      (err: GQLError<string>) => {\n        deletingUser.value = false\n        toast.error(getErrorMessage(err))\n      },\n      () => {\n        deletingUser.value = false\n        showDeleteAccountModal.value = false\n        toast.success(t(\"settings.account_deleted\"))\n        platform.auth.signOutUser()\n        router.push(`/`)\n      }\n    )\n  )()\n}\n\nconst getErrorMessage = (err: GQLError<string>) => {\n  if (err.type === \"network_error\") {\n    return t(\"error.network_error\")\n  }\n\n  return t(\"error.something_went_wrong\")\n}\n</script>\n","<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"p-4\">\n        <div\n          v-if=\"loadingCurrentUser\"\n          class=\"flex flex-1 flex-col items-center justify-center p-4\"\n        >\n          <HoppSmartSpinner class=\"mb-4\" />\n        </div>\n        <HoppSmartPlaceholder\n          v-else-if=\"currentUser === null\"\n          :src=\"`/images/states/${colorMode.value}/login.svg`\"\n          :alt=\"`${t('empty.profile')}`\"\n          :text=\"`${t('empty.profile')}`\"\n        >\n          <template #body>\n            <HoppButtonPrimary\n              :label=\"t('auth.login')\"\n              @click=\"invokeAction('modals.login.toggle')\"\n            />\n          </template>\n        </HoppSmartPlaceholder>\n        <div v-else class=\"space-y-8\">\n          <div\n            class=\"-mb-12 h-24 rounded bg-primaryLight md:h-32\"\n            style=\"background-image: url(/images/cover.svg)\"\n          ></div>\n          <div class=\"flex flex-col justify-between space-y-8 px-4 md:flex-row\">\n            <div class=\"flex items-end\">\n              <HoppSmartPicture\n                :name=\"currentUser.uid\"\n                class=\"ring-8 ring-primary\"\n                :size=\"64\"\n              />\n              <div class=\"ml-4\">\n                <label class=\"heading\">\n                  {{\n                    currentUser.displayName ||\n                    t(\"profile.default_hopp_displayname\")\n                  }}\n                </label>\n                <p class=\"flex items-center text-secondaryLight\">\n                  {{ currentUser.email }}\n                  <icon-lucide-verified\n                    v-if=\"currentUser.emailVerified\"\n                    v-tippy=\"{ theme: 'tooltip' }\"\n                    :title=\"t('settings.verified_email')\"\n                    class=\"svg-icons ml-2 cursor-help text-green-500 focus:outline-none\"\n                  />\n                  <HoppButtonSecondary\n                    v-else\n                    :label=\"t('settings.verify_email')\"\n                    :icon=\"IconVerified\"\n                    class=\"ml-2 px-1 py-0\"\n                    :loading=\"verifyingEmailAddress\"\n                    @click=\"sendEmailVerification\"\n                  />\n                </p>\n              </div>\n            </div>\n            <div class=\"flex items-end space-x-2\">\n              <div>\n                <HoppSmartItem\n                  to=\"/settings\"\n                  :icon=\"IconSettings\"\n                  :label=\"t('profile.app_settings')\"\n                  outline\n                />\n              </div>\n              <FirebaseLogout outline />\n            </div>\n          </div>\n          <HoppSmartTabs\n            v-model=\"selectedProfileTab\"\n            styles=\"sticky overflow-x-auto flex-shrink-0 bg-primary top-0 z-10\"\n            render-inactive-tabs\n          >\n            <HoppSmartTab id=\"sync\" :label=\"t('settings.account')\">\n              <div class=\"grid grid-cols-1\">\n                <section class=\"p-4\">\n                  <h4 class=\"font-semibold text-secondaryDark\">\n                    {{ t(\"settings.profile\") }}\n                  </h4>\n                  <div class=\"my-1 text-secondaryLight\">\n                    {{ t(\"settings.profile_description\") }}\n                  </div>\n                  <div class=\"py-4\">\n                    <label for=\"displayName\">\n                      {{ t(\"settings.profile_name\") }}\n                    </label>\n                    <HoppSmartInput\n                      v-model=\"displayName\"\n                      :autofocus=\"false\"\n                      styles=\"mt-2 md:max-w-sm\"\n                      :placeholder=\"`${t('settings.profile_name')}`\"\n                    >\n                      <template #button>\n                        <HoppButtonSecondary\n                          filled\n                          outline\n                          :label=\"t('action.save')\"\n                          class=\"min-w-[4rem] ml-2\"\n                          type=\"submit\"\n                          :loading=\"updatingDisplayName\"\n                          @click=\"updateDisplayName\"\n                        />\n                      </template>\n                    </HoppSmartInput>\n                  </div>\n                  <div class=\"py-4\">\n                    <label for=\"emailAddress\">\n                      {{ t(\"settings.profile_email\") }}\n                    </label>\n                    <HoppSmartInput\n                      v-model=\"emailAddress\"\n                      :autofocus=\"false\"\n                      styles=\"flex mt-2 md:max-w-sm\"\n                      :placeholder=\"`${t('settings.profile_name')}`\"\n                    >\n                      <template #button>\n                        <HoppButtonSecondary\n                          filled\n                          outline\n                          :label=\"t('action.save')\"\n                          class=\"min-w-[4rem] ml-2\"\n                          type=\"submit\"\n                          :loading=\"updatingEmailAddress\"\n                          @click=\"updateEmailAddress\"\n                        />\n                      </template>\n                    </HoppSmartInput>\n                  </div>\n                </section>\n\n                <section class=\"p-4\">\n                  <h4 class=\"font-semibold text-secondaryDark\">\n                    {{ t(\"settings.sync\") }}\n                  </h4>\n                  <div class=\"my-1 text-secondaryLight\">\n                    {{ t(\"settings.sync_description\") }}\n                  </div>\n                  <div class=\"space-y-4 py-4\">\n                    <div class=\"flex items-center\">\n                      <HoppSmartToggle\n                        :on=\"SYNC_COLLECTIONS\"\n                        @change=\"toggleSetting('syncCollections')\"\n                      >\n                        {{ t(\"settings.sync_collections\") }}\n                      </HoppSmartToggle>\n                    </div>\n                    <div class=\"flex items-center\">\n                      <HoppSmartToggle\n                        :on=\"SYNC_ENVIRONMENTS\"\n                        @change=\"toggleSetting('syncEnvironments')\"\n                      >\n                        {{ t(\"settings.sync_environments\") }}\n                      </HoppSmartToggle>\n                    </div>\n                    <div class=\"flex items-center\">\n                      <HoppSmartToggle\n                        :on=\"SYNC_HISTORY\"\n                        @change=\"toggleSetting('syncHistory')\"\n                      >\n                        {{ t(\"settings.sync_history\") }}\n                      </HoppSmartToggle>\n                    </div>\n                  </div>\n                </section>\n\n                <template v-if=\"platform.ui?.additionalProfileSections?.length\">\n                  <template\n                    v-for=\"item in platform.ui?.additionalProfileSections\"\n                    :key=\"item.id\"\n                  >\n                    <component :is=\"item\" />\n                  </template>\n                </template>\n\n                <ProfileUserDelete />\n              </div>\n            </HoppSmartTab>\n\n            <HoppSmartTab id=\"teams\" :label=\"t('team.title')\">\n              <Teams :modal=\"false\" class=\"p-4\" />\n            </HoppSmartTab>\n\n            <HoppSmartTab id=\"tokens\" :label=\"t('access_tokens.tab_title')\">\n              <AccessTokens />\n            </HoppSmartTab>\n          </HoppSmartTabs>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport * as E from \"fp-ts/Either\"\nimport { computed, ref, watchEffect } from \"vue\"\n\nimport { platform } from \"~/platform\"\n\nimport { usePageHead } from \"@composables/head\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useSetting } from \"@composables/settings\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useColorMode } from \"@composables/theming\"\nimport { useToast } from \"@composables/toast\"\nimport { invokeAction } from \"~/helpers/actions\"\n\nimport { toggleSetting } from \"~/newstore/settings\"\n\nimport IconSettings from \"~icons/lucide/settings\"\nimport IconVerified from \"~icons/lucide/verified\"\n\ntype ProfileTabs = \"sync\" | \"teams\"\n\nconst selectedProfileTab = ref<ProfileTabs>(\"sync\")\n\nconst t = useI18n()\nconst toast = useToast()\nconst colorMode = useColorMode()\n\nusePageHead({\n  title: computed(() => t(\"navigation.profile\")),\n})\n\nconst SYNC_COLLECTIONS = useSetting(\"syncCollections\")\nconst SYNC_ENVIRONMENTS = useSetting(\"syncEnvironments\")\nconst SYNC_HISTORY = useSetting(\"syncHistory\")\nconst currentUser = useReadonlyStream(\n  platform.auth.getCurrentUserStream(),\n  platform.auth.getCurrentUser()\n)\nconst probableUser = useReadonlyStream(\n  platform.auth.getProbableUserStream(),\n  platform.auth.getProbableUser()\n)\n\nconst loadingCurrentUser = computed(() => {\n  if (!probableUser.value) return false\n  else if (!currentUser.value) return true\n  return false\n})\n\nconst displayName = ref(currentUser.value?.displayName || \"\")\nconst updatingDisplayName = ref(false)\nwatchEffect(() => (displayName.value = currentUser.value?.displayName || \"\"))\n\nconst updateDisplayName = async () => {\n  if (!displayName.value) {\n    toast.error(`${t(\"error.empty_profile_name\")}`)\n    return\n  }\n\n  if (currentUser.value?.displayName === displayName.value) {\n    toast.error(`${t(\"error.same_profile_name\")}`)\n    return\n  }\n\n  updatingDisplayName.value = true\n\n  const res = await platform.auth.setDisplayName(displayName.value)\n\n  if (E.isLeft(res)) {\n    toast.error(t(\"error.something_went_wrong\"))\n  } else if (E.isRight(res)) {\n    toast.success(`${t(\"profile.updated\")}`)\n  }\n\n  updatingDisplayName.value = false\n}\n\nconst emailAddress = ref(currentUser.value?.email || \"\")\nconst updatingEmailAddress = ref(false)\nwatchEffect(() => (emailAddress.value = currentUser.value?.email || \"\"))\n\nconst updateEmailAddress = () => {\n  updatingEmailAddress.value = true\n  platform.auth\n    .setEmailAddress(emailAddress.value as string)\n    .then(() => {\n      toast.success(`${t(\"profile.updated\")}`)\n    })\n    .catch(() => {\n      toast.error(`${t(\"error.something_went_wrong\")}`)\n    })\n    .finally(() => {\n      updatingEmailAddress.value = false\n    })\n}\n\nconst verifyingEmailAddress = ref(false)\n\nconst sendEmailVerification = () => {\n  verifyingEmailAddress.value = true\n  platform.auth\n    .verifyEmailAddress()\n    .then(() => {\n      toast.success(`${t(\"profile.email_verification_mail\")}`)\n    })\n    .catch(() => {\n      toast.error(`${t(\"error.something_went_wrong\")}`)\n    })\n    .finally(() => {\n      verifyingEmailAddress.value = false\n    })\n}\n</script>\n"],"names":["useI18n","toast","useToast","props","__props","emit","__emit","tippyActions","ref","copyIcon","refAutoReset","IconCopy","accessTokenLabel","expiration","expirationOptions","expirationDateText","computed","chosenExpiryInDays","currentDate","expirationDate","shortDateTime","copyAccessToken","copyToClipboard","IconCheck","generateAccessToken","hideModal","colorMode","useColorMode","t","isInitialPageLoad","initialPageLoadHasError","getTokenExpiryText","tokenExpiresOn","limit","confirmDeleteAccessToken","hasMoreTokens","showAccessTokensGenerateModal","tokenDeleteActionLoading","tokenGenerateActionLoading","tokensListFetchErrored","tokensListLoading","accessToken","tokenToDelete","accessTokens","offset","endpointPrefix","getAxiosPlatformConfig","platform","_b","_a","onMounted","fetchAccessTokens","axiosConfig","endpoint","data","axios","label","expiryInDays","body","deleteAccessToken","tokenIdToDelete","tokenLabelToDelete","token","hideAccessTokenGenerateModal","displayDeleteAccessTokenConfirmationModal","tokenId","tokenLabel","deleteUser","runMutation","DeleteUserDocument","router","useRouter","showDeleteAccountModal","userVerificationInput","loading","myTeams","watch","isModalOpen","fetchMyTeams","result","runGQLQuery","GetMyTeamsDocument","E.isLeft","team","deletingUser","deleteUserAccount","pipe","TE.match","err","getErrorMessage","selectedProfileTab","usePageHead","SYNC_COLLECTIONS","useSetting","SYNC_ENVIRONMENTS","SYNC_HISTORY","currentUser","useReadonlyStream","probableUser","loadingCurrentUser","displayName","updatingDisplayName","watchEffect","updateDisplayName","res","E.isRight","emailAddress","updatingEmailAddress","updateEmailAddress","verifyingEmailAddress","sendEmailVerification"],"mappings":"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"}