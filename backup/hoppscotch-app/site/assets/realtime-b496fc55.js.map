{"version":3,"file":"realtime-b496fc55.js","sources":["../../../hoppscotch-common/src/pages/realtime.vue"],"sourcesContent":["<template>\n  <HoppSmartTabs\n    v-model=\"currentTab\"\n    styles=\"sticky overflow-x-auto flex-shrink-0 bg-primary top-0 z-10\"\n    content-styles=\"!h-[calc(100%-var(--sidebar-primary-sticky-fold)-1px)] !flex\"\n  >\n    <HoppSmartTab\n      v-for=\"(navigation, index) in REALTIME_NAVIGATION\"\n      :id=\"navigation.target\"\n      :key=\"index\"\n      :label=\"navigation.title\"\n      :icon=\"navigation.icon\"\n    >\n      <RouterView />\n    </HoppSmartTab>\n  </HoppSmartTabs>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, ref, computed } from \"vue\"\nimport { RouterView, useRouter, useRoute } from \"vue-router\"\nimport { usePageHead } from \"~/composables/head\"\nimport { useI18n } from \"~/composables/i18n\"\nimport IconWebsocket from \"~icons/hopp/websocket\"\nimport IconSocketio from \"~icons/hopp/socketio\"\nimport IconMqtt from \"~icons/hopp/mqtt\"\nimport IconSse from \"~icons/lucide/satellite-dish\"\n\nconst t = useI18n()\nconst router = useRouter()\nconst route = useRoute()\n\nconst REALTIME_NAVIGATION = [\n  {\n    target: \"websocket\",\n    title: t(\"tab.websocket\"),\n    icon: IconWebsocket,\n  },\n  {\n    target: \"sse\",\n    title: t(\"tab.sse\"),\n    icon: IconSse,\n  },\n  {\n    target: \"socketio\",\n    title: t(\"tab.socketio\"),\n    icon: IconSocketio,\n  },\n  {\n    target: \"mqtt\",\n    title: t(\"tab.mqtt\"),\n    icon: IconMqtt,\n  },\n] as const\n\ntype RealtimeNavTab = (typeof REALTIME_NAVIGATION)[number][\"target\"]\n\nconst currentTab = ref<RealtimeNavTab>(\"websocket\")\n\nusePageHead({\n  title: computed(() => t(`tab.${currentTab.value}`)),\n})\n\n// Update the router when the tab is updated\nwatch(currentTab, (newTab) => {\n  router.push(`/realtime/${newTab}`)\n})\n\n// Update the tab when router is upgrad\nwatch(\n  route,\n  (updateRoute) => {\n    const path = updateRoute.path\n\n    if (updateRoute.name?.toString() === \"realtime\") {\n      router.replace(`/realtime/websocket`)\n      return\n    }\n\n    const destination: string | undefined = path.split(\"realtime/\")[1]\n\n    const target = REALTIME_NAVIGATION.find(\n      ({ target }) => target === destination\n    )?.target\n\n    if (target) currentTab.value = target\n  },\n  { immediate: true }\n)\n</script>\n"],"names":["t","useI18n","router","useRouter","route","useRoute","REALTIME_NAVIGATION","IconWebsocket","IconSse","IconSocketio","IconMqtt","currentTab","ref","usePageHead","computed","watch","newTab","updateRoute","path","_a","destination","target","_b","target2"],"mappings":"kwFA4BA,MAAAA,EAAAC,IACAC,EAAAC,IACAC,EAAAC,IAEAC,EAAA,CAA4B,CAC1B,OAAA,YACU,MAAAN,EAAA,eAAA,EACgB,KAAAO,CAClB,EACR,CACA,OAAA,MACU,MAAAP,EAAA,SAAA,EACU,KAAAQ,CACZ,EACR,CACA,OAAA,WACU,MAAAR,EAAA,cAAA,EACe,KAAAS,CACjB,EACR,CACA,OAAA,OACU,MAAAT,EAAA,UAAA,EACW,KAAAU,CACb,CACR,EAKFC,EAAAC,EAAA,WAAA,EAEAC,OAAAA,EAAA,CAAY,MAAAC,EAAA,IAAAd,EAAA,OAAAW,EAAA,KAAA,EAAA,CAAA,CACwC,CAAA,EAIpDI,EAAAJ,EAAAK,GAAA,CACEd,EAAA,KAAA,aAAAc,CAAA,EAAA,CAAiC,CAAA,EAInCD,EAAAX,EACEa,GAAA,SAEE,MAAAC,EAAAD,EAAA,KAEA,KAAAE,EAAAF,EAAA,OAAA,YAAAE,EAAA,cAAA,WAAA,CACEjB,EAAA,QAAA,qBAAA,EACA,MAAA,CAGF,MAAAkB,EAAAF,EAAA,MAAA,WAAA,EAAA,CAAA,EAEAG,GAAAC,EAAAhB,EAAA,KAAmC,CAAA,CAAA,OAAAiB,CAAA,IAAAA,IAAAH,CACN,IAD7B,YAAAE,EAC6B,OAG7BD,IAAYV,EAAA,MAAAU,EAAmB,EACjC,CAAA,UAAA,EAAA,CACkB"}