{"version":3,"file":"Headers-96f03a77.js","sources":["../../../hoppscotch-common/src/components/http/authorization/ApiKey.vue","../../../hoppscotch-common/src/composables/ref.ts","../../../hoppscotch-common/src/services/oauth/flows/clientCredentials.ts","../../../hoppscotch-common/src/services/oauth/flows/password.ts","../../../hoppscotch-common/src/components/http/OAuth2Authorization.vue","../../../hoppscotch-common/src/components/http/authorization/Basic.vue","../../../hoppscotch-common/src/components/http/Authorization.vue","../../../hoppscotch-common/src/helpers/headers.ts","../../../hoppscotch-common/src/helpers/editor/linting/rawKeyValue.ts","../../../hoppscotch-common/src/helpers/functional/object.ts","../../../hoppscotch-common/src/components/http/Headers.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-1 border-b border-dividerLight\">\n    <SmartEnvInput\n      v-model=\"auth.key\"\n      :auto-complete-env=\"true\"\n      placeholder=\"Key\"\n      :envs=\"envs\"\n    />\n  </div>\n  <div class=\"flex flex-1 border-b border-dividerLight\">\n    <SmartEnvInput\n      v-model=\"auth.value\"\n      :auto-complete-env=\"true\"\n      placeholder=\"Value\"\n      :envs=\"envs\"\n    />\n  </div>\n  <div class=\"flex items-center border-b border-dividerLight\">\n    <span class=\"flex items-center\">\n      <label class=\"ml-4 text-secondaryLight\">\n        {{ t(\"authorization.pass_key_by\") }}\n      </label>\n      <tippy\n        interactive\n        trigger=\"click\"\n        theme=\"popover\"\n        :on-shown=\"() => authTippyActions.focus()\"\n      >\n        <HoppSmartSelectWrapper>\n          <HoppButtonSecondary\n            :label=\"\n              auth.addTo\n                ? auth.addTo === 'HEADERS'\n                  ? t('authorization.pass_by_headers_label')\n                  : t('authorization.pass_by_query_params_label')\n                : t('state.none')\n            \"\n            class=\"ml-2 rounded-none pr-8\"\n          />\n        </HoppSmartSelectWrapper>\n        <template #content=\"{ hide }\">\n          <div\n            ref=\"authTippyActions\"\n            class=\"flex flex-col focus:outline-none\"\n            tabindex=\"0\"\n            @keyup.escape=\"hide()\"\n          >\n            <HoppSmartItem\n              :icon=\"auth.addTo === 'HEADERS' ? IconCircleDot : IconCircle\"\n              :active=\"auth.addTo === 'HEADERS'\"\n              :label=\"t('authorization.pass_by_headers_label')\"\n              @click=\"\n                () => {\n                  auth.addTo = 'HEADERS'\n                  hide()\n                }\n              \"\n            />\n            <HoppSmartItem\n              :icon=\"auth.addTo === 'QUERY_PARAMS' ? IconCircleDot : IconCircle\"\n              :active=\"auth.addTo === 'QUERY_PARAMS'\"\n              :label=\"t('authorization.pass_by_query_params_label')\"\n              @click=\"\n                () => {\n                  auth.addTo = 'QUERY_PARAMS'\n                  hide()\n                }\n              \"\n            />\n          </div>\n        </template>\n      </tippy>\n    </span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconCircle from \"~icons/lucide/circle\"\nimport IconCircleDot from \"~icons/lucide/circle-dot\"\nimport { useI18n } from \"@composables/i18n\"\nimport { HoppRESTAuthAPIKey } from \"@hoppscotch/data\"\nimport { useVModel } from \"@vueuse/core\"\nimport { ref } from \"vue\"\nimport { AggregateEnvironment } from \"~/newstore/environments\"\n\nconst t = useI18n()\n\nconst props = defineProps<{\n  modelValue: HoppRESTAuthAPIKey\n  envs?: AggregateEnvironment[]\n}>()\n\nconst emit = defineEmits<{\n  (e: \"update:modelValue\", value: HoppRESTAuthAPIKey): void\n}>()\n\nconst auth = useVModel(props, \"modelValue\", emit)\n\nconst authTippyActions = ref<any | null>(null)\n</script>\n","import { customRef, onBeforeUnmount, ref, Ref, UnwrapRef, watch } from \"vue\"\n\nexport function pluckRef<T, K extends keyof T>(ref: Ref<T>, key: K): Ref<T[K]> {\n  return customRef((track, trigger) => {\n    const stopWatching = watch(ref, (newVal, oldVal) => {\n      if (newVal[key] !== oldVal[key]) {\n        trigger()\n      }\n    })\n\n    onBeforeUnmount(() => {\n      stopWatching()\n    })\n\n    return {\n      get() {\n        track()\n        return ref.value[key]\n      },\n      set(value: T[K]) {\n        trigger()\n        ref.value = Object.assign(ref.value, { [key]: value })\n      },\n    }\n  })\n}\n\nexport function pluckMultipleFromRef<T, K extends Array<keyof T>>(\n  sourceRef: Ref<T>,\n  keys: K\n): { [key in K[number]]: Ref<T[key]> } {\n  return Object.fromEntries(keys.map((x) => [x, pluckRef(sourceRef, x)])) as any\n}\n\nexport const refWithCallbackOnChange = <T>(\n  initialValue: T,\n  callback: (value: UnwrapRef<T>) => void\n) => {\n  const targetRef = ref(initialValue)\n\n  watch(targetRef, (value) => {\n    callback(value)\n  })\n\n  return targetRef\n}\n","import {\n  OauthAuthService,\n  createFlowConfig,\n  decodeResponseAsJSON,\n} from \"../oauth.service\"\nimport { z } from \"zod\"\nimport { getService } from \"~/modules/dioc\"\nimport * as E from \"fp-ts/Either\"\nimport { InterceptorService } from \"~/services/interceptor.service\"\nimport { useToast } from \"~/composables/toast\"\nimport { ClientCredentialsGrantTypeParams } from \"@hoppscotch/data\"\n\nconst interceptorService = getService(InterceptorService)\n\nconst ClientCredentialsFlowParamsSchema = ClientCredentialsGrantTypeParams.pick(\n  {\n    authEndpoint: true,\n    clientID: true,\n    clientSecret: true,\n    scopes: true,\n  }\n).refine(\n  (params) => {\n    return (\n      params.authEndpoint.length >= 1 &&\n      params.clientID.length >= 1 &&\n      params.clientSecret.length >= 1 &&\n      (!params.scopes || params.scopes.length >= 1)\n    )\n  },\n  {\n    message: \"Minimum length requirement not met for one or more parameters\",\n  }\n)\n\nexport type ClientCredentialsFlowParams = z.infer<\n  typeof ClientCredentialsFlowParamsSchema\n>\n\nexport const getDefaultClientCredentialsFlowParams =\n  (): ClientCredentialsFlowParams => ({\n    authEndpoint: \"\",\n    clientID: \"\",\n    clientSecret: \"\",\n    scopes: undefined,\n  })\n\nconst initClientCredentialsOAuthFlow = async ({\n  clientID,\n  clientSecret,\n  scopes,\n  authEndpoint,\n}: ClientCredentialsFlowParams) => {\n  const toast = useToast()\n\n  const formData = new URLSearchParams()\n  formData.append(\"grant_type\", \"client_credentials\")\n  formData.append(\"client_id\", clientID)\n  formData.append(\"client_secret\", clientSecret)\n\n  if (scopes) {\n    formData.append(\"scope\", scopes)\n  }\n\n  const { response } = interceptorService.runRequest({\n    url: authEndpoint,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Accept: \"application/json\",\n    },\n    data: formData.toString(),\n  })\n\n  const res = await response\n\n  if (E.isLeft(res)) {\n    return E.left(\"AUTH_TOKEN_REQUEST_FAILED\" as const)\n  }\n\n  const responsePayload = decodeResponseAsJSON(res.right)\n\n  if (E.isLeft(responsePayload)) {\n    return E.left(\"AUTH_TOKEN_REQUEST_FAILED\" as const)\n  }\n\n  const withAccessTokenSchema = z.object({\n    access_token: z.string(),\n  })\n\n  const parsedTokenResponse = withAccessTokenSchema.safeParse(\n    responsePayload.right\n  )\n\n  if (!parsedTokenResponse.success) {\n    toast.error(\"AUTH_TOKEN_REQUEST_INVALID_RESPONSE\")\n  }\n\n  return parsedTokenResponse.success\n    ? E.right(parsedTokenResponse.data)\n    : E.left(\"AUTH_TOKEN_REQUEST_INVALID_RESPONSE\" as const)\n}\n\nconst handleRedirectForAuthCodeOauthFlow = async (localConfig: string) => {\n  // parse the query string\n  const params = new URLSearchParams(window.location.search)\n\n  const code = params.get(\"code\")\n  const state = params.get(\"state\")\n  const error = params.get(\"error\")\n\n  if (error) {\n    return E.left(\"AUTH_SERVER_RETURNED_ERROR\")\n  }\n\n  if (!code) {\n    return E.left(\"AUTH_TOKEN_REQUEST_FAILED\")\n  }\n\n  const expectedSchema = z.object({\n    state: z.string(),\n    tokenEndpoint: z.string(),\n    clientSecret: z.string(),\n    clientID: z.string(),\n  })\n\n  const decodedLocalConfig = expectedSchema.safeParse(JSON.parse(localConfig))\n\n  if (!decodedLocalConfig.success) {\n    return E.left(\"INVALID_LOCAL_CONFIG\")\n  }\n\n  // check if the state matches\n  if (decodedLocalConfig.data.state !== state) {\n    return E.left(\"INVALID_STATE\")\n  }\n\n  // exchange the code for a token\n  const formData = new URLSearchParams()\n  formData.append(\"code\", code)\n  formData.append(\"client_id\", decodedLocalConfig.data.clientID)\n  formData.append(\"client_secret\", decodedLocalConfig.data.clientSecret)\n  formData.append(\"redirect_uri\", OauthAuthService.redirectURI)\n\n  const { response } = interceptorService.runRequest({\n    url: decodedLocalConfig.data.tokenEndpoint,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Accept: \"application/json\",\n    },\n    data: formData.toString(),\n  })\n\n  const res = await response\n\n  if (E.isLeft(res)) {\n    return E.left(\"AUTH_TOKEN_REQUEST_FAILED\" as const)\n  }\n\n  const responsePayload = new TextDecoder(\"utf-8\")\n    .decode(res.right.data as any)\n    .replaceAll(\"\\x00\", \"\")\n\n  const withAccessTokenSchema = z.object({\n    access_token: z.string(),\n  })\n\n  const parsedTokenResponse = withAccessTokenSchema.safeParse(\n    JSON.parse(responsePayload)\n  )\n\n  return parsedTokenResponse.success\n    ? E.right(parsedTokenResponse.data)\n    : E.left(\"AUTH_TOKEN_REQUEST_INVALID_RESPONSE\" as const)\n}\n\nexport default createFlowConfig(\n  \"CLIENT_CREDENTIALS\" as const,\n  ClientCredentialsFlowParamsSchema,\n  initClientCredentialsOAuthFlow,\n  handleRedirectForAuthCodeOauthFlow\n)\n","import {\n  OauthAuthService,\n  createFlowConfig,\n  decodeResponseAsJSON,\n} from \"../oauth.service\"\nimport { z } from \"zod\"\nimport { getService } from \"~/modules/dioc\"\nimport * as E from \"fp-ts/Either\"\nimport { InterceptorService } from \"~/services/interceptor.service\"\nimport { useToast } from \"~/composables/toast\"\nimport { PasswordGrantTypeParams } from \"@hoppscotch/data\"\n\nconst interceptorService = getService(InterceptorService)\n\nconst PasswordFlowParamsSchema = PasswordGrantTypeParams.pick({\n  authEndpoint: true,\n  clientID: true,\n  clientSecret: true,\n  scopes: true,\n  username: true,\n  password: true,\n}).refine(\n  (params) => {\n    return (\n      params.authEndpoint.length >= 1 &&\n      params.clientID.length >= 1 &&\n      params.clientSecret.length >= 1 &&\n      params.username.length >= 1 &&\n      params.password.length >= 1 &&\n      (!params.scopes || params.scopes.length >= 1)\n    )\n  },\n  {\n    message: \"Minimum length requirement not met for one or more parameters\",\n  }\n)\n\nexport type PasswordFlowParams = z.infer<typeof PasswordFlowParamsSchema>\n\nexport const getDefaultPasswordFlowParams = (): PasswordFlowParams => ({\n  authEndpoint: \"\",\n  clientID: \"\",\n  clientSecret: \"\",\n  scopes: undefined,\n  username: \"\",\n  password: \"\",\n})\n\nconst initPasswordOauthFlow = async ({\n  password,\n  username,\n  clientID,\n  clientSecret,\n  scopes,\n  authEndpoint,\n}: PasswordFlowParams) => {\n  const toast = useToast()\n\n  const formData = new URLSearchParams()\n  formData.append(\"grant_type\", \"password\")\n  formData.append(\"client_id\", clientID)\n  formData.append(\"client_secret\", clientSecret)\n  formData.append(\"username\", username)\n  formData.append(\"password\", password)\n\n  if (scopes) {\n    formData.append(\"scope\", scopes)\n  }\n\n  const { response } = interceptorService.runRequest({\n    url: authEndpoint,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Accept: \"application/json\",\n    },\n    data: formData.toString(),\n  })\n\n  const res = await response\n\n  if (E.isLeft(res) || res.right.status !== 200) {\n    toast.error(\"AUTH_TOKEN_REQUEST_FAILED\")\n    return E.left(\"AUTH_TOKEN_REQUEST_FAILED\" as const)\n  }\n\n  const responsePayload = new TextDecoder(\"utf-8\")\n    .decode(res.right.data as any)\n    .replaceAll(\"\\x00\", \"\")\n\n  const withAccessTokenSchema = z.object({\n    access_token: z.string(),\n  })\n\n  const parsedTokenResponse = withAccessTokenSchema.safeParse(\n    JSON.parse(responsePayload)\n  )\n\n  if (!parsedTokenResponse.success) {\n    toast.error(\"AUTH_TOKEN_REQUEST_INVALID_RESPONSE\")\n  }\n\n  return parsedTokenResponse.success\n    ? E.right(parsedTokenResponse.data)\n    : E.left(\"AUTH_TOKEN_REQUEST_INVALID_RESPONSE\" as const)\n}\n\nconst handleRedirectForAuthCodeOauthFlow = async (localConfig: string) => {\n  // parse the query string\n  const params = new URLSearchParams(window.location.search)\n\n  const code = params.get(\"code\")\n  const state = params.get(\"state\")\n  const error = params.get(\"error\")\n\n  if (error) {\n    return E.left(\"AUTH_SERVER_RETURNED_ERROR\")\n  }\n\n  if (!code) {\n    return E.left(\"AUTH_TOKEN_REQUEST_FAILED\")\n  }\n\n  const expectedSchema = z.object({\n    state: z.string(),\n    tokenEndpoint: z.string(),\n    clientSecret: z.string(),\n    clientID: z.string(),\n  })\n\n  const decodedLocalConfig = expectedSchema.safeParse(JSON.parse(localConfig))\n\n  if (!decodedLocalConfig.success) {\n    return E.left(\"INVALID_LOCAL_CONFIG\")\n  }\n\n  // check if the state matches\n  if (decodedLocalConfig.data.state !== state) {\n    return E.left(\"INVALID_STATE\")\n  }\n\n  // exchange the code for a token\n  const formData = new URLSearchParams()\n  formData.append(\"code\", code)\n  formData.append(\"client_id\", decodedLocalConfig.data.clientID)\n  formData.append(\"client_secret\", decodedLocalConfig.data.clientSecret)\n  formData.append(\"redirect_uri\", OauthAuthService.redirectURI)\n\n  const { response } = interceptorService.runRequest({\n    url: decodedLocalConfig.data.tokenEndpoint,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Accept: \"application/json\",\n    },\n    data: formData.toString(),\n  })\n\n  const res = await response\n\n  if (E.isLeft(res)) {\n    return E.left(\"AUTH_TOKEN_REQUEST_FAILED\" as const)\n  }\n\n  const responsePayload = decodeResponseAsJSON(res.right)\n\n  if (E.isLeft(responsePayload)) {\n    return E.left(\"AUTH_TOKEN_REQUEST_FAILED\" as const)\n  }\n\n  const withAccessTokenSchema = z.object({\n    access_token: z.string(),\n  })\n\n  const parsedTokenResponse = withAccessTokenSchema.safeParse(\n    responsePayload.right\n  )\n\n  return parsedTokenResponse.success\n    ? E.right(parsedTokenResponse.data)\n    : E.left(\"AUTH_TOKEN_REQUEST_INVALID_RESPONSE\" as const)\n}\n\nexport default createFlowConfig(\n  \"PASSWORD\" as const,\n  PasswordFlowParamsSchema,\n  initPasswordOauthFlow,\n  handleRedirectForAuthCodeOauthFlow\n)\n","<template>\n  <div class=\"flex items-center px-4 border-b border-dividerLight\">\n    <label class=\"truncate font-semibold text-secondaryLight\">\n      {{ t(\"authorization.oauth.grant_type\") }}\n    </label>\n\n    <tippy\n      placement=\"bottom\"\n      interactive\n      trigger=\"click\"\n      theme=\"popover\"\n      :on-shown=\"() => grantTypeTippyActions?.focus()\"\n      class=\"!flex-initial\"\n    >\n      <HoppSmartSelectWrapper>\n        <HoppButtonSecondary\n          class=\"ml-2 rounded-none pr-8\"\n          :label=\"selectedGrantType?.label\"\n        />\n      </HoppSmartSelectWrapper>\n      <template #content=\"{ hide }\">\n        <div\n          ref=\"grantTypeTippyActions\"\n          class=\"flex flex-col focus:outline-none\"\n          tabindex=\"0\"\n          @keyup.escape=\"hide()\"\n        >\n          <HoppSmartItem\n            v-for=\"grantType in supportedGrantTypes\"\n            :key=\"grantType.id\"\n            :label=\"grantType.label\"\n            :icon=\"\n              selectedGrantTypeID === grantType.id ? IconCircleDot : IconCircle\n            \"\n            :active=\"selectedGrantTypeID === grantType.id\"\n            @click=\"\n              () => {\n                changeSelectedGrantType(grantType.id)\n\n                hide()\n              }\n            \"\n          />\n        </div>\n      </template>\n    </tippy>\n  </div>\n\n  <div class=\"flex flex-col\">\n    <div\n      v-for=\"element in currentOAuthGrantTypeFormElements\"\n      :key=\"element.id\"\n      class=\"flex flex-1 border-b border-dividerLight\"\n    >\n      <SmartEnvInput\n        v-if=\"element.type === 'text'\"\n        v-model=\"element.ref.value\"\n        :placeholder=\"element.label\"\n        :envs=\"envs\"\n        :auto-complete-env=\"true\"\n      />\n      <div\n        v-else-if=\"element.type === 'checkbox'\"\n        class=\"px-4 py-2 flex items-center\"\n      >\n        <span class=\"text-secondaryLight font-semibold mr-6\">{{\n          element.label\n        }}</span>\n        <HoppSmartCheckbox\n          class=\"text-secondaryLight flex\"\n          :on=\"element.ref.value\"\n          @change=\"element.ref.value = !element.ref.value\"\n        ></HoppSmartCheckbox>\n      </div>\n      <div\n        v-else-if=\"element.type === 'dropdown'\"\n        class=\"flex items-center px-4\"\n      >\n        <label class=\"truncate text-secondaryLight\">\n          {{ element.label }}\n        </label>\n        <tippy\n          v-if=\"element.ref.value\"\n          interactive\n          trigger=\"click\"\n          theme=\"popover\"\n          class=\"!flex-initial\"\n        >\n          <HoppSmartSelectWrapper>\n            <HoppButtonSecondary\n              class=\"ml-2 rounded-none pr-8\"\n              :label=\"element.ref.value.label\"\n            />\n          </HoppSmartSelectWrapper>\n          <template #content=\"{ hide }\">\n            <div\n              :ref=\"element.tippyRefName\"\n              class=\"flex flex-col focus:outline-none\"\n              tabindex=\"0\"\n              @keyup.escape=\"hide()\"\n            >\n              <HoppSmartItem\n                v-for=\"item in element.options\"\n                :key=\"item.id\"\n                :label=\"item.label\"\n                :icon=\"\n                  element.ref.value.id === item.id ? IconCircleDot : IconCircle\n                \"\n                :active=\"element.ref.value.id === item.id\"\n                @click=\"\n                  () => {\n                    element.ref.value = item\n                    hide()\n                  }\n                \"\n              ></HoppSmartItem>\n            </div>\n          </template>\n        </tippy>\n      </div>\n    </div>\n\n    <div class=\"flex items-center border-b border-dividerLight\">\n      <span class=\"flex items-center\">\n        <label class=\"ml-4 text-secondaryLight\">\n          {{ t(\"authorization.pass_key_by\") }}\n        </label>\n        <tippy\n          interactive\n          trigger=\"click\"\n          theme=\"popover\"\n          :on-shown=\"() => authTippyActions?.focus()\"\n        >\n          <HoppSmartSelectWrapper>\n            <HoppButtonSecondary\n              :label=\"passBy\"\n              class=\"ml-2 rounded-none pr-8\"\n            />\n          </HoppSmartSelectWrapper>\n          <template #content=\"{ hide }\">\n            <div\n              ref=\"authTippyActions\"\n              class=\"flex flex-col focus:outline-none\"\n              tabindex=\"0\"\n              @keyup.escape=\"hide()\"\n            >\n              <HoppSmartItem\n                v-for=\"addToTarget in addToTargets\"\n                :key=\"addToTarget.id\"\n                :label=\"addToTarget.label\"\n                :icon=\"\n                  auth.addTo === addToTarget.id ? IconCircleDot : IconCircle\n                \"\n                :active=\"auth.addTo === addToTarget.id\"\n                @click=\"\n                  () => {\n                    auth.addTo = addToTarget.id\n                    hide()\n                  }\n                \"\n              />\n            </div>\n          </template>\n        </tippy>\n      </span>\n    </div>\n\n    <div class=\"p-2\">\n      <HoppButtonSecondary\n        filled\n        :label=\"`${t('authorization.generate_token')}`\"\n        @click=\"generateOAuthToken()\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  HoppGQLAuthOAuth2,\n  HoppRESTAuthOAuth2,\n  parseTemplateStringE,\n} from \"@hoppscotch/data\"\nimport { useService } from \"dioc/vue\"\nimport * as E from \"fp-ts/Either\"\nimport { Ref, computed, ref } from \"vue\"\nimport { z } from \"zod\"\nimport { useI18n } from \"~/composables/i18n\"\nimport { refWithCallbackOnChange } from \"~/composables/ref\"\nimport { useToast } from \"~/composables/toast\"\nimport { getCombinedEnvVariables } from \"~/helpers/preRequest\"\nimport { AggregateEnvironment } from \"~/newstore/environments\"\nimport authCode, {\n  AuthCodeOauthFlowParams,\n  getDefaultAuthCodeOauthFlowParams,\n} from \"~/services/oauth/flows/authCode\"\nimport clientCredentials, {\n  ClientCredentialsFlowParams,\n  getDefaultClientCredentialsFlowParams,\n} from \"~/services/oauth/flows/clientCredentials\"\nimport implicit, {\n  ImplicitOauthFlowParams,\n  getDefaultImplicitOauthFlowParams,\n} from \"~/services/oauth/flows/implicit\"\nimport passwordFlow, {\n  PasswordFlowParams,\n  getDefaultPasswordFlowParams,\n} from \"~/services/oauth/flows/password\"\nimport {\n  PersistedOAuthConfig,\n  grantTypesInvolvingRedirect,\n} from \"~/services/oauth/oauth.service\"\nimport { PersistenceService } from \"~/services/persistence\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\nimport { RESTTabService } from \"~/services/tab/rest\"\nimport IconCircle from \"~icons/lucide/circle\"\nimport IconCircleDot from \"~icons/lucide/circle-dot\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst gqlTabsService = useService(GQLTabService)\nconst persistenceService = useService(PersistenceService)\nconst restTabsService = useService(RESTTabService)\n\nconst props = defineProps<{\n  modelValue: HoppRESTAuthOAuth2 | HoppGQLAuthOAuth2\n  isCollectionProperty?: boolean\n  envs?: AggregateEnvironment[]\n  source: \"REST\" | \"GraphQL\"\n}>()\n\nconst auth = ref(props.modelValue)\n\nconst addToTargets = [\n  {\n    id: \"HEADERS\" as const,\n    label: \"Headers\",\n  },\n  {\n    id: \"QUERY_PARAMS\" as const,\n    label: \"Query Params\",\n  },\n]\n\nconst passBy = computed(() => {\n  return (\n    addToTargets.find((target) => target.id === auth.value.addTo)?.label ||\n    t(\"state.none\")\n  )\n})\n\nconst supportedGrantTypes = [\n  {\n    // used for both authCode and authCodePKCE\n    id: \"authCode\" as const,\n    label: t(\"authorization.oauth.label_auth_code\"),\n    formElements: computed(() => {\n      if (!(auth.value.grantTypeInfo.grantType === \"AUTHORIZATION_CODE\")) {\n        return\n      }\n\n      const grantType = auth.value.grantTypeInfo\n\n      const authEndpoint = refWithCallbackOnChange(\n        grantType?.authEndpoint,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            authEndpoint: value,\n          }\n        }\n      )\n\n      const tokenEndpoint = refWithCallbackOnChange(\n        grantType?.tokenEndpoint,\n        (value) => {\n          if (!(\"tokenEndpoint\" in auth.value.grantTypeInfo)) {\n            return\n          }\n\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            tokenEndpoint: value,\n          }\n        }\n      )\n\n      const clientID = refWithCallbackOnChange(grantType?.clientID, (value) => {\n        auth.value.grantTypeInfo = {\n          ...auth.value.grantTypeInfo,\n          clientID: value,\n        }\n      })\n\n      const clientSecret = refWithCallbackOnChange(\n        grantType?.clientSecret,\n        (value) => {\n          if (!(\"clientSecret\" in auth.value.grantTypeInfo)) {\n            return\n          }\n\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            clientSecret: value ?? \"\",\n          }\n        }\n      )\n\n      const scopes = refWithCallbackOnChange(\n        grantType?.scopes ? grantType.scopes : undefined,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            scopes: value,\n          }\n        }\n      )\n\n      const isPKCE = refWithCallbackOnChange(\n        auth.value.grantTypeInfo.isPKCE,\n        (value) => {\n          if (!(\"isPKCE\" in auth.value.grantTypeInfo)) {\n            return\n          }\n\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            isPKCE: value,\n          }\n        }\n      )\n\n      const codeChallenge: Ref<{\n        id: \"plain\" | \"S256\"\n        label: string\n      } | null> = refWithCallbackOnChange(\n        auth.value.grantTypeInfo.codeVerifierMethod\n          ? {\n              id: auth.value.grantTypeInfo.codeVerifierMethod,\n              label:\n                auth.value.grantTypeInfo.codeVerifierMethod === \"plain\"\n                  ? \"Plain\"\n                  : \"SHA-256\",\n            }\n          : null,\n        (value) => {\n          if (!(\"codeVerifierMethod\" in auth.value.grantTypeInfo) || !value) {\n            return\n          }\n\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            codeVerifierMethod: value.id,\n          }\n        }\n      )\n\n      const runAction = () => {\n        const params: AuthCodeOauthFlowParams = {\n          authEndpoint: authEndpoint.value,\n          tokenEndpoint: tokenEndpoint.value,\n          clientID: clientID.value,\n          clientSecret: clientSecret.value,\n          scopes: scopes.value,\n          isPKCE: isPKCE.value,\n          codeVerifierMethod: codeChallenge.value?.id,\n        }\n\n        const unwrappedParams = replaceTemplateStringsInObjectValues(params)\n\n        const parsedArgs = authCode.params.safeParse(unwrappedParams)\n\n        if (!parsedArgs.success) {\n          return E.left(\"VALIDATION_FAILED\" as const)\n        }\n\n        authCode.init(parsedArgs.data)\n\n        return E.right(undefined)\n      }\n\n      const pkceElements = computed(() => {\n        const checkbox = {\n          id: \"isPKCE\",\n          label: t(\"authorization.oauth.label_use_pkce\"),\n          type: \"checkbox\" as const,\n          ref: isPKCE,\n          onChange: (e: Event) => {\n            const target = e.target as HTMLInputElement\n\n            isPKCE.value = target.checked\n          },\n        }\n\n        return isPKCE.value\n          ? [\n              checkbox,\n              {\n                id: \"codeChallenge\",\n                label: t(\"authorization.oauth.label_code_challenge\"),\n                type: \"dropdown\" as const,\n                ref: codeChallenge,\n                tippyRefName: \"pkceTippyActions\",\n                tippyRef: pkceTippyActions,\n                options: [\n                  {\n                    id: \"plain\" as const,\n                    label: \"Plain\",\n                  },\n                  {\n                    id: \"S256\" as const,\n                    label: \"SHA-256\",\n                  },\n                ],\n              },\n            ]\n          : [checkbox]\n      })\n\n      const elements = computed(() => {\n        return [\n          ...pkceElements.value,\n          {\n            id: \"authEndpoint\",\n            label: t(\"authorization.oauth.label_authorization_endpoint\"),\n            type: \"text\" as const,\n            ref: authEndpoint,\n          },\n          {\n            id: \"tokenEndpoint\",\n            label: t(\"authorization.oauth.label_token_endpoint\"),\n            type: \"text\" as const,\n            ref: tokenEndpoint,\n          },\n          {\n            id: \"clientId\",\n            label: t(\"authorization.oauth.label_client_id\"),\n            type: \"text\" as const,\n            ref: clientID,\n          },\n          {\n            id: \"clientSecret\",\n            label: t(\"authorization.oauth.label_client_secret\"),\n            type: \"text\" as const,\n            ref: clientSecret,\n          },\n          {\n            id: \"scopes\",\n            label: t(\"authorization.oauth.label_scopes\"),\n            type: \"text\" as const,\n            ref: scopes,\n          },\n        ]\n      })\n\n      return {\n        runAction,\n        elements,\n      }\n    }),\n  },\n  {\n    id: \"clientCredentials\" as const,\n    label: t(\"authorization.oauth.label_client_credentials\"),\n    formElements: computed(() => {\n      if (!(auth.value.grantTypeInfo.grantType === \"CLIENT_CREDENTIALS\")) {\n        return\n      }\n\n      const grantTypeInfo = auth.value.grantTypeInfo\n\n      const authEndpoint = refWithCallbackOnChange(\n        grantTypeInfo?.authEndpoint,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            authEndpoint: value,\n          }\n        }\n      )\n\n      const clientID = refWithCallbackOnChange(\n        grantTypeInfo?.clientID,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            clientID: value,\n          }\n        }\n      )\n\n      const clientSecret = refWithCallbackOnChange(\n        grantTypeInfo?.clientSecret,\n        (value) => {\n          if (!(\"clientSecret\" in auth.value.grantTypeInfo)) {\n            return\n          }\n\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            clientSecret: value,\n          }\n        }\n      )\n\n      const scopes = refWithCallbackOnChange(\n        grantTypeInfo?.scopes ? grantTypeInfo.scopes : undefined,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            scopes: value,\n          }\n        }\n      )\n\n      const runAction = async () => {\n        const values: ClientCredentialsFlowParams =\n          replaceTemplateStringsInObjectValues({\n            authEndpoint: authEndpoint.value,\n            clientID: clientID.value,\n            clientSecret: clientSecret.value,\n            scopes: scopes.value,\n          })\n\n        const parsedArgs = clientCredentials.params.safeParse(values)\n\n        if (!parsedArgs.success) {\n          return E.left(\"VALIDATION_FAILED\" as const)\n        }\n\n        const res = await clientCredentials.init(parsedArgs.data)\n\n        if (E.isLeft(res)) {\n          return E.left(\"OAUTH_TOKEN_FETCH_FAILED\" as const)\n        }\n\n        setAccessTokenInActiveContext(res.right?.access_token)\n\n        toast.success(t(\"authorization.oauth.token_fetched_successfully\"))\n\n        return E.right(undefined)\n      }\n\n      const elements = computed(() => {\n        return [\n          {\n            id: \"authEndpoint\",\n            label: \"Authorization Endpoint\",\n            type: \"text\" as const,\n            ref: authEndpoint,\n          },\n          {\n            id: \"clientId\",\n            label: \"Client ID\",\n            type: \"text\" as const,\n            ref: clientID,\n          },\n          {\n            id: \"clientSecret\",\n            label: \"Client Secret\",\n            type: \"text\" as const,\n            ref: clientSecret,\n          },\n          {\n            id: \"scopes\",\n            label: \"Scopes\",\n            type: \"text\" as const,\n            ref: scopes,\n          },\n        ]\n      })\n\n      return {\n        runAction,\n        elements,\n      }\n    }),\n  },\n  {\n    id: \"password\" as const,\n    label: \"Password\",\n    formElements: computed(() => {\n      if (!(auth.value.grantTypeInfo.grantType === \"PASSWORD\")) {\n        return\n      }\n\n      const grantTypeInfo = auth.value.grantTypeInfo\n\n      const authEndpoint = refWithCallbackOnChange(\n        grantTypeInfo?.authEndpoint,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            authEndpoint: value,\n          }\n        }\n      )\n\n      const clientID = refWithCallbackOnChange(\n        grantTypeInfo?.clientID,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            clientID: value,\n          }\n        }\n      )\n\n      const clientSecret = refWithCallbackOnChange(\n        grantTypeInfo?.clientSecret,\n        (value) => {\n          if (!(\"clientSecret\" in auth.value.grantTypeInfo)) {\n            return\n          }\n\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            clientSecret: value,\n          }\n        }\n      )\n\n      const scopes = refWithCallbackOnChange(\n        grantTypeInfo?.scopes ? grantTypeInfo.scopes : undefined,\n        (value) => {\n          auth.value.grantTypeInfo.scopes = value\n        }\n      )\n\n      const username = refWithCallbackOnChange(\n        grantTypeInfo?.username,\n        (value) => {\n          if (!(\"username\" in auth.value.grantTypeInfo)) {\n            return\n          }\n\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            username: value,\n          }\n        }\n      )\n\n      const password = refWithCallbackOnChange(\n        grantTypeInfo?.password,\n        (value) => {\n          if (!(\"password\" in auth.value.grantTypeInfo)) {\n            return\n          }\n\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            password: value,\n          }\n        }\n      )\n\n      const runAction = async () => {\n        const values: PasswordFlowParams = replaceTemplateStringsInObjectValues(\n          {\n            authEndpoint: authEndpoint.value,\n            clientID: clientID.value,\n            clientSecret: clientSecret.value,\n            scopes: scopes.value,\n            username: username.value,\n            password: password.value,\n          }\n        )\n\n        const parsedArgs = passwordFlow.params.safeParse(values)\n\n        if (!parsedArgs.success) {\n          return E.left(\"VALIDATION_FAILED\" as const)\n        }\n\n        const res = await passwordFlow.init(parsedArgs.data)\n\n        if (E.isLeft(res)) {\n          return E.left(\"OAUTH_TOKEN_FETCH_FAILED\" as const)\n        }\n\n        setAccessTokenInActiveContext(res.right?.access_token)\n\n        toast.success(t(\"authorization.oauth.token_fetched_successfully\"))\n\n        return E.right(undefined)\n      }\n\n      const elements = computed(() => {\n        return [\n          {\n            id: \"authEndpoint\",\n            label: t(\"authorization.oauth.label_authorization_endpoint\"),\n            type: \"text\" as const,\n            ref: authEndpoint,\n          },\n          {\n            id: \"clientId\",\n            label: t(\"authorization.oauth.label_client_id\"),\n            type: \"text\" as const,\n            ref: clientID,\n          },\n          {\n            id: \"clientSecret\",\n            label: t(\"authorization.oauth.label_client_secret\"),\n            type: \"text\" as const,\n            ref: clientSecret,\n          },\n          {\n            id: \"username\",\n            label: t(\"authorization.oauth.label_username\"),\n            type: \"text\" as const,\n            ref: username,\n          },\n          {\n            id: \"password\",\n            label: t(\"authorization.oauth.label_password\"),\n            type: \"text\" as const,\n            ref: password,\n          },\n          {\n            id: \"scopes\",\n            label: t(\"authorization.oauth.label_scopes\"),\n            type: \"text\" as const,\n            ref: scopes,\n          },\n        ]\n      })\n\n      return {\n        runAction,\n        elements,\n      }\n    }),\n  },\n  {\n    id: \"implicit\" as const,\n    label: t(\"authorization.oauth.label_implicit\"),\n    formElements: computed(() => {\n      const grantTypeInfo = auth.value.grantTypeInfo\n\n      const authEndpoint = refWithCallbackOnChange(\n        grantTypeInfo?.authEndpoint,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            authEndpoint: value,\n          }\n        }\n      )\n\n      const clientID = refWithCallbackOnChange(\n        grantTypeInfo?.clientID,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            clientID: value,\n          }\n        }\n      )\n\n      const scopes = refWithCallbackOnChange(\n        grantTypeInfo?.scopes ? grantTypeInfo.scopes : undefined,\n        (value) => {\n          auth.value.grantTypeInfo = {\n            ...auth.value.grantTypeInfo,\n            scopes: value,\n          }\n        }\n      )\n\n      const runAction = () => {\n        const values: ImplicitOauthFlowParams =\n          replaceTemplateStringsInObjectValues({\n            authEndpoint: authEndpoint.value,\n            clientID: clientID.value,\n            scopes: scopes.value,\n          })\n\n        const unwrappedValues = replaceTemplateStringsInObjectValues(values)\n\n        const parsedArgs = implicit.params.safeParse(unwrappedValues)\n\n        if (!parsedArgs.success) {\n          return E.left(\"VALIDATION_FAILED\" as const)\n        }\n\n        implicit.init(parsedArgs.data)\n\n        return E.right(undefined)\n      }\n\n      const elements = computed(() => {\n        return [\n          {\n            id: \"authEndpoint\",\n            label: t(\"authorization.oauth.label_authorization_endpoint\"),\n            type: \"text\" as const,\n            ref: authEndpoint,\n          },\n          {\n            id: \"clientId\",\n            label: t(\"authorization.oauth.label_client_id\"),\n            type: \"text\" as const,\n            ref: clientID,\n          },\n          {\n            id: \"scopes\",\n            label: t(\"authorization.oauth.label_scopes\"),\n            type: \"text\" as const,\n            ref: scopes,\n          },\n        ]\n      })\n\n      return {\n        runAction,\n        elements,\n      }\n    }),\n  },\n]\n\ntype GrantTypes = z.infer<\n  typeof HoppRESTAuthOAuth2\n>[\"grantTypeInfo\"][\"grantType\"]\n\nconst grantTypeMap: Record<\n  GrantTypes,\n  (typeof supportedGrantTypes)[number][\"id\"]\n> = {\n  AUTHORIZATION_CODE: \"authCode\",\n  CLIENT_CREDENTIALS: \"clientCredentials\",\n  IMPLICIT: \"implicit\",\n  PASSWORD: \"password\",\n} as const\n\nconst grantTypeDefaultPayload = {\n  AUTHORIZATION_CODE: getDefaultAuthCodeOauthFlowParams,\n  CLIENT_CREDENTIALS: getDefaultClientCredentialsFlowParams,\n  IMPLICIT: getDefaultImplicitOauthFlowParams,\n  PASSWORD: getDefaultPasswordFlowParams,\n} as const\n\nconst selectedGrantTypeID = computed(() => {\n  const currentGrantType = auth.value.grantTypeInfo.grantType\n  return grantTypeMap[currentGrantType]\n})\n\nconst selectedGrantType = computed(() => {\n  return supportedGrantTypes.find(\n    (grantType) => grantType.id === selectedGrantTypeID.value\n  )\n})\n\nconst setAccessTokenInActiveContext = (accessToken?: string) => {\n  if (props.isCollectionProperty && accessToken) {\n    auth.value.grantTypeInfo = {\n      ...auth.value.grantTypeInfo,\n      token: accessToken,\n    }\n\n    return\n  }\n\n  const tabService = props.source === \"REST\" ? restTabsService : gqlTabsService\n\n  if (\n    tabService.currentActiveTab.value.document.request.auth.authType ===\n      \"oauth-2\" &&\n    accessToken\n  ) {\n    tabService.currentActiveTab.value.document.request.auth.grantTypeInfo.token =\n      accessToken\n  }\n}\n\nconst changeSelectedGrantType = (\n  grantType: (typeof supportedGrantTypes)[number][\"id\"]\n) => {\n  const keys = Object.keys(grantTypeMap) as GrantTypes[]\n\n  const grantTypeToSet = keys.find((key) => grantTypeMap[key] === grantType)\n\n  if (grantTypeToSet) {\n    auth.value.grantTypeInfo.grantType = grantTypeToSet\n\n    const getDefaultPayload = grantTypeDefaultPayload[grantTypeToSet]\n\n    // set the default payload for the grant type\n    // for eg: if the grant type was auth code, and then the user selected the password grant type,\n    // there wont be a password key in the payload\n    // so we set the default payload, and it'll add all the keys that are missing\n    if (getDefaultPayload) {\n      auth.value.grantTypeInfo = {\n        ...getDefaultPayload(),\n        ...auth.value.grantTypeInfo,\n      }\n    }\n  }\n}\n\nconst runAction = computed(() => {\n  return selectedGrantType.value?.formElements.value?.runAction\n})\n\nconst currentOAuthGrantTypeFormElements = computed(() => {\n  return selectedGrantType.value?.formElements.value?.elements.value\n})\n\nconst generateOAuthToken = async () => {\n  if (\n    grantTypesInvolvingRedirect.includes(auth.value.grantTypeInfo.grantType)\n  ) {\n    const authConfig: PersistedOAuthConfig = {\n      source: props.source,\n      context: props.isCollectionProperty\n        ? { type: \"collection-properties\", metadata: {} }\n        : { type: \"request-tab\", metadata: {} },\n      grant_type: auth.value.grantTypeInfo.grantType,\n    }\n    persistenceService.setLocalConfig(\n      \"oauth_temp_config\",\n      JSON.stringify(authConfig)\n    )\n  }\n\n  const res = await runAction.value?.()\n\n  if (res && E.isLeft(res)) {\n    const errorMessages = {\n      VALIDATION_FAILED: t(\"authorization.oauth.validation_failed\"),\n      OAUTH_TOKEN_FETCH_FAILED: t(\"authorization.oauth.token_fetch_failed\"),\n    }\n\n    toast.error(errorMessages[res.left])\n    return\n  }\n}\n\nconst replaceTemplateStringsInObjectValues = <\n  T extends Record<string, unknown>,\n>(\n  obj: T\n) => {\n  const envs = getCombinedEnvVariables()\n\n  const requestVariables =\n    props.source === \"REST\"\n      ? restTabsService.currentActiveTab.value.document.request.requestVariables.map(\n          ({ key, value }) => ({\n            key,\n            value,\n            secret: false,\n          })\n        )\n      : []\n\n  // Ensure request variables are prioritized by removing any selected/global environment variables with the same key\n  const selectedEnvVars = envs.selected.filter(\n    ({ key }) =>\n      !requestVariables.some(({ key: reqVarKey }) => reqVarKey === key)\n  )\n  const globalEnvVars = envs.global.filter(\n    ({ key }) =>\n      !requestVariables.some(({ key: reqVarKey }) => reqVarKey === key)\n  )\n\n  const envVars = [...selectedEnvVars, ...globalEnvVars, ...requestVariables]\n\n  const newObj: Partial<T> = {}\n\n  for (const key in obj) {\n    const val = obj[key]\n\n    if (typeof val === \"string\") {\n      const parseResult = parseTemplateStringE(val, envVars)\n\n      newObj[key] = E.isRight(parseResult)\n        ? (parseResult.right as T[typeof key])\n        : (val as T[typeof key])\n    } else {\n      newObj[key] = val\n    }\n  }\n\n  return newObj as T\n}\n\nconst grantTypeTippyActions = ref<HTMLElement | null>(null)\nconst pkceTippyActions = ref<HTMLElement | null>(null)\nconst authTippyActions = ref<HTMLElement | null>(null)\n</script>\n","<template>\n  <div class=\"flex flex-1 border-b border-dividerLight\">\n    <SmartEnvInput\n      v-model=\"auth.username\"\n      :placeholder=\"t('authorization.username')\"\n      :auto-complete-env=\"true\"\n      :envs=\"envs\"\n    />\n  </div>\n  <div class=\"flex flex-1 border-b border-dividerLight\">\n    <SmartEnvInput\n      v-model=\"auth.password\"\n      :placeholder=\"t('authorization.password')\"\n      :auto-complete-env=\"true\"\n      :envs=\"envs\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { HoppRESTAuthBasic } from \"@hoppscotch/data\"\nimport { useVModel } from \"@vueuse/core\"\nimport { AggregateEnvironment } from \"~/newstore/environments\"\n\nconst t = useI18n()\n\nconst props = defineProps<{\n  modelValue: HoppRESTAuthBasic\n  envs?: AggregateEnvironment[]\n}>()\n\nconst emit = defineEmits<{\n  (e: \"update:modelValue\", value: HoppRESTAuthBasic): void\n}>()\n\nconst auth = useVModel(props, \"modelValue\", emit)\n</script>\n","<template>\n  <div class=\"flex flex-1 flex-col\">\n    <div\n      class=\"sticky z-10 flex flex-shrink-0 items-center justify-between overflow-x-auto border-b border-dividerLight bg-primary pl-4\"\n      :class=\"[\n        isCollectionProperty\n          ? 'top-propertiesPrimaryStickyFold'\n          : 'top-upperMobileSecondaryStickyFold sm:top-upperSecondaryStickyFold',\n      ]\"\n    >\n      <span class=\"flex items-center\">\n        <label class=\"truncate font-semibold text-secondaryLight\">\n          {{ t(\"authorization.type\") }}\n        </label>\n        <tippy\n          interactive\n          trigger=\"click\"\n          theme=\"popover\"\n          :on-shown=\"() => tippyActions.focus()\"\n        >\n          <HoppSmartSelectWrapper>\n            <HoppButtonSecondary\n              class=\"ml-2 rounded-none pr-8\"\n              :label=\"authName\"\n            />\n          </HoppSmartSelectWrapper>\n          <template #content=\"{ hide }\">\n            <div\n              ref=\"tippyActions\"\n              class=\"flex flex-col focus:outline-none\"\n              tabindex=\"0\"\n              @keyup.escape=\"hide()\"\n            >\n              <HoppSmartItem\n                v-if=\"!isRootCollection\"\n                label=\"Inherit\"\n                :icon=\"authName === 'Inherit' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'Inherit'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'inherit'\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"None\"\n                :icon=\"authName === 'None' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'None'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'none'\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"Basic Auth\"\n                :icon=\"authName === 'Basic Auth' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'Basic Auth'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'basic'\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"Bearer Token\"\n                :icon=\"authName === 'Bearer' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'Bearer'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'bearer'\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"OAuth 2.0\"\n                :icon=\"authName === 'OAuth 2.0' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'OAuth 2.0'\"\n                @click=\"\n                  () => {\n                    selectOAuth2AuthType()\n                    hide()\n                  }\n                \"\n              />\n              <HoppSmartItem\n                label=\"API key\"\n                :icon=\"authName === 'API key' ? IconCircleDot : IconCircle\"\n                :active=\"authName === 'API key'\"\n                @click=\"\n                  () => {\n                    auth.authType = 'api-key'\n                    hide()\n                  }\n                \"\n              />\n            </div>\n          </template>\n        </tippy>\n      </span>\n      <div class=\"flex\">\n        <!-- <HoppSmartCheckbox\n          :on=\"!URLExcludes.auth\"\n          @change=\"setExclude('auth', !$event)\"\n        >\n          {{ $t(\"authorization.include_in_url\") }}\n        </HoppSmartCheckbox>-->\n        <HoppSmartCheckbox\n          :on=\"authActive\"\n          class=\"px-2\"\n          @change=\"authActive = !authActive\"\n          >{{ t(\"state.enabled\") }}</HoppSmartCheckbox\n        >\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          to=\"https://docs.hoppscotch.io/documentation/features/authorization\"\n          blank\n          :title=\"t('app.wiki')\"\n          :icon=\"IconHelpCircle\"\n        />\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.clear')\"\n          :icon=\"IconTrash2\"\n          @click=\"clearContent\"\n        />\n      </div>\n    </div>\n    <HoppSmartPlaceholder\n      v-if=\"auth.authType === 'none'\"\n      :src=\"`/images/states/${colorMode.value}/login.svg`\"\n      :alt=\"`${t('empty.authorization')}`\"\n      :text=\"t('empty.authorization')\"\n    >\n      <template #body>\n        <HoppButtonSecondary\n          outline\n          :label=\"t('app.documentation')\"\n          to=\"https://docs.hoppscotch.io/documentation/features/authorization\"\n          blank\n          :icon=\"IconExternalLink\"\n          reverse\n        />\n      </template>\n    </HoppSmartPlaceholder>\n    <div v-else class=\"flex flex-1 border-b border-dividerLight\">\n      <div class=\"w-2/3 border-r border-dividerLight\">\n        <div v-if=\"auth.authType === 'basic'\">\n          <HttpAuthorizationBasic v-model=\"auth\" :envs=\"envs\" />\n        </div>\n        <div v-if=\"auth.authType === 'inherit'\" class=\"p-4\">\n          <span v-if=\"inheritedProperties?.auth\">\n            {{\n              t(\"authorization.inherited_from\", {\n                auth: getAuthName(\n                  inheritedProperties.auth.inheritedAuth.authType\n                ),\n                collection: inheritedProperties?.auth.parentName,\n              })\n            }}\n          </span>\n          <span v-else>\n            {{ t(\"authorization.save_to_inherit\") }}\n          </span>\n        </div>\n        <div v-if=\"auth.authType === 'bearer'\">\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <SmartEnvInput\n              v-model=\"auth.token\"\n              placeholder=\"Token\"\n              :auto-complete-env=\"true\"\n              :envs=\"envs\"\n            />\n          </div>\n        </div>\n        <div v-if=\"auth.authType === 'oauth-2'\" class=\"w-full\">\n          <div class=\"flex flex-1 border-b border-dividerLight\">\n            <!-- Ensure a new object is assigned here to avoid reactivity issues -->\n            <SmartEnvInput\n              :model-value=\"auth.grantTypeInfo.token\"\n              placeholder=\"Token\"\n              :envs=\"envs\"\n              @update:model-value=\"\n                auth.grantTypeInfo = { ...auth.grantTypeInfo, token: $event }\n              \"\n            />\n          </div>\n          <HttpOAuth2Authorization\n            v-model=\"auth\"\n            :is-collection-property=\"isCollectionProperty\"\n            :envs=\"envs\"\n            :source=\"source\"\n          />\n        </div>\n        <div v-if=\"auth.authType === 'api-key'\">\n          <HttpAuthorizationApiKey v-model=\"auth\" :envs=\"envs\" />\n        </div>\n      </div>\n      <div\n        class=\"z-[9] sticky top-upperTertiaryStickyFold h-full min-w-[12rem] max-w-1/3 flex-shrink-0 overflow-auto overflow-x-auto bg-primary p-4\"\n      >\n        <div class=\"pb-2 text-secondaryLight\">\n          {{ t(\"helpers.authorization\") }}\n        </div>\n        <HoppSmartAnchor\n          class=\"link\"\n          :label=\"t('authorization.learn')\"\n          :icon=\"IconExternalLink\"\n          to=\"https://docs.hoppscotch.io/documentation/features/authorization\"\n          blank\n          reverse\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconExternalLink from \"~icons/lucide/external-link\"\nimport IconCircleDot from \"~icons/lucide/circle-dot\"\nimport IconCircle from \"~icons/lucide/circle\"\nimport { computed, ref } from \"vue\"\nimport { HoppRESTAuth, HoppRESTAuthOAuth2 } from \"@hoppscotch/data\"\nimport { pluckRef } from \"@composables/ref\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { useVModel } from \"@vueuse/core\"\nimport { onMounted } from \"vue\"\nimport { HoppInheritedProperty } from \"~/helpers/types/HoppInheritedProperties\"\nimport { AggregateEnvironment } from \"~/newstore/environments\"\n\nimport { getDefaultAuthCodeOauthFlowParams } from \"~/services/oauth/flows/authCode\"\n\nconst t = useI18n()\n\nconst colorMode = useColorMode()\n\nconst props = withDefaults(\n  defineProps<{\n    modelValue: HoppRESTAuth\n    isCollectionProperty?: boolean\n    isRootCollection?: boolean\n    inheritedProperties?: HoppInheritedProperty\n    envs?: AggregateEnvironment[]\n    source?: \"REST\" | \"GraphQL\"\n  }>(),\n  {\n    source: \"REST\",\n    envs: undefined,\n    inheritedProperties: undefined,\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"update:modelValue\", value: HoppRESTAuth): void\n}>()\n\nconst auth = useVModel(props, \"modelValue\", emit)\n\nonMounted(() => {\n  if (props.isRootCollection && auth.value.authType === \"inherit\") {\n    auth.value = {\n      authType: \"none\",\n      authActive: true,\n    }\n  }\n})\n\nconst AUTH_KEY_NAME = {\n  basic: \"Basic Auth\",\n  bearer: \"Bearer\",\n  \"oauth-2\": \"OAuth 2.0\",\n  \"api-key\": \"API key\",\n  none: \"None\",\n  inherit: \"Inherit\",\n} as const\n\nconst authType = pluckRef(auth, \"authType\")\nconst authName = computed(() =>\n  AUTH_KEY_NAME[authType.value] ? AUTH_KEY_NAME[authType.value] : \"None\"\n)\n\nconst getAuthName = (type: HoppRESTAuth[\"authType\"] | undefined) => {\n  if (!type) return \"None\"\n  return AUTH_KEY_NAME[type] ? AUTH_KEY_NAME[type] : \"None\"\n}\n\nconst selectOAuth2AuthType = () => {\n  const defaultGrantTypeInfo: HoppRESTAuthOAuth2[\"grantTypeInfo\"] = {\n    ...getDefaultAuthCodeOauthFlowParams(),\n    grantType: \"AUTHORIZATION_CODE\",\n    token: \"\",\n  }\n\n  // @ts-expect-error - the existing grantTypeInfo might be in the auth object, typescript doesnt know that\n  const existingGrantTypeInfo = auth.value.grantTypeInfo as\n    | HoppRESTAuthOAuth2[\"grantTypeInfo\"]\n    | undefined\n\n  const grantTypeInfo = existingGrantTypeInfo\n    ? existingGrantTypeInfo\n    : defaultGrantTypeInfo\n\n  auth.value = {\n    ...auth.value,\n    authType: \"oauth-2\",\n    addTo: \"HEADERS\",\n    grantTypeInfo: grantTypeInfo,\n  }\n}\n\nconst authActive = pluckRef(auth, \"authActive\")\n\nconst clearContent = () => {\n  auth.value = {\n    authType: \"inherit\",\n    authActive: true,\n  }\n}\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\n</script>\n","export const commonHeaders = [\n  \"WWW-Authenticate\",\n  \"Authorization\",\n  \"Proxy-Authenticate\",\n  \"Proxy-Authorization\",\n  \"Age\",\n  \"Cache-Control\",\n  \"Clear-Site-Data\",\n  \"Expires\",\n  \"Pragma\",\n  \"Warning\",\n  \"Accept-CH\",\n  \"Accept-CH-Lifetime\",\n  \"Early-Data\",\n  \"Content-DPR\",\n  \"DPR\",\n  \"Device-Memory\",\n  \"Save-Data\",\n  \"Viewport-Width\",\n  \"Width\",\n  \"Last-Modified\",\n  \"ETag\",\n  \"If-Match\",\n  \"If-None-Match\",\n  \"If-Modified-Since\",\n  \"If-Unmodified-Since\",\n  \"Vary\",\n  \"Connection\",\n  \"Keep-Alive\",\n  \"Accept\",\n  \"Accept-Charset\",\n  \"Accept-Encoding\",\n  \"Accept-Language\",\n  \"Expect\",\n  \"Max-Forwards\",\n  \"Cookie\",\n  \"Set-Cookie\",\n  \"Cookie2\",\n  \"Set-Cookie2\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n  \"Service-Worker-Allowed\",\n  \"Timing-Allow-Origin\",\n  \"X-Permitted-Cross-Domain-Policies\",\n  \"DNT\",\n  \"Tk\",\n  \"Content-Disposition\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-Location\",\n  \"Forwarded\",\n  \"X-Forwarded-For\",\n  \"X-Forwarded-Host\",\n  \"X-Forwarded-Proto\",\n  \"Via\",\n  \"Location\",\n  \"From\",\n  \"Host\",\n  \"Referer\",\n  \"Referrer-Policy\",\n  \"User-Agent\",\n  \"Allow\",\n  \"Server\",\n  \"Accept-Ranges\",\n  \"Range\",\n  \"If-Range\",\n  \"Content-Range\",\n  \"Cross-Origin-Opener-Policy\",\n  \"Cross-Origin-Resource-Policy\",\n  \"Content-Security-Policy\",\n  \"Content-Security-Policy-Report-Only\",\n  \"Expect-CT\",\n  \"Feature-Policy\",\n  \"Public-Key-Pins\",\n  \"Public-Key-Pins-Report-Only\",\n  \"Strict-Transport-Security\",\n  \"Upgrade-Insecure-Requests\",\n  \"X-Content-Type-Options\",\n  \"X-Download-Options\",\n  \"X-Frame-Options\",\n  \"X-Powered-By\",\n  \"X-XSS-Protection\",\n  \"Last-Event-ID\",\n  \"NEL\",\n  \"Ping-From\",\n  \"Ping-To\",\n  \"Report-To\",\n  \"Transfer-Encoding\",\n  \"TE\",\n  \"Trailer\",\n  \"Sec-WebSocket-Key\",\n  \"Sec-WebSocket-Extensions\",\n  \"Sec-WebSocket-Accept\",\n  \"Sec-WebSocket-Protocol\",\n  \"Sec-WebSocket-Version\",\n  \"Accept-Push-Policy\",\n  \"Accept-Signature\",\n  \"Alt-Svc\",\n  \"Date\",\n  \"Large-Allocation\",\n  \"Link\",\n  \"Push-Policy\",\n  \"Retry-After\",\n  \"Signature\",\n  \"Signed-Headers\",\n  \"Server-Timing\",\n  \"SourceMap\",\n  \"Upgrade\",\n  \"X-DNS-Prefetch-Control\",\n  \"X-Firefox-Spdy\",\n  \"X-Pingback\",\n  \"X-Requested-With\",\n  \"X-Robots-Tag\",\n  \"X-UA-Compatible\",\n]\n","import * as E from \"fp-ts/Either\"\nimport { strictParseRawKeyValueEntriesE } from \"@hoppscotch/data\"\nimport { convertIndexToLineCh } from \"../utils\"\nimport { LinterDefinition, LinterResult } from \"./linter\"\n\nconst linter: LinterDefinition = (text) => {\n  const result = strictParseRawKeyValueEntriesE(text)\n  if (E.isLeft(result)) {\n    const pos = convertIndexToLineCh(text, result.left.pos)\n\n    return Promise.resolve([\n      <LinterResult>{\n        from: pos,\n        to: pos,\n        message: result.left.message,\n        severity: \"error\",\n      },\n    ])\n  }\n  return Promise.resolve([])\n}\n\nexport default linter\n","import { pipe } from \"fp-ts/function\"\nimport { isEqual, cloneDeep } from \"lodash-es\"\nimport { JSPrimitive, TypeFromPrimitive } from \"./primtive\"\n\nexport const objRemoveKey =\n  <T, K extends keyof T>(key: K) =>\n  (obj: T): Omit<T, K> =>\n    pipe(cloneDeep(obj), (e) => {\n      delete e[key]\n      return e\n    })\n\nexport const objFieldMatches =\n  <T, K extends keyof T, V extends T[K]>(\n    fieldName: K,\n    matches: ReadonlyArray<V>\n  ) =>\n  // eslint-disable-next-line no-unused-vars\n  (obj: T): obj is T & { [_ in K]: V } =>\n    matches.findIndex((x) => isEqual(obj[fieldName], x)) !== -1\n\nexport const objHasProperty =\n  <O extends object, K extends string, P extends JSPrimitive | undefined>(\n    prop: K,\n    type?: P\n  ) =>\n  // eslint-disable-next-line\n  (obj: O): obj is O & { [_ in K]: TypeFromPrimitive<P> } =>\n    // eslint-disable-next-line\n    prop in obj && (type === undefined || typeof (obj as any)[prop] === type)\n\ntype TypeFromPrimitiveArray<P extends JSPrimitive | undefined> =\n  P extends \"undefined\"\n    ? undefined\n    : P extends \"object\"\n      ? object[] | null\n      : P extends \"boolean\"\n        ? boolean[]\n        : P extends \"number\"\n          ? number[]\n          : P extends \"bigint\"\n            ? bigint[]\n            : P extends \"string\"\n              ? string[]\n              : P extends \"symbol\"\n                ? symbol[]\n                : P extends \"function\"\n                  ? Function[] // eslint-disable-line @typescript-eslint/ban-types\n                  : unknown[]\n\n// The ban-types silence is because in this case,\n// we can't get the Function type info to make a better guess\n\nexport const objHasArrayProperty =\n  <O extends object, K extends string, P extends JSPrimitive>(\n    prop: K,\n    type: P\n  ) =>\n  // eslint-disable-next-line\n  (obj: O): obj is O & { [_ in K]: TypeFromPrimitiveArray<P> } =>\n    prop in obj &&\n    Array.isArray((obj as any)[prop]) &&\n    (obj as any)[prop].every(\n      (val: unknown) => typeof val === type // eslint-disable-line\n    )\n","<template>\n  <div class=\"flex flex-1 flex-col\">\n    <div\n      class=\"sticky z-10 flex flex-shrink-0 items-center justify-between overflow-x-auto border-b border-dividerLight bg-primary pl-4\"\n      :class=\"[\n        isCollectionProperty\n          ? 'top-propertiesPrimaryStickyFold'\n          : 'top-upperMobileSecondaryStickyFold sm:top-upperSecondaryStickyFold',\n      ]\"\n    >\n      <label class=\"truncate font-semibold text-secondaryLight\">\n        {{ t(\"request.header_list\") }}\n      </label>\n      <div class=\"flex\">\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          to=\"https://docs.hoppscotch.io/documentation/features/rest-api-testing\"\n          blank\n          :title=\"t('app.wiki')\"\n          :icon=\"IconHelpCircle\"\n        />\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('action.clear_all')\"\n          :icon=\"IconTrash2\"\n          @click=\"clearContent()\"\n        />\n        <HoppButtonSecondary\n          v-if=\"bulkHeaders\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('state.linewrap')\"\n          :class=\"{ '!text-accent': WRAP_LINES }\"\n          :icon=\"IconWrapText\"\n          @click.prevent=\"toggleNestedSetting('WRAP_LINES', 'httpHeaders')\"\n        />\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('state.bulk_mode')\"\n          :icon=\"IconEdit\"\n          :class=\"{ '!text-accent': bulkMode }\"\n          @click=\"bulkMode = !bulkMode\"\n        />\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t('add.new')\"\n          :icon=\"IconPlus\"\n          :disabled=\"bulkMode\"\n          @click=\"addHeader\"\n        />\n      </div>\n    </div>\n    <div v-if=\"bulkMode\" class=\"h-full relative w-full\">\n      <div ref=\"bulkEditor\" class=\"absolute inset-0\"></div>\n    </div>\n    <div v-else>\n      <draggable\n        v-model=\"workingHeaders\"\n        :item-key=\"(header: WorkingHeader) => `header-${header.id}`\"\n        animation=\"250\"\n        handle=\".draggable-handle\"\n        draggable=\".draggable-content\"\n        ghost-class=\"cursor-move\"\n        chosen-class=\"bg-primaryLight\"\n        drag-class=\"cursor-grabbing\"\n      >\n        <template #item=\"{ element: header, index }\">\n          <div\n            class=\"draggable-content group flex divide-x divide-dividerLight border-b border-dividerLight\"\n          >\n            <span>\n              <HoppButtonSecondary\n                v-tippy=\"{\n                  theme: 'tooltip',\n                  delay: [500, 20],\n                  content:\n                    index !== workingHeaders?.length - 1\n                      ? t('action.drag_to_reorder')\n                      : null,\n                }\"\n                :icon=\"IconGripVertical\"\n                class=\"opacity-0\"\n                :class=\"{\n                  'draggable-handle cursor-grab group-hover:opacity-100':\n                    index !== workingHeaders?.length - 1,\n                }\"\n                tabindex=\"-1\"\n              />\n            </span>\n            <SmartEnvInput\n              v-model=\"header.key\"\n              :placeholder=\"`${t('count.header', { count: index + 1 })}`\"\n              :auto-complete-source=\"commonHeaders\"\n              :env-index=\"index\"\n              :inspection-results=\"getInspectorResult(headerKeyResults, index)\"\n              :auto-complete-env=\"true\"\n              :envs=\"envs\"\n              @change=\"\n                updateHeader(index, {\n                  id: header.id,\n                  key: $event,\n                  value: header.value,\n                  active: header.active,\n                })\n              \"\n            />\n            <SmartEnvInput\n              v-model=\"header.value\"\n              :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n              :inspection-results=\"\n                getInspectorResult(headerValueResults, index)\n              \"\n              :env-index=\"index\"\n              :auto-complete-env=\"true\"\n              :envs=\"envs\"\n              @change=\"\n                updateHeader(index, {\n                  id: header.id,\n                  key: header.key,\n                  value: $event,\n                  active: header.active,\n                })\n              \"\n            />\n            <span>\n              <HoppButtonSecondary\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :title=\"\n                  header.hasOwnProperty('active')\n                    ? header.active\n                      ? t('action.turn_off')\n                      : t('action.turn_on')\n                    : t('action.turn_off')\n                \"\n                :icon=\"\n                  header.hasOwnProperty('active')\n                    ? header.active\n                      ? IconCheckCircle\n                      : IconCircle\n                    : IconCheckCircle\n                \"\n                color=\"green\"\n                @click=\"\n                  updateHeader(index, {\n                    id: header.id,\n                    key: header.key,\n                    value: header.value,\n                    active: !header.active,\n                  })\n                \"\n              />\n            </span>\n            <span>\n              <HoppButtonSecondary\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :title=\"t('action.remove')\"\n                :icon=\"IconTrash\"\n                color=\"red\"\n                @click=\"deleteHeader(index)\"\n              />\n            </span>\n          </div>\n        </template>\n      </draggable>\n\n      <draggable\n        v-model=\"computedHeaders\"\n        item-key=\"id\"\n        animation=\"250\"\n        handle=\".draggable-handle\"\n        draggable=\".draggable-content\"\n        ghost-class=\"cursor-move\"\n        chosen-class=\"bg-primaryLight\"\n        drag-class=\"cursor-grabbing\"\n      >\n        <template #item=\"{ element: header, index }\">\n          <div\n            class=\"draggable-content group flex divide-x divide-dividerLight border-b border-dividerLight\"\n          >\n            <span>\n              <HoppButtonSecondary\n                :icon=\"IconLock\"\n                class=\"cursor-auto bg-divider text-secondaryLight opacity-25\"\n                tabindex=\"-1\"\n              />\n            </span>\n            <SmartEnvInput\n              v-model=\"header.header.key\"\n              :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n              readonly\n            />\n            <SmartEnvInput\n              :model-value=\"mask(header)\"\n              :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n              readonly\n            />\n            <span>\n              <HoppButtonSecondary\n                v-if=\"header.source === 'auth'\"\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :title=\"t(masking ? 'state.show' : 'state.hide')\"\n                :icon=\"masking ? IconEye : IconEyeOff\"\n                @click=\"toggleMask()\"\n              />\n              <div v-else class=\"aspect-square w-8\"></div>\n            </span>\n            <span>\n              <HoppButtonSecondary\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :icon=\"IconArrowUpRight\"\n                :title=\"changeTabTooltip(header.source)\"\n                @click=\"changeTab(header.source)\"\n              />\n            </span>\n          </div>\n        </template>\n      </draggable>\n\n      <draggable\n        v-model=\"inheritedProperties\"\n        item-key=\"id\"\n        animation=\"250\"\n        handle=\".draggable-handle\"\n        draggable=\".draggable-content\"\n        ghost-class=\"cursor-move\"\n        chosen-class=\"bg-primaryLight\"\n        drag-class=\"cursor-grabbing\"\n      >\n        <template #item=\"{ element: header, index }\">\n          <div\n            class=\"draggable-content group flex divide-x divide-dividerLight border-b border-dividerLight\"\n          >\n            <span>\n              <HoppButtonSecondary\n                :icon=\"IconLock\"\n                class=\"cursor-auto bg-divider text-secondaryLight opacity-25\"\n                tabindex=\"-1\"\n              />\n            </span>\n            <SmartEnvInput\n              v-model=\"header.header.key\"\n              :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n              readonly\n            />\n            <SmartEnvInput\n              :model-value=\"\n                header.source === 'auth' ? mask(header) : header.header.value\n              \"\n              :placeholder=\"`${t('count.value', { count: index + 1 })}`\"\n              readonly\n            />\n            <HoppButtonSecondary\n              v-if=\"header.source === 'auth'\"\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t(masking ? 'state.show' : 'state.hide')\"\n              :icon=\"masking && header.source === 'auth' ? IconEye : IconEyeOff\"\n              @click=\"toggleMask()\"\n            />\n            <span v-else class=\"aspect-square w-[2.05rem]\"></span>\n            <span>\n              <HoppButtonSecondary\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :icon=\"IconInfo\"\n                :title=\"`This header is inherited from Parent Collection ${\n                  header.inheritedFrom ?? ''\n                }`\"\n              />\n            </span>\n          </div>\n        </template>\n      </draggable>\n\n      <HoppSmartPlaceholder\n        v-if=\"workingHeaders.length === 0\"\n        :src=\"`/images/states/${colorMode.value}/add_category.svg`\"\n        :alt=\"`${t('empty.headers')}`\"\n        :text=\"t('empty.headers')\"\n      >\n        <template #body>\n          <HoppButtonSecondary\n            filled\n            :label=\"`${t('add.new')}`\"\n            :icon=\"IconPlus\"\n            @click=\"addHeader\"\n          />\n        </template>\n      </HoppSmartPlaceholder>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconGripVertical from \"~icons/lucide/grip-vertical\"\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconCircle from \"~icons/lucide/circle\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport IconLock from \"~icons/lucide/lock\"\nimport IconEye from \"~icons/lucide/eye\"\nimport IconEyeOff from \"~icons/lucide/eye-off\"\nimport IconArrowUpRight from \"~icons/lucide/arrow-up-right\"\nimport IconWrapText from \"~icons/lucide/wrap-text\"\nimport IconInfo from \"~icons/lucide/info\"\nimport { useColorMode } from \"@composables/theming\"\nimport { computed, reactive, ref, watch } from \"vue\"\nimport { isEqual, cloneDeep } from \"lodash-es\"\nimport {\n  HoppRESTAuth,\n  HoppRESTHeader,\n  HoppRESTRequest,\n  parseRawKeyValueEntriesE,\n  rawKeyValueEntriesToString,\n  RawKeyValueEntry,\n} from \"@hoppscotch/data\"\nimport { flow, pipe } from \"fp-ts/function\"\nimport * as RA from \"fp-ts/ReadonlyArray\"\nimport * as E from \"fp-ts/Either\"\nimport * as O from \"fp-ts/Option\"\nimport * as A from \"fp-ts/Array\"\nimport draggable from \"vuedraggable-es\"\nimport { RESTOptionTabs } from \"./RequestOptions.vue\"\nimport { useCodemirror } from \"@composables/codemirror\"\nimport { commonHeaders } from \"~/helpers/headers\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useToast } from \"@composables/toast\"\nimport linter from \"~/helpers/editor/linting/rawKeyValue\"\nimport { throwError } from \"~/helpers/functional/error\"\nimport { objRemoveKey } from \"~/helpers/functional/object\"\nimport {\n  ComputedHeader,\n  getComputedHeaders,\n  getComputedAuthHeaders,\n} from \"~/helpers/utils/EffectiveURL\"\nimport {\n  AggregateEnvironment,\n  aggregateEnvs$,\n  getAggregateEnvs,\n} from \"~/newstore/environments\"\nimport { useVModel } from \"@vueuse/core\"\nimport { useService } from \"dioc/vue\"\nimport { InspectionService, InspectorResult } from \"~/services/inspection\"\nimport { RESTTabService } from \"~/services/tab/rest\"\nimport { useNestedSetting } from \"~/composables/settings\"\nimport { toggleNestedSetting } from \"~/newstore/settings\"\nimport { HoppInheritedProperty } from \"~/helpers/types/HoppInheritedProperties\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst tabs = useService(RESTTabService)\n\nconst colorMode = useColorMode()\n\nconst idTicker = ref(0)\n\nconst bulkMode = ref(false)\nconst bulkHeaders = ref(\"\")\nconst bulkEditor = ref<any | null>(null)\nconst WRAP_LINES = useNestedSetting(\"WRAP_LINES\", \"httpHeaders\")\n\nconst deletionToast = ref<{ goAway: (delay: number) => void } | null>(null)\n\n// v-model integration with props and emit\nconst props = defineProps<{\n  modelValue:\n    | HoppRESTRequest\n    | {\n        headers: HoppRESTHeader[]\n        auth: HoppRESTAuth\n      }\n  isCollectionProperty?: boolean\n  inheritedProperties?: HoppInheritedProperty\n  envs?: AggregateEnvironment[]\n}>()\n\nconst emit = defineEmits<{\n  (e: \"change-tab\", value: RESTOptionTabs): void\n  (e: \"update:modelValue\", value: HoppRESTRequest): void\n}>()\n\nconst request = useVModel(props, \"modelValue\", emit)\n\nuseCodemirror(\n  bulkEditor,\n  bulkHeaders,\n  reactive({\n    extendedEditorConfig: {\n      mode: \"text/x-yaml\",\n      placeholder: `${t(\"state.bulk_mode_placeholder\")}`,\n      lineWrapping: WRAP_LINES,\n    },\n    linter,\n    completer: null,\n    environmentHighlights: true,\n  })\n)\n\ntype WorkingHeader = HoppRESTHeader & { id: number }\n\n// The UI representation of the headers list (has the empty end headers)\nconst workingHeaders = ref<Array<WorkingHeader>>([\n  {\n    id: idTicker.value++,\n    key: \"\",\n    value: \"\",\n    active: true,\n  },\n])\n\n// Rule: Working Headers always have last element is always an empty header\nwatch(workingHeaders, (headersList) => {\n  if (\n    headersList.length > 0 &&\n    headersList[headersList.length - 1].key !== \"\"\n  ) {\n    workingHeaders.value.push({\n      id: idTicker.value++,\n      key: \"\",\n      value: \"\",\n      active: true,\n    })\n  }\n})\n\n// Sync logic between headers and working/bulk headers\nwatch(\n  () => request.value.headers,\n  (newHeadersList) => {\n    // Sync should overwrite working headers\n    const filteredWorkingHeaders = pipe(\n      workingHeaders.value,\n      A.filterMap(\n        flow(\n          O.fromPredicate((e) => e.key !== \"\"),\n          O.map(objRemoveKey(\"id\"))\n        )\n      )\n    )\n\n    const filteredBulkHeaders = pipe(\n      parseRawKeyValueEntriesE(bulkHeaders.value),\n      E.map(\n        flow(\n          RA.filter((e) => e.key !== \"\"),\n          RA.toArray\n        )\n      ),\n      E.getOrElse(() => [] as RawKeyValueEntry[])\n    )\n\n    if (!isEqual(newHeadersList, filteredWorkingHeaders)) {\n      workingHeaders.value = pipe(\n        newHeadersList,\n        A.map((x) => ({ id: idTicker.value++, ...x }))\n      )\n    }\n\n    if (!isEqual(newHeadersList, filteredBulkHeaders)) {\n      bulkHeaders.value = rawKeyValueEntriesToString(newHeadersList)\n    }\n  },\n  { immediate: true }\n)\n\nwatch(workingHeaders, (newWorkingHeaders) => {\n  const fixedHeaders = pipe(\n    newWorkingHeaders,\n    A.filterMap(\n      flow(\n        O.fromPredicate((e) => e.key !== \"\"),\n        O.map(objRemoveKey(\"id\"))\n      )\n    )\n  )\n\n  if (!isEqual(request.value.headers, fixedHeaders)) {\n    request.value.headers = cloneDeep(fixedHeaders)\n  }\n})\n\nwatch(bulkHeaders, (newBulkHeaders) => {\n  const filteredBulkHeaders = pipe(\n    parseRawKeyValueEntriesE(newBulkHeaders),\n    E.map(\n      flow(\n        RA.filter((e) => e.key !== \"\"),\n        RA.toArray\n      )\n    ),\n    E.getOrElse(() => [] as RawKeyValueEntry[])\n  )\n\n  if (!isEqual(props.modelValue, filteredBulkHeaders)) {\n    request.value.headers = filteredBulkHeaders\n  }\n})\n\nconst addHeader = () => {\n  workingHeaders.value.push({\n    id: idTicker.value++,\n    key: \"\",\n    value: \"\",\n    active: true,\n  })\n}\n\nconst updateHeader = (\n  index: number,\n  header: HoppRESTHeader & { id: number }\n) => {\n  workingHeaders.value = workingHeaders.value.map((h, i) =>\n    i === index ? header : h\n  )\n}\n\nconst deleteHeader = (index: number) => {\n  const headersBeforeDeletion = cloneDeep(workingHeaders.value)\n\n  if (\n    !(\n      headersBeforeDeletion.length > 0 &&\n      index === headersBeforeDeletion.length - 1\n    )\n  ) {\n    if (deletionToast.value) {\n      deletionToast.value.goAway(0)\n      deletionToast.value = null\n    }\n\n    deletionToast.value = toast.success(`${t(\"state.deleted\")}`, {\n      action: [\n        {\n          text: `${t(\"action.undo\")}`,\n          onClick: (_, toastObject) => {\n            workingHeaders.value = headersBeforeDeletion\n            toastObject.goAway(0)\n            deletionToast.value = null\n          },\n        },\n      ],\n\n      onComplete: () => {\n        deletionToast.value = null\n      },\n    })\n  }\n\n  workingHeaders.value = pipe(\n    workingHeaders.value,\n    A.deleteAt(index),\n    O.getOrElseW(() => throwError(\"Working Headers Deletion Out of Bounds\"))\n  )\n}\n\nconst clearContent = () => {\n  // set params list to the initial state\n  workingHeaders.value = [\n    {\n      id: idTicker.value++,\n      key: \"\",\n      value: \"\",\n      active: true,\n    },\n  ]\n\n  bulkHeaders.value = \"\"\n}\n\nconst aggregateEnvs = useReadonlyStream(aggregateEnvs$, getAggregateEnvs())\n\nconst computedHeaders = computed(() =>\n  getComputedHeaders(request.value, aggregateEnvs.value, false).map(\n    (header, index) => ({\n      id: `header-${index}`,\n      ...header,\n    })\n  )\n)\n\nconst inheritedProperties = computed(() => {\n  if (!props.inheritedProperties?.auth || !props.inheritedProperties.headers)\n    return []\n\n  //filter out headers that are already in the request headers\n\n  const inheritedHeaders = props.inheritedProperties.headers.filter(\n    (header) =>\n      !request.value.headers.some(\n        (requestHeader) => requestHeader.key === header.inheritedHeader?.key\n      )\n  )\n\n  const headers = inheritedHeaders\n    .filter(\n      (header) =>\n        header.inheritedHeader !== null &&\n        header.inheritedHeader !== undefined &&\n        header.inheritedHeader.active\n    )\n    .map((header, index) => ({\n      inheritedFrom: props.inheritedProperties?.headers[index].parentName,\n      source: \"headers\",\n      id: `header-${index}`,\n      header: {\n        key: header.inheritedHeader?.key,\n        value: header.inheritedHeader?.value,\n        active: header.inheritedHeader?.active,\n      },\n    }))\n\n  let auth = [] as {\n    inheritedFrom: string\n    source: \"auth\"\n    id: string\n    header: {\n      key: string\n      value: string\n      active: boolean\n    }\n  }[]\n\n  const computedAuthHeader = getComputedAuthHeaders(\n    aggregateEnvs.value,\n    request.value,\n    props.inheritedProperties.auth.inheritedAuth,\n    false\n  )[0]\n\n  if (\n    computedAuthHeader &&\n    request.value.auth.authType === \"inherit\" &&\n    request.value.auth.authActive\n  ) {\n    auth = [\n      {\n        inheritedFrom: props.inheritedProperties?.auth.parentName,\n        source: \"auth\",\n        id: `header-auth`,\n        header: computedAuthHeader,\n      },\n    ]\n  }\n\n  return [...headers, ...auth]\n})\n\nconst masking = ref(true)\n\nconst toggleMask = () => {\n  masking.value = !masking.value\n}\n\nconst mask = (header: ComputedHeader) => {\n  if (header.source === \"auth\" && masking.value)\n    return header.header.value.replace(/\\S/gi, \"*\")\n  return header.header.value\n}\n\nconst changeTabTooltip = (tab: ComputedHeader[\"source\"]) => {\n  switch (tab) {\n    case \"auth\":\n      return t(\"request.go_to_authorization_tab\")\n    case \"body\":\n      return t(\"request.go_to_body_tab\")\n  }\n}\n\nconst changeTab = (tab: ComputedHeader[\"source\"]) => {\n  if (tab === \"auth\") emit(\"change-tab\", \"authorization\")\n  else emit(\"change-tab\", \"bodyParams\")\n}\n\nconst inspectionService = useService(InspectionService)\n\nconst headerKeyResults = inspectionService.getResultViewFor(\n  tabs.currentTabID.value,\n  (result) =>\n    result.locations.type === \"header\" && result.locations.position === \"key\"\n)\n\nconst headerValueResults = inspectionService.getResultViewFor(\n  tabs.currentTabID.value,\n  (result) =>\n    result.locations.type === \"header\" && result.locations.position === \"value\"\n)\n\nconst getInspectorResult = (results: InspectorResult[], index: number) => {\n  return results.filter((result) => {\n    if (result.locations.type === \"url\" || result.locations.type === \"response\")\n      return\n    return result.locations.index === index\n  })\n}\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.cm-panels) {\n  @apply top-upperTertiaryStickyFold #{!important};\n}\n</style>\n"],"names":["t","useI18n","auth","useVModel","__props","__emit","authTippyActions","ref","pluckRef","key","customRef","track","trigger","stopWatching","watch","newVal","oldVal","onBeforeUnmount","value","refWithCallbackOnChange","initialValue","callback","targetRef","interceptorService","getService","InterceptorService","ClientCredentialsFlowParamsSchema","ClientCredentialsGrantTypeParams","params","getDefaultClientCredentialsFlowParams","initClientCredentialsOAuthFlow","clientID","clientSecret","scopes","authEndpoint","toast","useToast","formData","response","res","E.isLeft","E.left","responsePayload","decodeResponseAsJSON","parsedTokenResponse","z","E.right","handleRedirectForAuthCodeOauthFlow","localConfig","code","state","decodedLocalConfig","OauthAuthService","clientCredentials","createFlowConfig","PasswordFlowParamsSchema","PasswordGrantTypeParams","getDefaultPasswordFlowParams","initPasswordOauthFlow","password","username","passwordFlow","gqlTabsService","useService","GQLTabService","persistenceService","PersistenceService","restTabsService","RESTTabService","props","addToTargets","passBy","computed","_a","target","supportedGrantTypes","grantType","tokenEndpoint","isPKCE","codeChallenge","runAction2","unwrappedParams","replaceTemplateStringsInObjectValues","parsedArgs","authCode","pkceElements","checkbox","e","pkceTippyActions","elements","grantTypeInfo","values","setAccessTokenInActiveContext","unwrappedValues","implicit","grantTypeMap","grantTypeDefaultPayload","getDefaultAuthCodeOauthFlowParams","getDefaultImplicitOauthFlowParams","selectedGrantTypeID","currentGrantType","selectedGrantType","accessToken","tabService","changeSelectedGrantType","grantTypeToSet","getDefaultPayload","runAction","_b","currentOAuthGrantTypeFormElements","generateOAuthToken","grantTypesInvolvingRedirect","authConfig","errorMessages","obj","envs","getCombinedEnvVariables","requestVariables","selectedEnvVars","reqVarKey","globalEnvVars","envVars","newObj","val","parseResult","parseTemplateStringE","E.isRight","grantTypeTippyActions","colorMode","useColorMode","onMounted","AUTH_KEY_NAME","authType","authName","getAuthName","type","selectOAuth2AuthType","defaultGrantTypeInfo","existingGrantTypeInfo","authActive","clearContent","tippyActions","commonHeaders","linter","text","result","strictParseRawKeyValueEntriesE","pos","convertIndexToLineCh","objRemoveKey","pipe","cloneDeep","objFieldMatches","fieldName","matches","x","isEqual","objHasProperty","prop","objHasArrayProperty","tabs","idTicker","bulkMode","bulkHeaders","bulkEditor","WRAP_LINES","useNestedSetting","deletionToast","emit","request","useCodemirror","reactive","workingHeaders","headersList","newHeadersList","filteredWorkingHeaders","A.filterMap","flow","O.fromPredicate","O.map","filteredBulkHeaders","parseRawKeyValueEntriesE","E.map","RA.filter","RA.toArray","E.getOrElse","A.map","rawKeyValueEntriesToString","newWorkingHeaders","fixedHeaders","newBulkHeaders","addHeader","updateHeader","index","header","h","i","deleteHeader","headersBeforeDeletion","_","toastObject","A.deleteAt","O.getOrElseW","throwError","aggregateEnvs","useReadonlyStream","aggregateEnvs$","getAggregateEnvs","computedHeaders","getComputedHeaders","inheritedProperties","headers","requestHeader","_c","_d","computedAuthHeader","getComputedAuthHeaders","masking","toggleMask","mask","changeTabTooltip","tab","changeTab","inspectionService","InspectionService","headerKeyResults","headerValueResults","getInspectorResult","results"],"mappings":"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AAA,YACEA,EAAA,MAAA,CAAa,SAAA,OACD,WAAA,EACE,EAEhB,CAAA,EAGF,MAAAiI,EAAA,CAAsB,MAAA,aACb,OAAA,SACC,UAAA,YACG,UAAA,UACA,KAAA,OACL,QAAA,SACG,EAGXC,EAAA5H,GAAAN,EAAA,UAAA,EACAmI,EAAA7D,EAAiB,IAAA2D,EAAAC,EAAA,KAAA,EAAAD,EAAAC,EAAA,KAAA,EAAA,MACiD,EAGlEE,EAAAC,GACEA,GACAJ,EAAAI,CAAA,EAAAJ,EAAAI,CAAA,EADW,OAIbC,EAAA,IAAA,CACE,MAAAC,EAAA,CAAkE,GAAAxC,GAAA,EAC3B,UAAA,qBAC1B,MAAA,EACJ,EAITyC,EAAAxI,EAAA,MAAA,cAIAwF,EAAAgD,GAAAD,EAIAvI,EAAA,MAAA,CAAa,GAAAA,EAAA,MACH,SAAA,UACE,MAAA,UACH,cAAAwF,CACP,CACF,EAGFiD,EAAAnI,GAAAN,EAAA,YAAA,EAEA0I,EAAA,IAAA,CACE1I,EAAA,MAAA,CAAa,SAAA,UACD,WAAA,EACE,CACd,EAIF2I,EAAAtI,EAAA,IAAA,iwICvUauI,GAAgB,CAC3B,mBACA,gBACA,qBACA,sBACA,MACA,gBACA,kBACA,UACA,SACA,UACA,YACA,qBACA,aACA,cACA,MACA,gBACA,YACA,iBACA,QACA,gBACA,OACA,WACA,gBACA,oBACA,sBACA,OACA,aACA,aACA,SACA,iBACA,kBACA,kBACA,SACA,eACA,SACA,aACA,UACA,cACA,8BACA,mCACA,+BACA,+BACA,gCACA,yBACA,iCACA,gCACA,SACA,yBACA,sBACA,oCACA,MACA,KACA,sBACA,iBACA,eACA,mBACA,mBACA,mBACA,YACA,kBACA,mBACA,oBACA,MACA,WACA,OACA,OACA,UACA,kBACA,aACA,QACA,SACA,gBACA,QACA,WACA,gBACA,6BACA,+BACA,0BACA,sCACA,YACA,iBACA,kBACA,8BACA,4BACA,4BACA,yBACA,qBACA,kBACA,eACA,mBACA,gBACA,MACA,YACA,UACA,YACA,oBACA,KACA,UACA,oBACA,2BACA,uBACA,yBACA,wBACA,qBACA,mBACA,UACA,OACA,mBACA,OACA,cACA,cACA,YACA,iBACA,gBACA,YACA,UACA,yBACA,iBACA,aACA,mBACA,eACA,iBACF,ECtHMC,GAA4BC,GAAS,CACnC,MAAAC,EAASC,GAA+BF,CAAI,EAC9C,GAAAxG,GAASyG,CAAM,EAAG,CACpB,MAAME,EAAMC,GAAqBJ,EAAMC,EAAO,KAAK,GAAG,EAEtD,OAAO,QAAQ,QAAQ,CACP,CACZ,KAAME,EACN,GAAIA,EACJ,QAASF,EAAO,KAAK,QACrB,SAAU,OACZ,CAAA,CACD,CACH,CACO,OAAA,QAAQ,QAAQ,CAAA,CAAE,CAC3B,EChBaI,GACY5I,GACtByG,GACCoC,GAAKC,GAAUrC,CAAG,EAAI3B,IACpB,OAAOA,EAAE9E,CAAG,EACL8E,EACR,EAEQiE,GACX,CACEC,EACAC,IAGDxC,GACCwC,EAAQ,UAAWC,GAAMC,GAAQ1C,EAAIuC,CAAS,EAAGE,CAAC,CAAC,IAAM,GAEhDE,GACX,CACEC,EACAvB,IAGDrB,GAEC4C,KAAQ5C,IAAQqB,IAAS,QAAa,OAAQrB,EAAY4C,CAAI,IAAMvB,GAwB3DwB,GACX,CACED,EACAvB,IAGDrB,GACC4C,KAAQ5C,GACR,MAAM,QAASA,EAAY4C,CAAI,CAAC,GAC/B5C,EAAY4C,CAAI,EAAE,MAChBnC,GAAiB,OAAOA,IAAQY,CACnC,6sBC6RJ,MAAAvI,EAAAC,KACAkC,EAAAC,KAEA4H,EAAAjG,GAAAK,EAAA,EAEA4D,EAAAC,KAEAgC,EAAA1J,EAAA,CAAA,EAEA2J,EAAA3J,EAAA,EAAA,EACA4J,EAAA5J,EAAA,EAAA,EACA6J,EAAA7J,EAAA,IAAA,EACA8J,EAAAC,GAAA,aAAA,aAAA,EAEAC,EAAAhK,EAAA,IAAA,EAGA8D,EAAAjE,EAYAoK,EAAAnK,EAKAoK,EAAAtK,GAAAkE,EAAA,aAAAmG,CAAA,EAEAE,GAAAN,EACED,EACAQ,GAAA,CACS,qBAAA,CACe,KAAA,cACd,YAAA,GAAA3K,EAAA,6BAAA,CAAA,GAC0C,aAAAqK,CAClC,EAChB,OAAAtB,GACA,UAAA,KACW,sBAAA,EACY,CAAA,CACxB,EAMH,MAAA6B,EAAArK,EAAA,CAAiD,CAC/C,GAAA0J,EAAA,QACe,IAAA,GACR,MAAA,GACE,OAAA,EACC,CACV,CAAA,EAIFnJ,GAAA8J,EAAAC,GAAA,CACEA,EAAA,OAAA,GAAAA,EAAAA,EAAA,OAAA,CAAA,EAAA,MAAA,IAIED,EAAA,MAAA,KAAA,CAA0B,GAAAX,EAAA,QACX,IAAA,GACR,MAAA,GACE,OAAA,EACC,CAAA,CAEZ,CAAA,EAIFnJ,GAAA,IAAA2J,EAAA,MAAA,QACsBK,GAAA,CAGlB,MAAAC,EAAAzB,GAA+BsB,EAAA,MACdI,GACbC,GACAC,GAAA3F,GAAAA,EAAA,MAAA,EAAA,EACqC4F,GAAA9B,GAAA,IAAA,CAAA,CACX,CAC1B,CACF,EAGF+B,EAAA9B,GAA4B+B,GAAAlB,EAAA,KAAA,EACgBmB,GACxCL,GACAM,GAAAhG,GAAAA,EAAA,MAAA,EAAA,EAC+BiG,EAC1B,CACL,EACFC,GAAA,IAAA,CAAA,CAAA,CAC0C,EAG5C7B,GAAAkB,EAAAC,CAAA,IACEH,EAAA,MAAAtB,GAAuBwB,EACrBY,GAAA/B,IAAA,CAAA,GAAAM,EAAA,QAAA,GAAAN,CAAA,EAAA,CAC6C,GAIjDC,GAAAkB,EAAAM,CAAA,IACEjB,EAAA,MAAAwB,GAAAb,CAAA,EACF,EACF,CAAA,UAAA,EAAA,CACkB,EAGpBhK,GAAA8J,EAAAgB,GAAA,CACE,MAAAC,EAAAvC,GAAqBsC,EACnBZ,GACEC,GACAC,GAAA3F,GAAAA,EAAA,MAAA,EAAA,EACqC4F,GAAA9B,GAAA,IAAA,CAAA,CACX,CAC1B,CACF,EAGFO,GAAAa,EAAA,MAAA,QAAAoB,CAAA,IACEpB,EAAA,MAAA,QAAAlB,GAAAsC,CAAA,EACF,CAAA,EAGF/K,GAAAqJ,EAAA2B,GAAA,CACE,MAAAV,EAAA9B,GAA4B+B,GAAAS,CAAA,EACaR,GACrCL,GACAM,GAAAhG,GAAAA,EAAA,MAAA,EAAA,EAC+BiG,EAC1B,CACL,EACFC,GAAA,IAAA,CAAA,CAAA,CAC0C,EAG5C7B,GAAAvF,EAAA,WAAA+G,CAAA,IACEX,EAAA,MAAA,QAAAW,EACF,CAAA,EAGF,MAAAW,EAAA,IAAA,CACEnB,EAAA,MAAA,KAAA,CAA0B,GAAAX,EAAA,QACX,IAAA,GACR,MAAA,GACE,OAAA,EACC,CAAA,CACT,EAGH+B,EAAA,CAAAC,EAAAC,IAAA,CAIEtB,EAAA,MAAAA,EAAA,MAAA,IAA4C,CAAAuB,EAAAC,IAAAA,IAAAH,EAAAC,EAAAC,CACnB,CACzB,EAGFE,GAAAJ,GAAA,CACE,MAAAK,EAAA/C,GAAAqB,EAAA,KAAA,EAEA0B,EAAA,OAAA,GAAAL,IAAAK,EAAA,OAAA,IAME/B,EAAA,QACEA,EAAA,MAAA,OAAA,CAAA,EACAA,EAAA,MAAA,MAGFA,EAAA,MAAApI,EAAA,QAAA,GAAAnC,EAAA,eAAA,CAAA,GAAA,CAA6D,OAAA,CACnD,CACN,KAAA,GAAAA,EAAA,aAAA,CAAA,GAC2B,QAAA,CAAAuM,EAAAC,IAAA,CAEvB5B,EAAA,MAAA0B,EACAE,EAAA,OAAA,CAAA,EACAjC,EAAA,MAAA,IAAsB,CACxB,CACF,EACF,WAAA,IAAA,CAGEA,EAAA,MAAA,IAAsB,CACxB,CAAA,GAIJK,EAAA,MAAAtB,GAAuBsB,EAAA,MACN6B,GAAAR,CAAA,EACCS,GAAA,IAAAC,GAAA,wCAAA,CAAA,CACuD,CACzE,EAGF/D,EAAA,IAAA,CAEEgC,EAAA,MAAA,CAAuB,CACrB,GAAAX,EAAA,QACe,IAAA,GACR,MAAA,GACE,OAAA,EACC,CACV,EAGFE,EAAA,MAAA,EAAoB,EAGtByC,EAAAC,GAAAC,GAAAC,GAAA,CAAA,EAEAC,GAAAxI,EAAwB,IAAAyI,GAAAxC,EAAA,MAAAmC,EAAA,MAAA,EAAA,EAAA,IACwC,CAAAV,EAAAD,KAAA,CACxC,GAAA,UAAAA,CAAA,GACC,GAAAC,CAChB,EACL,CACF,EAGFgB,GAAA1I,EAAA,IAAA,SACE,GAAA,GAAAC,EAAAJ,EAAA,sBAAA,MAAAI,EAAA,OAAA,CAAAJ,EAAA,oBAAA,QACE,MAAA,GAWF,MAAA8I,EAPA9I,EAAA,oBAAA,QAAA,OAA2D6H,GAAA,CAAAzB,EAAA,MAAA,QAAA,KAEhC2C,GAAA,OAAA,OAAAA,EAAA,QAAA3I,EAAAyH,EAAA,kBAAA,YAAAzH,EAAA,KAC4C,CACnE,EAGJ,OACGyH,GAAAA,EAAA,kBAAA,MAAAA,EAAA,kBAAA,QAAAA,EAAA,gBAAA,MAI0B,EAAA,IAAA,CAAAA,EAAAD,IAAA,eAAA,OAEF,eAAAxH,EAAAJ,EAAA,sBAAA,YAAAI,EAAA,QAAAwH,GAAA,WACkC,OAAA,UACjD,GAAA,UAAAA,CAAA,GACW,OAAA,CACX,KAAArF,GAAAsF,EAAA,kBAAA,YAAAtF,GAAA,IACuB,OAAAyG,EAAAnB,EAAA,kBAAA,YAAAmB,EAAA,MACE,QAAAC,GAAApB,EAAA,kBAAA,YAAAoB,GAAA,MACC,CAClC,EAAA,EAGJ,IAAApN,EAAA,CAAA,EAWA,MAAAqN,EAAAC,GAA2BZ,EAAA,MACXnC,EAAA,MACNpG,EAAA,oBAAA,KAAA,cACuB,EAC/B,EAAA,CAAA,EAGF,OAAAkJ,GAAA9C,EAAA,MAAA,KAAA,WAAA,WAAAA,EAAA,MAAA,KAAA,aAKEvK,EAAA,CAAO,CACL,eAAA0G,EAAAvC,EAAA,sBAAA,YAAAuC,EAAA,KAAA,WACiD,OAAA,OACvC,GAAA,cACJ,OAAA2G,CACI,CACV,GAIJ,CAAA,GAAAJ,EAAA,GAAAjN,CAAA,CAA2B,CAAA,EAG7BuN,EAAAlN,EAAA,EAAA,EAEAmN,EAAA,IAAA,CACED,EAAA,MAAA,CAAAA,EAAA,KAAyB,EAG3BE,EAAAzB,GACEA,EAAA,SAAA,QAAAuB,EAAA,MACEvB,EAAA,OAAA,MAAA,QAAA,OAAA,GAAA,EACFA,EAAA,OAAA,MAGF0B,EAAAC,GAAA,CACE,OAAAA,EAAA,CAAa,IAAA,OAET,OAAA7N,EAAA,iCAAA,EAA0C,IAAA,OAE1C,OAAAA,EAAA,wBAAA,CAAiC,CACrC,EAGF8N,EAAAD,GAAA,CACEA,IAAA,OAAoBrD,EAAA,aAAA,eAAA,EACfA,EAAA,aAAA,YAAA,CAA+B,EAGtCuD,EAAAhK,GAAAiK,EAAA,EAEAC,EAAAF,EAAA,iBAA2C/D,EAAA,aAAA,MACvBf,GAAAA,EAAA,UAAA,OAAA,UAAAA,EAAA,UAAA,WAAA,KAEoD,EAGxEiF,EAAAH,EAAA,iBAA6C/D,EAAA,aAAA,MACzBf,GAAAA,EAAA,UAAA,OAAA,UAAAA,EAAA,UAAA,WAAA,OAEoD,EAGxEkF,EAAA,CAAAC,EAAAnC,IACEmC,EAAA,OAAAnF,GAAA,CACE,GAAA,EAAAA,EAAA,UAAA,OAAA,OAAAA,EAAA,UAAA,OAAA,YAEA,OAAAA,EAAA,UAAA,QAAAgD,CAAkC,CAAA"}