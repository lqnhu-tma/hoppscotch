function o(l,r){try{const n=l;if(r>n.end||r<n.start)throw new Error("Invalid position");let t=n;const a=[];for(n.kind==="Object"?a.push({kind:"RootObject",astValue:n}):a.push({kind:"RootArray",astValue:n});t.kind==="Object"||t.kind==="Array";)if(t.kind==="Object"){const e=t.members.find(i=>i.start<=r&&i.end>=r);if(!e)throw new Error("Couldn't find child");a.push({kind:"ObjectMember",name:e.key.value,astValue:e,astParent:t}),t=e.value}else{const e=t.values.findIndex(s=>s.start<=r&&s.end>=r);if(e<0)throw new Error("Couldn't find child");const i=t.values[e];a.push({kind:"ArrayMember",index:e,astValue:i,astParent:t}),t=i}return a}catch{return null}}export{o as g};
//# sourceMappingURL=newOutline-83220d1e.js.map
