{"version":3,"file":"clock-96f88523.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseFindIndex.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsNaN.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_strictIndexOf.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIndexOf.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/last.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/escapeRegExp.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseFilter.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/filter.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_parent.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseUnset.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIndexOfWith.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_basePullAll.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/pullAll.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/pull.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_basePullAt.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/remove.js","../../../hoppscotch-common/src/components/collections/Runner.vue","../../../hoppscotch-common/src/components/collections/Properties.vue","../../../hoppscotch-common/src/composables/step-components.ts","../../../hoppscotch-common/src/components/importExport/ImportExportList.vue","../../../hoppscotch-common/src/components/importExport/ImportExportSourcesList.vue","../../../hoppscotch-common/src/components/importExport/Base.vue","../../../hoppscotch-common/src/components/importExport/ImportExportSteps/FileImport.vue","../../../hoppscotch-common/src/helpers/import-export/import/import-sources/FileSource.ts","../../../hoppscotch-common/src/components/importExport/ImportExportSteps/UrlImport.vue","../../../hoppscotch-common/src/helpers/import-export/import/import-sources/UrlSource.ts","../../../hoppscotch-common/src/helpers/backend/mutations/TeamCollection.ts","../../../hoppscotch-common/src/helpers/import-export/import/myCollections.ts","../../../hoppscotch-common/src/components/importExport/ImportExportSteps/MyCollectionImport.vue","../../../hoppscotch-common/src/helpers/backend/helpers.ts","../../../hoppscotch-common/src/helpers/import-export/export/index.ts","../../../hoppscotch-common/src/helpers/gist.ts","../../../hoppscotch-common/src/helpers/import-export/export/gist.ts","../../../hoppscotch-common/src/helpers/import-export/export/myCollections.ts","../../../hoppscotch-common/src/helpers/import-export/export/teamCollections.ts","../../../hoppscotch-common/src/helpers/import-export/import/import-sources/GistSource.ts","../../../hoppscotch-common/src/components/collections/ImportExport.vue","../../../hoppscotch-common/src/components/collections/EditRequest.vue","../../../hoppscotch-common/src/components/collections/EditFolder.vue","../../../hoppscotch-common/src/components/collections/Edit.vue","../../../hoppscotch-common/src/components/collections/AddFolder.vue","../../../hoppscotch-common/src/components/collections/AddRequest.vue","../../../hoppscotch-common/src/components/collections/Add.vue","../../../hoppscotch-common/src/newstore/reordering.ts","../../../hoppscotch-common/src/components/collections/Request.vue","../../../hoppscotch-common/src/components/collections/Collection.vue","../../../hoppscotch-common/src/components/collections/TeamCollections.vue","../../../hoppscotch-common/src/components/collections/MyCollections.vue","../../../hoppscotch-common/src/components/workspace/Current.vue","../../../hoppscotch-common/src/helpers/backend/mutations/TeamRequest.ts","../../../hoppscotch-common/src/helpers/collection/collection.ts","../../../hoppscotch-common/src/helpers/teams/TeamCollectionAdapter.ts","../../../hoppscotch-common/src/helpers/teams/TeamEnvironmentAdapter.ts","../../../hoppscotch-common/src/components/collections/index.vue","../../../hoppscotch-common/src/helpers/import-export/import/hoppGql.ts","../../../hoppscotch-common/src/helpers/import-export/export/gqlCollections.ts","../../../hoppscotch-common/src/components/collections/graphql/ImportExport.vue","../../../hoppscotch-common/src/components/collections/graphql/EditRequest.vue","../../../hoppscotch-common/src/components/collections/graphql/EditFolder.vue","../../../hoppscotch-common/src/components/collections/graphql/AddFolder.vue","../../../hoppscotch-common/src/components/collections/graphql/AddRequest.vue","../../../hoppscotch-common/src/components/collections/graphql/Edit.vue","../../../hoppscotch-common/src/components/collections/graphql/Add.vue","../../../hoppscotch-common/src/components/collections/graphql/Request.vue","../../../hoppscotch-common/src/components/collections/graphql/Folder.vue","../../../hoppscotch-common/src/components/collections/graphql/Collection.vue","../../../hoppscotch-common/src/components/collections/graphql/index.vue","../../../hoppscotch-common/src/components/collections/SaveRequest.vue","../../../hoppscotch-common/src/components/history/rest/Card.vue","../../../hoppscotch-common/src/components/history/graphql/Card.vue","../../../hoppscotch-common/src/components/history/index.vue"],"sourcesContent":["/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n","import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n","/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseIndexOfWith;\n","import arrayMap from './_arrayMap.js';\nimport baseIndexOf from './_baseIndexOf.js';\nimport baseIndexOfWith from './_baseIndexOfWith.js';\nimport baseUnary from './_baseUnary.js';\nimport copyArray from './_copyArray.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nexport default basePullAll;\n","import basePullAll from './_basePullAll.js';\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nexport default pullAll;\n","import baseRest from './_baseRest.js';\nimport pullAll from './pullAll.js';\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */\nvar pull = baseRest(pullAll);\n\nexport default pull;\n","import baseUnset from './_baseUnset.js';\nimport isIndex from './_isIndex.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n  return array;\n}\n\nexport default basePullAt;\n","import baseIteratee from './_baseIteratee.js';\nimport basePullAt from './_basePullAt.js';\n\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\nfunction remove(array, predicate) {\n  var result = [];\n  if (!(array && array.length)) {\n    return result;\n  }\n  var index = -1,\n      indexes = [],\n      length = array.length;\n\n  predicate = baseIteratee(predicate, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n  basePullAt(array, indexes);\n  return result;\n}\n\nexport default remove;\n","<template>\n  <HoppSmartModal\n    dialog\n    :title=\"t('collection_runner.run_collection')\"\n    @close=\"closeModal\"\n  >\n    <template #body>\n      <HoppSmartTabs v-model=\"activeTab\">\n        <HoppSmartTab id=\"cli\" :label=\"t('collection_runner.cli')\">\n          <div class=\"space-y-4 p-4\">\n            <p\n              class=\"p-4 mb-4 border rounded-md text-amber-500 border-amber-600\"\n            >\n              {{ cliCommandGenerationDescription }}\n            </p>\n\n            <div v-if=\"environmentID\" class=\"flex gap-x-2 items-center\">\n              <HoppSmartCheckbox\n                :on=\"includeEnvironmentID\"\n                @change=\"toggleIncludeEnvironment\"\n              />\n              <span class=\"truncate\"\n                >{{ t(\"collection_runner.include_active_environment\") }}\n                <span class=\"text-secondaryDark\">{{\n                  activeEnvironment\n                }}</span></span\n              >\n            </div>\n\n            <div\n              class=\"p-4 rounded-md bg-primaryLight text-secondaryDark select-text\"\n            >\n              {{ generatedCLICommand }}\n            </div>\n          </div>\n        </HoppSmartTab>\n\n        <HoppSmartTab id=\"runner\" disabled :label=\"t('collection_runner.ui')\" />\n      </HoppSmartTabs>\n    </template>\n\n    <template #footer>\n      <div class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.copy')}`\"\n          :icon=\"copyIcon\"\n          outline\n          @click=\"copyCLICommandToClipboard\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.close')}`\"\n          outline\n          filled\n          @click=\"closeModal\"\n        />\n      </div>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { refAutoReset } from \"@vueuse/core\"\nimport { computed, ref } from \"vue\"\nimport { useI18n } from \"~/composables/i18n\"\n\nimport { useToast } from \"~/composables/toast\"\nimport { copyToClipboard } from \"~/helpers/utils/clipboard\"\nimport { SelectedEnvironmentIndex } from \"~/newstore/environments\"\nimport IconCheck from \"~icons/lucide/check\"\nimport IconCopy from \"~icons/lucide/copy\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  collectionID: string\n  environmentID?: string | null\n  selectedEnvironmentIndex: SelectedEnvironmentIndex\n}>()\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n}>()\n\nconst includeEnvironmentID = ref(false)\nconst activeTab = ref(\"cli\")\n\nconst copyIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\n\nconst activeEnvironment = computed(() => {\n  const selectedEnv = props.selectedEnvironmentIndex\n\n  if (selectedEnv.type === \"TEAM_ENV\") {\n    return selectedEnv.environment.name\n  }\n\n  return null\n})\n\nconst isCloudInstance = window.location.hostname === \"hoppscotch.io\"\n\nconst cliCommandGenerationDescription = computed(() => {\n  if (isCloudInstance) {\n    return t(\"collection_runner.cli_command_generation_description_cloud\")\n  }\n\n  if (Object.create(globalThis.import_meta_env || null).VITE_BACKEND_API_URL) {\n    return t(\"collection_runner.cli_command_generation_description_sh\")\n  }\n\n  return t(\n    \"collection_runner.cli_command_generation_description_sh_with_server_url_placeholder\"\n  )\n})\n\nconst generatedCLICommand = computed(() => {\n  const { collectionID, environmentID } = props\n\n  const environmentFlag =\n    includeEnvironmentID.value && environmentID ? `-e ${environmentID}` : \"\"\n\n  const serverUrl = Object.create(globalThis.import_meta_env || null).VITE_BACKEND_API_URL?.endsWith(\"/v1\")\n    ? // Removing `/v1` prefix\n      Object.create(globalThis.import_meta_env || null).VITE_BACKEND_API_URL.slice(0, -3)\n    : \"<server_url>\"\n\n  const serverFlag = isCloudInstance ? \"\" : `--server ${serverUrl}`\n\n  return `hopp test ${collectionID} ${environmentFlag} --token <access_token> ${serverFlag}`\n})\n\nconst toggleIncludeEnvironment = () => {\n  includeEnvironmentID.value = !includeEnvironmentID.value\n}\n\nconst copyCLICommandToClipboard = () => {\n  copyToClipboard(generatedCLICommand.value)\n  copyIcon.value = IconCheck\n\n  toast.success(`${t(\"state.copied_to_clipboard\")}`)\n}\n\nconst closeModal = () => {\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('collection.properties')\"\n    :full-width-body=\"true\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <HoppSmartTabs\n        v-model=\"activeTab\"\n        styles=\"sticky overflow-x-auto flex-shrink-0 bg-primary top-0 z-10 !-py-4\"\n        render-inactive-tabs\n      >\n        <HoppSmartTab id=\"headers\" :label=\"`${t('tab.headers')}`\">\n          <HttpHeaders\n            v-model=\"editableCollection\"\n            :is-collection-property=\"true\"\n          />\n          <div\n            class=\"bg-bannerInfo px-4 py-2 flex items-center sticky bottom-0\"\n          >\n            <icon-lucide-info class=\"svg-icons mr-2\" />\n            {{ t(\"helpers.collection_properties_header\") }}\n          </div>\n        </HoppSmartTab>\n\n        <HoppSmartTab id=\"authorization\" :label=\"`${t('tab.authorization')}`\">\n          <HttpAuthorization\n            v-model=\"editableCollection.auth\"\n            :is-collection-property=\"true\"\n            :is-root-collection=\"editingProperties.isRootCollection\"\n            :inherited-properties=\"editingProperties.inheritedProperties\"\n            :source=\"source\"\n          />\n          <div\n            class=\"bg-bannerInfo px-4 py-2 flex items-center sticky bottom-0\"\n          >\n            <icon-lucide-info class=\"svg-icons mr-2\" />\n            {{ t(\"helpers.collection_properties_authorization\") }}\n          </div>\n        </HoppSmartTab>\n\n        <HoppSmartTab\n          v-if=\"showDetails\"\n          :id=\"'details'\"\n          :label=\"t('collection.details')\"\n        >\n          <div\n            class=\"flex flex-shrink-0 items-center justify-between border-b border-dividerLight bg-primary pl-4\"\n          >\n            <span>{{ t(\"collection_runner.collection_id\") }}</span>\n\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              to=\"https://docs.hoppscotch.io/documentation/clients/cli/overview#running-collections-present-on-the-api-client\"\n              blank\n              :title=\"t('app.wiki')\"\n              :icon=\"IconHelpCircle\"\n            />\n          </div>\n\n          <div class=\"p-4\">\n            <div\n              class=\"flex items-center justify-between py-2 px-4 rounded-md bg-primaryLight select-text\"\n            >\n              <div class=\"text-secondaryDark\">\n                {{ editingProperties.path }}\n              </div>\n\n              <HoppButtonSecondary\n                filled\n                :icon=\"copyIcon\"\n                @click=\"copyCollectionID\"\n              />\n            </div>\n          </div>\n\n          <div\n            class=\"bg-bannerInfo px-4 py-2 flex items-center sticky bottom-0\"\n          >\n            <icon-lucide-info class=\"svg-icons mr-2\" />\n            {{ t(\"collection_runner.cli_collection_id_description\") }}\n          </div>\n        </HoppSmartTab>\n      </HoppSmartTabs>\n    </template>\n    <template #footer>\n      <div class=\"flex gap-x-2\">\n        <HoppButtonPrimary\n          v-if=\"activeTabIsDetails\"\n          :label=\"t('action.copy')\"\n          :icon=\"copyIcon\"\n          outline\n          filled\n          @click=\"copyCollectionID\"\n        />\n        <HoppButtonPrimary\n          v-else\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"saveEditedCollection\"\n        />\n\n        <HoppButtonSecondary\n          :label=\"activeTabIsDetails ? t('action.close') : t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </div>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport {\n  GQLHeader,\n  HoppCollection,\n  HoppGQLAuth,\n  HoppRESTAuth,\n  HoppRESTHeaders,\n} from \"@hoppscotch/data\"\nimport { refAutoReset, useVModel } from \"@vueuse/core\"\nimport { useService } from \"dioc/vue\"\nimport { clone } from \"lodash-es\"\nimport { computed, ref, watch } from \"vue\"\nimport { useToast } from \"~/composables/toast\"\n\nimport { HoppInheritedProperty } from \"~/helpers/types/HoppInheritedProperties\"\nimport { copyToClipboard } from \"~/helpers/utils/clipboard\"\nimport { PersistenceService } from \"~/services/persistence\"\nimport IconCheck from \"~icons/lucide/check\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\n\nconst persistenceService = useService(PersistenceService)\nconst t = useI18n()\n\nexport type EditingProperties = {\n  collection: Partial<HoppCollection> | null\n  isRootCollection: boolean\n  path: string\n  inheritedProperties?: HoppInheritedProperty\n}\n\ntype HoppCollectionAuth = HoppRESTAuth | HoppGQLAuth\ntype HoppCollectionHeaders = HoppRESTHeaders | GQLHeader[]\n\nconst toast = useToast()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n    editingProperties: EditingProperties\n    source: \"REST\" | \"GraphQL\"\n    modelValue: string\n    showDetails: boolean\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n    showDetails: false,\n  }\n)\n\nconst emit = defineEmits<{\n  (\n    e: \"set-collection-properties\",\n    newCollection: Omit<EditingProperties, \"inheritedProperties\">\n  ): void\n  (e: \"hide-modal\"): void\n  (e: \"update:modelValue\"): void\n}>()\n\nconst editableCollection = ref<{\n  headers: HoppCollectionHeaders\n  auth: HoppCollectionAuth\n}>({\n  headers: [],\n  auth: {\n    authType: \"inherit\",\n    authActive: false,\n  },\n})\n\nconst copyIcon = refAutoReset<typeof IconCopy | typeof IconCheck>(\n  IconCopy,\n  1000\n)\n\nconst activeTabIsDetails = computed(() => activeTab.value === \"details\")\n\nwatch(\n  editableCollection,\n  (updatedEditableCollection) => {\n    if (props.show && props.editingProperties) {\n      const unsavedCollectionProperties: EditingProperties = {\n        collection: updatedEditableCollection,\n        isRootCollection: props.editingProperties.isRootCollection ?? false,\n        path: props.editingProperties.path,\n        inheritedProperties: props.editingProperties.inheritedProperties,\n      }\n      persistenceService.setLocalConfig(\n        \"unsaved_collection_properties\",\n        JSON.stringify(unsavedCollectionProperties)\n      )\n    }\n  },\n  {\n    deep: true,\n  }\n)\n\nconst activeTab = useVModel(props, \"modelValue\", emit)\n\nwatch(\n  () => props.show,\n  (show) => {\n    // `Details` tab doesn't exist for personal workspace, hence switching to the `Headers` tab\n    // The modal can appear empty while switching from a team workspace with `Details` as the active tab\n    if (activeTab.value === \"details\" && !props.showDetails) {\n      activeTab.value = \"headers\"\n    }\n\n    if (show && props.editingProperties.collection) {\n      editableCollection.value.auth = clone(\n        props.editingProperties.collection.auth as HoppCollectionAuth\n      )\n      editableCollection.value.headers = clone(\n        props.editingProperties.collection.headers as HoppCollectionHeaders\n      )\n    } else {\n      editableCollection.value = {\n        headers: [],\n        auth: {\n          authType: \"inherit\",\n          authActive: false,\n        },\n      }\n\n      persistenceService.removeLocalConfig(\"unsaved_collection_properties\")\n    }\n  }\n)\n\nconst saveEditedCollection = () => {\n  if (!props.editingProperties) return\n  const finalCollection = clone(editableCollection.value)\n  const collection = {\n    path: props.editingProperties.path,\n    collection: {\n      ...props.editingProperties.collection,\n      ...finalCollection,\n    },\n    isRootCollection: props.editingProperties.isRootCollection,\n  }\n  emit(\"set-collection-properties\", collection as EditingProperties)\n  persistenceService.removeLocalConfig(\"unsaved_collection_properties\")\n}\n\nconst hideModal = () => {\n  persistenceService.removeLocalConfig(\"unsaved_collection_properties\")\n  emit(\"hide-modal\")\n}\n\nconst copyCollectionID = () => {\n  copyToClipboard(props.editingProperties.path)\n  copyIcon.value = IconCheck\n\n  toast.success(`${t(\"state.copied_to_clipboard\")}`)\n}\n</script>\n","import { computed, defineComponent, ref } from \"vue\"\n\nexport function useSteps() {\n  type Step = ReturnType<typeof defineStep>\n\n  const steps: Step[] = []\n\n  const currentStepIndex = ref(0)\n\n  const currentStep = computed(() => {\n    return steps[currentStepIndex.value]\n  })\n\n  const backHistoryIndexes = ref([0])\n\n  const hasPreviousStep = computed(() => {\n    return currentStepIndex.value > 0\n  })\n\n  const addStep = (step: Step) => {\n    steps.push(step)\n  }\n\n  const goToNextStep = () => {\n    currentStepIndex.value++\n    backHistoryIndexes.value.push(currentStepIndex.value)\n  }\n\n  const goToStep = (stepId: string) => {\n    currentStepIndex.value = steps.findIndex((step) => step.id === stepId)\n    backHistoryIndexes.value.push(currentStepIndex.value)\n  }\n\n  const goToPreviousStep = () => {\n    if (backHistoryIndexes.value.length !== 1) {\n      backHistoryIndexes.value.pop()\n      currentStepIndex.value =\n        backHistoryIndexes.value[backHistoryIndexes.value.length - 1]\n    }\n  }\n\n  return {\n    steps,\n    currentStep,\n    addStep,\n    goToPreviousStep,\n    goToNextStep,\n    goToStep,\n    hasPreviousStep,\n  }\n}\n\nexport function defineStep<\n  StepComponent extends ReturnType<typeof defineComponent>,\n>(\n  id: string,\n  component: StepComponent,\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  props: () => InstanceType<StepComponent>[\"$props\"]\n) {\n  const step = {\n    id,\n    component,\n    props,\n  }\n\n  return step\n}\n","<template>\n  <div class=\"flex flex-col\">\n    <HoppSmartExpand v-if=\"showExpand\">\n      <template #body>\n        <HoppSmartItem\n          v-for=\"importer in importers\"\n          :key=\"importer.id\"\n          :icon=\"importer.icon\"\n          :label=\"t(`${importer.name}`)\"\n          @click=\"emit('importer-selected', importer.id)\"\n        />\n      </template>\n    </HoppSmartExpand>\n\n    <div v-else class=\"flex flex-col space-y-2\">\n      <HoppSmartItem\n        v-for=\"importer in importers\"\n        :key=\"importer.id\"\n        :icon=\"importer.icon\"\n        :label=\"t(`${importer.name}`)\"\n        @click=\"emit('importer-selected', importer.id)\"\n      />\n    </div>\n    <hr />\n    <div class=\"flex flex-col space-y-2\">\n      <template v-for=\"exporter in exporters\" :key=\"exporter.id\">\n        <!-- adding the title to a span if the item is visible, otherwise the title won't be shown -->\n\n        <span\n          v-if=\"exporter.disabled && exporter.title\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :title=\"t(`${exporter.title}`)\"\n          class=\"flex\"\n        >\n          <HoppSmartItem\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :icon=\"exporter.icon\"\n            :label=\"t(`${exporter.name}`)\"\n            :disabled=\"exporter.disabled\"\n            :loading=\"exporter.loading\"\n            @click=\"emit('exporter-selected', exporter.id)\"\n          />\n        </span>\n\n        <HoppSmartItem\n          v-else\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"exporter.icon\"\n          :title=\"t(`${exporter.title}`)\"\n          :label=\"t(`${exporter.name}`)\"\n          :loading=\"exporter.loading\"\n          :disabled=\"exporter.disabled\"\n          @click=\"emit('exporter-selected', exporter.id)\"\n        />\n      </template>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { Component, computed } from \"vue\"\n\nconst t = useI18n()\n\ntype ImportExportEntryMeta = {\n  id: string\n  name: string\n  icon: Component\n  disabled: boolean\n  title?: string\n  loading?: boolean\n  isVisible?: boolean\n}\n\nconst props = defineProps<{\n  importers: ImportExportEntryMeta[]\n  exporters: ImportExportEntryMeta[]\n}>()\n\nconst emit = defineEmits<{\n  (e: \"importer-selected\", importerID: string): void\n  (e: \"exporter-selected\", exporterID: string): void\n}>()\n\nconst showExpand = computed(() => props.importers.length >= 4)\n</script>\n","<template>\n  <div class=\"flex flex-col space-y-2\">\n    <HoppSmartItem\n      v-for=\"source in sources\"\n      :key=\"source.id\"\n      :icon=\"source.icon\"\n      :label=\"t(`${source.name}`)\"\n      @click=\"emit('import-source-selected', source.id)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { Component } from \"vue\"\n\nconst t = useI18n()\n\ntype ListItemMeta = {\n  id: string\n  name: string\n  icon: Component\n  title?: string\n}\n\ndefineProps<{\n  sources: ListItemMeta[]\n}>()\n\nconst emit = defineEmits<{\n  (e: \"import-source-selected\", sourceID: string): void\n}>()\n</script>\n","<template>\n  <HoppSmartModal\n    dialog\n    :title=\"t(modalTitle)\"\n    styles=\"sm:max-w-md\"\n    @close=\"hideModal\"\n  >\n    <template #actions>\n      <HoppButtonSecondary\n        v-if=\"hasPreviousStep\"\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"t('action.go_back')\"\n        :icon=\"IconArrowLeft\"\n        @click=\"goToPreviousStep\"\n      />\n    </template>\n    <template #body>\n      <component :is=\"currentStep.component\" v-bind=\"currentStep.props()\" />\n    </template>\n  </HoppSmartModal>\n</template>\n<script setup lang=\"ts\">\nimport IconArrowLeft from \"~icons/lucide/arrow-left\"\n\nimport { useI18n } from \"~/composables/i18n\"\nimport { PropType, ref } from \"vue\"\n\nimport { useSteps, defineStep } from \"~/composables/step-components\"\nimport ImportExportList from \"./ImportExportList.vue\"\n\nimport ImportExportSourcesList from \"./ImportExportSourcesList.vue\"\nimport { ImporterOrExporter } from \"~/components/importExport/types\"\n\nconst t = useI18n()\n\nconst props = defineProps({\n  importerModules: {\n    // type: Array as PropType<ReturnType<typeof defineImporter>[]>,\n    type: Array as PropType<ImporterOrExporter[]>,\n    default: () => [],\n    required: true,\n  },\n  exporterModules: {\n    type: Array as PropType<ImporterOrExporter[]>,\n    default: () => [],\n    required: true,\n  },\n  modalTitle: {\n    type: String,\n    required: true,\n  },\n})\n\nconst {\n  addStep,\n  currentStep,\n  goToStep,\n  goToNextStep,\n  goToPreviousStep,\n  hasPreviousStep,\n} = useSteps()\n\nconst selectedImporterID = ref<string | null>(null)\nconst selectedSourceID = ref<string | null>(null)\n\nconst chooseImporterOrExporter = defineStep(\n  \"choose_importer_or_exporter\",\n  ImportExportList,\n  () => ({\n    importers: props.importerModules.map((importer) => ({\n      id: importer.metadata.id,\n      name: importer.metadata.name,\n      title: importer.metadata.title,\n      icon: importer.metadata.icon,\n      disabled: importer.metadata.disabled,\n    })),\n    exporters: props.exporterModules.map((exporter) => ({\n      id: exporter.metadata.id,\n      name: exporter.metadata.name,\n      title: exporter.metadata.title,\n      icon: exporter.metadata.icon,\n      disabled: exporter.metadata.disabled,\n      loading: exporter.metadata.isLoading?.value ?? false,\n    })),\n    \"onImporter-selected\": (id: string) => {\n      selectedImporterID.value = id\n\n      const selectedImporter = props.importerModules.find(\n        (i) => i.metadata.id === id\n      )\n\n      if (selectedImporter?.supported_sources) goToNextStep()\n      else if (selectedImporter?.component)\n        goToStep(selectedImporter.component.id)\n    },\n    \"onExporter-selected\": (id: string) => {\n      const selectedExporter = props.exporterModules.find(\n        (i) => i.metadata.id === id\n      )\n\n      if (selectedExporter && selectedExporter.action) {\n        selectedExporter.action()\n      }\n    },\n  })\n)\n\nconst chooseImportSource = defineStep(\n  \"choose_import_source\",\n  ImportExportSourcesList,\n  () => {\n    const currentImporter = props.importerModules.find(\n      (i) => i.metadata.id === selectedImporterID.value\n    )\n\n    const sources = currentImporter?.supported_sources\n\n    if (!sources)\n      return {\n        sources: [],\n      }\n\n    sources.forEach((source) => {\n      addStep(source.step)\n    })\n\n    return {\n      sources: sources.map((source) => ({\n        id: source.id,\n        name: source.name,\n        icon: source.icon,\n      })),\n      \"onImport-source-selected\": (sourceID) => {\n        selectedSourceID.value = sourceID\n\n        const sourceStep = sources.find((s) => s.id === sourceID)?.step\n\n        if (sourceStep) {\n          goToStep(sourceStep.id)\n        }\n      },\n    }\n  }\n)\n\naddStep(chooseImporterOrExporter)\naddStep(chooseImportSource)\n\nprops.importerModules.forEach((importer) => {\n  if (importer.component) {\n    addStep(importer.component)\n  }\n})\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n}>()\n\nconst hideModal = () => {\n  // resetImport()\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <div class=\"space-y-4\">\n    <p class=\"flex items-center\">\n      <span\n        class=\"inline-flex items-center justify-center flex-shrink-0 mr-4 border-4 rounded-full border-primary text-dividerDark\"\n        :class=\"{\n          '!text-green-500': hasFile,\n        }\"\n      >\n        <icon-lucide-check-circle class=\"svg-icons\" />\n      </span>\n      <span>\n        {{ t(`${caption}`) }}\n      </span>\n    </p>\n\n    <div\n      class=\"flex flex-col ml-10 border border-dashed rounded border-dividerDark\"\n    >\n      <input\n        id=\"inputChooseFileToImportFrom\"\n        ref=\"inputChooseFileToImportFrom\"\n        name=\"inputChooseFileToImportFrom\"\n        type=\"file\"\n        class=\"p-4 cursor-pointer transition file:transition file:cursor-pointer text-secondary hover:text-secondaryDark file:mr-2 file:py-2 file:px-4 file:rounded file:border-0 file:text-secondary hover:file:text-secondaryDark file:bg-primaryLight hover:file:bg-primaryDark\"\n        :accept=\"acceptedFileTypes\"\n        multiple\n        @change=\"onFileChange\"\n      />\n    </div>\n\n    <p v-if=\"showFileSizeLimitExceededWarning\" class=\"text-red-500 ml-10\">\n      <template v-if=\"importFilesCount\">\n        {{\n          t(\"import.file_size_limit_exceeded_warning_multiple_files\", {\n            files:\n              importFilesCount === 1 ? \"file\" : `${importFilesCount} files`,\n          })\n        }}\n      </template>\n\n      <template v-else>\n        {{ t(\"import.file_size_limit_exceeded_warning_single_file\") }}\n      </template>\n    </p>\n    <div>\n      <HoppButtonPrimary\n        class=\"w-full\"\n        :label=\"t('import.title')\"\n        :disabled=\"!hasFile || showFileSizeLimitExceededWarning\"\n        @click=\"emit('importFromFile', fileContent)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\n\ndefineProps<{\n  caption: string\n  acceptedFileTypes: string\n}>()\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst ALLOWED_FILE_SIZE_LIMIT = 10 // 10 MB\n\nconst importFilesCount = ref(0)\n\nconst hasFile = ref(false)\nconst showFileSizeLimitExceededWarning = ref(false)\nconst fileContent = ref<string[]>([])\n\nconst inputChooseFileToImportFrom = ref<HTMLInputElement | any>()\n\nconst emit = defineEmits<{\n  (e: \"importFromFile\", content: string[]): void\n}>()\n\nconst onFileChange = async () => {\n  // Reset the state on entering the handler to avoid any stale state\n  if (showFileSizeLimitExceededWarning.value) {\n    showFileSizeLimitExceededWarning.value = false\n  }\n\n  if (importFilesCount.value) {\n    importFilesCount.value = 0\n  }\n\n  const inputFileToImport = inputChooseFileToImportFrom.value\n\n  if (!inputFileToImport) {\n    hasFile.value = false\n    return\n  }\n\n  if (!inputFileToImport.files || inputFileToImport.files.length === 0) {\n    inputChooseFileToImportFrom.value = \"\"\n    hasFile.value = false\n    toast.show(t(\"action.choose_file\").toString())\n    return\n  }\n\n  const readerPromises: Promise<string | null>[] = []\n\n  let totalFileSize = 0\n\n  for (let i = 0; i < inputFileToImport.files.length; i++) {\n    const file = inputFileToImport.files[i]\n\n    totalFileSize += file.size / 1024 / 1024\n\n    if (totalFileSize > ALLOWED_FILE_SIZE_LIMIT) {\n      showFileSizeLimitExceededWarning.value = true\n      break\n    }\n\n    const reader = new FileReader()\n\n    readerPromises.push(\n      new Promise((resolve, reject) => {\n        reader.onload = () => resolve(reader.result as string | null)\n        reader.onerror = reject\n        reader.readAsText(file)\n      })\n    )\n  }\n\n  importFilesCount.value = readerPromises.length\n\n  const results = await Promise.allSettled(readerPromises)\n\n  const contentsArr = results\n    .filter((result) => result.status === \"fulfilled\")\n    .map((result) => (result as { value: string | null }).value)\n    .filter(Boolean) as string[]\n\n  const errors = results.filter((result) => result.status === \"rejected\")\n  if (errors.length) {\n    toast.error(t(\"error.reading_files\"))\n  }\n\n  fileContent.value = contentsArr\n  hasFile.value = contentsArr.length > 0\n}\n</script>\n","import FileImportVue from \"~/components/importExport/ImportExportSteps/FileImport.vue\"\nimport { defineStep } from \"~/composables/step-components\"\n\nimport { v4 as uuidv4 } from \"uuid\"\n\nexport function FileSource(metadata: {\n  acceptedFileTypes: string\n  caption: string\n  onImportFromFile: (content: string[]) => any | Promise<any>\n}) {\n  const stepID = uuidv4()\n\n  return defineStep(stepID, FileImportVue, () => ({\n    acceptedFileTypes: metadata.acceptedFileTypes,\n    caption: metadata.caption,\n    onImportFromFile: metadata.onImportFromFile,\n  }))\n}\n","<template>\n  <div class=\"space-y-4\">\n    <p class=\"flex items-center\">\n      <span\n        class=\"inline-flex items-center justify-center flex-shrink-0 mr-4 border-4 rounded-full border-primary text-dividerDark\"\n        :class=\"{\n          '!text-green-500': hasURL,\n        }\"\n      >\n        <icon-lucide-check-circle class=\"svg-icons\" />\n      </span>\n      <span>\n        {{ t(caption) }}\n      </span>\n    </p>\n    <p class=\"flex flex-col ml-10\">\n      <input\n        v-model=\"inputChooseGistToImportFrom\"\n        type=\"url\"\n        class=\"input\"\n        :placeholder=\"`${t('import.from_url')}`\"\n      />\n    </p>\n\n    <div>\n      <HoppButtonPrimary\n        class=\"w-full\"\n        :label=\"t('import.title')\"\n        :disabled=\"!hasURL\"\n        :loading=\"isFetchingUrl\"\n        @click=\"fetchUrlData\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"~/composables/toast\"\nimport axios, { AxiosResponse } from \"axios\"\n\nconst t = useI18n()\n\nconst toast = useToast()\n\nconst props = defineProps<{\n  caption: string\n  fetchLogic?: (url: string) => Promise<AxiosResponse<any>>\n}>()\n\nconst emit = defineEmits<{\n  (e: \"importFromURL\", content: unknown): void\n}>()\n\nconst inputChooseGistToImportFrom = ref<string>(\"\")\nconst hasURL = ref(false)\n\nconst isFetchingUrl = ref(false)\n\nwatch(inputChooseGistToImportFrom, (url) => {\n  hasURL.value = !!url\n})\n\nconst urlFetchLogic =\n  props.fetchLogic ??\n  async function (url: string) {\n    const res = await axios.get(url, {\n      transitional: {\n        forcedJSONParsing: false,\n        silentJSONParsing: false,\n        clarifyTimeoutError: true,\n      },\n    })\n\n    return res\n  }\n\nasync function fetchUrlData() {\n  isFetchingUrl.value = true\n\n  try {\n    const res = await urlFetchLogic(inputChooseGistToImportFrom.value)\n\n    if (res.status === 200) {\n      emit(\"importFromURL\", res.data)\n    }\n  } catch (e) {\n    toast.error(t(\"import.failed\"))\n    console.log(e)\n  } finally {\n    isFetchingUrl.value = false\n  }\n}\n</script>\n","import UrlImport from \"~/components/importExport/ImportExportSteps/UrlImport.vue\"\nimport { defineStep } from \"~/composables/step-components\"\n\nimport { v4 as uuidv4 } from \"uuid\"\n\nexport function UrlSource(metadata: {\n  caption: string\n  onImportFromURL: (content: string) => any | Promise<any>\n  fetchLogic?: (url: string) => Promise<any>\n}) {\n  const stepID = uuidv4()\n\n  return defineStep(stepID, UrlImport, () => ({\n    caption: metadata.caption,\n    onImportFromURL: (content: unknown) => {\n      if (typeof content === \"string\") {\n        metadata.onImportFromURL(content)\n      }\n    },\n  }))\n}\n","import { runMutation } from \"../GQLClient\"\nimport {\n  CreateChildCollectionDocument,\n  CreateChildCollectionMutation,\n  CreateChildCollectionMutationVariables,\n  CreateNewRootCollectionDocument,\n  CreateNewRootCollectionMutation,\n  CreateNewRootCollectionMutationVariables,\n  DeleteCollectionDocument,\n  DeleteCollectionMutation,\n  DeleteCollectionMutationVariables,\n  ImportFromJsonDocument,\n  ImportFromJsonMutation,\n  ImportFromJsonMutationVariables,\n  MoveRestTeamCollectionDocument,\n  MoveRestTeamCollectionMutation,\n  MoveRestTeamCollectionMutationVariables,\n  RenameCollectionDocument,\n  RenameCollectionMutation,\n  RenameCollectionMutationVariables,\n  UpdateCollectionOrderDocument,\n  UpdateCollectionOrderMutation,\n  UpdateCollectionOrderMutationVariables,\n  UpdateTeamCollectionDocument,\n  UpdateTeamCollectionMutation,\n  UpdateTeamCollectionMutationVariables,\n} from \"../graphql\"\n\ntype CreateNewRootCollectionError = \"team_coll/short_title\"\n\ntype CreateChildCollectionError = \"team_coll/short_title\"\n\ntype RenameCollectionError = \"team_coll/short_title\"\n\ntype DeleteCollectionError = \"team/invalid_coll_id\"\n\ntype MoveRestTeamCollectionError =\n  | \"team/invalid_coll_id\"\n  | \"team_coll/invalid_target_id\"\n  | \"team/collection_is_parent_coll\"\n  | \"team/target_and_destination_collection_are_same\"\n  | \"team/target_collection_is_already_root_collection\"\n\ntype UpdateCollectionOrderError =\n  | \"team/invalid_coll_id\"\n  | \"team/collection_and_next_collection_are_same\"\n  | \"team/team_collections_have_different_parents\"\n\nexport const createNewRootCollection = (title: string, teamID: string) =>\n  runMutation<\n    CreateNewRootCollectionMutation,\n    CreateNewRootCollectionMutationVariables,\n    CreateNewRootCollectionError\n  >(CreateNewRootCollectionDocument, {\n    title,\n    teamID,\n  })\n\nexport const createChildCollection = (\n  childTitle: string,\n  collectionID: string\n) =>\n  runMutation<\n    CreateChildCollectionMutation,\n    CreateChildCollectionMutationVariables,\n    CreateChildCollectionError\n  >(CreateChildCollectionDocument, {\n    childTitle,\n    collectionID,\n  })\n\n/** Can be used to rename both collection and folder (considered same in BE) */\nexport const renameCollection = (collectionID: string, newTitle: string) =>\n  runMutation<\n    RenameCollectionMutation,\n    RenameCollectionMutationVariables,\n    RenameCollectionError\n  >(RenameCollectionDocument, {\n    collectionID,\n    newTitle,\n  })\n\n/** Can be used to delete both collection and folder (considered same in BE) */\nexport const deleteCollection = (collectionID: string) =>\n  runMutation<\n    DeleteCollectionMutation,\n    DeleteCollectionMutationVariables,\n    DeleteCollectionError\n  >(DeleteCollectionDocument, {\n    collectionID,\n  })\n\n/** Can be used to move both collection and folder (considered same in BE) */\nexport const moveRESTTeamCollection = (\n  collectionID: string,\n  destinationCollectionID: string | null\n) =>\n  runMutation<\n    MoveRestTeamCollectionMutation,\n    MoveRestTeamCollectionMutationVariables,\n    MoveRestTeamCollectionError\n  >(MoveRestTeamCollectionDocument, {\n    collectionID,\n    parentCollectionID: destinationCollectionID,\n  })\n\nexport const updateOrderRESTTeamCollection = (\n  collectionID: string,\n  destCollID: string | null\n) =>\n  runMutation<\n    UpdateCollectionOrderMutation,\n    UpdateCollectionOrderMutationVariables,\n    UpdateCollectionOrderError\n  >(UpdateCollectionOrderDocument, {\n    collectionID,\n    destCollID,\n  })\n\nexport const importJSONToTeam = (collectionJSON: string, teamID: string) =>\n  runMutation<ImportFromJsonMutation, ImportFromJsonMutationVariables, \"\">(\n    ImportFromJsonDocument,\n    {\n      jsonString: collectionJSON,\n      teamID,\n    }\n  )\n\nexport const updateTeamCollection = (\n  collectionID: string,\n  data?: string,\n  newTitle?: string\n) =>\n  runMutation<\n    UpdateTeamCollectionMutation,\n    UpdateTeamCollectionMutationVariables,\n    \"\"\n  >(UpdateTeamCollectionDocument, {\n    collectionID,\n    data,\n    newTitle,\n  })\n","import { importJSONToTeam } from \"~/helpers/backend/mutations/TeamCollection\"\n\nexport function toTeamsImporter(content: string, teamID: string) {\n  return importJSONToTeam(content, teamID)\n}\n","<template>\n  <div class=\"select-wrapper\">\n    <select\n      v-model=\"mySelectedCollectionID\"\n      autocomplete=\"off\"\n      class=\"select\"\n      autofocus\n    >\n      <option :key=\"undefined\" :value=\"undefined\" disabled selected>\n        {{ t(\"collection.select\") }}\n      </option>\n      <option\n        v-for=\"(collection, collectionIndex) in myCollections\"\n        :key=\"`collection-${collectionIndex}`\"\n        :value=\"collectionIndex\"\n        class=\"bg-primary\"\n      >\n        {{ collection.name }}\n      </option>\n    </select>\n  </div>\n\n  <div class=\"my-4\">\n    <HoppButtonPrimary\n      class=\"w-full\"\n      :label=\"t('import.title')\"\n      :disabled=\"!hasSelectedCollectionID\"\n      @click=\"fetchCollectionFromMyCollections\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { HoppCollection } from \"@hoppscotch/data\"\nimport { computed, ref } from \"vue\"\nimport { useI18n } from \"~/composables/i18n\"\nimport { useReadonlyStream } from \"~/composables/stream\"\nimport { getRESTCollection, restCollections$ } from \"~/newstore/collections\"\n\nconst t = useI18n()\n\nconst mySelectedCollectionID = ref<number | undefined>(undefined)\n\nconst hasSelectedCollectionID = computed(() => {\n  return mySelectedCollectionID.value !== undefined\n})\n\nconst myCollections = useReadonlyStream(restCollections$, [])\n\nconst emit = defineEmits<{\n  (e: \"importFromMyCollection\", content: HoppCollection): void\n}>()\n\nconst fetchCollectionFromMyCollections = async () => {\n  if (mySelectedCollectionID.value === undefined) {\n    return\n  }\n\n  const collection = getRESTCollection(mySelectedCollectionID.value)\n\n  if (collection) {\n    emit(\"importFromMyCollection\", collection)\n  }\n}\n</script>\n","import * as A from \"fp-ts/Array\"\nimport * as E from \"fp-ts/Either\"\nimport * as TE from \"fp-ts/TaskEither\"\nimport { pipe, flow } from \"fp-ts/function\"\nimport {\n  HoppCollection,\n  makeCollection,\n  translateToNewRequest,\n} from \"@hoppscotch/data\"\nimport { TeamCollection } from \"../teams/TeamCollection\"\nimport { TeamRequest } from \"../teams/TeamRequest\"\nimport { GQLError, runGQLQuery } from \"./GQLClient\"\nimport {\n  ExportAsJsonDocument,\n  GetCollectionChildrenIDsDocument,\n  GetCollectionRequestsDocument,\n  GetCollectionTitleAndDataDocument,\n} from \"./graphql\"\n\nexport const BACKEND_PAGE_SIZE = 10\n\nconst getCollectionChildrenIDs = async (collID: string) => {\n  const collsList: string[] = []\n\n  while (true) {\n    const data = await runGQLQuery({\n      query: GetCollectionChildrenIDsDocument,\n      variables: {\n        collectionID: collID,\n        cursor:\n          collsList.length > 0 ? collsList[collsList.length - 1] : undefined,\n      },\n    })\n\n    if (E.isLeft(data)) {\n      return E.left(data.left)\n    }\n\n    collsList.push(...data.right.collection!.children.map((x) => x.id))\n\n    if (data.right.collection!.children.length !== BACKEND_PAGE_SIZE) break\n  }\n\n  return E.right(collsList)\n}\n\nconst getCollectionRequests = async (collID: string) => {\n  const reqList: TeamRequest[] = []\n\n  while (true) {\n    const data = await runGQLQuery({\n      query: GetCollectionRequestsDocument,\n      variables: {\n        collectionID: collID,\n        cursor: reqList.length > 0 ? reqList[reqList.length - 1].id : undefined,\n      },\n    })\n\n    if (E.isLeft(data)) {\n      return E.left(data.left)\n    }\n\n    reqList.push(\n      ...data.right.requestsInCollection.map(\n        (x) =>\n          <TeamRequest>{\n            id: x.id,\n            request: translateToNewRequest(JSON.parse(x.request)),\n            collectionID: collID,\n            title: x.title,\n          }\n      )\n    )\n\n    if (data.right.requestsInCollection.length !== BACKEND_PAGE_SIZE) break\n  }\n\n  return E.right(reqList)\n}\n\nexport const getCompleteCollectionTree = (\n  collID: string\n): TE.TaskEither<GQLError<string>, TeamCollection> =>\n  pipe(\n    TE.Do,\n\n    TE.bind(\"titleAndData\", () =>\n      pipe(\n        () =>\n          runGQLQuery({\n            query: GetCollectionTitleAndDataDocument,\n            variables: {\n              collectionID: collID,\n            },\n          }),\n        TE.map((result) => ({\n          title: result.collection!.title,\n          data: result.collection!.data,\n        }))\n      )\n    ),\n    TE.bind(\"children\", () =>\n      pipe(\n        // TaskEither -> () => Promise<Either>\n        () => getCollectionChildrenIDs(collID),\n        TE.chain(flow(A.map(getCompleteCollectionTree), TE.sequenceArray))\n      )\n    ),\n\n    TE.bind(\"requests\", () => () => getCollectionRequests(collID)),\n\n    TE.map(\n      ({ titleAndData, children, requests }) =>\n        <TeamCollection>{\n          id: collID,\n          children,\n          requests,\n          title: titleAndData.title,\n          data: titleAndData.data,\n        }\n    )\n  )\n\nexport const teamCollToHoppRESTColl = (\n  coll: TeamCollection\n): HoppCollection => {\n  const data =\n    coll.data && coll.data !== \"null\"\n      ? JSON.parse(coll.data)\n      : {\n          auth: { authType: \"inherit\", authActive: true },\n          headers: [],\n        }\n\n  return makeCollection({\n    name: coll.title,\n    folders: coll.children?.map(teamCollToHoppRESTColl) ?? [],\n    requests: coll.requests?.map((x) => x.request) ?? [],\n    auth: data.auth ?? { authType: \"inherit\", authActive: true },\n    headers: data.headers ?? [],\n  })\n}\n\n/**\n * Get the JSON string of all the collection of the specified team\n * @param teamID - ID of the team\n * @returns Either of the JSON string of the collection or the error\n */\nexport const getTeamCollectionJSON = async (teamID: string) =>\n  await runGQLQuery({\n    query: ExportAsJsonDocument,\n    variables: {\n      teamID,\n    },\n  })\n","import * as E from \"fp-ts/Either\"\n\n/**\n * Create a downloadable file from a collection and prompts the user to download it.\n * @param collectionJSON - JSON string of the collection\n * @param name - Name of the collection set as the file name\n */\nexport const initializeDownloadCollection = (\n  collectionJSON: string,\n  name: string | null\n) => {\n  const file = new Blob([collectionJSON], { type: \"application/json\" })\n  const a = document.createElement(\"a\")\n  const url = URL.createObjectURL(file)\n  a.href = url\n\n  if (name) {\n    a.download = `${name}.json`\n  } else {\n    a.download = `${url.split(\"/\").pop()!.split(\"#\")[0].split(\"?\")[0]}.json`\n  }\n\n  document.body.appendChild(a)\n  a.click()\n\n  setTimeout(() => {\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }, 1000)\n\n  return E.right(\"state.download_started\")\n}\n","import axios from \"axios\"\nimport * as TE from \"fp-ts/TaskEither\"\n\nexport const createGist = (\n  content: string,\n  filename: string,\n  accessToken: string\n) => {\n  return TE.tryCatch(\n    async () =>\n      axios.post(\n        \"https://api.github.com/gists\",\n        {\n          files: {\n            [filename]: {\n              content: content,\n            },\n          },\n        },\n        {\n          headers: {\n            Authorization: `token ${accessToken}`,\n            Accept: \"application/vnd.github.v3+json\",\n          },\n        }\n      ),\n    (reason) => reason\n  )\n}\n","import * as E from \"fp-ts/Either\"\nimport { createGist } from \"~/helpers/gist\"\n\nexport const gistExporter = async (\n  JSONFileContents: string,\n  accessToken: string,\n  fileName = \"hoppscotch-collections.json\"\n) => {\n  if (!accessToken) {\n    return E.left(\"Invalid User\")\n  }\n\n  const res = await createGist(JSONFileContents, fileName, accessToken)()\n\n  if (E.isLeft(res)) {\n    return E.left(res.left)\n  }\n  return E.right(res.right.data.html_url as string)\n}\n","import { HoppCollection } from \"@hoppscotch/data\"\n\nexport const myCollectionsExporter = (myCollections: HoppCollection[]) => {\n  return JSON.stringify(myCollections, null, 2)\n}\n","import { getTeamCollectionJSON } from \"~/helpers/backend/helpers\"\n\nexport const teamCollectionsExporter = (teamID: string) => {\n  return getTeamCollectionJSON(teamID)\n}\n","import axios from \"axios\"\nimport UrlImport from \"~/components/importExport/ImportExportSteps/UrlImport.vue\"\nimport { defineStep } from \"~/composables/step-components\"\n\nimport * as E from \"fp-ts/Either\"\nimport { z } from \"zod\"\n\nimport { v4 as uuidv4 } from \"uuid\"\n\nexport function GistSource(metadata: {\n  caption: string\n  onImportFromGist: (\n    importResult: E.Either<string, string[]>\n  ) => any | Promise<any>\n}) {\n  const stepID = uuidv4()\n\n  return defineStep(stepID, UrlImport, () => ({\n    caption: metadata.caption,\n    onImportFromURL: (gistResponse: Record<string, unknown>) => {\n      const fileSchema = z.object({\n        files: z.record(z.object({ content: z.string() })),\n      })\n\n      const parseResult = fileSchema.safeParse(gistResponse)\n\n      if (!parseResult.success) {\n        metadata.onImportFromGist(E.left(\"INVALID_GIST\"))\n        return\n      }\n\n      const contents = Object.values(parseResult.data.files).map(\n        ({ content }) => content\n      )\n\n      metadata.onImportFromGist(E.right(contents))\n    },\n    fetchLogic: fetchGistFromUrl,\n  }))\n}\n\nconst fetchGistFromUrl = (url: string) =>\n  axios.get(`https://api.github.com/gists/${url.split(\"/\").pop()}`, {\n    headers: {\n      Accept: \"application/vnd.github.v3+json\",\n    },\n  })\n","<template>\n  <ImportExportBase\n    ref=\"collections-import-export\"\n    modal-title=\"modal.collections\"\n    :importer-modules=\"importerModules\"\n    :exporter-modules=\"exporterModules\"\n    @hide-modal=\"emit('hide-modal')\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { HoppCollection } from \"@hoppscotch/data\"\nimport * as E from \"fp-ts/Either\"\nimport { PropType, computed, ref } from \"vue\"\n\nimport { FileSource } from \"~/helpers/import-export/import/import-sources/FileSource\"\nimport { UrlSource } from \"~/helpers/import-export/import/import-sources/UrlSource\"\n\nimport IconFile from \"~icons/lucide/file\"\n\nimport {\n  hoppRESTImporter,\n  hoppInsomniaImporter,\n  hoppPostmanImporter,\n  toTeamsImporter,\n  hoppOpenAPIImporter,\n} from \"~/helpers/import-export/import/importers\"\n\nimport { defineStep } from \"~/composables/step-components\"\n\nimport { useI18n } from \"~/composables/i18n\"\nimport { useToast } from \"~/composables/toast\"\nimport { appendRESTCollections, restCollections$ } from \"~/newstore/collections\"\nimport MyCollectionImport from \"~/components/importExport/ImportExportSteps/MyCollectionImport.vue\"\n\nimport IconFolderPlus from \"~icons/lucide/folder-plus\"\nimport IconOpenAPI from \"~icons/lucide/file\"\nimport IconPostman from \"~icons/hopp/postman\"\nimport IconInsomnia from \"~icons/hopp/insomnia\"\nimport IconGithub from \"~icons/lucide/github\"\nimport IconLink from \"~icons/lucide/link\"\n\nimport IconUser from \"~icons/lucide/user\"\nimport { useReadonlyStream } from \"~/composables/stream\"\n\nimport { getTeamCollectionJSON } from \"~/helpers/backend/helpers\"\n\nimport { platform } from \"~/platform\"\n\nimport { initializeDownloadCollection } from \"~/helpers/import-export/export\"\nimport { gistExporter } from \"~/helpers/import-export/export/gist\"\nimport { myCollectionsExporter } from \"~/helpers/import-export/export/myCollections\"\nimport { teamCollectionsExporter } from \"~/helpers/import-export/export/teamCollections\"\n\nimport { GistSource } from \"~/helpers/import-export/import/import-sources/GistSource\"\nimport { ImporterOrExporter } from \"~/components/importExport/types\"\nimport { TeamWorkspace } from \"~/services/workspace.service\"\n\nconst t = useI18n()\nconst toast = useToast()\n\ntype CollectionType =\n  | {\n      type: \"team-collections\"\n      selectedTeam: TeamWorkspace\n    }\n  | { type: \"my-collections\" }\n\nconst props = defineProps({\n  collectionsType: {\n    type: Object as PropType<CollectionType>,\n    default: () => ({\n      type: \"my-collections\",\n      selectedTeam: undefined,\n    }),\n    required: true,\n  },\n})\n\nconst currentUser = useReadonlyStream(\n  platform.auth.getCurrentUserStream(),\n  platform.auth.getCurrentUser()\n)\n\nconst myCollections = useReadonlyStream(restCollections$, [])\n\nconst showImportFailedError = () => {\n  toast.error(t(\"import.failed\"))\n}\n\nconst handleImportToStore = async (collections: HoppCollection[]) => {\n  const importResult =\n    props.collectionsType.type === \"my-collections\"\n      ? await importToPersonalWorkspace(collections)\n      : await importToTeamsWorkspace(collections)\n\n  if (E.isRight(importResult)) {\n    toast.success(t(\"state.file_imported\"))\n    emit(\"hide-modal\")\n  } else {\n    toast.error(t(\"import.failed\"))\n  }\n}\n\nconst importToPersonalWorkspace = (collections: HoppCollection[]) => {\n  appendRESTCollections(collections)\n  return E.right({\n    success: true,\n  })\n}\n\nfunction translateToTeamCollectionFormat(x: HoppCollection) {\n  const folders: HoppCollection[] = (x.folders ?? []).map(\n    translateToTeamCollectionFormat\n  )\n\n  const data = {\n    auth: x.auth,\n    headers: x.headers,\n  }\n\n  const obj = {\n    ...x,\n    folders,\n    data,\n  }\n\n  if (x.id) obj.id = x.id\n\n  return obj\n}\n\nconst importToTeamsWorkspace = async (collections: HoppCollection[]) => {\n  if (!hasTeamWriteAccess.value || !selectedTeamID.value) {\n    return E.left({\n      success: false,\n    })\n  }\n\n  const transformedCollection = collections.map((collection) =>\n    translateToTeamCollectionFormat(collection)\n  )\n\n  const res = await toTeamsImporter(\n    JSON.stringify(transformedCollection),\n    selectedTeamID.value\n  )()\n\n  return E.isRight(res)\n    ? E.right({ success: true })\n    : E.left({\n        success: false,\n      })\n}\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): () => void\n}>()\n\nconst isHoppMyCollectionExporterInProgress = ref(false)\nconst isHoppTeamCollectionExporterInProgress = ref(false)\nconst isHoppGistCollectionExporterInProgress = ref(false)\n\nconst isTeamWorkspace = computed(() => {\n  return props.collectionsType.type === \"team-collections\"\n})\n\nconst HoppRESTImporter: ImporterOrExporter = {\n  metadata: {\n    id: \"hopp_rest\",\n    name: \"import.from_json\",\n    title: \"import.from_json_description\",\n    icon: IconFolderPlus,\n    disabled: false,\n    applicableTo: [\"personal-workspace\", \"team-workspace\", \"url-import\"],\n  },\n  component: FileSource({\n    caption: \"import.from_file\",\n    acceptedFileTypes: \".json\",\n    onImportFromFile: async (content) => {\n      const res = await hoppRESTImporter(content)()\n\n      if (E.isRight(res)) {\n        handleImportToStore(res.right)\n\n        platform.analytics?.logEvent({\n          type: \"HOPP_IMPORT_COLLECTION\",\n          importer: \"import.from_json\",\n          platform: \"rest\",\n          workspaceType: isTeamWorkspace.value ? \"team\" : \"personal\",\n        })\n      } else {\n        showImportFailedError()\n      }\n    },\n  }),\n}\n\nconst HoppMyCollectionImporter: ImporterOrExporter = {\n  metadata: {\n    id: \"hopp_my_collection\",\n    name: \"import.from_my_collections\",\n    title: \"import.from_my_collections_description\",\n    icon: IconUser,\n    disabled: false,\n    applicableTo: [\"team-workspace\"],\n  },\n  component: defineStep(\"my_collection_import\", MyCollectionImport, () => ({\n    async onImportFromMyCollection(content) {\n      handleImportToStore([content])\n\n      // our analytics consider this as an export event, so keeping compatibility with that\n      platform.analytics?.logEvent({\n        type: \"HOPP_EXPORT_COLLECTION\",\n        exporter: \"import_to_teams\",\n        platform: \"rest\",\n      })\n    },\n  })),\n}\n\nconst HoppOpenAPIImporter: ImporterOrExporter = {\n  metadata: {\n    id: \"hopp_openapi\",\n    name: \"import.from_openapi\",\n    title: \"import.from_openapi_description\",\n    icon: IconOpenAPI,\n    disabled: false,\n    applicableTo: [\"personal-workspace\", \"team-workspace\", \"url-import\"],\n  },\n  supported_sources: [\n    {\n      id: \"file_import\",\n      name: \"import.from_file\",\n      icon: IconFile,\n      step: FileSource({\n        caption: \"import.from_file\",\n        acceptedFileTypes: \".json, .yaml, .yml\",\n        onImportFromFile: async (content) => {\n          const res = await hoppOpenAPIImporter(content)()\n\n          if (E.isRight(res)) {\n            handleImportToStore(res.right)\n\n            platform.analytics?.logEvent({\n              platform: \"rest\",\n              type: \"HOPP_IMPORT_COLLECTION\",\n              importer: \"import.from_openapi\",\n              workspaceType: isTeamWorkspace.value ? \"team\" : \"personal\",\n            })\n          } else {\n            showImportFailedError()\n          }\n        },\n      }),\n    },\n    {\n      id: \"url_import\",\n      name: \"import.from_url\",\n      icon: IconLink,\n      step: UrlSource({\n        caption: \"import.from_url\",\n        onImportFromURL: async (content) => {\n          const res = await hoppOpenAPIImporter([content])()\n\n          if (E.isRight(res)) {\n            handleImportToStore(res.right)\n\n            platform.analytics?.logEvent({\n              platform: \"rest\",\n              type: \"HOPP_IMPORT_COLLECTION\",\n              importer: \"import.from_openapi\",\n              workspaceType: isTeamWorkspace.value ? \"team\" : \"personal\",\n            })\n          } else {\n            showImportFailedError()\n          }\n        },\n      }),\n    },\n  ],\n}\n\nconst HoppPostmanImporter: ImporterOrExporter = {\n  metadata: {\n    id: \"hopp_postman\",\n    name: \"import.from_postman\",\n    title: \"import.from_postman_description\",\n    icon: IconPostman,\n    disabled: false,\n    applicableTo: [\"personal-workspace\", \"team-workspace\", \"url-import\"],\n  },\n  component: FileSource({\n    caption: \"import.from_file\",\n    acceptedFileTypes: \".json\",\n    onImportFromFile: async (content) => {\n      const res = await hoppPostmanImporter(content)()\n\n      if (E.isRight(res)) {\n        handleImportToStore(res.right)\n\n        platform.analytics?.logEvent({\n          platform: \"rest\",\n          type: \"HOPP_IMPORT_COLLECTION\",\n          importer: \"import.from_postman\",\n          workspaceType: isTeamWorkspace.value ? \"team\" : \"personal\",\n        })\n      } else {\n        showImportFailedError()\n      }\n    },\n  }),\n}\n\nconst HoppInsomniaImporter: ImporterOrExporter = {\n  metadata: {\n    id: \"hopp_insomnia\",\n    name: \"import.from_insomnia\",\n    title: \"import.from_insomnia_description\",\n    icon: IconInsomnia,\n    disabled: true,\n    applicableTo: [\"personal-workspace\", \"team-workspace\", \"url-import\"],\n  },\n  component: FileSource({\n    caption: \"import.from_file\",\n    acceptedFileTypes: \".json\",\n    onImportFromFile: async (content) => {\n      const res = await hoppInsomniaImporter(content)()\n\n      if (E.isRight(res)) {\n        handleImportToStore(res.right)\n\n        platform.analytics?.logEvent({\n          platform: \"rest\",\n          type: \"HOPP_IMPORT_COLLECTION\",\n          importer: \"import.from_insomnia\",\n          workspaceType: isTeamWorkspace.value ? \"team\" : \"personal\",\n        })\n      } else {\n        showImportFailedError()\n      }\n    },\n  }),\n}\n\nconst HoppGistImporter: ImporterOrExporter = {\n  metadata: {\n    id: \"hopp_gist\",\n    name: \"import.from_gist\",\n    title: \"import.from_gist_description\",\n    icon: IconGithub,\n    disabled: true,\n    applicableTo: [\"personal-workspace\", \"team-workspace\", \"url-import\"],\n  },\n  component: GistSource({\n    caption: \"import.from_url\",\n    onImportFromGist: async (content) => {\n      if (E.isLeft(content)) {\n        showImportFailedError()\n        return\n      }\n\n      const res = await hoppRESTImporter(content.right)()\n\n      if (E.isRight(res)) {\n        handleImportToStore(res.right)\n\n        platform.analytics?.logEvent({\n          platform: \"rest\",\n          type: \"HOPP_IMPORT_COLLECTION\",\n          importer: \"import.from_gist\",\n          workspaceType: isTeamWorkspace.value ? \"team\" : \"personal\",\n        })\n      } else {\n        showImportFailedError()\n      }\n    },\n  }),\n}\n\nconst HoppMyCollectionsExporter: ImporterOrExporter = {\n  metadata: {\n    id: \"hopp_my_collections\",\n    name: \"export.as_json\",\n    title: \"action.download_file\",\n    icon: IconUser,\n    disabled: false,\n    applicableTo: [\"personal-workspace\"],\n    isLoading: isHoppMyCollectionExporterInProgress,\n  },\n  action: () => {\n    if (!myCollections.value.length) {\n      return toast.error(t(\"error.no_collections_to_export\"))\n    }\n\n    isHoppMyCollectionExporterInProgress.value = true\n\n    const message = initializeDownloadCollection(\n      myCollectionsExporter(myCollections.value),\n      \"Collections\"\n    )\n\n    if (E.isRight(message)) {\n      toast.success(t(message.right))\n\n      platform.analytics?.logEvent({\n        type: \"HOPP_EXPORT_COLLECTION\",\n        exporter: \"json\",\n        platform: \"rest\",\n      })\n    }\n\n    isHoppMyCollectionExporterInProgress.value = false\n  },\n}\n\nconst HoppTeamCollectionsExporter: ImporterOrExporter = {\n  metadata: {\n    id: \"hopp_team_collections\",\n    name: \"export.as_json\",\n    title: \"export.as_json_description\",\n    icon: IconUser,\n    disabled: false,\n    applicableTo: [\"team-workspace\"],\n    isLoading: isHoppTeamCollectionExporterInProgress,\n  },\n  action: async () => {\n    isHoppTeamCollectionExporterInProgress.value = true\n    if (\n      props.collectionsType.type === \"team-collections\" &&\n      props.collectionsType.selectedTeam\n    ) {\n      const res = await teamCollectionsExporter(\n        props.collectionsType.selectedTeam.teamID\n      )\n\n      if (E.isRight(res)) {\n        const { exportCollectionsToJSON } = res.right\n\n        if (!JSON.parse(exportCollectionsToJSON).length) {\n          isHoppTeamCollectionExporterInProgress.value = false\n\n          return toast.error(t(\"error.no_collections_to_export\"))\n        }\n\n        initializeDownloadCollection(\n          exportCollectionsToJSON,\n          \"team-collections\"\n        )\n\n        platform.analytics?.logEvent({\n          type: \"HOPP_EXPORT_COLLECTION\",\n          exporter: \"json\",\n          platform: \"rest\",\n        })\n      } else {\n        toast.error(res.left.error.toString())\n      }\n    }\n\n    isHoppTeamCollectionExporterInProgress.value = false\n  },\n}\n\nconst HoppGistCollectionsExporter: ImporterOrExporter = {\n  metadata: {\n    id: \"create_secret_gist\",\n    name: \"export.create_secret_gist\",\n    icon: IconGithub,\n    disabled: !currentUser.value\n      ? true\n      : currentUser.value?.provider !== \"github.com\",\n    title:\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      currentUser?.value?.provider === \"github.com\"\n        ? \"export.create_secret_gist_tooltip_text\"\n        : \"export.require_github\",\n    applicableTo: [\"personal-workspace\", \"team-workspace\"],\n    isLoading: isHoppGistCollectionExporterInProgress,\n  },\n  action: async () => {\n    isHoppGistCollectionExporterInProgress.value = true\n\n    const collectionJSON = await getCollectionJSON()\n    const accessToken = currentUser.value?.accessToken\n\n    if (!accessToken) {\n      toast.error(t(\"error.something_went_wrong\"))\n      isHoppGistCollectionExporterInProgress.value = false\n      return\n    }\n\n    if (E.isRight(collectionJSON)) {\n      if (!JSON.parse(collectionJSON.right).length) {\n        isHoppGistCollectionExporterInProgress.value = false\n        return toast.error(t(\"error.no_collections_to_export\"))\n      }\n\n      const res = await gistExporter(collectionJSON.right, accessToken)\n\n      if (E.isLeft(res)) {\n        toast.error(t(\"export.failed\"))\n        return\n      }\n\n      toast.success(t(\"export.secret_gist_success\"))\n\n      platform.analytics?.logEvent({\n        type: \"HOPP_EXPORT_COLLECTION\",\n        exporter: \"gist\",\n        platform: \"rest\",\n      })\n\n      platform.io.openExternalLink(res.right)\n    }\n\n    isHoppGistCollectionExporterInProgress.value = false\n  },\n}\n\nconst importerModules = computed(() => {\n  const enabledImporters = [\n    HoppRESTImporter,\n    HoppMyCollectionImporter,\n    HoppOpenAPIImporter,\n    HoppPostmanImporter,\n    HoppInsomniaImporter,\n    HoppGistImporter,\n  ]\n\n  const isTeams = props.collectionsType.type === \"team-collections\"\n\n  return enabledImporters.filter((importer) => {\n    return isTeams\n      ? importer.metadata.applicableTo.includes(\"team-workspace\")\n      : importer.metadata.applicableTo.includes(\"personal-workspace\")\n  })\n})\n\nconst exporterModules = computed(() => {\n  const enabledExporters = [\n    HoppMyCollectionsExporter,\n    HoppTeamCollectionsExporter,\n  ]\n\n  if (platform.platformFeatureFlags.exportAsGIST) {\n    enabledExporters.push(HoppGistCollectionsExporter)\n  }\n\n  return enabledExporters.filter((exporter) => {\n    return exporter.metadata.applicableTo.includes(\n      props.collectionsType.type === \"my-collections\"\n        ? \"personal-workspace\"\n        : \"team-workspace\"\n    )\n  })\n})\n\nconst hasTeamWriteAccess = computed(() => {\n  const { collectionsType } = props\n\n  const isTeamCollection = collectionsType.type === \"team-collections\"\n\n  if (!isTeamCollection || !collectionsType.selectedTeam) {\n    return false\n  }\n\n  return (\n    collectionsType.selectedTeam.role === \"EDITOR\" ||\n    collectionsType.selectedTeam.role === \"OWNER\"\n  )\n})\n\nconst selectedTeamID = computed(() => {\n  const { collectionsType } = props\n\n  return collectionsType.type === \"team-collections\"\n    ? collectionsType.selectedTeam?.teamID\n    : undefined\n})\n\nconst getCollectionJSON = async () => {\n  if (\n    props.collectionsType.type === \"team-collections\" &&\n    props.collectionsType.selectedTeam?.teamID\n  ) {\n    const res = await getTeamCollectionJSON(\n      props.collectionsType.selectedTeam?.teamID\n    )\n\n    return E.isRight(res)\n      ? E.right(res.right.exportCollectionsToJSON)\n      : E.left(res.left)\n  }\n\n  if (props.collectionsType.type === \"my-collections\") {\n    return E.right(JSON.stringify(myCollections.value, null, 2))\n  }\n\n  return E.left(\"INVALID_SELECTED_TEAM_OR_INVALID_COLLECTION_TYPE\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('modal.edit_request')\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"editingName\"\n        placeholder=\" \"\n        :label=\"t('action.label')\"\n        input-styles=\"floating-input\"\n        @submit=\"editRequest\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"editRequest\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { useVModel } from \"@vueuse/core\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n    modelValue?: string\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n    modelValue: \"\",\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"submit\", name: string): void\n  (e: \"hide-modal\"): void\n  (e: \"update:modelValue\", value: string): void\n}>()\n\nconst editingName = useVModel(props, \"modelValue\")\n\nconst editRequest = () => {\n  if (editingName.value.trim() === \"\") {\n    toast.error(t(\"request.invalid_name\"))\n    return\n  }\n\n  emit(\"submit\", editingName.value)\n}\n\nconst hideModal = () => {\n  editingName.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('folder.edit')\"\n    @close=\"emit('hide-modal')\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"editingName\"\n        placeholder=\" \"\n        :label=\"t('action.label')\"\n        input-styles=\"floating-input\"\n        @submit=\"editFolder\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"editFolder\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n    editingFolderName: string\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n    editingFolderName: \"\",\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"submit\", name: string): void\n  (e: \"hide-modal\"): void\n}>()\n\nconst editingName = ref(\"\")\n\nwatch(\n  () => props.editingFolderName,\n  (newName) => {\n    editingName.value = newName\n  }\n)\n\nconst editFolder = () => {\n  if (editingName.value.trim() === \"\") {\n    toast.error(t(\"folder.invalid_name\"))\n    return\n  }\n\n  emit(\"submit\", editingName.value)\n}\n\nconst hideModal = () => {\n  editingName.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('collection.edit')\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"editingName\"\n        placeholder=\" \"\n        input-styles=\"floating-input\"\n        :label=\"t('action.label')\"\n        @submit=\"saveCollection\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"saveCollection\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n    editingCollectionName: string\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n    editingCollectionName: \"\",\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"submit\", name: string): void\n  (e: \"hide-modal\"): void\n}>()\n\nconst editingName = ref(\"\")\n\nwatch(\n  () => props.editingCollectionName,\n  (newName) => {\n    editingName.value = newName\n  }\n)\n\nconst saveCollection = () => {\n  if (editingName.value.trim() === \"\") {\n    toast.error(t(\"collection.invalid_name\"))\n    return\n  }\n\n  emit(\"submit\", editingName.value)\n}\n\nconst hideModal = () => {\n  editingName.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('folder.new')\"\n    @close=\"emit('hide-modal')\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"editingName\"\n        placeholder=\" \"\n        input-styles=\"floating-input\"\n        :label=\"t('action.label')\"\n        @submit=\"addFolder\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"addFolder\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n  (e: \"add-folder\", name: string): void\n}>()\n\nconst editingName = ref(\"\")\n\nwatch(\n  () => props.show,\n  (show) => {\n    if (!show) {\n      editingName.value = \"\"\n    }\n  }\n)\n\nconst addFolder = () => {\n  if (editingName.value.trim() === \"\") {\n    toast.error(t(\"folder.invalid_name\"))\n    return\n  }\n  emit(\"add-folder\", editingName.value)\n}\n\nconst hideModal = () => {\n  editingName.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('request.new')\"\n    @close=\"$emit('hide-modal')\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"editingName\"\n        placeholder=\" \"\n        :label=\"t('action.label')\"\n        input-styles=\"floating-input\"\n        @submit=\"addRequest\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"addRequest\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { useService } from \"dioc/vue\"\nimport { RESTTabService } from \"~/services/tab/rest\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n  }\n)\n\nconst emit = defineEmits<{\n  (event: \"hide-modal\"): void\n  (event: \"add-request\", name: string): void\n}>()\n\nconst editingName = ref(\"\")\n\nconst tabs = useService(RESTTabService)\nwatch(\n  () => props.show,\n  (show) => {\n    if (show) {\n      editingName.value = tabs.currentActiveTab.value.document.request.name\n    }\n  }\n)\n\nconst addRequest = () => {\n  if (editingName.value.trim() === \"\") {\n    toast.error(`${t(\"error.empty_req_name\")}`)\n    return\n  }\n  emit(\"add-request\", editingName.value)\n}\n\nconst hideModal = () => {\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('collection.new')\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"editingName\"\n        placeholder=\" \"\n        :label=\"t('action.label')\"\n        input-styles=\"floating-input\"\n        @submit=\"addNewCollection\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          :loading=\"loadingState\"\n          outline\n          @click=\"addNewCollection\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { watch, ref } from \"vue\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    loadingState: boolean\n  }>(),\n  {\n    show: false,\n    loadingState: false,\n  }\n)\n\nconst emit = defineEmits<{\n  (e: \"submit\", name: string): void\n  (e: \"hide-modal\"): void\n}>()\n\nconst editingName = ref(\"\")\n\nwatch(\n  () => props.show,\n  (show) => {\n    if (!show) {\n      editingName.value = \"\"\n    }\n  }\n)\n\nconst addNewCollection = () => {\n  if (!editingName.value) {\n    toast.error(t(\"collection.invalid_name\"))\n    return\n  }\n\n  emit(\"submit\", editingName.value)\n}\n\nconst hideModal = () => {\n  editingName.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","import { distinctUntilChanged, pluck } from \"rxjs\"\nimport DispatchingStore, { defineDispatchers } from \"./DispatchingStore\"\n\ntype ReorderingItem =\n  | { type: \"collection\"; id: string; parentID: string | null }\n  | { type: \"request\"; id: string; parentID: string | null }\n\ntype CurrentReorderingState = {\n  currentReorderingItem: ReorderingItem\n}\n\nconst initialState: CurrentReorderingState = {\n  currentReorderingItem: {\n    type: \"collection\",\n    id: \"\",\n    parentID: \"\",\n  },\n}\n\nconst dispatchers = defineDispatchers({\n  changeCurrentReorderStatus(\n    _,\n    { reorderItem }: { reorderItem: ReorderingItem }\n  ) {\n    return {\n      currentReorderingItem: reorderItem,\n    }\n  },\n})\n\nexport const currentReorderStore = new DispatchingStore(\n  initialState,\n  dispatchers\n)\n\nexport const currentReorderingStatus$ = currentReorderStore.subject$.pipe(\n  pluck(\"currentReorderingItem\"),\n  distinctUntilChanged()\n)\n\nexport function changeCurrentReorderStatus(reorderItem: ReorderingItem) {\n  currentReorderStore.dispatch({\n    dispatcher: \"changeCurrentReorderStatus\",\n    payload: { reorderItem },\n  })\n}\n","<template>\n  <div class=\"flex flex-col\">\n    <div\n      class=\"h-1 w-full transition\"\n      :class=\"[\n        {\n          'bg-accentDark': isReorderable,\n        },\n      ]\"\n      @drop=\"updateRequestOrder\"\n      @dragover.prevent=\"ordering = true\"\n      @dragleave=\"resetDragState\"\n      @dragend=\"resetDragState\"\n    ></div>\n    <div\n      class=\"group flex items-stretch\"\n      :draggable=\"!hasNoTeamAccess\"\n      @drop=\"handelDrop\"\n      @dragstart=\"dragStart\"\n      @dragover=\"handleDragOver($event)\"\n      @dragleave=\"resetDragState\"\n      @dragend=\"resetDragState\"\n      @contextmenu.prevent=\"options?.tippy.show()\"\n    >\n      <div\n        class=\"pointer-events-auto flex min-w-0 flex-1 cursor-pointer items-center justify-center\"\n        @click=\"selectRequest()\"\n      >\n        <span\n          class=\"pointer-events-none flex w-16 items-center justify-center truncate px-2\"\n          :style=\"{ color: getMethodLabelColorClassOf(request) }\"\n        >\n          <component\n            :is=\"IconCheckCircle\"\n            v-if=\"isSelected\"\n            class=\"svg-icons\"\n            :class=\"{ 'text-accent': isSelected }\"\n          />\n          <HoppSmartSpinner v-else-if=\"isRequestLoading\" />\n          <span v-else class=\"truncate text-tiny font-semibold\">\n            {{ request.method }}\n          </span>\n        </span>\n        <span\n          class=\"pointer-events-none flex min-w-0 flex-1 items-center py-2 pr-2 transition group-hover:text-secondaryDark\"\n        >\n          <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n            {{ request.name }}\n          </span>\n          <span\n            v-if=\"isActive\"\n            v-tippy=\"{ theme: 'tooltip' }\"\n            class=\"relative mx-3 flex h-1.5 w-1.5 flex-shrink-0\"\n            :title=\"`${t('collection.request_in_use')}`\"\n          >\n            <span\n              class=\"absolute inline-flex h-full w-full flex-shrink-0 animate-ping rounded-full bg-green-500 opacity-75\"\n            >\n            </span>\n            <span\n              class=\"relative inline-flex h-1.5 w-1.5 flex-shrink-0 rounded-full bg-green-500\"\n            ></span>\n          </span>\n        </span>\n      </div>\n      <div v-if=\"!hasNoTeamAccess\" class=\"flex\">\n        <HoppButtonSecondary\n          v-if=\"!saveRequest\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconRotateCCW\"\n          :title=\"t('action.restore')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"selectRequest()\"\n        />\n        <span>\n          <tippy\n            ref=\"options\"\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => tippyActions!.focus()\"\n          >\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.more')\"\n              :icon=\"IconMoreVertical\"\n            />\n            <template #content=\"{ hide }\">\n              <div\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n                tabindex=\"0\"\n                @keyup.e=\"edit?.$el.click()\"\n                @keyup.d=\"duplicate?.$el.click()\"\n                @keyup.delete=\"deleteAction?.$el.click()\"\n                @keyup.s=\"shareAction?.$el.click()\"\n                @keyup.escape=\"hide()\"\n              >\n                <HoppSmartItem\n                  ref=\"edit\"\n                  :icon=\"IconEdit\"\n                  :label=\"t('action.edit')\"\n                  :shortcut=\"['E']\"\n                  @click=\"\n                    () => {\n                      emit('edit-request')\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"duplicate\"\n                  :icon=\"IconCopy\"\n                  :label=\"t('action.duplicate')\"\n                  :loading=\"duplicateLoading\"\n                  :shortcut=\"['D']\"\n                  @click=\"\n                    () => {\n                      emit('duplicate-request'),\n                        collectionsType === 'my-collections' ? hide() : null\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"deleteAction\"\n                  :icon=\"IconTrash2\"\n                  :label=\"t('action.delete')\"\n                  :shortcut=\"['⌫']\"\n                  @click=\"\n                    () => {\n                      emit('remove-request')\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"shareAction\"\n                  :icon=\"IconShare2\"\n                  :label=\"t('action.share')\"\n                  :shortcut=\"['S']\"\n                  @click=\"\n                    () => {\n                      emit('share-request')\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n            </template>\n          </tippy>\n        </span>\n      </div>\n    </div>\n    <div\n      class=\"w-full transition\"\n      :class=\"[\n        {\n          'bg-accentDark': isLastItemReorderable,\n          'h-1 ': isLastItem,\n        },\n      ]\"\n      @drop=\"handelDrop\"\n      @dragover.prevent=\"orderingLastItem = true\"\n      @dragleave=\"resetDragState\"\n      @dragend=\"resetDragState\"\n    ></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconRotateCCW from \"~icons/lucide/rotate-ccw\"\nimport IconShare2 from \"~icons/lucide/share-2\"\nimport { ref, PropType, watch, computed } from \"vue\"\nimport { HoppRESTRequest } from \"@hoppscotch/data\"\nimport { useI18n } from \"@composables/i18n\"\nimport { TippyComponent } from \"vue-tippy\"\nimport {\n  changeCurrentReorderStatus,\n  currentReorderingStatus$,\n} from \"~/newstore/reordering\"\nimport { useReadonlyStream } from \"~/composables/stream\"\nimport { getMethodLabelColorClassOf } from \"~/helpers/rest/labelColoring\"\n\ntype CollectionType = \"my-collections\" | \"team-collections\"\n\nconst t = useI18n()\n\nconst props = defineProps({\n  request: {\n    type: Object as PropType<HoppRESTRequest>,\n    default: () => ({}),\n    required: true,\n  },\n  requestID: {\n    type: String,\n    default: \"\",\n    required: false,\n  },\n  parentID: {\n    type: String as PropType<string | null>,\n    default: null,\n    required: true,\n  },\n  collectionsType: {\n    type: String as PropType<CollectionType>,\n    default: \"my-collections\",\n    required: true,\n  },\n  duplicateLoading: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  saveRequest: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  isActive: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  hasNoTeamAccess: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  isSelected: {\n    type: Boolean as PropType<boolean | null>,\n    default: false,\n    required: false,\n  },\n  requestMoveLoading: {\n    type: Array as PropType<string[]>,\n    default: () => [],\n    required: false,\n  },\n  isLastItem: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n})\n\nconst emit = defineEmits<{\n  (event: \"edit-request\"): void\n  (event: \"duplicate-request\"): void\n  (event: \"remove-request\"): void\n  (event: \"select-request\"): void\n  (event: \"share-request\"): void\n  (event: \"drag-request\", payload: DataTransfer): void\n  (event: \"update-request-order\", payload: DataTransfer): void\n  (event: \"update-last-request-order\", payload: DataTransfer): void\n}>()\n\nconst tippyActions = ref<TippyComponent | null>(null)\nconst edit = ref<HTMLButtonElement | null>(null)\nconst deleteAction = ref<HTMLButtonElement | null>(null)\nconst options = ref<TippyComponent | null>(null)\nconst duplicate = ref<HTMLButtonElement | null>(null)\nconst shareAction = ref<HTMLButtonElement | null>(null)\n\nconst dragging = ref(false)\nconst ordering = ref(false)\nconst orderingLastItem = ref(false)\n\nconst currentReorderingStatus = useReadonlyStream(currentReorderingStatus$, {\n  type: \"collection\",\n  id: \"\",\n  parentID: \"\",\n})\n\nwatch(\n  () => props.duplicateLoading,\n  (val) => {\n    if (!val) {\n      options.value!.tippy.hide()\n    }\n  }\n)\n\nconst selectRequest = () => {\n  emit(\"select-request\")\n}\n\nconst dragStart = ({ dataTransfer }: DragEvent) => {\n  if (dataTransfer) {\n    emit(\"drag-request\", dataTransfer)\n    dragging.value = !dragging.value\n    changeCurrentReorderStatus({\n      type: \"request\",\n      id: props.requestID,\n      parentID: props.parentID,\n    })\n  }\n}\n\nconst isSameRequest = computed(() => {\n  return currentReorderingStatus.value.id === props.requestID\n})\n\nconst isCollectionDragging = computed(() => {\n  return currentReorderingStatus.value.type === \"collection\"\n})\n\nconst isSameParent = computed(() => {\n  return currentReorderingStatus.value.parentID === props.parentID\n})\n\nconst isReorderable = computed(() => {\n  return (\n    ordering.value &&\n    !isCollectionDragging.value &&\n    isSameParent.value &&\n    !isSameRequest.value\n  )\n})\n\nconst isLastItemReorderable = computed(() => {\n  return (\n    orderingLastItem.value && isSameParent.value && !isCollectionDragging.value\n  )\n})\n\n// Trigger the re-ordering event when a request is dragged over another request's top section\nconst handleDragOver = (e: DragEvent) => {\n  dragging.value = true\n  if (e.offsetY < 10) {\n    ordering.value = true\n    dragging.value = false\n    orderingLastItem.value = false\n  } else if (e.offsetY > 18) {\n    orderingLastItem.value = true\n    dragging.value = false\n    ordering.value = false\n  } else {\n    ordering.value = false\n    orderingLastItem.value = false\n  }\n}\n\nconst handelDrop = (e: DragEvent) => {\n  if (ordering.value) {\n    updateRequestOrder(e)\n  } else if (orderingLastItem.value) {\n    updateLastItemOrder(e)\n  } else {\n    updateRequestOrder(e)\n  }\n}\n\nconst updateRequestOrder = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    resetDragState()\n    emit(\"update-request-order\", e.dataTransfer)\n  }\n}\n\nconst updateLastItemOrder = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    resetDragState()\n    emit(\"update-last-request-order\", e.dataTransfer)\n  }\n}\n\nconst isRequestLoading = computed(() => {\n  if (props.requestMoveLoading.length > 0 && props.requestID) {\n    return props.requestMoveLoading.includes(props.requestID)\n  }\n  return false\n})\n\nconst resetDragState = () => {\n  dragging.value = false\n  ordering.value = false\n  orderingLastItem.value = false\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\">\n    <div\n      class=\"h-1 w-full transition\"\n      :class=\"[\n        {\n          'bg-accentDark': isReorderable,\n        },\n      ]\"\n      @drop=\"orderUpdateCollectionEvent\"\n      @dragover.prevent=\"ordering = true\"\n      @dragleave=\"ordering = false\"\n      @dragend=\"resetDragState\"\n    ></div>\n    <div class=\"relative flex flex-col\">\n      <div\n        class=\"z-[1] pointer-events-none absolute inset-0 bg-accent opacity-0 transition\"\n        :class=\"{\n          'opacity-25':\n            dragging && notSameDestination && notSameParentDestination,\n        }\"\n      ></div>\n      <div\n        class=\"z-[3] group pointer-events-auto relative flex cursor-pointer items-stretch\"\n        :draggable=\"!hasNoTeamAccess\"\n        @dragstart=\"dragStart\"\n        @drop=\"handelDrop($event)\"\n        @dragover=\"handleDragOver($event)\"\n        @dragleave=\"resetDragState\"\n        @dragend=\"\n          () => {\n            resetDragState()\n            dropItemID = ''\n          }\n        \"\n        @contextmenu.prevent=\"options?.tippy?.show()\"\n      >\n        <div\n          class=\"flex min-w-0 flex-1 items-center justify-center\"\n          @click=\"emit('toggle-children')\"\n        >\n          <span\n            class=\"pointer-events-none flex items-center justify-center px-4\"\n          >\n            <HoppSmartSpinner v-if=\"isCollLoading\" />\n            <component\n              :is=\"collectionIcon\"\n              v-else\n              class=\"svg-icons\"\n              :class=\"{ 'text-accent': isSelected }\"\n            />\n          </span>\n          <span\n            class=\"pointer-events-none flex min-w-0 flex-1 py-2 pr-2 transition group-hover:text-secondaryDark\"\n          >\n            <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n              {{ collectionName }}\n            </span>\n          </span>\n        </div>\n        <div v-if=\"!hasNoTeamAccess\" class=\"flex\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :icon=\"IconFilePlus\"\n            :title=\"t('request.new')\"\n            class=\"hidden group-hover:inline-flex\"\n            @click=\"emit('add-request')\"\n          />\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :icon=\"IconFolderPlus\"\n            :title=\"t('folder.new')\"\n            class=\"hidden group-hover:inline-flex\"\n            @click=\"emit('add-folder')\"\n          />\n          <HoppButtonSecondary\n            v-if=\"collectionsType === 'team-collections'\"\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :icon=\"IconPlaySquare\"\n            :title=\"t('collection_runner.run_collection')\"\n            class=\"hidden group-hover:inline-flex\"\n            @click=\"emit('run-collection', props.id)\"\n          />\n          <span>\n            <tippy\n              ref=\"options\"\n              interactive\n              trigger=\"click\"\n              theme=\"popover\"\n              :on-shown=\"() => tippyActions!.focus()\"\n            >\n              <HoppButtonSecondary\n                v-tippy=\"{ theme: 'tooltip' }\"\n                :title=\"t('action.more')\"\n                :icon=\"IconMoreVertical\"\n              />\n              <template #content=\"{ hide }\">\n                <div\n                  ref=\"tippyActions\"\n                  class=\"flex flex-col focus:outline-none\"\n                  tabindex=\"0\"\n                  @keyup.r=\"requestAction?.$el.click()\"\n                  @keyup.n=\"folderAction?.$el.click()\"\n                  @keyup.e=\"edit?.$el.click()\"\n                  @keyup.delete=\"deleteAction?.$el.click()\"\n                  @keyup.x=\"exportAction?.$el.click()\"\n                  @keyup.p=\"propertiesAction?.$el.click()\"\n                  @keyup.t=\"runCollectionAction?.$el.click()\"\n                  @keyup.escape=\"hide()\"\n                >\n                  <HoppSmartItem\n                    ref=\"requestAction\"\n                    :icon=\"IconFilePlus\"\n                    :label=\"t('request.new')\"\n                    :shortcut=\"['R']\"\n                    @click=\"\n                      () => {\n                        emit('add-request')\n                        hide()\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    ref=\"folderAction\"\n                    :icon=\"IconFolderPlus\"\n                    :label=\"t('folder.new')\"\n                    :shortcut=\"['N']\"\n                    @click=\"\n                      () => {\n                        emit('add-folder')\n                        hide()\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    ref=\"edit\"\n                    :icon=\"IconEdit\"\n                    :label=\"t('action.edit')\"\n                    :shortcut=\"['E']\"\n                    @click=\"\n                      () => {\n                        emit('edit-collection')\n                        hide()\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    ref=\"exportAction\"\n                    :icon=\"IconDownload\"\n                    :label=\"t('export.title')\"\n                    :shortcut=\"['X']\"\n                    :loading=\"exportLoading\"\n                    @click=\"\n                      () => {\n                        emit('export-data'),\n                          collectionsType === 'my-collections' ? hide() : null\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    ref=\"deleteAction\"\n                    :icon=\"IconTrash2\"\n                    :label=\"t('action.delete')\"\n                    :shortcut=\"['⌫']\"\n                    @click=\"\n                      () => {\n                        emit('remove-collection')\n                        hide()\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    ref=\"propertiesAction\"\n                    :icon=\"IconSettings2\"\n                    :label=\"t('action.properties')\"\n                    :shortcut=\"['P']\"\n                    @click=\"\n                      () => {\n                        emit('edit-properties')\n                        hide()\n                      }\n                    \"\n                  />\n                  <HoppSmartItem\n                    v-if=\"collectionsType === 'team-collections'\"\n                    ref=\"runCollectionAction\"\n                    :icon=\"IconPlaySquare\"\n                    :label=\"t('collection_runner.run_collection')\"\n                    :shortcut=\"['T']\"\n                    @click=\"\n                      () => {\n                        emit('run-collection', props.id)\n                        hide()\n                      }\n                    \"\n                  />\n                </div>\n              </template>\n            </tippy>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div\n      v-if=\"isLastItem\"\n      class=\"w-full transition\"\n      :class=\"[\n        {\n          'bg-accentDark': isLastItemReorderable,\n          'h-1 ': isLastItem,\n        },\n      ]\"\n      @drop=\"updateLastItemOrder\"\n      @dragover.prevent=\"orderingLastItem = true\"\n      @dragleave=\"orderingLastItem = false\"\n      @dragend=\"resetDragState\"\n    ></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { HoppCollection } from \"@hoppscotch/data\"\nimport { computed, ref, watch } from \"vue\"\nimport { TippyComponent } from \"vue-tippy\"\nimport { useReadonlyStream } from \"~/composables/stream\"\nimport { TeamCollection } from \"~/helpers/teams/TeamCollection\"\nimport {\n  changeCurrentReorderStatus,\n  currentReorderingStatus$,\n} from \"~/newstore/reordering\"\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconDownload from \"~icons/lucide/download\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconFilePlus from \"~icons/lucide/file-plus\"\nimport IconFolder from \"~icons/lucide/folder\"\nimport IconFolderOpen from \"~icons/lucide/folder-open\"\nimport IconFolderPlus from \"~icons/lucide/folder-plus\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconPlaySquare from \"~icons/lucide/play-square\"\nimport IconSettings2 from \"~icons/lucide/settings-2\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\n\ntype CollectionType = \"my-collections\" | \"team-collections\"\ntype FolderType = \"collection\" | \"folder\"\n\nconst t = useI18n()\n\nconst props = withDefaults(\n  defineProps<{\n    id: string\n    parentID?: string | null\n    data: HoppCollection | TeamCollection\n    /**\n     * Collection component can be used for both collections and folders.\n     * folderType is used to determine which one it is.\n     */\n    collectionsType: CollectionType\n    folderType: FolderType\n    isOpen: boolean\n    isSelected?: boolean | null\n    exportLoading?: boolean\n    hasNoTeamAccess?: boolean\n    collectionMoveLoading?: string[]\n    isLastItem?: boolean\n  }>(),\n  {\n    id: \"\",\n    parentID: null,\n    collectionsType: \"my-collections\",\n    folderType: \"collection\",\n    isOpen: false,\n    isSelected: false,\n    exportLoading: false,\n    hasNoTeamAccess: false,\n    isLastItem: false,\n  }\n)\n\nconst emit = defineEmits<{\n  (event: \"toggle-children\"): void\n  (event: \"add-request\"): void\n  (event: \"add-folder\"): void\n  (event: \"edit-collection\"): void\n  (event: \"edit-properties\"): void\n  (event: \"export-data\"): void\n  (event: \"remove-collection\"): void\n  (event: \"drop-event\", payload: DataTransfer): void\n  (event: \"drag-event\", payload: DataTransfer): void\n  (event: \"dragging\", payload: boolean): void\n  (event: \"update-collection-order\", payload: DataTransfer): void\n  (event: \"update-last-collection-order\", payload: DataTransfer): void\n  (event: \"run-collection\", collectionID: string): void\n}>()\n\nconst tippyActions = ref<HTMLDivElement | null>(null)\nconst requestAction = ref<HTMLButtonElement | null>(null)\nconst folderAction = ref<HTMLButtonElement | null>(null)\nconst edit = ref<HTMLButtonElement | null>(null)\nconst deleteAction = ref<HTMLButtonElement | null>(null)\nconst exportAction = ref<HTMLButtonElement | null>(null)\nconst options = ref<TippyComponent | null>(null)\nconst propertiesAction = ref<HTMLButtonElement | null>(null)\nconst runCollectionAction = ref<HTMLButtonElement | null>(null)\n\nconst dragging = ref(false)\nconst ordering = ref(false)\nconst orderingLastItem = ref(false)\nconst dropItemID = ref(\"\")\n\nconst currentReorderingStatus = useReadonlyStream(currentReorderingStatus$, {\n  type: \"collection\",\n  id: \"\",\n  parentID: \"\",\n})\n\n// Used to determine if the collection is being dragged to a different destination\n// This is used to make the highlight effect work\nwatch(\n  () => dragging.value,\n  (val) => {\n    if (val && notSameDestination.value && notSameParentDestination.value) {\n      emit(\"dragging\", true)\n    } else {\n      emit(\"dragging\", false)\n    }\n  }\n)\n\nconst collectionIcon = computed(() => {\n  if (props.isSelected) return IconCheckCircle\n  else if (!props.isOpen) return IconFolder\n  else if (props.isOpen) return IconFolderOpen\n  return IconFolder\n})\n\nconst collectionName = computed(() => {\n  if ((props.data as HoppCollection).name)\n    return (props.data as HoppCollection).name\n  return (props.data as TeamCollection).title\n})\n\nwatch(\n  () => props.exportLoading,\n  (val) => {\n    if (!val) {\n      options.value!.tippy?.hide()\n    }\n  }\n)\n\nconst notSameParentDestination = computed(() => {\n  return currentReorderingStatus.value.parentID !== props.id\n})\n\nconst isRequestDragging = computed(() => {\n  return currentReorderingStatus.value.type === \"request\"\n})\n\nconst isSameParent = computed(() => {\n  return currentReorderingStatus.value.parentID === props.parentID\n})\n\nconst isReorderable = computed(() => {\n  return (\n    ordering.value &&\n    notSameDestination.value &&\n    !isRequestDragging.value &&\n    isSameParent.value\n  )\n})\nconst isLastItemReorderable = computed(() => {\n  return (\n    orderingLastItem.value &&\n    notSameDestination.value &&\n    !isRequestDragging.value &&\n    isSameParent.value\n  )\n})\n\nconst dragStart = ({ dataTransfer }: DragEvent) => {\n  if (dataTransfer) {\n    emit(\"drag-event\", dataTransfer)\n    dropItemID.value = dataTransfer.getData(\"collectionIndex\")\n    dragging.value = !dragging.value\n    changeCurrentReorderStatus({\n      type: \"collection\",\n      id: props.id,\n      parentID: props.parentID,\n    })\n  }\n}\n\n// Trigger the re-ordering event when a collection is dragged over another collection's top section\nconst handleDragOver = (e: DragEvent) => {\n  dragging.value = true\n  if (\n    e.offsetY < 10 &&\n    notSameDestination.value &&\n    !isRequestDragging.value &&\n    isSameParent.value\n  ) {\n    ordering.value = true\n    dragging.value = false\n    orderingLastItem.value = false\n  } else if (\n    e.offsetY > 18 &&\n    notSameDestination.value &&\n    !isRequestDragging.value &&\n    isSameParent.value &&\n    props.isLastItem\n  ) {\n    orderingLastItem.value = true\n    dragging.value = false\n    ordering.value = false\n  } else {\n    ordering.value = false\n    orderingLastItem.value = false\n  }\n}\n\nconst handelDrop = (e: DragEvent) => {\n  if (ordering.value) {\n    orderUpdateCollectionEvent(e)\n  } else if (orderingLastItem.value) {\n    updateLastItemOrder(e)\n  } else {\n    notSameParentDestination.value ? dropEvent(e) : e.stopPropagation()\n  }\n}\n\nconst dropEvent = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    emit(\"drop-event\", e.dataTransfer)\n    resetDragState()\n  }\n}\n\nconst orderUpdateCollectionEvent = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    emit(\"update-collection-order\", e.dataTransfer)\n    resetDragState()\n  }\n}\n\nconst updateLastItemOrder = (e: DragEvent) => {\n  if (e.dataTransfer) {\n    e.stopPropagation()\n    emit(\"update-last-collection-order\", e.dataTransfer)\n    resetDragState()\n  }\n}\n\nconst notSameDestination = computed(() => {\n  return dropItemID.value !== props.id\n})\n\nconst isCollLoading = computed(() => {\n  const { collectionMoveLoading } = props\n  if (\n    collectionMoveLoading &&\n    collectionMoveLoading.length > 0 &&\n    props.data.id\n  ) {\n    return collectionMoveLoading.includes(props.data.id)\n  }\n  return false\n})\n\nconst resetDragState = () => {\n  dragging.value = false\n  ordering.value = false\n  orderingLastItem.value = false\n}\n</script>\n","<template>\n  <div class=\"flex flex-1 flex-col\">\n    <div\n      class=\"sticky z-10 flex flex-1 justify-between border-b border-dividerLight bg-primary\"\n      :style=\"\n        saveRequest\n          ? 'top: calc(var(--upper-primary-sticky-fold) - var(--line-height-body))'\n          : 'top: var(--upper-primary-sticky-fold)'\n      \"\n    >\n      <HoppButtonSecondary\n        v-if=\"hasNoTeamAccess || isShowingSearchResults\"\n        v-tippy=\"{ theme: 'tooltip' }\"\n        disabled\n        class=\"!rounded-none\"\n        :icon=\"IconPlus\"\n        :title=\"t('team.no_access')\"\n        :label=\"t('action.new')\"\n      />\n      <HoppButtonSecondary\n        v-else\n        :icon=\"IconPlus\"\n        :label=\"t('action.new')\"\n        class=\"!rounded-none\"\n        @click=\"emit('display-modal-add')\"\n      />\n      <span class=\"flex\">\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          to=\"https://docs.hoppscotch.io/documentation/features/collections\"\n          blank\n          :title=\"t('app.wiki')\"\n          :icon=\"IconHelpCircle\"\n        />\n        <HoppButtonSecondary\n          v-if=\"!saveRequest\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :disabled=\"\n            (collectionsType.type === 'team-collections' &&\n              collectionsType.selectedTeam === undefined) ||\n            isShowingSearchResults\n          \"\n          :icon=\"IconImport\"\n          :title=\"t('modal.import_export')\"\n          @click=\"emit('display-modal-import-export')\"\n        />\n      </span>\n    </div>\n    <div class=\"flex flex-col overflow-hidden\">\n      <HoppSmartTree :adapter=\"teamAdapter\">\n        <template\n          #content=\"{ node, toggleChildren, isOpen, highlightChildren }\"\n        >\n          <CollectionsCollection\n            v-if=\"node.data.type === 'collections'\"\n            :id=\"node.data.data.data.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :data=\"node.data.data.data\"\n            :collections-type=\"collectionsType.type\"\n            :is-open=\"isOpen\"\n            :export-loading=\"exportLoading\"\n            :has-no-team-access=\"hasNoTeamAccess || isShowingSearchResults\"\n            :collection-move-loading=\"collectionMoveLoading\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                collectionID: node.id,\n              })\n            \"\n            folder-type=\"collection\"\n            @add-request=\"\n              node.data.type === 'collections' &&\n                emit('add-request', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @add-folder=\"\n              node.data.type === 'collections' &&\n                emit('add-folder', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-collection=\"\n              node.data.type === 'collections' &&\n                emit('edit-collection', {\n                  collectionIndex: node.id,\n                  collection: node.data.data.data,\n                })\n            \"\n            @edit-properties=\"\n              node.data.type === 'collections' &&\n                emit('edit-properties', {\n                  collectionIndex: node.id,\n                  collection: node.data.data.data,\n                })\n            \"\n            @export-data=\"\n              node.data.type === 'collections' &&\n                emit('export-data', node.data.data.data)\n            \"\n            @remove-collection=\"emit('remove-collection', node.id)\"\n            @drop-event=\"dropEvent($event, node.id)\"\n            @drag-event=\"dragEvent($event, node.id)\"\n            @update-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: node.data.data.data.id,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @update-last-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: null,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @dragging=\"\n              (isDraging) =>\n                highlightChildren(isDraging ? node.data.data.data.id : null)\n            \"\n            @toggle-children=\"\n              () => {\n                toggleChildren(),\n                  saveRequest &&\n                    emit('select', {\n                      pickedType: 'teams-collection',\n                      collectionID: node.id,\n                    })\n              }\n            \"\n            @run-collection=\"emit('run-collection', $event)\"\n            @click=\"\n              () => {\n                handleCollectionClick({\n                  collectionID: node.id,\n                  isOpen,\n                })\n              }\n            \"\n          />\n          <CollectionsCollection\n            v-if=\"node.data.type === 'folders'\"\n            :id=\"node.data.data.data.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :data=\"node.data.data.data\"\n            :collections-type=\"collectionsType.type\"\n            :is-open=\"isOpen\"\n            :export-loading=\"exportLoading\"\n            :has-no-team-access=\"hasNoTeamAccess || isShowingSearchResults\"\n            :collection-move-loading=\"collectionMoveLoading\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                folderID: node.data.data.data.id,\n              })\n            \"\n            folder-type=\"folder\"\n            @add-request=\"\n              node.data.type === 'folders' &&\n                emit('add-request', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @add-folder=\"\n              node.data.type === 'folders' &&\n                emit('add-folder', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-collection=\"\n              node.data.type === 'folders' &&\n                emit('edit-folder', {\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-properties=\"\n              node.data.type === 'folders' &&\n                emit('edit-properties', {\n                  collectionIndex: node.id,\n                  collection: node.data.data.data,\n                })\n            \"\n            @export-data=\"\n              node.data.type === 'folders' &&\n                emit('export-data', node.data.data.data)\n            \"\n            @remove-collection=\"\n              node.data.type === 'folders' &&\n                emit('remove-folder', node.data.data.data.id)\n            \"\n            @drop-event=\"dropEvent($event, node.data.data.data.id)\"\n            @drag-event=\"dragEvent($event, node.data.data.data.id)\"\n            @update-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: node.data.data.data.id,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @update-last-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: null,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @dragging=\"\n              (isDraging) =>\n                highlightChildren(isDraging ? node.data.data.data.id : null)\n            \"\n            @toggle-children=\"\n              () => {\n                toggleChildren(),\n                  saveRequest &&\n                    emit('select', {\n                      pickedType: 'teams-folder',\n                      folderID: node.data.data.data.id,\n                    })\n              }\n            \"\n            @run-collection=\"emit('run-collection', $event)\"\n            @click=\"\n              () => {\n                handleCollectionClick({\n                  // for the folders, we get a path, so we need to get the last part of the path which is the folder id\n                  collectionID: node.id.split('/').pop() as string,\n                  isOpen,\n                })\n              }\n            \"\n          />\n          <CollectionsRequest\n            v-if=\"node.data.type === 'requests'\"\n            :request=\"node.data.data.data.request\"\n            :request-i-d=\"node.data.data.data.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :collections-type=\"collectionsType.type\"\n            :duplicate-loading=\"duplicateLoading\"\n            :is-active=\"isActiveRequest(node.data.data.data.id)\"\n            :has-no-team-access=\"hasNoTeamAccess || isShowingSearchResults\"\n            :request-move-loading=\"requestMoveLoading\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                requestID: node.data.data.data.id,\n              })\n            \"\n            @edit-request=\"\n              node.data.type === 'requests' &&\n                emit('edit-request', {\n                  requestIndex: node.data.data.data.id,\n                  request: node.data.data.data.request,\n                })\n            \"\n            @duplicate-request=\"\n              node.data.type === 'requests' &&\n                emit('duplicate-request', {\n                  folderPath: node.data.data.parentIndex,\n                  request: node.data.data.data.request,\n                })\n            \"\n            @remove-request=\"\n              node.data.type === 'requests' &&\n                emit('remove-request', {\n                  folderPath: null,\n                  requestIndex: node.data.data.data.id,\n                })\n            \"\n            @select-request=\"\n              node.data.type === 'requests' &&\n                selectRequest({\n                  request: node.data.data.data.request,\n                  requestIndex: node.data.data.data.id,\n                  folderPath: getPath(node.id),\n                })\n            \"\n            @share-request=\"\n              node.data.type === 'requests' &&\n                emit('share-request', {\n                  request: node.data.data.data.request,\n                })\n            \"\n            @drag-request=\"\n              dragRequest($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: node.data.data.data.id,\n              })\n            \"\n            @update-request-order=\"\n              updateRequestOrder($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: node.data.data.data.id,\n              })\n            \"\n            @update-last-request-order=\"\n              updateRequestOrder($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: null,\n              })\n            \"\n          />\n        </template>\n        <template #emptyNode=\"{ node }\">\n          <HoppSmartPlaceholder\n            v-if=\"filterText.length !== 0 && teamCollectionList.length === 0\"\n            :text=\"`${t('state.nothing_found')} ‟${filterText}”`\"\n          >\n            <template #icon>\n              <icon-lucide-search class=\"svg-icons opacity-75\" />\n            </template>\n          </HoppSmartPlaceholder>\n          <HoppSmartPlaceholder\n            v-else-if=\"node === null\"\n            :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n            :alt=\"`${t('empty.collections')}`\"\n            :text=\"t('empty.collections')\"\n            @drop.stop\n          >\n            <template #body>\n              <div class=\"flex flex-col items-center space-y-4\">\n                <span class=\"text-center text-secondaryLight\">\n                  {{ t(\"collection.import_or_create\") }}\n                </span>\n                <div class=\"flex flex-col items-stretch gap-4\">\n                  <HoppButtonPrimary\n                    :icon=\"IconImport\"\n                    :label=\"t('import.title')\"\n                    filled\n                    outline\n                    :disabled=\"hasNoTeamAccess\"\n                    :title=\"hasNoTeamAccess ? t('team.no_access') : ''\"\n                    @click=\"\n                      hasNoTeamAccess\n                        ? null\n                        : emit('display-modal-import-export')\n                    \"\n                  />\n                  <HoppButtonSecondary\n                    :icon=\"IconPlus\"\n                    :label=\"t('add.new')\"\n                    filled\n                    outline\n                    :disabled=\"hasNoTeamAccess\"\n                    :title=\"hasNoTeamAccess ? t('team.no_access') : ''\"\n                    @click=\"hasNoTeamAccess ? null : emit('display-modal-add')\"\n                  />\n                </div>\n              </div>\n            </template>\n          </HoppSmartPlaceholder>\n          <HoppSmartPlaceholder\n            v-else-if=\"node.data.type === 'collections'\"\n            :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n            :alt=\"`${t('empty.collections')}`\"\n            :text=\"t('empty.collections')\"\n            @drop.stop\n          >\n            <template #body>\n              <HoppButtonSecondary\n                :label=\"t('add.new')\"\n                filled\n                outline\n                @click=\"\n                  node.data.type === 'collections' &&\n                    emit('add-folder', {\n                      path: node.id,\n                      folder: node.data.data.data,\n                    })\n                \"\n              />\n            </template>\n          </HoppSmartPlaceholder>\n          <HoppSmartPlaceholder\n            v-else-if=\"node.data.type === 'folders'\"\n            :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n            :alt=\"`${t('empty.folder')}`\"\n            :text=\"t('empty.folder')\"\n            @drop.stop\n          />\n        </template>\n      </HoppSmartTree>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconImport from \"~icons/lucide/folder-down\"\nimport { computed, PropType, Ref, toRef } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { TeamCollection } from \"~/helpers/teams/TeamCollection\"\nimport { TeamRequest } from \"~/helpers/teams/TeamRequest\"\nimport { ChildrenResult, SmartTreeAdapter } from \"@hoppscotch/ui/helpers\"\nimport { cloneDeep } from \"lodash-es\"\nimport { HoppRESTRequest } from \"@hoppscotch/data\"\nimport { pipe } from \"fp-ts/function\"\nimport * as O from \"fp-ts/Option\"\nimport { Picked } from \"~/helpers/types/HoppPicked.js\"\nimport { RESTTabService } from \"~/services/tab/rest\"\nimport { useService } from \"dioc/vue\"\nimport { TeamWorkspace } from \"~/services/workspace.service\"\n\nconst t = useI18n()\nconst colorMode = useColorMode()\nconst tabs = useService(RESTTabService)\n\ntype CollectionType =\n  | {\n      type: \"team-collections\"\n      selectedTeam: TeamWorkspace\n    }\n  | { type: \"my-collections\"; selectedTeam: undefined }\n\nconst props = defineProps({\n  collectionsType: {\n    type: Object as PropType<CollectionType>,\n    default: () => ({ type: \"my-collections\", selectedTeam: undefined }),\n    required: true,\n  },\n  filterText: {\n    type: String as PropType<string>,\n    default: \"\",\n    required: true,\n  },\n  teamCollectionList: {\n    type: Array as PropType<TeamCollection[]>,\n    default: () => [],\n    required: true,\n  },\n  teamLoadingCollections: {\n    type: Array as PropType<string[]>,\n    default: () => [],\n    required: true,\n  },\n  saveRequest: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  exportLoading: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  duplicateLoading: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  picked: {\n    type: Object as PropType<Picked | null>,\n    default: null,\n    required: false,\n  },\n  collectionMoveLoading: {\n    type: Array as PropType<string[]>,\n    default: () => [],\n    required: false,\n  },\n  requestMoveLoading: {\n    type: Array as PropType<string[]>,\n    default: () => [],\n    required: false,\n  },\n})\n\nconst isShowingSearchResults = computed(() => props.filterText.length > 0)\n\nconst emit = defineEmits<{\n  (\n    event: \"add-request\",\n    payload: {\n      path: string\n      folder: TeamCollection\n    }\n  ): void\n  (\n    event: \"add-folder\",\n    payload: {\n      path: string\n      folder: TeamCollection\n    }\n  ): void\n  (\n    event: \"edit-collection\",\n    payload: {\n      collectionIndex: string\n      collection: TeamCollection\n    }\n  ): void\n  (\n    event: \"edit-folder\",\n    payload: {\n      folder: TeamCollection\n    }\n  ): void\n  (\n    event: \"edit-properties\",\n    payload: {\n      collectionIndex: string\n      collection: TeamCollection\n    }\n  ): void\n  (\n    event: \"edit-request\",\n    payload: {\n      requestIndex: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (\n    event: \"duplicate-request\",\n    payload: {\n      folderPath: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (event: \"export-data\", payload: TeamCollection): void\n  (event: \"remove-collection\", payload: string): void\n  (event: \"remove-folder\", payload: string): void\n  (\n    event: \"remove-request\",\n    payload: {\n      folderPath: string | null\n      requestIndex: string\n    }\n  ): void\n  (\n    event: \"select-request\",\n    payload: {\n      request: HoppRESTRequest\n      requestIndex: string\n      isActive: boolean\n      folderPath: string\n    }\n  ): void\n  (\n    event: \"share-request\",\n    payload: {\n      request: HoppRESTRequest\n    }\n  ): void\n  (\n    event: \"drop-request\",\n    payload: {\n      folderPath: string\n      requestIndex: string\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"drop-collection\",\n    payload: {\n      collectionIndexDragged: string\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"update-request-order\",\n    payload: {\n      dragedRequestIndex: string\n      destinationRequestIndex: string | null\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"update-collection-order\",\n    payload: {\n      dragedCollectionIndex: string\n      destinationCollection: {\n        destinationCollectionIndex: string | null\n        destinationCollectionParentIndex: string | null\n      }\n    }\n  ): void\n  (\n    event: \"collection-click\",\n    payload: {\n      // if the collection is open or not in the tree\n      isOpen: boolean\n      collectionID: string\n    }\n  ): void\n  (event: \"select\", payload: Picked | null): void\n  (event: \"expand-team-collection\", payload: string): void\n  (event: \"display-modal-add\"): void\n  (event: \"display-modal-import-export\"): void\n  (event: \"run-collection\", collectionID: string): void\n}>()\n\nconst getPath = (path: string) => {\n  const pathArray = path.split(\"/\")\n  pathArray.pop()\n  return pathArray.join(\"/\")\n}\n\nconst handleCollectionClick = (payload: {\n  collectionID: string\n  isOpen: boolean\n}) => {\n  const { collectionID, isOpen } = payload\n\n  emit(\"collection-click\", {\n    collectionID,\n    isOpen,\n  })\n}\n\nconst teamCollectionsList = toRef(props, \"teamCollectionList\")\n\nconst hasNoTeamAccess = computed(\n  () =>\n    props.collectionsType.type === \"team-collections\" &&\n    (props.collectionsType.selectedTeam === undefined ||\n      props.collectionsType.selectedTeam.role === \"VIEWER\")\n)\n\nconst isSelected = ({\n  collectionID,\n  folderID,\n  requestID,\n}: {\n  collectionID?: string | undefined\n  folderID?: string | undefined\n  requestID?: string | undefined\n}) => {\n  if (collectionID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-collection\" &&\n      props.picked.collectionID === collectionID\n    )\n  } else if (requestID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-request\" &&\n      props.picked.requestID === requestID\n    )\n  }\n  return (\n    props.picked &&\n    props.picked.pickedType === \"teams-folder\" &&\n    props.picked.folderID === folderID\n  )\n}\n\nconst active = computed(() => tabs.currentActiveTab.value.document.saveContext)\n\nconst isActiveRequest = (requestID: string) => {\n  return pipe(\n    active.value,\n    O.fromNullable,\n    O.filter(\n      (active) =>\n        active.originLocation === \"team-collection\" &&\n        active.requestID === requestID\n    ),\n    O.isSome\n  )\n}\n\nconst selectRequest = (data: {\n  request: HoppRESTRequest\n  requestIndex: string\n  folderPath: string | null\n}) => {\n  const { request, requestIndex } = data\n  if (props.saveRequest) {\n    emit(\"select\", {\n      pickedType: \"teams-request\",\n      requestID: requestIndex,\n    })\n  } else {\n    emit(\"select-request\", {\n      request: request,\n      requestIndex: requestIndex,\n      isActive: isActiveRequest(requestIndex),\n      folderPath: data.folderPath,\n    })\n  }\n}\n\nconst dragRequest = (\n  dataTransfer: DataTransfer,\n  {\n    folderPath,\n    requestIndex,\n  }: { folderPath: string | null; requestIndex: string }\n) => {\n  if (!folderPath) return\n  dataTransfer.setData(\"folderPath\", folderPath)\n  dataTransfer.setData(\"requestIndex\", requestIndex)\n}\n\nconst dragEvent = (dataTransfer: DataTransfer, collectionIndex: string) => {\n  dataTransfer.setData(\"collectionIndex\", collectionIndex)\n}\n\nconst dropEvent = (\n  dataTransfer: DataTransfer,\n  destinationCollectionIndex: string\n) => {\n  const folderPath = dataTransfer.getData(\"folderPath\")\n  const requestIndex = dataTransfer.getData(\"requestIndex\")\n  const collectionIndexDragged = dataTransfer.getData(\"collectionIndex\")\n  if (folderPath && requestIndex) {\n    emit(\"drop-request\", {\n      folderPath,\n      requestIndex,\n      destinationCollectionIndex,\n    })\n  } else {\n    emit(\"drop-collection\", {\n      collectionIndexDragged,\n      destinationCollectionIndex,\n    })\n  }\n}\n\nconst updateRequestOrder = (\n  dataTransfer: DataTransfer,\n  {\n    folderPath,\n    requestIndex,\n  }: { folderPath: string | null; requestIndex: string | null }\n) => {\n  if (!folderPath) return\n  const dragedRequestIndex = dataTransfer.getData(\"requestIndex\")\n  const destinationRequestIndex = requestIndex\n  const destinationCollectionIndex = folderPath\n\n  emit(\"update-request-order\", {\n    dragedRequestIndex,\n    destinationRequestIndex,\n    destinationCollectionIndex,\n  })\n}\n\nconst updateCollectionOrder = (\n  dataTransfer: DataTransfer,\n  destinationCollection: {\n    destinationCollectionIndex: string | null\n    destinationCollectionParentIndex: string | null\n  }\n) => {\n  const dragedCollectionIndex = dataTransfer.getData(\"collectionIndex\")\n\n  emit(\"update-collection-order\", {\n    dragedCollectionIndex,\n    destinationCollection,\n  })\n}\n\ntype TeamCollections = {\n  isLastItem: boolean\n  type: \"collections\"\n  data: {\n    parentIndex: null\n    data: TeamCollection\n  }\n}\n\ntype TeamFolder = {\n  isLastItem: boolean\n  type: \"folders\"\n  data: {\n    parentIndex: string\n    data: TeamCollection\n  }\n}\n\ntype TeamRequests = {\n  isLastItem: boolean\n  type: \"requests\"\n  data: {\n    parentIndex: string\n    data: TeamRequest\n  }\n}\n\ntype TeamCollectionNode = TeamCollections | TeamFolder | TeamRequests\n\nclass TeamCollectionsAdapter implements SmartTreeAdapter<TeamCollectionNode> {\n  constructor(public data: Ref<TeamCollection[]>) {}\n\n  findCollInTree(\n    tree: TeamCollection[],\n    targetID: string\n  ): TeamCollection | null {\n    for (const coll of tree) {\n      // If the direct child matched, then return that\n      if (coll.id === targetID) return coll\n\n      // Else run it in the children\n      if (coll.children) {\n        const result = this.findCollInTree(coll.children, targetID)\n        if (result) return result\n      }\n    }\n\n    // If nothing matched, return null\n    return null\n  }\n\n  getChildren(id: string | null): Ref<ChildrenResult<TeamCollectionNode>> {\n    return computed(() => {\n      if (id === null) {\n        if (props.teamLoadingCollections.includes(\"root\")) {\n          return {\n            status: \"loading\",\n          }\n        }\n        const data = this.data.value.map((item, index) => ({\n          id: item.id,\n          data: {\n            isLastItem: index === this.data.value.length - 1,\n            type: \"collections\",\n            data: {\n              parentIndex: null,\n              data: item,\n            },\n          },\n        }))\n        return {\n          status: \"loaded\",\n          data: cloneDeep(data),\n        } as ChildrenResult<TeamCollections>\n      }\n      const parsedID = id.split(\"/\")[id.split(\"/\").length - 1]\n\n      !props.teamLoadingCollections.includes(parsedID) &&\n        emit(\"expand-team-collection\", parsedID)\n\n      if (props.teamLoadingCollections.includes(parsedID)) {\n        return {\n          status: \"loading\",\n        }\n      }\n      const items = this.findCollInTree(this.data.value, parsedID)\n      if (items) {\n        const data = [\n          ...(items.children\n            ? items.children.map((item, index) => ({\n                id: `${id}/${item.id}`,\n                data: {\n                  isLastItem:\n                    items.children && items.children.length > 1\n                      ? index === items.children.length - 1\n                      : false,\n                  type: \"folders\",\n                  data: {\n                    parentIndex: parsedID,\n                    data: item,\n                  },\n                },\n              }))\n            : []),\n          ...(items.requests\n            ? items.requests.map((item, index) => ({\n                id: `${id}/${item.id}`,\n                data: {\n                  isLastItem:\n                    items.requests && items.requests.length > 1\n                      ? index === items.requests.length - 1\n                      : false,\n                  type: \"requests\",\n                  data: {\n                    parentIndex: parsedID,\n                    data: item,\n                  },\n                },\n              }))\n            : []),\n        ]\n        return {\n          status: \"loaded\",\n          data: cloneDeep(data),\n        } as ChildrenResult<TeamFolder | TeamRequests>\n      }\n      return {\n        status: \"loaded\",\n        data: [],\n      }\n    })\n  }\n}\n\nconst teamAdapter: SmartTreeAdapter<TeamCollectionNode> =\n  new TeamCollectionsAdapter(teamCollectionsList)\n</script>\n","<template>\n  <div class=\"flex flex-1 flex-col\">\n    <div\n      class=\"sticky z-10 flex flex-1 justify-between border-b border-dividerLight bg-primary\"\n      :style=\"\n        saveRequest\n          ? 'top: calc(var(--upper-primary-sticky-fold) - var(--line-height-body))'\n          : 'top: var(--upper-primary-sticky-fold)'\n      \"\n    >\n      <HoppButtonSecondary\n        :icon=\"IconPlus\"\n        :label=\"t('action.new')\"\n        class=\"!rounded-none\"\n        @click=\"emit('display-modal-add')\"\n      />\n      <span class=\"flex\">\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          to=\"https://docs.hoppscotch.io/documentation/features/collections\"\n          blank\n          :title=\"t('app.wiki')\"\n          :icon=\"IconHelpCircle\"\n        />\n        <HoppButtonSecondary\n          v-if=\"!saveRequest\"\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconImport\"\n          :title=\"t('modal.import_export')\"\n          @click=\"emit('display-modal-import-export')\"\n        />\n      </span>\n    </div>\n    <div class=\"flex flex-1 flex-col\">\n      <HoppSmartTree :adapter=\"myAdapter\">\n        <template\n          #content=\"{ node, toggleChildren, isOpen, highlightChildren }\"\n        >\n          <CollectionsCollection\n            v-if=\"node.data.type === 'collections'\"\n            :id=\"node.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :data=\"node.data.data.data\"\n            :collections-type=\"collectionsType.type\"\n            :is-open=\"isOpen\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                collectionIndex: parseInt(node.id),\n              })\n            \"\n            folder-type=\"collection\"\n            @add-request=\"\n              node.data.type === 'collections' &&\n                emit('add-request', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @add-folder=\"\n              node.data.type === 'collections' &&\n                emit('add-folder', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-collection=\"\n              node.data.type === 'collections' &&\n                emit('edit-collection', {\n                  collectionIndex: node.id,\n                  collection: node.data.data.data,\n                })\n            \"\n            @edit-properties=\"\n              node.data.type === 'collections' &&\n                emit('edit-properties', {\n                  collectionIndex: node.id,\n                  collection: node.data.data.data,\n                })\n            \"\n            @export-data=\"\n              node.data.type === 'collections' &&\n                emit('export-data', node.data.data.data)\n            \"\n            @remove-collection=\"emit('remove-collection', node.id)\"\n            @drop-event=\"dropEvent($event, node.id)\"\n            @drag-event=\"dragEvent($event, node.id)\"\n            @update-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: node.id,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @update-last-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: null,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @dragging=\"\n              (isDraging) => highlightChildren(isDraging ? node.id : null)\n            \"\n            @toggle-children=\"\n              () => {\n                toggleChildren(),\n                  saveRequest &&\n                    emit('select', {\n                      pickedType: 'my-collection',\n                      collectionIndex: parseInt(node.id),\n                    })\n              }\n            \"\n          />\n          <CollectionsCollection\n            v-if=\"node.data.type === 'folders'\"\n            :id=\"node.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :data=\"node.data.data.data\"\n            :collections-type=\"collectionsType.type\"\n            :is-open=\"isOpen\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-selected=\"\n              isSelected({\n                folderPath: node.id,\n              })\n            \"\n            folder-type=\"folder\"\n            @add-request=\"\n              node.data.type === 'folders' &&\n                emit('add-request', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @add-folder=\"\n              node.data.type === 'folders' &&\n                emit('add-folder', {\n                  path: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-collection=\"\n              node.data.type === 'folders' &&\n                emit('edit-folder', {\n                  folderPath: node.id,\n                  folder: node.data.data.data,\n                })\n            \"\n            @edit-properties=\"\n              node.data.type === 'folders' &&\n                emit('edit-properties', {\n                  collectionIndex: node.id,\n                  collection: node.data.data.data,\n                })\n            \"\n            @export-data=\"\n              node.data.type === 'folders' &&\n                emit('export-data', node.data.data.data)\n            \"\n            @remove-collection=\"emit('remove-folder', node.id)\"\n            @drop-event=\"dropEvent($event, node.id)\"\n            @drag-event=\"dragEvent($event, node.id)\"\n            @update-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: node.id,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @update-last-collection-order=\"\n              updateCollectionOrder($event, {\n                destinationCollectionIndex: null,\n                destinationCollectionParentIndex: node.data.data.parentIndex,\n              })\n            \"\n            @dragging=\"\n              (isDraging) => highlightChildren(isDraging ? node.id : null)\n            \"\n            @toggle-children=\"\n              () => {\n                toggleChildren(),\n                  saveRequest &&\n                    emit('select', {\n                      pickedType: 'my-folder',\n                      folderPath: node.id,\n                    })\n              }\n            \"\n          />\n          <CollectionsRequest\n            v-if=\"node.data.type === 'requests'\"\n            :request=\"node.data.data.data\"\n            :request-i-d=\"node.id\"\n            :parent-i-d=\"node.data.data.parentIndex\"\n            :collections-type=\"collectionsType.type\"\n            :save-request=\"saveRequest\"\n            :is-last-item=\"node.data.isLastItem\"\n            :is-active=\"\n              isActiveRequest(\n                node.data.data.parentIndex,\n                parseInt(pathToIndex(node.id))\n              )\n            \"\n            :is-selected=\"\n              isSelected({\n                folderPath: node.data.data.parentIndex,\n                requestIndex: parseInt(pathToIndex(node.id)),\n              })\n            \"\n            @edit-request=\"\n              node.data.type === 'requests' &&\n                emit('edit-request', {\n                  folderPath: node.data.data.parentIndex,\n                  requestIndex: pathToIndex(node.id),\n                  request: node.data.data.data,\n                })\n            \"\n            @duplicate-request=\"\n              node.data.type === 'requests' &&\n                emit('duplicate-request', {\n                  folderPath: node.data.data.parentIndex,\n                  request: node.data.data.data,\n                })\n            \"\n            @remove-request=\"\n              node.data.type === 'requests' &&\n                emit('remove-request', {\n                  folderPath: node.data.data.parentIndex,\n                  requestIndex: pathToIndex(node.id),\n                })\n            \"\n            @select-request=\"\n              node.data.type === 'requests' &&\n                selectRequest({\n                  request: node.data.data.data,\n                  folderPath: node.data.data.parentIndex,\n                  requestIndex: pathToIndex(node.id),\n                })\n            \"\n            @share-request=\"\n              node.data.type === 'requests' &&\n                emit('share-request', {\n                  request: node.data.data.data,\n                })\n            \"\n            @drag-request=\"\n              dragRequest($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: node.id,\n              })\n            \"\n            @update-request-order=\"\n              updateRequestOrder($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: node.id,\n              })\n            \"\n            @update-last-request-order=\"\n              updateRequestOrder($event, {\n                folderPath: node.data.data.parentIndex,\n                requestIndex: null,\n              })\n            \"\n          />\n        </template>\n        <template #emptyNode=\"{ node }\">\n          <HoppSmartPlaceholder\n            v-if=\"filterText.length !== 0 && filteredCollections.length === 0\"\n            :text=\"`${t('state.nothing_found')} ‟${filterText}”`\"\n          >\n            <template #icon>\n              <icon-lucide-search class=\"svg-icons opacity-75\" />\n            </template>\n          </HoppSmartPlaceholder>\n          <HoppSmartPlaceholder\n            v-else-if=\"node === null\"\n            :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n            :alt=\"`${t('empty.collections')}`\"\n            :text=\"t('empty.collections')\"\n          >\n            <template #body>\n              <div class=\"flex flex-col items-center space-y-4\">\n                <span class=\"text-center text-secondaryLight\">\n                  {{ t(\"collection.import_or_create\") }}\n                </span>\n                <div class=\"flex flex-col items-stretch gap-4\">\n                  <HoppButtonPrimary\n                    :icon=\"IconImport\"\n                    :label=\"t('import.title')\"\n                    filled\n                    outline\n                    @click=\"emit('display-modal-import-export')\"\n                  />\n                  <HoppButtonSecondary\n                    :icon=\"IconPlus\"\n                    :label=\"t('add.new')\"\n                    filled\n                    outline\n                    @click=\"emit('display-modal-add')\"\n                  />\n                </div>\n              </div>\n            </template>\n          </HoppSmartPlaceholder>\n          <HoppSmartPlaceholder\n            v-else-if=\"node.data.type === 'collections'\"\n            :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n            :alt=\"`${t('empty.collections')}`\"\n            :text=\"t('empty.collections')\"\n          >\n            <template #body>\n              <HoppButtonSecondary\n                :label=\"t('add.new')\"\n                filled\n                outline\n                @click=\"\n                  node.data.type === 'collections' &&\n                    emit('add-folder', {\n                      path: node.id,\n                      folder: node.data.data.data,\n                    })\n                \"\n              />\n            </template>\n          </HoppSmartPlaceholder>\n          <HoppSmartPlaceholder\n            v-else-if=\"node.data.type === 'folders'\"\n            :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n            :alt=\"`${t('empty.folder')}`\"\n            :text=\"t('empty.folder')\"\n          />\n        </template>\n      </HoppSmartTree>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconImport from \"~icons/lucide/folder-down\"\nimport { HoppCollection, HoppRESTRequest } from \"@hoppscotch/data\"\nimport { computed, PropType, Ref, toRef } from \"vue\"\nimport { GetMyTeamsQuery } from \"~/helpers/backend/graphql\"\nimport { ChildrenResult, SmartTreeAdapter } from \"@hoppscotch/ui/helpers\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { pipe } from \"fp-ts/function\"\nimport * as O from \"fp-ts/Option\"\nimport { Picked } from \"~/helpers/types/HoppPicked.js\"\nimport { useService } from \"dioc/vue\"\nimport { RESTTabService } from \"~/services/tab/rest\"\n\nexport type Collection = {\n  type: \"collections\"\n  isLastItem: boolean\n  data: {\n    parentIndex: null\n    data: HoppCollection\n  }\n}\n\ntype Folder = {\n  type: \"folders\"\n  isLastItem: boolean\n  data: {\n    parentIndex: string\n    data: HoppCollection\n  }\n}\n\ntype Requests = {\n  type: \"requests\"\n  isLastItem: boolean\n  data: {\n    parentIndex: string\n    data: HoppRESTRequest\n  }\n}\n\nconst t = useI18n()\nconst colorMode = useColorMode()\n\ntype SelectedTeam = GetMyTeamsQuery[\"myTeams\"][number] | undefined\n\ntype CollectionType =\n  | {\n      type: \"team-collections\"\n      selectedTeam: SelectedTeam\n    }\n  | { type: \"my-collections\"; selectedTeam: undefined }\n\nconst props = defineProps({\n  filteredCollections: {\n    type: Array as PropType<HoppCollection[]>,\n    default: () => [],\n    required: true,\n  },\n  collectionsType: {\n    type: Object as PropType<CollectionType>,\n    default: () => ({ type: \"my-collections\", selectedTeam: undefined }),\n    required: true,\n  },\n  filterText: {\n    type: String as PropType<string>,\n    default: \"\",\n    required: true,\n  },\n  saveRequest: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  picked: {\n    type: Object as PropType<Picked | null>,\n    default: null,\n    required: false,\n  },\n})\n\nconst emit = defineEmits<{\n  (event: \"display-modal-add\"): void\n  (\n    event: \"add-request\",\n    payload: {\n      path: string\n      folder: HoppCollection\n    }\n  ): void\n  (\n    event: \"add-folder\",\n    payload: {\n      path: string\n      folder: HoppCollection\n    }\n  ): void\n  (\n    event: \"edit-collection\",\n    payload: {\n      collectionIndex: string\n      collection: HoppCollection\n    }\n  ): void\n  (\n    event: \"edit-folder\",\n    payload: {\n      folderPath: string\n      folder: HoppCollection\n    }\n  ): void\n  (\n    event: \"edit-properties\",\n    payload: {\n      collectionIndex: string\n      collection: HoppCollection\n    }\n  ): void\n  (\n    event: \"edit-request\",\n    payload: {\n      folderPath: string\n      requestIndex: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (\n    event: \"duplicate-request\",\n    payload: {\n      folderPath: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (event: \"export-data\", payload: HoppCollection): void\n  (event: \"remove-collection\", payload: string): void\n  (event: \"remove-folder\", payload: string): void\n  (\n    event: \"remove-request\",\n    payload: {\n      folderPath: string | null\n      requestIndex: string\n    }\n  ): void\n  (\n    event: \"select-request\",\n    payload: {\n      request: HoppRESTRequest\n      folderPath: string\n      requestIndex: string\n      isActive: boolean\n    }\n  ): void\n  (\n    event: \"share-request\",\n    payload: {\n      request: HoppRESTRequest\n    }\n  ): void\n  (\n    event: \"drop-request\",\n    payload: {\n      folderPath: string\n      requestIndex: string\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"drop-collection\",\n    payload: {\n      collectionIndexDragged: string\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"update-request-order\",\n    payload: {\n      dragedRequestIndex: string\n      destinationRequestIndex: string | null\n      destinationCollectionIndex: string\n    }\n  ): void\n  (\n    event: \"update-collection-order\",\n    payload: {\n      dragedCollectionIndex: string\n      destinationCollection: {\n        destinationCollectionIndex: string | null\n        destinationCollectionParentIndex: string | null\n      }\n    }\n  ): void\n  (event: \"select\", payload: Picked | null): void\n  (event: \"display-modal-import-export\"): void\n}>()\n\nconst refFilterCollection = toRef(props, \"filteredCollections\")\n\nconst pathToIndex = (path: string) => {\n  const pathArr = path.split(\"/\")\n  return pathArr[pathArr.length - 1]\n}\n\nconst isSelected = ({\n  collectionIndex,\n  folderPath,\n  requestIndex,\n}: {\n  collectionIndex?: number | undefined\n  folderPath?: string | undefined\n  requestIndex?: number | undefined\n}) => {\n  if (collectionIndex !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-collection\" &&\n      props.picked.collectionIndex === collectionIndex\n    )\n  } else if (requestIndex !== undefined && folderPath !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-request\" &&\n      props.picked.folderPath === folderPath &&\n      props.picked.requestIndex === requestIndex\n    )\n  }\n  return (\n    props.picked &&\n    props.picked.pickedType === \"my-folder\" &&\n    props.picked.folderPath === folderPath\n  )\n}\n\nconst tabs = useService(RESTTabService)\nconst active = computed(() => tabs.currentActiveTab.value.document.saveContext)\n\nconst isActiveRequest = (folderPath: string, requestIndex: number) => {\n  return pipe(\n    active.value,\n    O.fromNullable,\n    O.filter(\n      (active) =>\n        active.originLocation === \"user-collection\" &&\n        active.folderPath === folderPath &&\n        active.requestIndex === requestIndex\n    ),\n    O.isSome\n  )\n}\n\nconst selectRequest = (data: {\n  request: HoppRESTRequest\n  folderPath: string\n  requestIndex: string\n}) => {\n  const { request, folderPath, requestIndex } = data\n\n  if (props.saveRequest) {\n    emit(\"select\", {\n      pickedType: \"my-request\",\n      folderPath: folderPath,\n      requestIndex: parseInt(requestIndex),\n    })\n  } else {\n    emit(\"select-request\", {\n      request,\n      folderPath,\n      requestIndex,\n      isActive: isActiveRequest(folderPath, parseInt(requestIndex)),\n    })\n  }\n}\n\nconst dragEvent = (dataTransfer: DataTransfer, collectionIndex: string) => {\n  dataTransfer.setData(\"collectionIndex\", collectionIndex)\n}\n\nconst dragRequest = (\n  dataTransfer: DataTransfer,\n  {\n    folderPath,\n    requestIndex,\n  }: { folderPath: string | null; requestIndex: string }\n) => {\n  if (!folderPath) return\n  dataTransfer.setData(\"folderPath\", folderPath)\n  dataTransfer.setData(\"requestIndex\", requestIndex)\n}\n\nconst dropEvent = (\n  dataTransfer: DataTransfer,\n  destinationCollectionIndex: string\n) => {\n  const folderPath = dataTransfer.getData(\"folderPath\")\n  const requestIndex = dataTransfer.getData(\"requestIndex\")\n  const collectionIndexDragged = dataTransfer.getData(\"collectionIndex\")\n\n  if (folderPath && requestIndex) {\n    emit(\"drop-request\", {\n      folderPath,\n      requestIndex,\n      destinationCollectionIndex,\n    })\n  } else {\n    emit(\"drop-collection\", {\n      collectionIndexDragged,\n      destinationCollectionIndex,\n    })\n  }\n}\n\nconst updateRequestOrder = (\n  dataTransfer: DataTransfer,\n  {\n    folderPath,\n    requestIndex,\n  }: { folderPath: string | null; requestIndex: string | null }\n) => {\n  if (!folderPath) return\n  const dragedRequestIndex = dataTransfer.getData(\"requestIndex\")\n  const destinationRequestIndex = requestIndex\n  const destinationCollectionIndex = folderPath\n\n  emit(\"update-request-order\", {\n    dragedRequestIndex,\n    destinationRequestIndex,\n    destinationCollectionIndex,\n  })\n}\n\nconst updateCollectionOrder = (\n  dataTransfer: DataTransfer,\n  destinationCollection: {\n    destinationCollectionIndex: string | null\n    destinationCollectionParentIndex: string | null\n  }\n) => {\n  const dragedCollectionIndex = dataTransfer.getData(\"collectionIndex\")\n\n  emit(\"update-collection-order\", {\n    dragedCollectionIndex,\n    destinationCollection,\n  })\n}\n\ntype MyCollectionNode = Collection | Folder | Requests\n\nclass MyCollectionsAdapter implements SmartTreeAdapter<MyCollectionNode> {\n  constructor(public data: Ref<HoppCollection[]>) {}\n\n  navigateToFolderWithIndexPath(\n    collections: HoppCollection[],\n    indexPaths: number[]\n  ) {\n    if (indexPaths.length === 0) return null\n\n    let target = collections[indexPaths.shift() as number]\n\n    while (indexPaths.length > 0)\n      target = target?.folders[indexPaths.shift() as number]\n\n    return target !== undefined ? target : null\n  }\n\n  getChildren(id: string | null): Ref<ChildrenResult<MyCollectionNode>> {\n    return computed(() => {\n      if (id === null) {\n        const data = this.data.value.map((item, index) => ({\n          id: index.toString(),\n          data: {\n            type: \"collections\",\n            isLastItem: index === this.data.value.length - 1,\n            data: {\n              parentIndex: null,\n              data: item,\n            },\n          },\n        }))\n        return {\n          status: \"loaded\",\n          data: data,\n        } as ChildrenResult<Collection>\n      }\n\n      const indexPath = id.split(\"/\").map((x) => parseInt(x))\n\n      const item = this.navigateToFolderWithIndexPath(\n        this.data.value,\n        indexPath\n      )\n\n      if (item) {\n        const data = [\n          ...item.folders.map((folder, index) => ({\n            id: `${id}/${index}`,\n            data: {\n              isLastItem:\n                item.folders && item.folders.length > 1\n                  ? index === item.folders.length - 1\n                  : false,\n              type: \"folders\",\n              data: {\n                parentIndex: id,\n                data: folder,\n              },\n            },\n          })),\n          ...item.requests.map((requests, index) => ({\n            id: `${id}/${index}`,\n            data: {\n              isLastItem:\n                item.requests && item.requests.length > 1\n                  ? index === item.requests.length - 1\n                  : false,\n              type: \"requests\",\n              data: {\n                parentIndex: id,\n                data: requests,\n              },\n            },\n          })),\n        ]\n\n        return {\n          status: \"loaded\",\n          data: data,\n        } as ChildrenResult<Folder | Requests>\n      }\n      return {\n        status: \"loaded\",\n        data: [],\n      }\n    })\n  }\n}\n\nconst myAdapter: SmartTreeAdapter<MyCollectionNode> = new MyCollectionsAdapter(\n  refFilterCollection\n)\n</script>\n","<template>\n  <div\n    class=\"flex items-center overflow-x-auto whitespace-nowrap border-b border-dividerLight px-4 py-2 text-tiny text-secondaryLight\"\n  >\n    <span class=\"truncate\">\n      {{ currentWorkspace }}\n    </span>\n    <icon-lucide-chevron-right v-if=\"section\" class=\"mx-2\" />\n    {{ section }}\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\"\nimport { useI18n } from \"~/composables/i18n\"\nimport { useService } from \"dioc/vue\"\nimport { WorkspaceService } from \"~/services/workspace.service\"\n\nconst props = defineProps<{\n  section?: string\n  isOnlyPersonal?: boolean\n}>()\n\nconst t = useI18n()\n\nconst workspaceService = useService(WorkspaceService)\nconst workspace = workspaceService.currentWorkspace\n\nconst currentWorkspace = computed(() => {\n  if (props.isOnlyPersonal || workspace.value.type === \"personal\") {\n    return t(\"workspace.personal\")\n  }\n  return teamWorkspaceName.value\n})\n\nconst teamWorkspaceName = computed(() => {\n  if (workspace.value.type === \"team\" && workspace.value.teamName) {\n    return workspace.value.teamName\n  }\n  return `${t(\"workspace.team\")}`\n})\n</script>\n","import { runMutation } from \"../GQLClient\"\nimport {\n  CreateRequestInCollectionDocument,\n  CreateRequestInCollectionMutation,\n  CreateRequestInCollectionMutationVariables,\n  DeleteRequestDocument,\n  DeleteRequestMutation,\n  DeleteRequestMutationVariables,\n  MoveRestTeamRequestDocument,\n  MoveRestTeamRequestMutation,\n  MoveRestTeamRequestMutationVariables,\n  UpdateLookUpRequestOrderDocument,\n  UpdateLookUpRequestOrderMutation,\n  UpdateLookUpRequestOrderMutationVariables,\n  UpdateRequestDocument,\n  UpdateRequestMutation,\n  UpdateRequestMutationVariables,\n} from \"../graphql\"\n\ntype DeleteRequestErrors = \"team_req/not_found\"\n\ntype MoveRestTeamRequestErrors =\n  | \"team_req/not_found\"\n  | \"team_req/invalid_target_id\"\n  | \"team/invalid_coll_id\"\n  | \"team_req/not_required_role\"\n  | \"bug/team_req/no_req_id\"\n\ntype UpdateLookUpRequestOrderErrors =\n  | \"team_req/not_found\"\n  | \"team/request_and_next_request_are_same\"\n  | \"team_req/requests_not_from_same_collection\"\n\nexport const createRequestInCollection = (\n  collectionID: string,\n  data: {\n    request: string\n    teamID: string\n    title: string\n  }\n) =>\n  runMutation<\n    CreateRequestInCollectionMutation,\n    CreateRequestInCollectionMutationVariables,\n    \"\"\n  >(CreateRequestInCollectionDocument, {\n    collectionID,\n    data,\n  })\n\nexport const updateTeamRequest = (\n  requestID: string,\n  data: {\n    request: string\n    title: string\n  }\n) =>\n  runMutation<UpdateRequestMutation, UpdateRequestMutationVariables, \"\">(\n    UpdateRequestDocument,\n    {\n      requestID,\n      data,\n    }\n  )\n\nexport const deleteTeamRequest = (requestID: string) =>\n  runMutation<\n    DeleteRequestMutation,\n    DeleteRequestMutationVariables,\n    DeleteRequestErrors\n  >(DeleteRequestDocument, {\n    requestID,\n  })\n\nexport const moveRESTTeamRequest = (collectionID: string, requestID: string) =>\n  runMutation<\n    MoveRestTeamRequestMutation,\n    MoveRestTeamRequestMutationVariables,\n    MoveRestTeamRequestErrors\n  >(MoveRestTeamRequestDocument, {\n    collectionID,\n    requestID,\n  })\n\nexport const updateOrderRESTTeamRequest = (\n  requestID: string,\n  nextRequestID: string | null,\n  collectionID: string\n) =>\n  runMutation<\n    UpdateLookUpRequestOrderMutation,\n    UpdateLookUpRequestOrderMutationVariables,\n    UpdateLookUpRequestOrderErrors\n  >(UpdateLookUpRequestOrderDocument, {\n    requestID,\n    nextRequestID,\n    collectionID,\n  })\n","import { HoppCollection } from \"@hoppscotch/data\"\nimport { getAffectedIndexes } from \"./affectedIndex\"\nimport { GetSingleRequestDocument } from \"../backend/graphql\"\nimport { runGQLQuery } from \"../backend/GQLClient\"\nimport * as E from \"fp-ts/Either\"\nimport { getService } from \"~/modules/dioc\"\nimport { RESTTabService } from \"~/services/tab/rest\"\nimport { HoppInheritedProperty } from \"../types/HoppInheritedProperties\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\n\n/**\n * Resolve save context on reorder\n * @param payload\n * @param payload.lastIndex\n * @param payload.newIndex\n * @param folderPath\n * @param payload.length\n * @returns\n */\n\nexport function resolveSaveContextOnCollectionReorder(\n  payload: {\n    lastIndex: number\n    newIndex: number\n    folderPath: string\n    length?: number // better way to do this? now it could be undefined\n  },\n  type: \"remove\" | \"drop\" = \"remove\"\n) {\n  const { lastIndex, folderPath, length } = payload\n  let { newIndex } = payload\n\n  if (newIndex > lastIndex) newIndex-- // there is a issue when going down? better way to resolve this?\n  if (lastIndex === newIndex) return\n\n  const affectedIndexes = getAffectedIndexes(\n    lastIndex,\n    newIndex === -1 ? length! : newIndex\n  )\n\n  if (newIndex === -1) {\n    // if (newIndex === -1) remove it from the map because it will be deleted\n    affectedIndexes.delete(lastIndex)\n    // when collection deleted opended requests from that collection be affected\n    if (type === \"remove\") {\n      resetSaveContextForAffectedRequests(\n        folderPath ? `${folderPath}/${lastIndex}` : lastIndex.toString()\n      )\n    }\n  }\n\n  // add folder path as prefix to the affected indexes\n  const affectedPaths = new Map<string, string>()\n  for (const [key, value] of affectedIndexes) {\n    if (folderPath) {\n      affectedPaths.set(`${folderPath}/${key}`, `${folderPath}/${value}`)\n    } else {\n      affectedPaths.set(key.toString(), value.toString())\n    }\n  }\n\n  const tabService = getService(RESTTabService)\n\n  const tabs = tabService.getTabsRefTo((tab) => {\n    return (\n      tab.document.saveContext?.originLocation === \"user-collection\" &&\n      affectedPaths.has(tab.document.saveContext.folderPath)\n    )\n  })\n\n  for (const tab of tabs) {\n    if (tab.value.document.saveContext?.originLocation === \"user-collection\") {\n      const newPath = affectedPaths.get(\n        tab.value.document.saveContext?.folderPath\n      )!\n      tab.value.document.saveContext.folderPath = newPath\n    }\n  }\n}\n\n/**\n * Resolve save context for affected requests on drop folder from one  to another\n * @param oldFolderPath\n * @param newFolderPath\n * @returns\n */\n\nexport function updateSaveContextForAffectedRequests(\n  oldFolderPath: string,\n  newFolderPath: string\n) {\n  const tabService = getService(RESTTabService)\n  const tabs = tabService.getTabsRefTo((tab) => {\n    return (\n      tab.document.saveContext?.originLocation === \"user-collection\" &&\n      tab.document.saveContext.folderPath.startsWith(oldFolderPath)\n    )\n  })\n\n  for (const tab of tabs) {\n    if (tab.value.document.saveContext?.originLocation === \"user-collection\") {\n      tab.value.document.saveContext = {\n        ...tab.value.document.saveContext,\n        folderPath: tab.value.document.saveContext.folderPath.replace(\n          oldFolderPath,\n          newFolderPath\n        ),\n      }\n    }\n  }\n}\n/**\n * Used to check the new folder path is close to the save context folder path or not\n * @param folderPathCurrent The path saved as the inherited path in the inherited properties\n * @param newFolderPath The incomming path\n * @param saveContextPath The save context of the request\n * @returns The path which is close to saveContext.folderPath\n */\nfunction folderPathCloseToSaveContext(\n  folderPathCurrent: string | undefined,\n  newFolderPath: string,\n  saveContextPath: string\n) {\n  if (!folderPathCurrent) return newFolderPath\n\n  const folderPathCurrentArray = folderPathCurrent.split(\"/\")\n  const newFolderPathArray = newFolderPath.split(\"/\")\n  const saveContextFolderPathArray = saveContextPath.split(\"/\")\n\n  const folderPathCurrentMatch = folderPathCurrentArray.filter(\n    (folder, i) => folder === saveContextFolderPathArray[i]\n  ).length\n\n  const newFolderPathMatch = newFolderPathArray.filter(\n    (folder, i) => folder === saveContextFolderPathArray[i]\n  ).length\n\n  return folderPathCurrentMatch > newFolderPathMatch\n    ? folderPathCurrent\n    : newFolderPath\n}\n\nfunction removeDuplicatesAndKeepLast(arr: HoppInheritedProperty[\"headers\"]) {\n  const keyMap: { [key: string]: number[] } = {} // Map to store array of indices for each key\n\n  // Populate keyMap with the indices of each key\n  arr.forEach((item, index) => {\n    const key = item.inheritedHeader.key\n    if (!(key in keyMap)) {\n      keyMap[key] = []\n    }\n    keyMap[key].push(index)\n  })\n\n  // Create a new array containing only the last occurrence of each key\n  const result = []\n  for (const key in keyMap) {\n    if (Object.prototype.hasOwnProperty.call(keyMap, key)) {\n      const lastIndex = keyMap[key][keyMap[key].length - 1]\n      result.push(arr[lastIndex])\n    }\n  }\n\n  // Sort the result array based on the parentID\n  result.sort((a, b) => a.parentID.localeCompare(b.parentID))\n  return result\n}\n\nexport function updateInheritedPropertiesForAffectedRequests(\n  path: string,\n  inheritedProperties: HoppInheritedProperty,\n  type: \"rest\" | \"graphql\"\n) {\n  const tabService =\n    type === \"rest\" ? getService(RESTTabService) : getService(GQLTabService)\n\n  const effectedTabs = tabService.getTabsRefTo((tab) => {\n    const saveContext = tab.document.saveContext\n\n    const saveContextPath =\n      saveContext?.originLocation === \"team-collection\"\n        ? saveContext.collectionID\n        : saveContext?.folderPath\n\n    return saveContextPath?.startsWith(path) ?? false\n  })\n\n  effectedTabs.map((tab) => {\n    const inheritedParentID =\n      tab.value.document.inheritedProperties?.auth.parentID\n\n    const contextPath =\n      tab.value.document.saveContext?.originLocation === \"team-collection\"\n        ? tab.value.document.saveContext.collectionID\n        : tab.value.document.saveContext?.folderPath\n\n    const effectedPath = folderPathCloseToSaveContext(\n      inheritedParentID,\n      path,\n      contextPath ?? \"\"\n    )\n\n    if (effectedPath === path) {\n      if (tab.value.document.inheritedProperties) {\n        tab.value.document.inheritedProperties.auth = inheritedProperties.auth\n      }\n    }\n\n    if (tab.value.document.inheritedProperties?.headers) {\n      // filter out the headers with the parentID not as the path\n      const headers = tab.value.document.inheritedProperties.headers.filter(\n        (header) => header.parentID !== path\n      )\n\n      // filter out the headers with the parentID as the path in the inheritedProperties\n      const inheritedHeaders = inheritedProperties.headers.filter(\n        (header) => header.parentID === path\n      )\n\n      // merge the headers with the parentID as the path\n      const mergedHeaders = removeDuplicatesAndKeepLast([\n        ...new Set([...inheritedHeaders, ...headers]),\n      ])\n\n      tab.value.document.inheritedProperties.headers = mergedHeaders\n    }\n  })\n}\n\nfunction resetSaveContextForAffectedRequests(folderPath: string) {\n  const tabService = getService(RESTTabService)\n  const tabs = tabService.getTabsRefTo((tab) => {\n    return (\n      tab.document.saveContext?.originLocation === \"user-collection\" &&\n      tab.document.saveContext.folderPath.startsWith(folderPath)\n    )\n  })\n\n  for (const tab of tabs) {\n    tab.value.document.saveContext = null\n    tab.value.document.isDirty = true\n  }\n}\n\n/**\n * Reset save context to null if requests are deleted from the team collection or its folder\n * only runs when collection or folder is deleted\n */\n\nexport async function resetTeamRequestsContext() {\n  const tabService = getService(RESTTabService)\n  const tabs = tabService.getTabsRefTo((tab) => {\n    return tab.document.saveContext?.originLocation === \"team-collection\"\n  })\n\n  for (const tab of tabs) {\n    if (tab.value.document.saveContext?.originLocation === \"team-collection\") {\n      const data = await runGQLQuery({\n        query: GetSingleRequestDocument,\n        variables: {\n          requestID: tab.value.document.saveContext?.requestID,\n        },\n      })\n\n      if (E.isRight(data) && data.right.request === null) {\n        tab.value.document.saveContext = null\n        tab.value.document.isDirty = true\n      }\n    }\n  }\n}\n\nexport function getFoldersByPath(\n  collections: HoppCollection[],\n  path: string\n): HoppCollection[] {\n  if (!path) return collections\n\n  // path will be like this \"0/0/1\" these are the indexes of the folders\n  const pathArray = path.split(\"/\").map((index) => parseInt(index))\n\n  let currentCollection = collections[pathArray[0]]\n\n  if (pathArray.length === 1) {\n    return currentCollection.folders\n  }\n  for (let i = 1; i < pathArray.length; i++) {\n    const folder = currentCollection.folders[pathArray[i]]\n    if (folder) currentCollection = folder\n  }\n\n  return currentCollection.folders\n}\n","import * as E from \"fp-ts/Either\"\nimport { BehaviorSubject, Subscription } from \"rxjs\"\nimport {\n  HoppRESTAuth,\n  HoppRESTHeader,\n  translateToNewRequest,\n} from \"@hoppscotch/data\"\nimport { pull, remove } from \"lodash-es\"\nimport { Subscription as WSubscription } from \"wonka\"\nimport { runGQLQuery, runGQLSubscription } from \"../backend/GQLClient\"\nimport { TeamCollection } from \"./TeamCollection\"\nimport { TeamRequest } from \"./TeamRequest\"\nimport {\n  RootCollectionsOfTeamDocument,\n  TeamCollectionAddedDocument,\n  TeamCollectionUpdatedDocument,\n  TeamCollectionRemovedDocument,\n  TeamRequestAddedDocument,\n  TeamRequestUpdatedDocument,\n  TeamRequestDeletedDocument,\n  GetCollectionChildrenDocument,\n  GetCollectionRequestsDocument,\n  TeamRequestMovedDocument,\n  TeamCollectionMovedDocument,\n  TeamRequestOrderUpdatedDocument,\n  TeamCollectionOrderUpdatedDocument,\n} from \"~/helpers/backend/graphql\"\nimport { HoppInheritedProperty } from \"../types/HoppInheritedProperties\"\n\nconst TEAMS_BACKEND_PAGE_SIZE = 10\n\n/**\n * Finds the parent of a collection and returns the REFERENCE (or null)\n *\n * @param {TeamCollection[]} tree - The tree to look in\n * @param {string} collID - ID of the collection to find the parent of\n * @param {TeamCollection} currentParent - (used for recursion, do not set) The parent in the current iteration (undefined if root)\n *\n * @returns REFERENCE to the collection or null if not found or the collection is in root\n */\nfunction findParentOfColl(\n  tree: TeamCollection[],\n  collID: string,\n  currentParent?: TeamCollection\n): TeamCollection | null {\n  for (const coll of tree) {\n    // If the root is parent, return null\n    if (coll.id === collID) return currentParent || null\n\n    // Else run it in children\n    if (coll.children) {\n      const result = findParentOfColl(coll.children, collID, coll)\n      if (result) return result\n    }\n  }\n\n  return null\n}\n\n/**\n * Finds and returns a REFERENCE collection in the given tree (or null)\n *\n * @param {TeamCollection[]} tree - The tree to look in\n * @param {string} targetID - The ID of the collection to look for\n *\n * @returns REFERENCE to the collection or null if not found\n */\nfunction findCollInTree(\n  tree: TeamCollection[],\n  targetID: string\n): TeamCollection | null {\n  for (const coll of tree) {\n    // If the direct child matched, then return that\n    if (coll.id === targetID) return coll\n\n    // Else run it in the children\n    if (coll.children) {\n      const result = findCollInTree(coll.children, targetID)\n      if (result) return result\n    }\n  }\n\n  // If nothing matched, return null\n  return null\n}\n\n/**\n * Deletes a collection in the tree\n *\n * @param {TeamCollection[]} tree - The tree to delete in (THIS WILL BE MUTATED!)\n * @param {string} targetID - ID of the collection to delete\n */\nfunction deleteCollInTree(tree: TeamCollection[], targetID: string) {\n  // Get the parent owning the collection\n  const parent = findParentOfColl(tree, targetID)\n\n  // If we found a parent, update it\n  if (parent && parent.children) {\n    parent.children = parent.children.filter((coll) => coll.id !== targetID)\n  }\n\n  // If there is no parent, it could mean:\n  //  1. The collection with that ID does not exist\n  //  2. The collection is in root (therefore, no parent)\n\n  // Let's look for element, if not exist, then stop\n  const el = findCollInTree(tree, targetID)\n  if (!el) return\n\n  // Collection exists, so this should be in root, hence removing element\n  pull(tree, el)\n}\n\n/**\n * Updates a collection in the tree with the specified data\n *\n * @param {TeamCollection[]} tree - The tree to update in (THIS WILL BE MUTATED!)\n * @param {Partial<TeamCollection> & Pick<TeamCollection, \"id\">} updateColl - An object defining all the fields that should be updated (ID is required to find the target collection)\n */\nfunction updateCollInTree(\n  tree: TeamCollection[],\n  updateColl: Partial<TeamCollection> & Pick<TeamCollection, \"id\">\n) {\n  const el = findCollInTree(tree, updateColl.id)\n\n  // If no match, stop the operation\n  if (!el) return\n\n  // Update all the specified keys\n  Object.assign(el, updateColl)\n}\n\n/**\n * Finds and returns a REFERENCE to the request with the given ID (or null)\n *\n * @param {TeamCollection[]} tree - The tree to look in\n * @param {string} reqID - The ID of the request to look for\n *\n * @returns REFERENCE to the request or null if request not found\n */\nfunction findReqInTree(\n  tree: TeamCollection[],\n  reqID: string\n): TeamRequest | null {\n  for (const coll of tree) {\n    // Check in root collections (if expanded)\n    if (coll.requests) {\n      const match = coll.requests.find((req) => req.id === reqID)\n      if (match) return match\n    }\n\n    // Check in children of collections\n    if (coll.children) {\n      const match = findReqInTree(coll.children, reqID)\n      if (match) return match\n    }\n  }\n\n  // No matches\n  return null\n}\n\n/**\n * Finds and returns a REFERENCE to the collection containing a given request ID in tree (or null)\n *\n * @param {TeamCollection[]} tree - The tree to look in\n * @param {string} reqID - The ID of the request to look for\n *\n * @returns REFERENCE to the collection or null if request not found\n */\nfunction findCollWithReqIDInTree(\n  tree: TeamCollection[],\n  reqID: string\n): TeamCollection | null {\n  for (const coll of tree) {\n    // Check in root collections (if expanded)\n    if (coll.requests) {\n      if (coll.requests.find((req) => req.id === reqID)) return coll\n    }\n\n    // Check in children of collections\n    if (coll.children) {\n      const result = findCollWithReqIDInTree(coll.children, reqID)\n      if (result) return result\n    }\n  }\n\n  // No matches\n  return null\n}\n\ntype EntityType = \"request\" | \"collection\"\ntype EntityID = `${EntityType}-${string}`\n\nexport default class NewTeamCollectionAdapter {\n  collections$: BehaviorSubject<TeamCollection[]>\n\n  // Stream to the list of collections/folders that are being loaded in\n  loadingCollections$: BehaviorSubject<string[]>\n\n  /**\n   * Stores the entity (collection/request/folder) ids of all the loaded entities.\n   * Used for preventing duplication of data which definitely is not possible (duplication due to network problems etc.)\n   */\n  private entityIDs: Set<EntityID>\n\n  private teamCollectionAdded$: Subscription | null\n  private teamCollectionUpdated$: Subscription | null\n  private teamCollectionRemoved$: Subscription | null\n  private teamRequestAdded$: Subscription | null\n  private teamRequestUpdated$: Subscription | null\n  private teamRequestDeleted$: Subscription | null\n  private teamRequestMoved$: Subscription | null\n  private teamCollectionMoved$: Subscription | null\n  private teamRequestOrderUpdated$: Subscription | null\n  private teamCollectionOrderUpdated$: Subscription | null\n\n  private teamCollectionAddedSub: WSubscription | null\n  private teamCollectionUpdatedSub: WSubscription | null\n  private teamCollectionRemovedSub: WSubscription | null\n  private teamRequestAddedSub: WSubscription | null\n  private teamRequestUpdatedSub: WSubscription | null\n  private teamRequestDeletedSub: WSubscription | null\n  private teamRequestMovedSub: WSubscription | null\n  private teamCollectionMovedSub: WSubscription | null\n  private teamRequestOrderUpdatedSub: WSubscription | null\n  private teamCollectionOrderUpdatedSub: WSubscription | null\n\n  constructor(private teamID: string | null) {\n    this.collections$ = new BehaviorSubject<TeamCollection[]>([])\n    this.loadingCollections$ = new BehaviorSubject<string[]>([])\n\n    this.entityIDs = new Set()\n\n    this.teamCollectionAdded$ = null\n    this.teamCollectionUpdated$ = null\n    this.teamCollectionRemoved$ = null\n    this.teamRequestAdded$ = null\n    this.teamRequestDeleted$ = null\n    this.teamRequestUpdated$ = null\n    this.teamRequestMoved$ = null\n    this.teamCollectionMoved$ = null\n    this.teamRequestOrderUpdated$ = null\n    this.teamCollectionOrderUpdated$ = null\n\n    this.teamCollectionAddedSub = null\n    this.teamCollectionUpdatedSub = null\n    this.teamCollectionRemovedSub = null\n    this.teamRequestAddedSub = null\n    this.teamRequestDeletedSub = null\n    this.teamRequestUpdatedSub = null\n    this.teamRequestMovedSub = null\n    this.teamCollectionMovedSub = null\n    this.teamRequestOrderUpdatedSub = null\n    this.teamCollectionOrderUpdatedSub = null\n\n    if (this.teamID) this.initialize()\n  }\n\n  changeTeamID(newTeamID: string | null) {\n    this.teamID = newTeamID\n    this.collections$.next([])\n    this.entityIDs.clear()\n\n    this.loadingCollections$.next([])\n\n    this.unsubscribeSubscriptions()\n\n    if (this.teamID) this.initialize()\n  }\n\n  /**\n   * Unsubscribes from the subscriptions\n   * NOTE: Once this is called, no new updates to the tree will be detected\n   */\n  unsubscribeSubscriptions() {\n    this.teamCollectionAdded$?.unsubscribe()\n    this.teamCollectionUpdated$?.unsubscribe()\n    this.teamCollectionRemoved$?.unsubscribe()\n    this.teamRequestAdded$?.unsubscribe()\n    this.teamRequestDeleted$?.unsubscribe()\n    this.teamRequestUpdated$?.unsubscribe()\n    this.teamRequestMoved$?.unsubscribe()\n    this.teamCollectionMoved$?.unsubscribe()\n    this.teamRequestOrderUpdated$?.unsubscribe()\n    this.teamCollectionOrderUpdated$?.unsubscribe()\n\n    this.teamCollectionAddedSub?.unsubscribe()\n    this.teamCollectionUpdatedSub?.unsubscribe()\n    this.teamCollectionRemovedSub?.unsubscribe()\n    this.teamRequestAddedSub?.unsubscribe()\n    this.teamRequestDeletedSub?.unsubscribe()\n    this.teamRequestUpdatedSub?.unsubscribe()\n    this.teamRequestMovedSub?.unsubscribe()\n    this.teamCollectionMovedSub?.unsubscribe()\n    this.teamRequestOrderUpdatedSub?.unsubscribe()\n    this.teamCollectionOrderUpdatedSub?.unsubscribe()\n  }\n\n  private async initialize() {\n    await this.loadRootCollections()\n    this.registerSubscriptions()\n  }\n\n  /**\n   * Performs addition of a collection to the tree\n   *\n   * @param {TeamCollection} collection - The collection to add to the tree\n   * @param {string | null} parentCollectionID - The parent of the new collection, pass null if this collection is in root\n   */\n  private addCollection(\n    collection: TeamCollection,\n    parentCollectionID: string | null\n  ) {\n    // Check if we have it already in the entity tree, if so, we don't need it again\n    if (this.entityIDs.has(`collection-${collection.id}`)) return\n\n    const tree = this.collections$.value\n\n    if (!parentCollectionID) {\n      tree.push(collection)\n    } else {\n      const parentCollection = findCollInTree(tree, parentCollectionID)\n\n      if (!parentCollection) return\n\n      if (parentCollection.children !== null) {\n        parentCollection.children.push(collection)\n      } else {\n        parentCollection.children = [collection]\n      }\n    }\n\n    // Add to entity ids set\n    this.entityIDs.add(`collection-${collection.id}`)\n\n    this.collections$.next(tree)\n  }\n\n  private async loadRootCollections() {\n    if (this.teamID === null) throw new Error(\"Team ID is null\")\n\n    this.loadingCollections$.next([\n      ...this.loadingCollections$.getValue(),\n      \"root\",\n    ])\n\n    const totalCollections: TeamCollection[] = []\n\n    while (true) {\n      const result = await runGQLQuery({\n        query: RootCollectionsOfTeamDocument,\n        variables: {\n          teamID: this.teamID,\n          cursor:\n            totalCollections.length > 0\n              ? totalCollections[totalCollections.length - 1].id\n              : undefined,\n        },\n      })\n\n      if (E.isLeft(result)) {\n        this.loadingCollections$.next(\n          this.loadingCollections$.getValue().filter((x) => x !== \"root\")\n        )\n\n        throw new Error(`Error fetching root collections: ${result.left.error}`)\n      }\n\n      totalCollections.push(\n        ...result.right.rootCollectionsOfTeam.map(\n          (x) =>\n            <TeamCollection>{\n              ...x,\n              children: null,\n              requests: null,\n            }\n        )\n      )\n\n      if (result.right.rootCollectionsOfTeam.length !== TEAMS_BACKEND_PAGE_SIZE)\n        break\n    }\n\n    this.loadingCollections$.next(\n      this.loadingCollections$.getValue().filter((x) => x !== \"root\")\n    )\n\n    // Add all the collections to the entity ids list\n    totalCollections.forEach((coll) =>\n      this.entityIDs.add(`collection-${coll.id}`)\n    )\n\n    this.collections$.next(totalCollections)\n  }\n\n  /**\n   * Updates an existing collection in tree\n   *\n   * @param {Partial<TeamCollection> & Pick<TeamCollection, \"id\">} collectionUpdate - Object defining the fields that need to be updated (ID is required to find the target)\n   */\n  private updateCollection(\n    collectionUpdate: Partial<TeamCollection> & Pick<TeamCollection, \"id\">\n  ) {\n    const tree = this.collections$.value\n\n    updateCollInTree(tree, collectionUpdate)\n\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Removes a collection from the tree\n   *\n   * @param {string} collectionID - ID of the collection to remove\n   */\n  private removeCollection(collectionID: string) {\n    const tree = this.collections$.value\n\n    deleteCollInTree(tree, collectionID)\n\n    this.entityIDs.delete(`collection-${collectionID}`)\n\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Adds a request to the tree\n   *\n   * @param {TeamRequest} request - The request to add to the tree\n   */\n  private addRequest(request: TeamRequest) {\n    // Check if we have it already in the entity tree, if so, we don't need it again\n    if (this.entityIDs.has(`request-${request.id}`)) return\n\n    const tree = this.collections$.value\n\n    // Check if we have the collection (if not, then not loaded?)\n    const coll = findCollInTree(tree, request.collectionID)\n    if (!coll) return // Ignore add request\n\n    // Collection is not expanded\n    if (!coll.requests) return\n\n    // Collection is expanded hence append request\n    coll.requests.push(request)\n\n    // Update the Entity IDs list\n    this.entityIDs.add(`request-${request.id}`)\n\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Updates the request in tree\n   *\n   * @param {Partial<TeamRequest> & Pick<TeamRequest, 'id'>} requestUpdate - Object defining all the fields to update in request (ID of the request is required)\n   */\n  private updateRequest(\n    requestUpdate: Partial<TeamRequest> & Pick<TeamRequest, \"id\">\n  ) {\n    const tree = this.collections$.value\n\n    // Find request, if not present, don't update\n    const req = findReqInTree(tree, requestUpdate.id)\n    if (!req) return\n\n    Object.assign(req, requestUpdate)\n\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Removes a request from the tree\n   *\n   * @param {string} requestID - ID of the request to remove\n   */\n  private removeRequest(requestID: string) {\n    const tree = this.collections$.value\n\n    // Find request in tree, don't attempt if no collection or no requests (expansion?)\n    const coll = findCollWithReqIDInTree(tree, requestID)\n    if (!coll || !coll.requests) return\n\n    // Remove the collection\n    remove(coll.requests, (req) => req.id === requestID)\n\n    // Remove from entityIDs set\n    this.entityIDs.delete(`request-${requestID}`)\n\n    // Publish new tree\n    this.collections$.next(tree)\n  }\n\n  /**\n   * Moves a request from one collection to another\n   *\n   * @param {string} request - The request to move\n   */\n  private async moveRequest(request: TeamRequest) {\n    const tree = this.collections$.value\n\n    // Remove the request from the current collection\n    this.removeRequest(request.id)\n\n    const currentRequest = request.request\n\n    if (currentRequest === null || currentRequest === undefined) return\n\n    // Find request in tree, don't attempt if no collection or no requests is found\n    const collection = findCollInTree(tree, request.collectionID)\n    if (!collection) return // Ignore add request\n\n    // Collection is not expanded\n    if (!collection.requests) return\n\n    this.addRequest({\n      id: request.id,\n      collectionID: request.collectionID,\n      request: translateToNewRequest(request.request),\n      title: request.title,\n    })\n  }\n\n  /**\n   * Moves a collection from one collection to another or to root\n   *\n   * @param {string} collectionID - The ID of the collection to move\n   */\n  private async moveCollection(\n    collectionID: string,\n    parentID: string | null,\n    title: string\n  ) {\n    // Remove the collection from the current position\n    this.removeCollection(collectionID)\n\n    if (collectionID === null || parentID === undefined) return\n\n    // Expand the parent collection if it is not expanded\n    // so that the old children is also visible when expanding\n    if (parentID) this.expandCollection(parentID)\n\n    this.addCollection(\n      {\n        id: collectionID,\n        children: null,\n        requests: null,\n        title: title,\n        data: null,\n      },\n      parentID ?? null\n    )\n  }\n\n  private reorderItems = (array: unknown[], from: number, to: number) => {\n    const item = array.splice(from, 1)[0]\n    if (from < to) {\n      array.splice(to - 1, 0, item)\n    } else {\n      array.splice(to, 0, item)\n    }\n  }\n\n  public updateRequestOrder(\n    dragedRequestID: string,\n    destinationRequestID: string | null,\n    destinationCollectionID: string\n  ) {\n    const tree = this.collections$.value\n\n    // If the destination request is null, then it is the last request in the collection\n    if (destinationRequestID === null) {\n      const collection = findCollInTree(tree, destinationCollectionID)\n\n      if (!collection) return // Ignore order update\n\n      // Collection is not expanded\n      if (!collection.requests) return\n\n      const requestIndex = collection.requests.findIndex(\n        (req) => req.id === dragedRequestID\n      )\n\n      // If the collection index is not found, don't update\n      if (requestIndex === -1) return\n\n      // Move the request to the end of the requests\n      collection.requests.push(collection.requests.splice(requestIndex, 1)[0])\n    } else {\n      // Find collection in tree, don't attempt if no collection is found\n      const collection = findCollInTree(tree, destinationCollectionID)\n      if (!collection) return // Ignore order update\n\n      // Collection is not expanded\n      if (!collection.requests) return\n\n      const requestIndex = collection.requests.findIndex(\n        (req) => req.id === dragedRequestID\n      )\n      const destinationIndex = collection.requests.findIndex(\n        (req) => req.id === destinationRequestID\n      )\n\n      if (requestIndex === -1) return\n\n      this.reorderItems(collection.requests, requestIndex, destinationIndex)\n    }\n\n    this.collections$.next(tree)\n  }\n\n  public updateCollectionOrder = (\n    collectionID: string,\n    destinationCollectionID: string | null\n  ) => {\n    const tree = this.collections$.value\n\n    // If the destination collection is null, then it is the last collection in the tree\n    if (destinationCollectionID === null) {\n      const collLast = findParentOfColl(tree, collectionID)\n      if (collLast && collLast.children) {\n        const collectionIndex = collLast.children.findIndex(\n          (coll) => coll.id === collectionID\n        )\n\n        // reorder the collection to the end of the collections\n        collLast.children.push(collLast.children.splice(collectionIndex, 1)[0])\n      } else {\n        const collectionIndex = tree.findIndex(\n          (coll) => coll.id === collectionID\n        )\n\n        // If the collection index is not found, don't update\n        if (collectionIndex === -1) return\n\n        // reorder the collection to the end of the collections in the root\n        tree.push(tree.splice(collectionIndex, 1)[0])\n      }\n    } else {\n      // Find collection in tree\n      const coll = findParentOfColl(tree, destinationCollectionID)\n\n      // If the collection has a parent collection and check if it has children\n      if (coll && coll.children) {\n        const collectionIndex = coll.children.findIndex(\n          (coll) => coll.id === collectionID\n        )\n\n        const destinationIndex = coll.children.findIndex(\n          (coll) => coll.id === destinationCollectionID\n        )\n\n        // If the collection index is not found, don't update\n        if (collectionIndex === -1) return\n\n        this.reorderItems(coll.children, collectionIndex, destinationIndex)\n      } else {\n        // If the collection has no parent collection, it is a root collection\n        const collectionIndex = tree.findIndex(\n          (coll) => coll.id === collectionID\n        )\n\n        const destinationIndex = tree.findIndex(\n          (coll) => coll.id === destinationCollectionID\n        )\n\n        // If the collection index is not found, don't update\n        if (collectionIndex === -1) return\n\n        this.reorderItems(tree, collectionIndex, destinationIndex)\n      }\n    }\n\n    this.collections$.next(tree)\n  }\n\n  private registerSubscriptions() {\n    if (!this.teamID) return\n\n    const [teamCollAdded$, teamCollAddedSub] = runGQLSubscription({\n      query: TeamCollectionAddedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamCollectionAddedSub = teamCollAddedSub\n\n    this.teamCollectionAdded$ = teamCollAdded$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Collection Added Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.addCollection(\n        {\n          id: result.right.teamCollectionAdded.id,\n          children: null,\n          requests: null,\n          title: result.right.teamCollectionAdded.title,\n          data: result.right.teamCollectionAdded.data ?? null,\n        },\n        result.right.teamCollectionAdded.parent?.id ?? null\n      )\n    })\n\n    const [teamCollUpdated$, teamCollUpdatedSub] = runGQLSubscription({\n      query: TeamCollectionUpdatedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamCollectionUpdatedSub = teamCollUpdatedSub\n    this.teamCollectionUpdated$ = teamCollUpdated$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Collection Updated Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.updateCollection({\n        id: result.right.teamCollectionUpdated.id,\n        title: result.right.teamCollectionUpdated.title,\n        data: result.right.teamCollectionUpdated.data,\n      })\n    })\n\n    const [teamCollRemoved$, teamCollRemovedSub] = runGQLSubscription({\n      query: TeamCollectionRemovedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamCollectionRemovedSub = teamCollRemovedSub\n    this.teamCollectionRemoved$ = teamCollRemoved$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Collection Removed Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.removeCollection(result.right.teamCollectionRemoved)\n    })\n\n    const [teamReqAdded$, teamReqAddedSub] = runGQLSubscription({\n      query: TeamRequestAddedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamRequestAddedSub = teamReqAddedSub\n    this.teamRequestAdded$ = teamReqAdded$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Request Added Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.addRequest({\n        id: result.right.teamRequestAdded.id,\n        collectionID: result.right.teamRequestAdded.collectionID,\n        request: translateToNewRequest(\n          JSON.parse(result.right.teamRequestAdded.request)\n        ),\n        title: result.right.teamRequestAdded.title,\n      })\n    })\n\n    const [teamReqUpdated$, teamReqUpdatedSub] = runGQLSubscription({\n      query: TeamRequestUpdatedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamRequestUpdatedSub = teamReqUpdatedSub\n    this.teamRequestUpdated$ = teamReqUpdated$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Request Updated Error: ${JSON.stringify(result.left)}`\n        )\n\n      this.updateRequest({\n        id: result.right.teamRequestUpdated.id,\n        collectionID: result.right.teamRequestUpdated.collectionID,\n        request: JSON.parse(result.right.teamRequestUpdated.request),\n        title: result.right.teamRequestUpdated.title,\n      })\n    })\n\n    const [teamReqDeleted$, teamReqDeleted] = runGQLSubscription({\n      query: TeamRequestDeletedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamRequestDeletedSub = teamReqDeleted\n    this.teamRequestDeleted$ = teamReqDeleted$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Request Deleted Error ${JSON.stringify(result.left)}`\n        )\n\n      this.removeRequest(result.right.teamRequestDeleted)\n    })\n\n    const [teamRequestMoved$, teamRequestMoved] = runGQLSubscription({\n      query: TeamRequestMovedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamRequestMovedSub = teamRequestMoved\n    this.teamRequestMoved$ = teamRequestMoved$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Request Move Error ${JSON.stringify(result.left)}`\n        )\n\n      const { requestMoved } = result.right\n\n      const request = {\n        id: requestMoved.id,\n        collectionID: requestMoved.collectionID,\n        title: requestMoved.title,\n        request: JSON.parse(requestMoved.request),\n      }\n\n      this.moveRequest(request)\n    })\n\n    const [teamCollectionMoved$, teamCollectionMoved] = runGQLSubscription({\n      query: TeamCollectionMovedDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    this.teamCollectionMovedSub = teamCollectionMoved\n    this.teamCollectionMoved$ = teamCollectionMoved$.subscribe((result) => {\n      if (E.isLeft(result))\n        throw new Error(\n          `Team Collection Move Error ${JSON.stringify(result.left)}`\n        )\n\n      const { teamCollectionMoved } = result.right\n      const { id, parent, title } = teamCollectionMoved\n\n      const parentID = parent?.id ?? null\n\n      this.moveCollection(id, parentID, title)\n    })\n\n    const [teamRequestOrderUpdated$, teamRequestOrderUpdated] =\n      runGQLSubscription({\n        query: TeamRequestOrderUpdatedDocument,\n        variables: {\n          teamID: this.teamID,\n        },\n      })\n\n    this.teamRequestOrderUpdatedSub = teamRequestOrderUpdated\n    this.teamRequestOrderUpdated$ = teamRequestOrderUpdated$.subscribe(\n      (result) => {\n        if (E.isLeft(result))\n          throw new Error(\n            `Team Request Order Update Error ${JSON.stringify(result.left)}`\n          )\n\n        const { requestOrderUpdated } = result.right\n        const { request } = requestOrderUpdated\n        const { nextRequest } = requestOrderUpdated\n\n        this.updateRequestOrder(\n          request.id,\n          nextRequest ? nextRequest.id : null,\n          nextRequest ? nextRequest.collectionID : request.collectionID\n        )\n      }\n    )\n\n    const [teamCollectionOrderUpdated$, teamCollectionOrderUpdated] =\n      runGQLSubscription({\n        query: TeamCollectionOrderUpdatedDocument,\n        variables: {\n          teamID: this.teamID,\n        },\n      })\n\n    this.teamCollectionOrderUpdatedSub = teamCollectionOrderUpdated\n    this.teamCollectionOrderUpdated$ = teamCollectionOrderUpdated$.subscribe(\n      (result) => {\n        if (E.isLeft(result))\n          throw new Error(\n            `Team Collection Order Update Error ${JSON.stringify(result.left)}`\n          )\n\n        const { collectionOrderUpdated } = result.right\n        const { collection } = collectionOrderUpdated\n        const { nextCollection } = collectionOrderUpdated\n\n        this.updateCollectionOrder(\n          collection.id,\n          nextCollection ? nextCollection.id : null\n        )\n      }\n    )\n  }\n\n  private async getCollectionChildren(\n    collection: TeamCollection\n  ): Promise<TeamCollection[]> {\n    const collections: TeamCollection[] = []\n\n    while (true) {\n      const data = await runGQLQuery({\n        query: GetCollectionChildrenDocument,\n        variables: {\n          collectionID: collection.id,\n          cursor:\n            collections.length > 0\n              ? collections[collections.length - 1].id\n              : undefined,\n        },\n      })\n\n      if (E.isLeft(data)) {\n        throw new Error(\n          `Child Collection Fetch Error for ${collection.id}: ${data.left}`\n        )\n      }\n\n      collections.push(\n        ...data.right.collection!.children.map(\n          (el) =>\n            <TeamCollection>{\n              id: el.id,\n              title: el.title,\n              data: el.data,\n              children: null,\n              requests: null,\n            }\n        )\n      )\n\n      if (data.right.collection!.children.length !== TEAMS_BACKEND_PAGE_SIZE)\n        break\n    }\n\n    return collections\n  }\n\n  private async getCollectionRequests(\n    collection: TeamCollection\n  ): Promise<TeamRequest[]> {\n    const requests: TeamRequest[] = []\n\n    while (true) {\n      const data = await runGQLQuery({\n        query: GetCollectionRequestsDocument,\n        variables: {\n          collectionID: collection.id,\n          cursor:\n            requests.length > 0 ? requests[requests.length - 1].id : undefined,\n        },\n      })\n\n      if (E.isLeft(data)) {\n        throw new Error(`Child Request Fetch Error for ${data}: ${data.left}`)\n      }\n\n      requests.push(\n        ...data.right.requestsInCollection.map<TeamRequest>((el) => {\n          return {\n            id: el.id,\n            collectionID: collection.id,\n            title: el.title,\n            request: translateToNewRequest(JSON.parse(el.request)),\n          }\n        })\n      )\n\n      if (data.right.requestsInCollection.length !== TEAMS_BACKEND_PAGE_SIZE)\n        break\n    }\n\n    return requests\n  }\n\n  /**\n   * Expands a collection on the tree\n   *\n   * When a collection is loaded initially in the adapter, children and requests are not loaded (they will be set to null)\n   * Upon expansion those two fields will be populated\n   *\n   * @param {string} collectionID - The ID of the collection to expand\n   */\n  async expandCollection(collectionID: string): Promise<void> {\n    // TODO: While expanding one collection, block (or queue) the expansion of the other, to avoid race conditions\n    const tree = this.collections$.value\n\n    const collection = findCollInTree(tree, collectionID)\n\n    if (!collection) return\n\n    if (collection.children !== null) return\n\n    this.loadingCollections$.next([\n      ...this.loadingCollections$.getValue(),\n      collectionID,\n    ])\n\n    try {\n      const [collections, requests] = await Promise.all([\n        this.getCollectionChildren(collection),\n        this.getCollectionRequests(collection),\n      ])\n\n      collection.children = collections\n      collection.requests = requests\n\n      // Add to the entity ids set\n      collections.forEach((coll) => this.entityIDs.add(`collection-${coll.id}`))\n      requests.forEach((req) => this.entityIDs.add(`request-${req.id}`))\n\n      this.collections$.next(tree)\n    } finally {\n      this.loadingCollections$.next(\n        this.loadingCollections$.getValue().filter((x) => x !== collectionID)\n      )\n    }\n  }\n\n  /**\n   * Used to obtain the inherited auth and headers for a given folder path, used for both REST and GraphQL team collections\n   * @param folderPath the path of the folder to cascade the auth from\n   * @returns the inherited auth and headers for the given folder path\n   */\n  public cascadeParentCollectionForHeaderAuth(folderPath: string) {\n    let auth: HoppInheritedProperty[\"auth\"] = {\n      parentID: folderPath ?? \"\",\n      parentName: \"\",\n      inheritedAuth: {\n        authType: \"none\",\n        authActive: true,\n      },\n    }\n    const headers: HoppInheritedProperty[\"headers\"] = []\n\n    if (!folderPath) return { auth, headers }\n\n    const path = folderPath.split(\"/\")\n\n    // Check if the path is empty or invalid\n    if (!path || path.length === 0) {\n      console.error(\"Invalid path:\", folderPath)\n      return { auth, headers }\n    }\n\n    // Loop through the path and get the last parent folder with authType other than 'inherit'\n    for (let i = 0; i < path.length; i++) {\n      const parentFolder = findCollInTree(this.collections$.value, path[i])\n\n      // Check if parentFolder is undefined or null\n      if (!parentFolder) {\n        console.error(\"Parent folder not found for path:\", path)\n        return { auth, headers }\n      }\n\n      const data: {\n        auth: HoppRESTAuth\n        headers: HoppRESTHeader[]\n      } = parentFolder.data\n        ? JSON.parse(parentFolder.data)\n        : {\n            auth: null,\n            headers: null,\n          }\n\n      if (!data.auth) {\n        data.auth = {\n          authType: \"inherit\",\n          authActive: true,\n        }\n        auth.parentID = path.slice(0, i + 1).join(\"/\")\n        auth.parentName = parentFolder.title\n      }\n\n      if (!data.headers) data.headers = []\n\n      const parentFolderAuth = data.auth\n      const parentFolderHeaders = data.headers\n\n      if (\n        parentFolderAuth?.authType === \"inherit\" &&\n        path.slice(0, i + 1).length === 1\n      ) {\n        auth = {\n          parentID: path.slice(0, i + 1).join(\"/\"),\n          parentName: parentFolder.title,\n          inheritedAuth: auth.inheritedAuth,\n        }\n      }\n\n      if (parentFolderAuth?.authType !== \"inherit\") {\n        auth = {\n          parentID: path.slice(0, i + 1).join(\"/\"),\n          parentName: parentFolder.title,\n          inheritedAuth: parentFolderAuth,\n        }\n      }\n\n      // Update headers, overwriting duplicates by key\n      if (parentFolderHeaders) {\n        const activeHeaders = parentFolderHeaders.filter((h) => h.active)\n        activeHeaders.forEach((header) => {\n          const index = headers.findIndex(\n            (h) => h.inheritedHeader?.key === header.key\n          )\n          const currentPath = path.slice(0, i + 1).join(\"/\")\n          if (index !== -1) {\n            // Replace the existing header with the same key\n            headers[index] = {\n              parentID: currentPath,\n              parentName: parentFolder.title,\n              inheritedHeader: header,\n            }\n          } else {\n            headers.push({\n              parentID: currentPath,\n              parentName: parentFolder.title,\n              inheritedHeader: header,\n            })\n          }\n        })\n      }\n    }\n\n    return { auth, headers }\n  }\n}\n","import * as E from \"fp-ts/Either\"\nimport { BehaviorSubject, Subscription } from \"rxjs\"\nimport { Subscription as WSubscription } from \"wonka\"\nimport { pipe } from \"fp-ts/function\"\nimport { GQLError, runGQLQuery, runGQLSubscription } from \"../backend/GQLClient\"\nimport {\n  GetTeamEnvironmentsDocument,\n  TeamEnvironmentCreatedDocument,\n  TeamEnvironmentDeletedDocument,\n  TeamEnvironmentUpdatedDocument,\n} from \"../backend/graphql\"\nimport { TeamEnvironment } from \"./TeamEnvironment\"\n\ntype EntityType = \"environment\"\ntype EntityID = `${EntityType}-${string}`\nexport default class TeamEnvironmentAdapter {\n  error$: BehaviorSubject<GQLError<string> | null>\n  loading$: BehaviorSubject<boolean>\n  teamEnvironmentList$: BehaviorSubject<TeamEnvironment[]>\n\n  /**\n   * Stores the entity (environments) ids of all the loaded entities.\n   * Used for preventing duplication of data which definitely is not possible (duplication due to network problems etc.)\n   */\n  private entityIDs: Set<EntityID>\n\n  private isDispose: boolean\n\n  private teamEnvironmentCreated$: Subscription | null\n  private teamEnvironmentUpdated$: Subscription | null\n  private teamEnvironmentDeleted$: Subscription | null\n\n  private teamEnvironmentCreatedSub: WSubscription | null\n  private teamEnvironmentUpdatedSub: WSubscription | null\n  private teamEnvironmentDeletedSub: WSubscription | null\n\n  constructor(private teamID: string | undefined) {\n    this.error$ = new BehaviorSubject<GQLError<string> | null>(null)\n    this.loading$ = new BehaviorSubject<boolean>(false)\n    this.teamEnvironmentList$ = new BehaviorSubject<TeamEnvironment[]>([])\n    this.isDispose = true\n\n    this.entityIDs = new Set()\n\n    this.teamEnvironmentCreated$ = null\n    this.teamEnvironmentDeleted$ = null\n    this.teamEnvironmentUpdated$ = null\n\n    this.teamEnvironmentCreatedSub = null\n    this.teamEnvironmentDeletedSub = null\n    this.teamEnvironmentUpdatedSub = null\n\n    if (teamID) this.initialize()\n  }\n\n  unsubscribeSubscriptions() {\n    this.teamEnvironmentCreated$?.unsubscribe()\n    this.teamEnvironmentDeleted$?.unsubscribe()\n    this.teamEnvironmentUpdated$?.unsubscribe()\n\n    this.teamEnvironmentCreatedSub?.unsubscribe()\n    this.teamEnvironmentDeletedSub?.unsubscribe()\n    this.teamEnvironmentUpdatedSub?.unsubscribe()\n  }\n\n  changeTeamID(newTeamID: string | undefined) {\n    this.teamID = newTeamID\n    this.teamEnvironmentList$.next([])\n    this.loading$.next(false)\n\n    this.entityIDs.clear()\n\n    this.unsubscribeSubscriptions()\n\n    if (this.teamID) this.initialize()\n  }\n\n  async initialize() {\n    if (!this.isDispose) throw new Error(`Adapter is already initialized`)\n\n    await this.fetchList()\n    this.registerSubscriptions()\n  }\n\n  public dispose() {\n    if (this.isDispose) throw new Error(`Adapter has been disposed`)\n\n    this.isDispose = true\n    this.unsubscribeSubscriptions()\n  }\n\n  async fetchList() {\n    if (this.teamID === undefined) throw new Error(\"Team ID is null\")\n\n    this.loading$.next(true)\n\n    const results: TeamEnvironment[] = []\n\n    const result = await runGQLQuery({\n      query: GetTeamEnvironmentsDocument,\n      variables: {\n        teamID: this.teamID,\n      },\n    })\n\n    if (E.isLeft(result)) {\n      this.error$.next(result.left)\n      this.loading$.next(false)\n      console.error(result.left)\n      throw new Error(`Failed fetching team environments: ${result.left}`)\n    }\n\n    if (result.right.team) {\n      results.push(\n        ...result.right.team.teamEnvironments.map(\n          (x) =>\n            <TeamEnvironment>{\n              id: x.id,\n              teamID: x.teamID,\n              environment: {\n                v: 1,\n                id: x.id,\n                name: x.name,\n                variables: JSON.parse(x.variables),\n              },\n            }\n        )\n      )\n    }\n\n    // Add all the environments to the entity ids list\n    results.forEach((env) => this.entityIDs.add(`environment-${env.id}`))\n\n    this.teamEnvironmentList$.next(results)\n\n    this.loading$.next(false)\n  }\n\n  private createNewTeamEnvironment(newEnvironment: TeamEnvironment) {\n    // Check if we have it already in the entity tree, if so, we don't need it again\n    if (this.entityIDs.has(`environment-${newEnvironment.id}`)) return\n\n    const teamEnvironments = this.teamEnvironmentList$.value\n\n    teamEnvironments.push(newEnvironment)\n\n    // Add to entity ids set\n    this.entityIDs.add(`environment-${newEnvironment.id}`)\n\n    this.teamEnvironmentList$.next(teamEnvironments)\n  }\n\n  private deleteTeamEnvironment(envId: string) {\n    const teamEnvironments = this.teamEnvironmentList$.value.filter(\n      ({ id }) => id !== envId\n    )\n    this.entityIDs.delete(`environment-${envId}`)\n    this.teamEnvironmentList$.next(teamEnvironments)\n  }\n\n  private updateTeamEnvironment(updatedEnvironment: TeamEnvironment) {\n    const teamEnvironments = this.teamEnvironmentList$.value\n\n    const environmentFound = teamEnvironments.find(\n      ({ id }) => id === updatedEnvironment.id\n    )\n\n    if (!environmentFound) return\n\n    Object.assign(environmentFound, updatedEnvironment)\n\n    this.teamEnvironmentList$.next(teamEnvironments)\n  }\n\n  private registerSubscriptions() {\n    if (this.teamID === undefined) return\n    const [teamEnvironmentCreated$, teamEnvironmentCreatedSub] =\n      runGQLSubscription({\n        query: TeamEnvironmentCreatedDocument,\n        variables: {\n          teamID: this.teamID,\n        },\n      })\n\n    this.teamEnvironmentCreatedSub = teamEnvironmentCreatedSub\n\n    this.teamEnvironmentCreated$ = teamEnvironmentCreated$.subscribe(\n      (result) => {\n        if (E.isLeft(result)) {\n          console.error(result.left)\n          throw new Error(`Team Environment Create Error ${result.left}`)\n        }\n        this.createNewTeamEnvironment(\n          pipe(\n            result.right.teamEnvironmentCreated,\n            (x) =>\n              <TeamEnvironment>{\n                id: x.id,\n                teamID: x.teamID,\n                environment: {\n                  v: 1,\n                  id: x.id,\n                  name: x.name,\n                  variables: JSON.parse(x.variables),\n                },\n              }\n          )\n        )\n      }\n    )\n\n    const [teamEnvironmentDeleted$, teamEnvironmentDeletedSub] =\n      runGQLSubscription({\n        query: TeamEnvironmentDeletedDocument,\n        variables: {\n          teamID: this.teamID,\n        },\n      })\n\n    this.teamEnvironmentDeletedSub = teamEnvironmentDeletedSub\n\n    this.teamEnvironmentDeleted$ = teamEnvironmentDeleted$.subscribe(\n      (result) => {\n        if (E.isLeft(result)) {\n          console.error(result.left)\n          throw new Error(`Team Environment Delete Error ${result.left}`)\n        }\n        this.deleteTeamEnvironment(result.right.teamEnvironmentDeleted.id)\n      }\n    )\n\n    const [teamEnvironmentUpdated$, teamEnvironmentUpdatedSub] =\n      runGQLSubscription({\n        query: TeamEnvironmentUpdatedDocument,\n        variables: {\n          teamID: this.teamID,\n        },\n      })\n\n    this.teamEnvironmentUpdatedSub = teamEnvironmentUpdatedSub\n\n    this.teamEnvironmentUpdated$ = teamEnvironmentUpdated$.subscribe(\n      (result) => {\n        if (E.isLeft(result)) {\n          console.error(result.left)\n          throw new Error(`Team Environment Update Error ${result.left}`)\n        }\n        this.updateTeamEnvironment(\n          pipe(\n            result.right.teamEnvironmentUpdated,\n            (x) =>\n              <TeamEnvironment>{\n                id: x.id,\n                teamID: x.teamID,\n                environment: {\n                  v: 1,\n                  id: x.id,\n                  name: x.name,\n                  variables: JSON.parse(x.variables),\n                },\n              }\n          )\n        )\n      }\n    )\n  }\n}\n","<template>\n  <div\n    :class=\"{\n      'rounded border border-divider': saveRequest,\n      'bg-primaryDark':\n        draggingToRoot && currentReorderingStatus.type !== 'request',\n    }\"\n    class=\"flex-1\"\n    @drop.prevent=\"dropToRoot\"\n    @dragover.prevent=\"draggingToRoot = true\"\n    @dragend=\"draggingToRoot = false\"\n  >\n    <div\n      class=\"sticky z-10 flex flex-shrink-0 flex-col overflow-x-auto bg-primary border-b border-dividerLight\"\n      :class=\"{ 'rounded-t': saveRequest }\"\n      :style=\"\n        saveRequest ? 'top: calc(-1 * var(--line-height-body))' : 'top: 0'\n      \"\n    >\n      <WorkspaceCurrent :section=\"t('tab.collections')\" />\n      <input\n        v-model=\"filterTexts\"\n        type=\"search\"\n        autocomplete=\"off\"\n        class=\"flex w-full bg-transparent px-4 py-2 h-8\"\n        :placeholder=\"t('action.search')\"\n      />\n    </div>\n    <CollectionsMyCollections\n      v-if=\"collectionsType.type === 'my-collections'\"\n      :collections-type=\"collectionsType\"\n      :filtered-collections=\"filteredCollections\"\n      :filter-text=\"filterTexts\"\n      :save-request=\"saveRequest\"\n      :picked=\"picked\"\n      @add-folder=\"addFolder\"\n      @add-request=\"addRequest\"\n      @edit-collection=\"editCollection\"\n      @edit-folder=\"editFolder\"\n      @edit-properties=\"editProperties\"\n      @export-data=\"exportData\"\n      @remove-collection=\"removeCollection\"\n      @remove-folder=\"removeFolder\"\n      @share-request=\"shareRequest\"\n      @drop-collection=\"dropCollection\"\n      @update-request-order=\"updateRequestOrder\"\n      @update-collection-order=\"updateCollectionOrder\"\n      @edit-request=\"editRequest\"\n      @duplicate-request=\"duplicateRequest\"\n      @remove-request=\"removeRequest\"\n      @select-request=\"selectRequest\"\n      @select=\"selectPicked\"\n      @drop-request=\"dropRequest\"\n      @display-modal-add=\"displayModalAdd(true)\"\n      @display-modal-import-export=\"displayModalImportExport(true)\"\n    />\n    <CollectionsTeamCollections\n      v-else\n      :collections-type=\"collectionsType\"\n      :team-collection-list=\"\n        filterTexts.length > 0 ? teamsSearchResults : teamCollectionList\n      \"\n      :team-loading-collections=\"\n        filterTexts.length > 0\n          ? collectionsBeingLoadedFromSearch\n          : teamLoadingCollections\n      \"\n      :filter-text=\"filterTexts\"\n      :export-loading=\"exportLoading\"\n      :duplicate-loading=\"duplicateLoading\"\n      :save-request=\"saveRequest\"\n      :picked=\"picked\"\n      :collection-move-loading=\"collectionMoveLoading\"\n      :request-move-loading=\"requestMoveLoading\"\n      @add-request=\"addRequest\"\n      @add-folder=\"addFolder\"\n      @edit-collection=\"editCollection\"\n      @edit-folder=\"editFolder\"\n      @edit-properties=\"editProperties\"\n      @export-data=\"exportData\"\n      @remove-collection=\"removeCollection\"\n      @remove-folder=\"removeFolder\"\n      @share-request=\"shareRequest\"\n      @edit-request=\"editRequest\"\n      @duplicate-request=\"duplicateRequest\"\n      @remove-request=\"removeRequest\"\n      @select-request=\"selectRequest\"\n      @select=\"selectPicked\"\n      @drop-request=\"dropRequest\"\n      @drop-collection=\"dropCollection\"\n      @update-request-order=\"updateRequestOrder\"\n      @update-collection-order=\"updateCollectionOrder\"\n      @expand-team-collection=\"expandTeamCollection\"\n      @display-modal-add=\"displayModalAdd(true)\"\n      @display-modal-import-export=\"displayModalImportExport(true)\"\n      @collection-click=\"handleCollectionClick\"\n      @run-collection=\"runCollectionHandler\"\n    />\n    <div\n      class=\"py-15 hidden flex-1 flex-col items-center justify-center bg-primaryDark px-4 text-secondaryLight\"\n      :class=\"{\n        '!flex': draggingToRoot && currentReorderingStatus.type !== 'request',\n      }\"\n    >\n      <icon-lucide-list-end class=\"svg-icons !h-8 !w-8\" />\n    </div>\n    <CollectionsAdd\n      :show=\"showModalAdd\"\n      :loading-state=\"modalLoadingState\"\n      @submit=\"addNewRootCollection\"\n      @hide-modal=\"displayModalAdd(false)\"\n    />\n    <CollectionsAddRequest\n      :show=\"showModalAddRequest\"\n      :loading-state=\"modalLoadingState\"\n      @add-request=\"onAddRequest\"\n      @hide-modal=\"displayModalAddRequest(false)\"\n    />\n    <CollectionsAddFolder\n      :show=\"showModalAddFolder\"\n      :loading-state=\"modalLoadingState\"\n      @add-folder=\"onAddFolder\"\n      @hide-modal=\"displayModalAddFolder(false)\"\n    />\n    <CollectionsEdit\n      :show=\"showModalEditCollection\"\n      :editing-collection-name=\"editingCollectionName ?? ''\"\n      :loading-state=\"modalLoadingState\"\n      @hide-modal=\"displayModalEditCollection(false)\"\n      @submit=\"updateEditingCollection\"\n    />\n    <CollectionsEditFolder\n      :show=\"showModalEditFolder\"\n      :editing-folder-name=\"editingFolderName ?? ''\"\n      :loading-state=\"modalLoadingState\"\n      @submit=\"updateEditingFolder\"\n      @hide-modal=\"displayModalEditFolder(false)\"\n    />\n    <CollectionsEditRequest\n      v-model=\"editingRequestName\"\n      :show=\"showModalEditRequest\"\n      :loading-state=\"modalLoadingState\"\n      @submit=\"updateEditingRequest\"\n      @hide-modal=\"displayModalEditRequest(false)\"\n    />\n    <HoppSmartConfirmModal\n      :show=\"showConfirmModal\"\n      :title=\"confirmModalTitle\"\n      :loading-state=\"modalLoadingState\"\n      @hide-modal=\"showConfirmModal = false\"\n      @resolve=\"resolveConfirmModal\"\n    />\n\n    <CollectionsImportExport\n      v-if=\"showModalImportExport\"\n      :collections-type=\"collectionsType\"\n      @hide-modal=\"displayModalImportExport(false)\"\n    />\n\n    <TeamsAdd\n      :show=\"showTeamModalAdd\"\n      @hide-modal=\"displayTeamModalAdd(false)\"\n    />\n    <CollectionsProperties\n      v-model=\"collectionPropertiesModalActiveTab\"\n      :show=\"showModalEditProperties\"\n      :editing-properties=\"editingProperties\"\n      :show-details=\"collectionsType.type === 'team-collections'\"\n      source=\"REST\"\n      @hide-modal=\"displayModalEditProperties(false)\"\n      @set-collection-properties=\"setCollectionProperties\"\n    />\n\n    <!-- `selectedCollectionID` is guaranteed to be a string when `showCollectionsRunnerModal` is `true` -->\n    <CollectionsRunner\n      v-if=\"showCollectionsRunnerModal\"\n      :collection-i-d=\"selectedCollectionID!\"\n      :environment-i-d=\"activeEnvironmentID\"\n      :selected-environment-index=\"selectedEnvironmentIndex\"\n      @hide-modal=\"showCollectionsRunnerModal = false\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport {\n  HoppCollection,\n  HoppRESTAuth,\n  HoppRESTHeaders,\n  HoppRESTRequest,\n  makeCollection,\n} from \"@hoppscotch/data\"\nimport { useService } from \"dioc/vue\"\nimport * as TE from \"fp-ts/TaskEither\"\nimport { pipe } from \"fp-ts/function\"\nimport { cloneDeep, debounce, isEqual } from \"lodash-es\"\nimport { PropType, computed, nextTick, onMounted, ref, watch } from \"vue\"\nimport { useReadonlyStream, useStream } from \"~/composables/stream\"\nimport { defineActionHandler, invokeAction } from \"~/helpers/actions\"\nimport { GQLError } from \"~/helpers/backend/GQLClient\"\nimport {\n  getCompleteCollectionTree,\n  teamCollToHoppRESTColl,\n} from \"~/helpers/backend/helpers\"\nimport {\n  createChildCollection,\n  createNewRootCollection,\n  deleteCollection,\n  moveRESTTeamCollection,\n  updateOrderRESTTeamCollection,\n  updateTeamCollection,\n} from \"~/helpers/backend/mutations/TeamCollection\"\nimport {\n  createRequestInCollection,\n  deleteTeamRequest,\n  moveRESTTeamRequest,\n  updateOrderRESTTeamRequest,\n  updateTeamRequest,\n} from \"~/helpers/backend/mutations/TeamRequest\"\nimport {\n  getFoldersByPath,\n  resetTeamRequestsContext,\n  resolveSaveContextOnCollectionReorder,\n  updateInheritedPropertiesForAffectedRequests,\n  updateSaveContextForAffectedRequests,\n} from \"~/helpers/collection/collection\"\nimport {\n  getRequestsByPath,\n  resolveSaveContextOnRequestReorder,\n} from \"~/helpers/collection/request\"\nimport { TeamCollection } from \"~/helpers/teams/TeamCollection\"\nimport TeamCollectionAdapter from \"~/helpers/teams/TeamCollectionAdapter\"\nimport TeamEnvironmentAdapter from \"~/helpers/teams/TeamEnvironmentAdapter\"\nimport { TeamSearchService } from \"~/helpers/teams/TeamsSearch.service\"\nimport { HoppInheritedProperty } from \"~/helpers/types/HoppInheritedProperties\"\nimport { Picked } from \"~/helpers/types/HoppPicked\"\nimport {\n  addRESTCollection,\n  addRESTFolder,\n  cascadeParentCollectionForHeaderAuth,\n  editRESTCollection,\n  editRESTFolder,\n  editRESTRequest,\n  moveRESTFolder,\n  moveRESTRequest,\n  navigateToFolderWithIndexPath,\n  removeRESTCollection,\n  removeRESTFolder,\n  removeRESTRequest,\n  restCollectionStore,\n  restCollections$,\n  saveRESTRequestAs,\n  updateRESTCollectionOrder,\n  updateRESTRequestOrder,\n} from \"~/newstore/collections\"\nimport {\n  selectedEnvironmentIndex$,\n  setSelectedEnvironmentIndex,\n} from \"~/newstore/environments\"\nimport { useLocalState } from \"~/newstore/localstate\"\nimport { currentReorderingStatus$ } from \"~/newstore/reordering\"\nimport { platform } from \"~/platform\"\nimport { PersistedOAuthConfig } from \"~/services/oauth/oauth.service\"\nimport { PersistenceService } from \"~/services/persistence\"\nimport { RESTTabService } from \"~/services/tab/rest\"\nimport { TeamWorkspace, WorkspaceService } from \"~/services/workspace.service\"\nimport { RESTOptionTabs } from \"../http/RequestOptions.vue\"\nimport { Collection as NodeCollection } from \"./MyCollections.vue\"\nimport { EditingProperties } from \"./Properties.vue\"\n\nconst t = useI18n()\nconst toast = useToast()\nconst tabs = useService(RESTTabService)\n\nconst props = defineProps({\n  saveRequest: {\n    type: Boolean,\n    default: false,\n    required: false,\n  },\n  picked: {\n    type: Object as PropType<Picked | null>,\n    default: null,\n    required: false,\n  },\n})\n\nconst emit = defineEmits<{\n  (event: \"select\", payload: Picked | null): void\n  (event: \"update-team\", team: TeamWorkspace): void\n  (event: \"update-collection-type\", type: CollectionType[\"type\"]): void\n}>()\n\ntype CollectionType =\n  | {\n      type: \"team-collections\"\n      selectedTeam: TeamWorkspace\n    }\n  | { type: \"my-collections\"; selectedTeam: undefined }\n\nconst collectionsType = ref<CollectionType>({\n  type: \"my-collections\",\n  selectedTeam: undefined,\n})\n\n// Collection Data\nconst editingCollection = ref<HoppCollection | TeamCollection | null>(null)\nconst editingCollectionName = ref<string | null>(null)\nconst editingCollectionIndex = ref<number | null>(null)\nconst editingCollectionID = ref<string | null>(null)\nconst editingFolder = ref<HoppCollection | TeamCollection | null>(null)\nconst editingFolderName = ref<string | null>(null)\nconst editingFolderPath = ref<string | null>(null)\nconst editingRequest = ref<HoppRESTRequest | null>(null)\nconst editingRequestName = ref(\"\")\nconst editingRequestIndex = ref<number | null>(null)\nconst editingRequestID = ref<string | null>(null)\n\nconst editingProperties = ref<EditingProperties>({\n  collection: null,\n  isRootCollection: false,\n  path: \"\",\n  inheritedProperties: undefined,\n})\n\nconst confirmModalTitle = ref<string | null>(null)\n\nconst filterTexts = ref(\"\")\n\nconst currentUser = useReadonlyStream(\n  platform.auth.getCurrentUserStream(),\n  platform.auth.getCurrentUser()\n)\nconst myCollections = useReadonlyStream(restCollections$, [], \"deep\")\n\n// Draging\nconst draggingToRoot = ref(false)\nconst collectionMoveLoading = ref<string[]>([])\nconst requestMoveLoading = ref<string[]>([])\n\n// TeamList-Adapter\nconst workspaceService = useService(WorkspaceService)\nconst teamListAdapter = workspaceService.acquireTeamListAdapter(null)\nconst REMEMBERED_TEAM_ID = useLocalState(\"REMEMBERED_TEAM_ID\")\n\n// Team Collection Adapter\nconst teamCollectionAdapter = new TeamCollectionAdapter(null)\nconst teamCollectionList = useReadonlyStream(\n  teamCollectionAdapter.collections$,\n  []\n)\nconst teamLoadingCollections = useReadonlyStream(\n  teamCollectionAdapter.loadingCollections$,\n  []\n)\nconst teamEnvironmentAdapter = new TeamEnvironmentAdapter(undefined)\nconst teamEnvironmentList = useReadonlyStream(\n  teamEnvironmentAdapter.teamEnvironmentList$,\n  []\n)\nconst selectedEnvironmentIndex = useStream(\n  selectedEnvironmentIndex$,\n  { type: \"NO_ENV_SELECTED\" },\n  setSelectedEnvironmentIndex\n)\n\nconst {\n  cascadeParentCollectionForHeaderAuthForSearchResults,\n  searchTeams,\n  teamsSearchResults,\n  teamsSearchResultsLoading,\n  expandCollection,\n  expandingCollections,\n} = useService(TeamSearchService)\n\nwatch(teamsSearchResults, (newSearchResults) => {\n  if (newSearchResults.length === 1 && filterTexts.value.length > 0) {\n    expandCollection(newSearchResults[0].id)\n  }\n})\n\nconst debouncedSearch = debounce(searchTeams, 400)\n\nconst collectionsBeingLoadedFromSearch = computed(() => {\n  const collections = []\n\n  if (teamsSearchResultsLoading.value) {\n    collections.push(\"root\")\n  }\n\n  collections.push(...expandingCollections.value)\n\n  return collections\n})\n\nwatch(\n  filterTexts,\n  (newFilterText) => {\n    if (collectionsType.value.type === \"team-collections\") {\n      const selectedTeamID = collectionsType.value.selectedTeam?.teamID\n\n      selectedTeamID &&\n        debouncedSearch(newFilterText, selectedTeamID)?.catch(() => {})\n    }\n  },\n  {\n    immediate: true,\n  }\n)\nconst persistenceService = useService(PersistenceService)\n\nconst collectionPropertiesModalActiveTab = ref<RESTOptionTabs>(\"headers\")\n\nonMounted(() => {\n  const localOAuthTempConfig =\n    persistenceService.getLocalConfig(\"oauth_temp_config\")\n\n  if (!localOAuthTempConfig) {\n    return\n  }\n\n  const { context, source, token }: PersistedOAuthConfig =\n    JSON.parse(localOAuthTempConfig)\n\n  if (source === \"GraphQL\") {\n    return\n  }\n\n  if (context?.type === \"collection-properties\") {\n    // load the unsaved editing properties\n    const unsavedCollectionPropertiesString = persistenceService.getLocalConfig(\n      \"unsaved_collection_properties\"\n    )\n\n    if (unsavedCollectionPropertiesString) {\n      const unsavedCollectionProperties: EditingProperties = JSON.parse(\n        unsavedCollectionPropertiesString\n      )\n\n      const auth = unsavedCollectionProperties.collection?.auth\n\n      if (auth?.authType === \"oauth-2\") {\n        const grantTypeInfo = auth.grantTypeInfo\n\n        grantTypeInfo && (grantTypeInfo.token = token ?? \"\")\n      }\n\n      editingProperties.value = unsavedCollectionProperties\n    }\n\n    persistenceService.removeLocalConfig(\"oauth_temp_config\")\n    collectionPropertiesModalActiveTab.value = \"authorization\"\n    showModalEditProperties.value = true\n  }\n})\n\nconst switchToMyCollections = () => {\n  collectionsType.value.type = \"my-collections\"\n  collectionsType.value.selectedTeam = undefined\n  teamCollectionAdapter.changeTeamID(null)\n}\n\n/**\n * right now, for search results, we rely on collection click + isOpen to expand the collection\n */\nconst handleCollectionClick = (payload: {\n  collectionID: string\n  isOpen: boolean\n}) => {\n  if (\n    filterTexts.value.length > 0 &&\n    teamsSearchResults.value.length &&\n    payload.isOpen\n  ) {\n    expandCollection(payload.collectionID)\n    return\n  }\n}\n\nconst expandTeamCollection = (collectionID: string) => {\n  if (filterTexts.value.length > 0 && teamsSearchResults.value) {\n    return\n  }\n\n  teamCollectionAdapter.expandCollection(collectionID)\n}\n\nconst updateSelectedTeam = (team: TeamWorkspace) => {\n  if (team) {\n    collectionsType.value.type = \"team-collections\"\n    teamCollectionAdapter.changeTeamID(team.teamID)\n    collectionsType.value.selectedTeam = team\n    REMEMBERED_TEAM_ID.value = team.teamID\n    emit(\"update-team\", team)\n    emit(\"update-collection-type\", \"team-collections\")\n  }\n}\n\nconst workspace = workspaceService.currentWorkspace\n\n// Used to switch collection type and team when user switch workspace in the global workspace switcher\nwatch(\n  workspace,\n  (newWorkspace) => {\n    if (newWorkspace.type === \"personal\") {\n      switchToMyCollections()\n    } else if (newWorkspace.type === \"team\") {\n      updateSelectedTeam(newWorkspace)\n\n      teamEnvironmentAdapter.changeTeamID(newWorkspace.teamID)\n    }\n  },\n  {\n    immediate: true,\n  }\n)\n\n// Switch to my-collections and reset the team collection when user logout\nwatch(\n  () => currentUser.value,\n  (user) => {\n    if (!user) {\n      switchToMyCollections()\n    }\n  }\n)\n\nconst currentReorderingStatus = useReadonlyStream(currentReorderingStatus$, {\n  type: \"collection\",\n  id: \"\",\n  parentID: \"\",\n})\n\nconst hasTeamWriteAccess = computed(() => {\n  if (collectionsType.value.type !== \"team-collections\") {\n    return false\n  }\n\n  const role = collectionsType.value.selectedTeam?.role\n  return role === \"OWNER\" || role === \"EDITOR\"\n})\n\nconst filteredCollections = computed(() => {\n  const collections =\n    collectionsType.value.type === \"my-collections\" ? myCollections.value : []\n\n  if (filterTexts.value === \"\") return collections\n\n  if (collectionsType.value.type === \"team-collections\") return []\n\n  const filterText = filterTexts.value.toLowerCase()\n  const filteredCollections = []\n\n  const isMatch = (text: string) => text.toLowerCase().includes(filterText)\n\n  for (const collection of collections) {\n    const filteredRequests = []\n    const filteredFolders = []\n    for (const request of collection.requests) {\n      if (isMatch(request.name)) filteredRequests.push(request)\n    }\n    for (const folder of collection.folders) {\n      if (isMatch(folder.name)) filteredFolders.push(folder)\n      const filteredFolderRequests = []\n      for (const request of folder.requests) {\n        if (isMatch(request.name)) filteredFolderRequests.push(request)\n      }\n      if (filteredFolderRequests.length > 0) {\n        const filteredFolder = Object.assign({}, folder)\n        filteredFolder.requests = filteredFolderRequests\n        filteredFolders.push(filteredFolder)\n      }\n    }\n\n    if (\n      filteredRequests.length + filteredFolders.length > 0 ||\n      isMatch(collection.name)\n    ) {\n      const filteredCollection = Object.assign({}, collection)\n      filteredCollection.requests = filteredRequests\n      filteredCollection.folders = filteredFolders\n      filteredCollections.push(filteredCollection)\n    }\n  }\n\n  return filteredCollections\n})\n\nconst isSelected = ({\n  collectionIndex,\n  folderPath,\n  requestIndex,\n  collectionID,\n  folderID,\n  requestID,\n}: {\n  collectionIndex?: number | undefined\n  folderPath?: string | undefined\n  requestIndex?: number | undefined\n  collectionID?: string | undefined\n  folderID?: string | undefined\n  requestID?: string | undefined\n}) => {\n  if (collectionIndex !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-collection\" &&\n      props.picked.collectionIndex === collectionIndex\n    )\n  } else if (requestIndex !== undefined && folderPath !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-request\" &&\n      props.picked.folderPath === folderPath &&\n      props.picked.requestIndex === requestIndex\n    )\n  } else if (folderPath !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"my-folder\" &&\n      props.picked.folderPath === folderPath\n    )\n  } else if (collectionID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-collection\" &&\n      props.picked.collectionID === collectionID\n    )\n  } else if (requestID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-request\" &&\n      props.picked.requestID === requestID\n    )\n  } else if (folderID !== undefined) {\n    return (\n      props.picked &&\n      props.picked.pickedType === \"teams-folder\" &&\n      props.picked.folderID === folderID\n    )\n  }\n}\n\nconst modalLoadingState = ref(false)\nconst exportLoading = ref(false)\nconst duplicateLoading = ref(false)\n\nconst showModalAdd = ref(false)\nconst showModalAddRequest = ref(false)\nconst showModalAddFolder = ref(false)\nconst showModalEditCollection = ref(false)\nconst showModalEditFolder = ref(false)\nconst showModalEditRequest = ref(false)\nconst showModalImportExport = ref(false)\nconst showModalEditProperties = ref(false)\nconst showConfirmModal = ref(false)\nconst showTeamModalAdd = ref(false)\n\nconst showCollectionsRunnerModal = ref(false)\nconst selectedCollectionID = ref<string | null>(null)\nconst activeEnvironmentID = ref<string | null | undefined>(null)\n\nconst displayModalAdd = (show: boolean) => {\n  showModalAdd.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalAddRequest = (show: boolean) => {\n  showModalAddRequest.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalAddFolder = (show: boolean) => {\n  showModalAddFolder.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalEditCollection = (show: boolean) => {\n  showModalEditCollection.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalEditFolder = (show: boolean) => {\n  showModalEditFolder.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalEditRequest = (show: boolean) => {\n  showModalEditRequest.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalImportExport = (show: boolean) => {\n  showModalImportExport.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayModalEditProperties = (show: boolean) => {\n  showModalEditProperties.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayConfirmModal = (show: boolean) => {\n  showConfirmModal.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst displayTeamModalAdd = (show: boolean) => {\n  showTeamModalAdd.value = show\n\n  teamListAdapter.fetchList()\n}\n\nconst addNewRootCollection = (name: string) => {\n  if (collectionsType.value.type === \"my-collections\") {\n    addRESTCollection(\n      makeCollection({\n        name,\n        folders: [],\n        requests: [],\n        headers: [],\n        auth: {\n          authType: \"none\",\n          authActive: true,\n        },\n      })\n    )\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_CREATE_COLLECTION\",\n      platform: \"rest\",\n      workspaceType: \"personal\",\n      isRootCollection: true,\n    })\n\n    displayModalAdd(false)\n  } else if (hasTeamWriteAccess.value) {\n    if (!collectionsType.value.selectedTeam) return\n    modalLoadingState.value = true\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_CREATE_COLLECTION\",\n      platform: \"rest\",\n      workspaceType: \"team\",\n      isRootCollection: true,\n    })\n\n    pipe(\n      createNewRootCollection(name, collectionsType.value.selectedTeam.teamID),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"collection.created\"))\n          displayModalAdd(false)\n        }\n      )\n    )()\n  }\n}\n\nconst addRequest = (payload: {\n  path: string\n  folder: HoppCollection | TeamCollection\n}) => {\n  const { path, folder } = payload\n  editingFolder.value = folder\n  editingFolderPath.value = path\n  displayModalAddRequest(true)\n}\n\nconst onAddRequest = (requestName: string) => {\n  const newRequest = {\n    ...cloneDeep(tabs.currentActiveTab.value.document.request),\n    name: requestName,\n  }\n\n  const path = editingFolderPath.value\n  if (!path) return\n  if (collectionsType.value.type === \"my-collections\") {\n    const insertionIndex = saveRESTRequestAs(path, newRequest)\n\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(path, \"rest\")\n\n    tabs.createNewTab({\n      request: newRequest,\n      isDirty: false,\n      saveContext: {\n        originLocation: \"user-collection\",\n        folderPath: path,\n        requestIndex: insertionIndex,\n      },\n      inheritedProperties: {\n        auth,\n        headers,\n      },\n    })\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      workspaceType: \"personal\",\n      createdNow: true,\n      platform: \"rest\",\n    })\n\n    displayModalAddRequest(false)\n  } else if (hasTeamWriteAccess.value) {\n    const folder = editingFolder.value\n\n    if (!folder || !collectionsType.value.selectedTeam) return\n    if (!folder.id) return\n\n    modalLoadingState.value = true\n\n    const data = {\n      request: JSON.stringify(newRequest),\n      teamID: collectionsType.value.selectedTeam.teamID,\n      title: requestName,\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      workspaceType: \"team\",\n      platform: \"rest\",\n      createdNow: true,\n    })\n\n    pipe(\n      createRequestInCollection(folder.id, data),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        (result) => {\n          const { createRequestInCollection } = result\n          const { auth, headers } =\n            teamCollectionAdapter.cascadeParentCollectionForHeaderAuth(path)\n          tabs.createNewTab({\n            request: newRequest,\n            isDirty: false,\n            saveContext: {\n              originLocation: \"team-collection\",\n              requestID: createRequestInCollection.id,\n              collectionID: path,\n              teamID: createRequestInCollection.collection.team.id,\n            },\n            inheritedProperties: {\n              auth,\n              headers,\n            },\n          })\n\n          modalLoadingState.value = false\n          displayModalAddRequest(false)\n        }\n      )\n    )()\n  }\n}\n\nconst addFolder = (payload: {\n  path: string\n  folder: HoppCollection | TeamCollection\n}) => {\n  const { path, folder } = payload\n  editingFolder.value = folder\n  editingFolderPath.value = path\n  displayModalAddFolder(true)\n}\n\nconst onAddFolder = (folderName: string) => {\n  const path = editingFolderPath.value\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (!path) return\n    addRESTFolder(folderName, path)\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_CREATE_COLLECTION\",\n      workspaceType: \"personal\",\n      isRootCollection: false,\n      platform: \"rest\",\n    })\n\n    displayModalAddFolder(false)\n  } else if (hasTeamWriteAccess.value) {\n    const folder = editingFolder.value\n    if (!folder || !folder.id) return\n\n    modalLoadingState.value = true\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_CREATE_COLLECTION\",\n      workspaceType: \"personal\",\n      isRootCollection: false,\n      platform: \"rest\",\n    })\n\n    pipe(\n      createChildCollection(folderName, folder.id),\n      TE.match(\n        (err: GQLError<string>) => {\n          if (err.error === \"team_coll/short_title\") {\n            toast.error(t(\"folder.name_length_insufficient\"))\n          } else {\n            toast.error(`${getErrorMessage(err)}`)\n          }\n          modalLoadingState.value = false\n        },\n        () => {\n          toast.success(t(\"folder.created\"))\n          modalLoadingState.value = false\n          displayModalAddFolder(false)\n        }\n      )\n    )()\n  }\n}\n\nconst editCollection = (payload: {\n  collectionIndex: string\n  collection: HoppCollection | TeamCollection\n}) => {\n  const { collectionIndex, collection } = payload\n  editingCollection.value = collection\n  if (collectionsType.value.type === \"my-collections\") {\n    editingCollectionIndex.value = parseInt(collectionIndex)\n    editingCollectionName.value = (collection as HoppCollection).name\n  } else {\n    editingCollectionName.value = (collection as TeamCollection).title\n  }\n\n  displayModalEditCollection(true)\n}\n\nconst updateEditingCollection = (newName: string) => {\n  if (!editingCollection.value) return\n\n  if (!newName) {\n    toast.error(t(\"collection.invalid_name\"))\n    return\n  }\n\n  if (collectionsType.value.type === \"my-collections\") {\n    const collectionIndex = editingCollectionIndex.value\n    if (collectionIndex === null) return\n\n    const collectionUpdated = {\n      ...editingCollection.value,\n      name: newName,\n    }\n\n    editRESTCollection(\n      collectionIndex,\n      collectionUpdated as NodeCollection[\"data\"][\"data\"]\n    )\n    displayModalEditCollection(false)\n  } else if (hasTeamWriteAccess.value) {\n    if (!editingCollection.value.id) return\n    modalLoadingState.value = true\n\n    pipe(\n      updateTeamCollection(editingCollection.value.id, undefined, newName),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"collection.renamed\"))\n          displayModalEditCollection(false)\n        }\n      )\n    )()\n  }\n}\n\nconst editFolder = (payload: {\n  folderPath: string | undefined\n  folder: HoppCollection | TeamCollection\n}) => {\n  const { folderPath, folder } = payload\n  editingFolder.value = folder\n  if (collectionsType.value.type === \"my-collections\" && folderPath) {\n    editingFolderPath.value = folderPath\n    editingFolderName.value = (folder as HoppCollection).name\n  } else {\n    editingFolderName.value = (folder as TeamCollection).title\n  }\n  displayModalEditFolder(true)\n}\n\nconst updateEditingFolder = (newName: string) => {\n  if (!editingFolder.value) return\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (!editingFolderPath.value) return\n\n    editRESTFolder(editingFolderPath.value, {\n      ...(editingFolder.value as HoppCollection),\n      name: newName,\n    })\n    displayModalEditFolder(false)\n  } else if (hasTeamWriteAccess.value) {\n    if (!editingFolder.value.id) return\n    modalLoadingState.value = true\n\n    /* renameCollection can be used to rename both collections and folders\n     since folder is treated as collection in the BE. */\n    pipe(\n      updateTeamCollection(editingFolder.value.id, undefined, newName),\n      TE.match(\n        (err: GQLError<string>) => {\n          if (err.error === \"team_coll/short_title\") {\n            toast.error(t(\"folder.name_length_insufficient\"))\n          } else {\n            toast.error(`${getErrorMessage(err)}`)\n          }\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"folder.renamed\"))\n          displayModalEditFolder(false)\n        }\n      )\n    )()\n  }\n}\n\nconst editRequest = (payload: {\n  folderPath: string | undefined\n  requestIndex: string\n  request: HoppRESTRequest\n}) => {\n  const { folderPath, requestIndex, request } = payload\n  editingRequest.value = request\n  editingRequestName.value = request.name ?? \"\"\n  if (collectionsType.value.type === \"my-collections\" && folderPath) {\n    editingFolderPath.value = folderPath\n    editingRequestIndex.value = parseInt(requestIndex)\n  } else {\n    editingRequestID.value = requestIndex\n  }\n  displayModalEditRequest(true)\n}\n\nconst updateEditingRequest = (newName: string) => {\n  const request = editingRequest.value\n  if (!request) return\n\n  const requestUpdated = {\n    ...request,\n    name: newName || request.name,\n  }\n  if (collectionsType.value.type === \"my-collections\") {\n    const folderPath = editingFolderPath.value\n    const requestIndex = editingRequestIndex.value\n\n    if (folderPath === null || requestIndex === null) return\n\n    const possibleActiveTab = tabs.getTabRefWithSaveContext({\n      originLocation: \"user-collection\",\n      requestIndex,\n      folderPath,\n    })\n\n    editRESTRequest(folderPath, requestIndex, requestUpdated)\n\n    if (possibleActiveTab) {\n      possibleActiveTab.value.document.request.name = requestUpdated.name\n      nextTick(() => {\n        possibleActiveTab.value.document.isDirty = false\n      })\n    }\n\n    displayModalEditRequest(false)\n  } else if (hasTeamWriteAccess.value) {\n    modalLoadingState.value = true\n\n    const requestID = editingRequestID.value\n    const requestName = newName || request.name\n\n    if (!requestID) return\n\n    const data = {\n      request: JSON.stringify(requestUpdated),\n      title: requestName,\n    }\n\n    pipe(\n      updateTeamRequest(requestID, data),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"request.renamed\"))\n          displayModalEditRequest(false)\n        }\n      )\n    )()\n\n    const possibleTab = tabs.getTabRefWithSaveContext({\n      originLocation: \"team-collection\",\n      requestID,\n    })\n\n    if (possibleTab) {\n      possibleTab.value.document.request.name = requestName\n      nextTick(() => {\n        possibleTab.value.document.isDirty = false\n      })\n    }\n  }\n}\n\nconst duplicateRequest = (payload: {\n  folderPath: string\n  request: HoppRESTRequest\n}) => {\n  const { folderPath, request } = payload\n  if (!folderPath) return\n\n  const newRequest = {\n    ...cloneDeep(request),\n    name: `${request.name} - ${t(\"action.duplicate\")}`,\n  }\n\n  if (collectionsType.value.type === \"my-collections\") {\n    saveRESTRequestAs(folderPath, newRequest)\n    toast.success(t(\"request.duplicated\"))\n  } else if (hasTeamWriteAccess.value) {\n    duplicateLoading.value = true\n\n    if (!collectionsType.value.selectedTeam) return\n\n    const data = {\n      request: JSON.stringify(newRequest),\n      teamID: collectionsType.value.selectedTeam.teamID,\n      title: `${request.name} - ${t(\"action.duplicate\")}`,\n    }\n\n    pipe(\n      createRequestInCollection(folderPath, data),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          duplicateLoading.value = false\n        },\n        () => {\n          duplicateLoading.value = false\n          toast.success(t(\"request.duplicated\"))\n          displayModalAddRequest(false)\n        }\n      )\n    )()\n  }\n}\n\nconst removeCollection = (id: string) => {\n  if (collectionsType.value.type === \"my-collections\")\n    editingCollectionIndex.value = parseInt(id)\n  else editingCollectionID.value = id\n\n  confirmModalTitle.value = `${t(\"confirm.remove_collection\")}`\n  displayConfirmModal(true)\n}\n\n/**\n * Used to delete both collections and folders\n * since folder is treated as collection in the BE.\n * @param collectionID - ID of the collection or folder to be deleted.\n */\nconst removeTeamCollectionOrFolder = async (collectionID: string) => {\n  modalLoadingState.value = true\n\n  await pipe(\n    deleteCollection(collectionID),\n    TE.match(\n      (err: GQLError<string>) => {\n        toast.error(`${getErrorMessage(err)}`)\n        modalLoadingState.value = false\n      },\n      () => {\n        modalLoadingState.value = false\n        toast.success(t(\"state.deleted\"))\n        displayConfirmModal(false)\n      }\n    )\n  )()\n}\n\nconst onRemoveCollection = () => {\n  if (collectionsType.value.type === \"my-collections\") {\n    const collectionIndex = editingCollectionIndex.value\n\n    const collectionToRemove =\n      collectionIndex || collectionIndex === 0\n        ? navigateToFolderWithIndexPath(restCollectionStore.value.state, [\n            collectionIndex,\n          ])\n        : undefined\n\n    if (collectionIndex === null) return\n\n    if (\n      isSelected({\n        collectionIndex,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    removeRESTCollection(\n      collectionIndex,\n      collectionToRemove ? collectionToRemove.id : undefined\n    )\n\n    resolveSaveContextOnCollectionReorder({\n      lastIndex: collectionIndex,\n      newIndex: -1,\n      folderPath: \"\", // root folder\n      length: myCollections.value.length,\n    })\n\n    toast.success(t(\"state.deleted\"))\n    displayConfirmModal(false)\n  } else if (hasTeamWriteAccess.value) {\n    const collectionID = editingCollectionID.value\n\n    if (!collectionID) return\n\n    if (\n      isSelected({\n        collectionID,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    removeTeamCollectionOrFolder(collectionID).then(() => {\n      resetTeamRequestsContext()\n    })\n  }\n}\n\nconst removeFolder = (id: string) => {\n  if (collectionsType.value.type === \"my-collections\")\n    editingFolderPath.value = id\n  else editingCollectionID.value = id\n\n  confirmModalTitle.value = `${t(\"confirm.remove_folder\")}`\n  displayConfirmModal(true)\n}\n\nconst onRemoveFolder = () => {\n  if (collectionsType.value.type === \"my-collections\") {\n    const folderPath = editingFolderPath.value\n\n    if (!folderPath) return\n\n    if (\n      isSelected({\n        folderPath,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    const folderToRemove = folderPath\n      ? navigateToFolderWithIndexPath(\n          restCollectionStore.value.state,\n          folderPath.split(\"/\").map((i) => parseInt(i))\n        )\n      : undefined\n\n    removeRESTFolder(folderPath, folderToRemove ? folderToRemove.id : undefined)\n\n    const parentFolder = folderPath.split(\"/\").slice(0, -1).join(\"/\") // remove last folder to get parent folder\n    resolveSaveContextOnCollectionReorder({\n      lastIndex: pathToLastIndex(folderPath),\n      newIndex: -1,\n      folderPath: parentFolder,\n      length: getFoldersByPath(myCollections.value, parentFolder).length,\n    })\n\n    toast.success(t(\"state.deleted\"))\n    displayConfirmModal(false)\n  } else if (hasTeamWriteAccess.value) {\n    const collectionID = editingCollectionID.value\n\n    if (!collectionID) return\n\n    if (\n      isSelected({\n        collectionID,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    removeTeamCollectionOrFolder(collectionID).then(() => {\n      resetTeamRequestsContext()\n    })\n  }\n}\n\nconst removeRequest = (payload: {\n  folderPath: string | null\n  requestIndex: string\n}) => {\n  const { folderPath, requestIndex } = payload\n  if (collectionsType.value.type === \"my-collections\" && folderPath) {\n    editingFolderPath.value = folderPath\n    editingRequestIndex.value = parseInt(requestIndex)\n  } else {\n    editingRequestID.value = requestIndex\n  }\n  confirmModalTitle.value = `${t(\"confirm.remove_request\")}`\n  displayConfirmModal(true)\n}\n\nconst onRemoveRequest = () => {\n  if (collectionsType.value.type === \"my-collections\") {\n    const folderPath = editingFolderPath.value\n    const requestIndex = editingRequestIndex.value\n\n    if (folderPath === null || requestIndex === null) return\n\n    if (\n      isSelected({\n        folderPath,\n        requestIndex,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    const possibleTab = tabs.getTabRefWithSaveContext({\n      originLocation: \"user-collection\",\n      folderPath,\n      requestIndex,\n    })\n\n    // If there is a tab attached to this request, dissociate its state and mark it dirty\n    if (possibleTab) {\n      possibleTab.value.document.saveContext = null\n      possibleTab.value.document.isDirty = true\n    }\n\n    const requestToRemove = navigateToFolderWithIndexPath(\n      restCollectionStore.value.state,\n      folderPath.split(\"/\").map((i) => parseInt(i))\n    )?.requests[requestIndex]\n\n    removeRESTRequest(folderPath, requestIndex, requestToRemove?.id)\n\n    // the same function is used to reorder requests since after removing, it's basically doing reorder\n    resolveSaveContextOnRequestReorder({\n      lastIndex: requestIndex,\n      newIndex: -1,\n      folderPath,\n      length: getRequestsByPath(myCollections.value, folderPath).length,\n    })\n\n    toast.success(t(\"state.deleted\"))\n    displayConfirmModal(false)\n  } else if (hasTeamWriteAccess.value) {\n    const requestID = editingRequestID.value\n\n    if (!requestID) return\n\n    if (\n      isSelected({\n        requestID,\n      })\n    ) {\n      emit(\"select\", null)\n    }\n\n    modalLoadingState.value = true\n\n    pipe(\n      deleteTeamRequest(requestID),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          toast.success(t(\"state.deleted\"))\n          displayConfirmModal(false)\n        }\n      )\n    )()\n\n    // If there is a tab attached to this request, dissociate its state and mark it dirty\n    const possibleTab = tabs.getTabRefWithSaveContext({\n      originLocation: \"team-collection\",\n      requestID,\n    })\n\n    if (possibleTab) {\n      possibleTab.value.document.saveContext = null\n      possibleTab.value.document.isDirty = true\n    }\n  }\n}\n\n// The request is picked in the save request as modal\nconst selectPicked = (payload: Picked | null) => {\n  emit(\"select\", payload)\n}\n\n/**\n * This function is called when the user clicks on a request\n * @param selectedRequest The request that the user clicked on emited from the collection tree\n */\nconst selectRequest = (selectedRequest: {\n  request: HoppRESTRequest\n  folderPath: string\n  requestIndex: string\n  isActive: boolean\n}) => {\n  const { request, folderPath, requestIndex } = selectedRequest\n  // If there is a request with this save context, switch into it\n  let possibleTab = null\n\n  if (collectionsType.value.type === \"team-collections\") {\n    let inheritedProperties: HoppInheritedProperty | undefined = undefined\n\n    if (filterTexts.value.length > 0) {\n      const collectionID = folderPath.split(\"/\").at(-1)\n\n      if (!collectionID) return\n\n      inheritedProperties =\n        cascadeParentCollectionForHeaderAuthForSearchResults(collectionID)\n    } else {\n      inheritedProperties =\n        teamCollectionAdapter.cascadeParentCollectionForHeaderAuth(folderPath)\n    }\n\n    const possibleTab = tabs.getTabRefWithSaveContext({\n      originLocation: \"team-collection\",\n      requestID: requestIndex,\n    })\n\n    if (possibleTab) {\n      tabs.setActiveTab(possibleTab.value.id)\n    } else {\n      tabs.createNewTab({\n        request: cloneDeep(request),\n        isDirty: false,\n        saveContext: {\n          originLocation: \"team-collection\",\n          requestID: requestIndex,\n          collectionID: folderPath,\n        },\n        inheritedProperties: inheritedProperties,\n      })\n    }\n  } else {\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      folderPath,\n      \"rest\"\n    )\n    possibleTab = tabs.getTabRefWithSaveContext({\n      originLocation: \"user-collection\",\n      requestIndex: parseInt(requestIndex),\n      folderPath: folderPath!,\n    })\n    if (possibleTab) {\n      tabs.setActiveTab(possibleTab.value.id)\n    } else {\n      // If not, open the request in a new tab\n      tabs.createNewTab({\n        request: cloneDeep(request),\n        isDirty: false,\n        saveContext: {\n          originLocation: \"user-collection\",\n          folderPath: folderPath!,\n          requestIndex: parseInt(requestIndex),\n        },\n        inheritedProperties: {\n          auth,\n          headers,\n        },\n      })\n    }\n  }\n}\n\n/**\n * Used to get the index of the request from the path\n * @param path The path of the request\n * @returns The index of the request\n */\nconst pathToLastIndex = (path: string) => {\n  const pathArr = path.split(\"/\")\n  return parseInt(pathArr[pathArr.length - 1])\n}\n\n/**\n * This function is called when the user drops the request inside a collection\n * @param payload Object that contains the folder path, request index and the destination collection index\n */\nconst dropRequest = (payload: {\n  folderPath?: string | undefined\n  requestIndex: string\n  destinationCollectionIndex: string\n}) => {\n  const { folderPath, requestIndex, destinationCollectionIndex } = payload\n\n  if (!requestIndex || !destinationCollectionIndex || !folderPath) return\n\n  let possibleTab = null\n\n  if (collectionsType.value.type === \"my-collections\") {\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      destinationCollectionIndex,\n      \"rest\"\n    )\n\n    possibleTab = tabs.getTabRefWithSaveContext({\n      originLocation: \"user-collection\",\n      folderPath,\n      requestIndex: pathToLastIndex(requestIndex),\n    })\n\n    // If there is a tab attached to this request, change save its save context\n    if (possibleTab) {\n      possibleTab.value.document.saveContext = {\n        originLocation: \"user-collection\",\n        folderPath: destinationCollectionIndex,\n        requestIndex: getRequestsByPath(\n          myCollections.value,\n          destinationCollectionIndex\n        ).length,\n      }\n\n      possibleTab.value.document.inheritedProperties = {\n        auth,\n        headers,\n      }\n    }\n\n    // When it's drop it's basically getting deleted from last folder. reordering last folder accordingly\n    resolveSaveContextOnRequestReorder({\n      lastIndex: pathToLastIndex(requestIndex),\n      newIndex: -1, // being deleted from last folder\n      folderPath,\n      length: getRequestsByPath(myCollections.value, folderPath).length,\n    })\n    moveRESTRequest(\n      folderPath,\n      pathToLastIndex(requestIndex),\n      destinationCollectionIndex\n    )\n\n    toast.success(`${t(\"request.moved\")}`)\n    draggingToRoot.value = false\n  } else if (hasTeamWriteAccess.value) {\n    // add the request index to the loading array\n    requestMoveLoading.value.push(requestIndex)\n\n    pipe(\n      moveRESTTeamRequest(destinationCollectionIndex, requestIndex),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          requestMoveLoading.value.splice(\n            requestMoveLoading.value.indexOf(requestIndex),\n            1\n          )\n        },\n        () => {\n          // remove the request index from the loading array\n          requestMoveLoading.value.splice(\n            requestMoveLoading.value.indexOf(requestIndex),\n            1\n          )\n          const { auth, headers } =\n            teamCollectionAdapter.cascadeParentCollectionForHeaderAuth(\n              destinationCollectionIndex\n            )\n\n          possibleTab = tabs.getTabRefWithSaveContext({\n            originLocation: \"team-collection\",\n            requestID: requestIndex,\n          })\n\n          if (possibleTab) {\n            possibleTab.value.document.saveContext = {\n              originLocation: \"team-collection\",\n              requestID: requestIndex,\n            }\n            possibleTab.value.document.inheritedProperties = {\n              auth,\n              headers,\n            }\n          }\n          toast.success(`${t(\"request.moved\")}`)\n        }\n      )\n    )()\n  }\n}\n\n/**\n * @param path The path of the collection or request\n * @returns The index of the collection or request\n */\nconst pathToIndex = (path: string) => {\n  const pathArr = path.split(\"/\")\n  return pathArr\n}\n\n/**\n * Used to check if the collection exist as the parent of the childrens\n * @param collectionIndexDragged The index of the collection dragged\n * @param destinationCollectionIndex The index of the destination collection\n * @returns True if the collection exist as the parent of the childrens\n */\nconst checkIfCollectionIsAParentOfTheChildren = (\n  collectionIndexDragged: string,\n  destinationCollectionIndex: string\n) => {\n  const collectionDraggedPath = pathToIndex(collectionIndexDragged)\n  const destinationCollectionPath = pathToIndex(destinationCollectionIndex)\n\n  if (collectionDraggedPath.length < destinationCollectionPath.length) {\n    const slicedDestinationCollectionPath = destinationCollectionPath.slice(\n      0,\n      collectionDraggedPath.length\n    )\n    if (isEqual(slicedDestinationCollectionPath, collectionDraggedPath)) {\n      return true\n    }\n    return false\n  }\n\n  return false\n}\n\nconst isMoveToSameLocation = (\n  draggedItemPath: string,\n  destinationPath: string\n) => {\n  const draggedItemPathArr = pathToIndex(draggedItemPath)\n  const destinationPathArr = pathToIndex(destinationPath)\n\n  if (draggedItemPathArr.length > 0) {\n    const draggedItemParentPathArr = draggedItemPathArr.slice(\n      0,\n      draggedItemPathArr.length - 1\n    )\n\n    if (isEqual(draggedItemParentPathArr, destinationPathArr)) {\n      return true\n    }\n    return false\n  }\n}\n\n/**\n * This function is called when the user moves the collection\n * to a different collection or folder\n * @param payload - object containing the collection index dragged and the destination collection index\n */\nconst dropCollection = (payload: {\n  collectionIndexDragged: string\n  destinationCollectionIndex: string\n}) => {\n  const { collectionIndexDragged, destinationCollectionIndex } = payload\n  if (!collectionIndexDragged || !destinationCollectionIndex) return\n  if (collectionIndexDragged === destinationCollectionIndex) return\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (\n      checkIfCollectionIsAParentOfTheChildren(\n        collectionIndexDragged,\n        destinationCollectionIndex\n      )\n    ) {\n      toast.error(`${t(\"team.parent_coll_move\")}`)\n      return\n    }\n\n    //check if the collection is being moved to its own parent\n    if (\n      isMoveToSameLocation(collectionIndexDragged, destinationCollectionIndex)\n    ) {\n      return\n    }\n\n    const parentFolder = collectionIndexDragged\n      .split(\"/\")\n      .slice(0, -1)\n      .join(\"/\") // remove last folder to get parent folder\n    const totalFoldersOfDestinationCollection =\n      getFoldersByPath(myCollections.value, destinationCollectionIndex).length -\n      (parentFolder === destinationCollectionIndex ? 1 : 0)\n\n    moveRESTFolder(collectionIndexDragged, destinationCollectionIndex)\n\n    resolveSaveContextOnCollectionReorder(\n      {\n        lastIndex: pathToLastIndex(collectionIndexDragged),\n        newIndex: -1,\n        folderPath: parentFolder,\n        length: getFoldersByPath(myCollections.value, parentFolder).length,\n      },\n      \"drop\"\n    )\n\n    updateSaveContextForAffectedRequests(\n      collectionIndexDragged,\n      `${destinationCollectionIndex}/${totalFoldersOfDestinationCollection}`\n    )\n\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      `${destinationCollectionIndex}/${totalFoldersOfDestinationCollection}`,\n      \"rest\"\n    )\n\n    const inheritedProperty = {\n      auth,\n      headers,\n    }\n\n    updateInheritedPropertiesForAffectedRequests(\n      `${destinationCollectionIndex}/${totalFoldersOfDestinationCollection}`,\n      inheritedProperty,\n      \"rest\"\n    )\n\n    draggingToRoot.value = false\n    toast.success(`${t(\"collection.moved\")}`)\n  } else if (hasTeamWriteAccess.value) {\n    // add the collection index to the loading array\n    collectionMoveLoading.value.push(collectionIndexDragged)\n    pipe(\n      moveRESTTeamCollection(\n        collectionIndexDragged,\n        destinationCollectionIndex\n      ),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          collectionMoveLoading.value.splice(\n            collectionMoveLoading.value.indexOf(collectionIndexDragged),\n            1\n          )\n        },\n        () => {\n          toast.success(`${t(\"collection.moved\")}`)\n          // remove the collection index from the loading array\n          collectionMoveLoading.value.splice(\n            collectionMoveLoading.value.indexOf(collectionIndexDragged),\n            1\n          )\n\n          const { auth, headers } =\n            teamCollectionAdapter.cascadeParentCollectionForHeaderAuth(\n              destinationCollectionIndex\n            )\n\n          const inheritedProperty = {\n            auth,\n            headers,\n          }\n\n          updateInheritedPropertiesForAffectedRequests(\n            `${destinationCollectionIndex}`,\n            inheritedProperty,\n            \"rest\"\n          )\n        }\n      )\n    )()\n  }\n}\n\n/**\n * Checks if the collection is already in the root\n * @param id - path of the collection\n * @returns boolean - true if the collection is already in the root\n */\nconst isAlreadyInRoot = (id: string) => {\n  const indexPath = pathToIndex(id)\n  return indexPath.length === 1\n}\n\n/**\n * This function is called when the user drops the collection\n * to the root\n * @param payload - object containing the collection index dragged\n */\nconst dropToRoot = ({ dataTransfer }: DragEvent) => {\n  if (dataTransfer) {\n    const collectionIndexDragged = dataTransfer.getData(\"collectionIndex\")\n    if (!collectionIndexDragged) return\n    if (collectionsType.value.type === \"my-collections\") {\n      // check if the collection is already in the root\n      if (isAlreadyInRoot(collectionIndexDragged)) {\n        toast.error(`${t(\"collection.invalid_root_move\")}`)\n      } else {\n        moveRESTFolder(collectionIndexDragged, null)\n        toast.success(`${t(\"collection.moved\")}`)\n      }\n\n      draggingToRoot.value = false\n    } else if (hasTeamWriteAccess.value) {\n      // add the collection index to the loading array\n      collectionMoveLoading.value.push(collectionIndexDragged)\n\n      // destination collection index is null since we are moving to root\n      pipe(\n        moveRESTTeamCollection(collectionIndexDragged, null),\n        TE.match(\n          (err: GQLError<string>) => {\n            collectionMoveLoading.value.splice(\n              collectionMoveLoading.value.indexOf(collectionIndexDragged),\n              1\n            )\n            toast.error(`${getErrorMessage(err)}`)\n          },\n          () => {\n            // remove the collection index from the loading array\n            collectionMoveLoading.value.splice(\n              collectionMoveLoading.value.indexOf(collectionIndexDragged),\n              1\n            )\n            toast.success(`${t(\"collection.moved\")}`)\n          }\n        )\n      )()\n    }\n  }\n}\n\n/**\n * Used to check if the request/collection is being moved to the same parent since reorder is only allowed within the same parent\n * @param draggedItem - path index of the dragged request\n * @param destinationItem - path index of the destination request\n * @param destinationCollectionIndex -  index of the destination collection\n * @returns boolean - true if the request is being moved to the same parent\n */\nconst isSameSameParent = (\n  draggedItemPath: string,\n  destinationItemPath: string | null,\n  destinationCollectionIndex: string | null\n) => {\n  const draggedItemIndex = pathToIndex(draggedItemPath)\n\n  // if the destinationItemPath and destinationCollectionIndex is null, it means the request is being moved to the root\n  if (destinationItemPath === null && destinationCollectionIndex === null) {\n    return draggedItemIndex.length === 1\n  } else if (\n    destinationItemPath === null &&\n    destinationCollectionIndex !== null &&\n    draggedItemIndex.length === 1\n  ) {\n    return draggedItemIndex[0] === destinationCollectionIndex\n  } else if (\n    destinationItemPath === null &&\n    draggedItemIndex.length !== 1 &&\n    destinationCollectionIndex !== null\n  ) {\n    const dragedItemParent = draggedItemIndex.slice(0, -1)\n\n    return dragedItemParent.join(\"/\") === destinationCollectionIndex\n  }\n  if (destinationItemPath === null) return false\n  const destinationItemIndex = pathToIndex(destinationItemPath)\n\n  // length of 1 means the request is in the root\n  if (draggedItemIndex.length === 1 && destinationItemIndex.length === 1) {\n    return true\n  } else if (draggedItemIndex.length === destinationItemIndex.length) {\n    const dragedItemParent = draggedItemIndex.slice(0, -1)\n    const destinationItemParent = destinationItemIndex.slice(0, -1)\n    if (isEqual(dragedItemParent, destinationItemParent)) {\n      return true\n    }\n    return false\n  }\n  return false\n}\n\n/**\n * This function is called when the user updates the request order in a collection\n * @param payload - object containing the request index dragged and the destination request index\n *  with the destination collection index\n */\nconst updateRequestOrder = (payload: {\n  dragedRequestIndex: string\n  destinationRequestIndex: string | null\n  destinationCollectionIndex: string\n}) => {\n  const {\n    dragedRequestIndex,\n    destinationRequestIndex,\n    destinationCollectionIndex,\n  } = payload\n\n  if (!dragedRequestIndex || !destinationCollectionIndex) return\n\n  if (dragedRequestIndex === destinationRequestIndex) return\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (\n      !isSameSameParent(\n        dragedRequestIndex,\n        destinationRequestIndex,\n        destinationCollectionIndex\n      )\n    ) {\n      toast.error(`${t(\"collection.different_parent\")}`)\n    } else {\n      updateRESTRequestOrder(\n        pathToLastIndex(dragedRequestIndex),\n        destinationRequestIndex\n          ? pathToLastIndex(destinationRequestIndex)\n          : null,\n        destinationCollectionIndex\n      )\n\n      toast.success(`${t(\"request.order_changed\")}`)\n    }\n  } else if (hasTeamWriteAccess.value) {\n    // add the request index to the loading array\n    requestMoveLoading.value.push(dragedRequestIndex)\n\n    pipe(\n      updateOrderRESTTeamRequest(\n        dragedRequestIndex,\n        destinationRequestIndex,\n        destinationCollectionIndex\n      ),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          requestMoveLoading.value.splice(\n            requestMoveLoading.value.indexOf(dragedRequestIndex),\n            1\n          )\n        },\n        () => {\n          toast.success(`${t(\"request.order_changed\")}`)\n\n          // remove the request index from the loading array\n          requestMoveLoading.value.splice(\n            requestMoveLoading.value.indexOf(dragedRequestIndex),\n            1\n          )\n        }\n      )\n    )()\n  }\n}\n\n/**\n * This function is called when the user updates the collection or folder order\n * @param payload - object containing the collection index dragged and the destination collection index\n */\nconst updateCollectionOrder = (payload: {\n  dragedCollectionIndex: string\n  destinationCollection: {\n    destinationCollectionIndex: string | null\n    destinationCollectionParentIndex: string | null\n  }\n}) => {\n  const { dragedCollectionIndex, destinationCollection } = payload\n  const { destinationCollectionIndex, destinationCollectionParentIndex } =\n    destinationCollection\n  if (!dragedCollectionIndex) return\n  if (dragedCollectionIndex === destinationCollectionIndex) return\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (\n      !isSameSameParent(\n        dragedCollectionIndex,\n        destinationCollectionIndex,\n        destinationCollectionParentIndex\n      )\n    ) {\n      toast.error(`${t(\"collection.different_parent\")}`)\n    } else {\n      updateRESTCollectionOrder(\n        dragedCollectionIndex,\n        destinationCollectionIndex\n      )\n      resolveSaveContextOnCollectionReorder({\n        lastIndex: pathToLastIndex(dragedCollectionIndex),\n        newIndex: pathToLastIndex(\n          destinationCollectionIndex ? destinationCollectionIndex : \"\"\n        ),\n        folderPath: dragedCollectionIndex.split(\"/\").slice(0, -1).join(\"/\"),\n      })\n      toast.success(`${t(\"collection.order_changed\")}`)\n    }\n  } else if (hasTeamWriteAccess.value) {\n    collectionMoveLoading.value.push(dragedCollectionIndex)\n    pipe(\n      updateOrderRESTTeamCollection(\n        dragedCollectionIndex,\n        destinationCollectionIndex\n      ),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          collectionMoveLoading.value.splice(\n            collectionMoveLoading.value.indexOf(dragedCollectionIndex),\n            1\n          )\n        },\n        () => {\n          toast.success(`${t(\"collection.order_changed\")}`)\n          collectionMoveLoading.value.splice(\n            collectionMoveLoading.value.indexOf(dragedCollectionIndex),\n            1\n          )\n        }\n      )\n    )()\n  }\n}\n// Import - Export Collection functions\n\n/**\n * Create a downloadable file from a collection and prompts the user to download it.\n * @param collectionJSON - JSON string of the collection\n * @param name - Name of the collection set as the file name\n */\nconst initializeDownloadCollection = async (\n  collectionJSON: string,\n  name: string | null\n) => {\n  const result = await platform.io.saveFileWithDialog({\n    data: collectionJSON,\n    contentType: \"application/json\",\n    suggestedFilename: `${name ?? \"collection\"}.json`,\n    filters: [\n      {\n        name: \"Hoppscotch Collection JSON file\",\n        extensions: [\"json\"],\n      },\n    ],\n  })\n\n  if (result.type === \"unknown\" || result.type === \"saved\") {\n    toast.success(t(\"state.download_started\").toString())\n  }\n}\n\n/**\n * Export a specific collection or folder\n * Triggered by the export button in the tippy menu\n * @param collection - Collection or folder to be exported\n */\nconst exportData = async (collection: HoppCollection | TeamCollection) => {\n  if (collectionsType.value.type === \"my-collections\") {\n    const collectionJSON = JSON.stringify(collection)\n\n    const name = (collection as HoppCollection).name\n\n    initializeDownloadCollection(collectionJSON, name)\n  } else {\n    if (!collection.id) return\n    exportLoading.value = true\n\n    pipe(\n      getCompleteCollectionTree(collection.id),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          exportLoading.value = false\n          return\n        },\n        async (coll) => {\n          const hoppColl = teamCollToHoppRESTColl(coll)\n          const collectionJSONString = JSON.stringify(hoppColl)\n\n          await initializeDownloadCollection(\n            collectionJSONString,\n            hoppColl.name\n          )\n          exportLoading.value = false\n        }\n      )\n    )()\n  }\n}\n\nconst shareRequest = ({ request }: { request: HoppRESTRequest }) => {\n  if (currentUser.value) {\n    // opens the share request modal\n    invokeAction(\"share.request\", {\n      request,\n    })\n  } else {\n    invokeAction(\"modals.login.toggle\")\n  }\n}\n\nconst editProperties = (payload: {\n  collectionIndex: string\n  collection: HoppCollection | TeamCollection\n}) => {\n  const { collection, collectionIndex } = payload\n\n  if (collectionsType.value.type === \"my-collections\") {\n    const parentIndex = collectionIndex.split(\"/\").slice(0, -1).join(\"/\") // remove last folder to get parent folder\n\n    let inheritedProperties = {\n      auth: {\n        parentID: \"\",\n        parentName: \"\",\n        inheritedAuth: {\n          authType: \"inherit\",\n          authActive: true,\n        },\n      },\n      headers: [\n        {\n          parentID: \"\",\n          parentName: \"\",\n          inheritedHeader: {},\n        },\n      ],\n    } as HoppInheritedProperty\n\n    if (parentIndex) {\n      const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n        parentIndex,\n        \"rest\"\n      )\n\n      inheritedProperties = {\n        auth,\n        headers,\n      }\n    }\n\n    editingProperties.value = {\n      collection: collection as Partial<HoppCollection>,\n      isRootCollection: isAlreadyInRoot(collectionIndex),\n      path: collectionIndex,\n      inheritedProperties,\n    }\n  } else if (hasTeamWriteAccess.value) {\n    const parentIndex = collectionIndex.split(\"/\").slice(0, -1).join(\"/\") // remove last folder to get parent folder\n\n    const data = (collection as TeamCollection).data\n      ? JSON.parse((collection as TeamCollection).data ?? \"\")\n      : null\n\n    let inheritedProperties = undefined\n    let coll = {\n      id: collection.id,\n      name: (collection as TeamCollection).title,\n      auth: {\n        authType: \"inherit\",\n        authActive: true,\n      } as HoppRESTAuth,\n      headers: [] as HoppRESTHeaders,\n      folders: null,\n      requests: null,\n    }\n\n    if (parentIndex) {\n      const { auth, headers } =\n        teamCollectionAdapter.cascadeParentCollectionForHeaderAuth(parentIndex)\n\n      inheritedProperties = {\n        auth,\n        headers,\n      }\n    }\n\n    if (data) {\n      coll = {\n        ...coll,\n        auth: data.auth,\n        headers: data.headers as HoppRESTHeaders,\n      }\n    }\n\n    editingProperties.value = {\n      collection: coll as unknown as Partial<HoppCollection>,\n      isRootCollection: isAlreadyInRoot(collectionIndex),\n      path: collectionIndex,\n      inheritedProperties,\n    }\n  }\n\n  displayModalEditProperties(true)\n}\n\nconst setCollectionProperties = (newCollection: {\n  collection: Partial<HoppCollection> | null\n  isRootCollection: boolean\n  path: string\n}) => {\n  const { collection, path, isRootCollection } = newCollection\n  if (!collection) return\n\n  if (collectionsType.value.type === \"my-collections\") {\n    if (isRootCollection) {\n      editRESTCollection(parseInt(path), collection)\n    } else {\n      editRESTFolder(path, collection)\n    }\n\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(path, \"rest\")\n\n    nextTick(() => {\n      updateInheritedPropertiesForAffectedRequests(\n        path,\n        {\n          auth,\n          headers,\n        },\n        \"rest\"\n      )\n    })\n    toast.success(t(\"collection.properties_updated\"))\n  } else if (hasTeamWriteAccess.value && collection.id) {\n    const data = {\n      auth: collection.auth,\n      headers: collection.headers,\n    }\n    pipe(\n      updateTeamCollection(collection.id, JSON.stringify(data), undefined),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n        },\n        () => {\n          toast.success(t(\"collection.properties_updated\"))\n        }\n      )\n    )()\n\n    //This is a hack to update the inherited properties of the requests if there an tab opened\n    // since it takes a little bit of time to update the collection tree\n    setTimeout(() => {\n      const { auth, headers } =\n        teamCollectionAdapter.cascadeParentCollectionForHeaderAuth(path)\n      updateInheritedPropertiesForAffectedRequests(\n        path,\n        {\n          auth,\n          headers,\n        },\n        \"rest\"\n      )\n    }, 200)\n  }\n\n  displayModalEditProperties(false)\n}\n\nconst runCollectionHandler = (collectionID: string) => {\n  selectedCollectionID.value = collectionID\n  showCollectionsRunnerModal.value = true\n\n  const activeWorkspace = workspace.value\n  const currentEnv = selectedEnvironmentIndex.value\n\n  if ([\"NO_ENV_SELECTED\", \"MY_ENV\"].includes(currentEnv.type)) {\n    activeEnvironmentID.value = null\n    return\n  }\n\n  if (activeWorkspace.type === \"team\" && currentEnv.type === \"TEAM_ENV\") {\n    activeEnvironmentID.value = teamEnvironmentList.value.find(\n      (env) =>\n        env.teamID === activeWorkspace.teamID &&\n        env.environment.id === currentEnv.environment.id\n    )?.environment.id\n  }\n}\n\nconst resolveConfirmModal = (title: string | null) => {\n  if (title === `${t(\"confirm.remove_collection\")}`) onRemoveCollection()\n  else if (title === `${t(\"confirm.remove_request\")}`) onRemoveRequest()\n  else if (title === `${t(\"confirm.remove_folder\")}`) onRemoveFolder()\n  else {\n    console.error(\n      `Confirm modal title ${title} is not handled by the component`\n    )\n    toast.error(t(\"error.something_went_wrong\"))\n    displayConfirmModal(false)\n  }\n}\n\nconst resetSelectedData = () => {\n  editingCollection.value = null\n  editingCollectionIndex.value = null\n  editingCollectionID.value = null\n  editingFolder.value = null\n  editingFolderPath.value = null\n  editingRequest.value = null\n  editingRequestIndex.value = null\n  editingRequestID.value = null\n  confirmModalTitle.value = null\n}\n\nconst getErrorMessage = (err: GQLError<string>) => {\n  console.error(err)\n  if (err.type === \"network_error\") {\n    return t(\"error.network_error\")\n  }\n  switch (err.error) {\n    case \"team_coll/short_title\":\n      return t(\"collection.name_length_insufficient\")\n    case \"team/invalid_coll_id\":\n    case \"bug/team_coll/no_coll_id\":\n    case \"team_req/invalid_target_id\":\n      return t(\"team.invalid_coll_id\")\n    case \"team/not_required_role\":\n      return t(\"profile.no_permission\")\n    case \"team_req/not_required_role\":\n      return t(\"profile.no_permission\")\n    case \"Forbidden resource\":\n      return t(\"profile.no_permission\")\n    case \"team_req/not_found\":\n      return t(\"team.no_request_found\")\n    case \"bug/team_req/no_req_id\":\n      return t(\"team.no_request_found\")\n    case \"team/collection_is_parent_coll\":\n      return t(\"team.parent_coll_move\")\n    case \"team/target_and_destination_collection_are_same\":\n      return t(\"team.same_target_destination\")\n    case \"team/target_collection_is_already_root_collection\":\n      return t(\"collection.invalid_root_move\")\n    case \"team_req/requests_not_from_same_collection\":\n      return t(\"request.different_collection\")\n    case \"team/team_collections_have_different_parents\":\n      return t(\"collection.different_parent\")\n    default:\n      return t(\"error.something_went_wrong\")\n  }\n}\n\ndefineActionHandler(\"collection.new\", () => {\n  displayModalAdd(true)\n})\ndefineActionHandler(\"modals.collection.import\", () => {\n  displayModalImportExport(true)\n})\n</script>\n","import { HoppCollection } from \"@hoppscotch/data\"\nimport * as E from \"fp-ts/Either\"\n\n// TODO: add zod validation\nexport const hoppGqlCollectionsImporter = (\n  contents: string[]\n): E.Either<\"INVALID_JSON\", HoppCollection[]> => {\n  return E.tryCatch(\n    () => contents.flatMap((content) => JSON.parse(content)),\n    () => \"INVALID_JSON\"\n  )\n}\n","import { HoppCollection } from \"@hoppscotch/data\"\n\nexport const gqlCollectionsExporter = (gqlCollections: HoppCollection[]) => {\n  return JSON.stringify(gqlCollections, null, 2)\n}\n","<template>\n  <ImportExportBase\n    ref=\"collections-import-export\"\n    modal-title=\"graphql_collections.title\"\n    :importer-modules=\"importerModules\"\n    :exporter-modules=\"exporterModules\"\n    @hide-modal=\"emit('hide-modal')\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { HoppCollection } from \"@hoppscotch/data\"\nimport * as E from \"fp-ts/Either\"\nimport { ref } from \"vue\"\n\nimport { useI18n } from \"~/composables/i18n\"\nimport { useToast } from \"~/composables/toast\"\nimport { ImporterOrExporter } from \"~/components/importExport/types\"\nimport { FileSource } from \"~/helpers/import-export/import/import-sources/FileSource\"\nimport { GistSource } from \"~/helpers/import-export/import/import-sources/GistSource\"\n\nimport IconFolderPlus from \"~icons/lucide/folder-plus\"\nimport IconUser from \"~icons/lucide/user\"\nimport { initializeDownloadCollection } from \"~/helpers/import-export/export\"\nimport { useReadonlyStream } from \"~/composables/stream\"\n\nimport { platform } from \"~/platform\"\nimport {\n  appendGraphqlCollections,\n  graphqlCollections$,\n} from \"~/newstore/collections\"\nimport { hoppGqlCollectionsImporter } from \"~/helpers/import-export/import/hoppGql\"\nimport { gqlCollectionsExporter } from \"~/helpers/import-export/export/gqlCollections\"\nimport { gistExporter } from \"~/helpers/import-export/export/gist\"\nimport { computed } from \"vue\"\nimport { hoppGQLImporter } from \"~/helpers/import-export/import/hopp\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst currentUser = useReadonlyStream(\n  platform.auth.getCurrentUserStream(),\n  platform.auth.getCurrentUser()\n)\n\nconst gqlCollections = useReadonlyStream(graphqlCollections$, [])\n\nconst isGqlCollectionGistExportInProgress = ref(false)\n\nconst GqlCollectionsHoppImporter: ImporterOrExporter = {\n  metadata: {\n    id: \"import.from_json\",\n    name: \"import.from_json\",\n    icon: IconFolderPlus,\n    title: \"import.from_json\",\n    applicableTo: [\"personal-workspace\"],\n    disabled: false,\n  },\n  component: FileSource({\n    acceptedFileTypes: \"application/json\",\n    caption: \"import.from_json_description\",\n    onImportFromFile: async (gqlCollections) => {\n      const res = await hoppGqlCollectionsImporter(gqlCollections)\n\n      if (E.isLeft(res)) {\n        showImportFailedError()\n        return\n      }\n      const validatedCollection = await hoppGQLImporter(\n        JSON.stringify(res.right)\n      )()\n\n      if (E.isRight(validatedCollection)) {\n        handleImportToStore(validatedCollection.right)\n\n        platform.analytics?.logEvent({\n          type: \"HOPP_IMPORT_COLLECTION\",\n          platform: \"gql\",\n          workspaceType: \"personal\",\n          importer: \"json\",\n        })\n      }\n\n      emit(\"hide-modal\")\n    },\n  }),\n}\n\nconst GqlCollectionsGistImporter: ImporterOrExporter = {\n  metadata: {\n    id: \"import.from_gist\",\n    name: \"import.from_gist\",\n    icon: IconFolderPlus,\n    title: \"import.from_gist\",\n    applicableTo: [\"personal-workspace\", \"team-workspace\"],\n    disabled: false,\n  },\n  component: GistSource({\n    caption: \"import.gql_collections_from_gist_description\",\n    onImportFromGist: async (gqlCollections) => {\n      if (E.isLeft(gqlCollections)) {\n        showImportFailedError()\n        return\n      }\n\n      const res = await hoppGqlCollectionsImporter(gqlCollections.right)\n\n      if (E.isLeft(res)) {\n        showImportFailedError()\n        return\n      }\n\n      handleImportToStore(res.right)\n\n      platform.analytics?.logEvent({\n        type: \"HOPP_IMPORT_COLLECTION\",\n        platform: \"gql\",\n        workspaceType: \"personal\",\n        importer: \"gist\",\n      })\n\n      emit(\"hide-modal\")\n    },\n  }),\n}\n\nconst GqlCollectionsHoppExporter: ImporterOrExporter = {\n  metadata: {\n    id: \"export.as_json\",\n    name: \"export.as_json\",\n    title: \"action.download_file\",\n    icon: IconUser,\n    disabled: false,\n    applicableTo: [\"personal-workspace\", \"team-workspace\"],\n  },\n  action: () => {\n    if (!gqlCollections.value.length) {\n      return toast.error(t(\"error.no_collections_to_export\"))\n    }\n\n    const message = initializeDownloadCollection(\n      gqlCollectionsExporter(gqlCollections.value),\n      \"GQLCollections\"\n    )\n\n    if (E.isLeft(message)) {\n      toast.error(t(\"export.failed\"))\n      return\n    }\n\n    toast.success(message.right)\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_EXPORT_COLLECTION\",\n      platform: \"gql\",\n      exporter: \"json\",\n    })\n  },\n}\n\nconst GqlCollectionsGistExporter: ImporterOrExporter = {\n  metadata: {\n    id: \"export.as_gist\",\n    name: \"export.create_secret_gist\",\n    title:\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      currentUser?.value?.provider === \"github.com\"\n        ? \"export.create_secret_gist_tooltip_text\"\n        : \"export.require_github\",\n    icon: IconUser,\n    disabled: !currentUser.value\n      ? true\n      : currentUser.value?.provider !== \"github.com\",\n    applicableTo: [\"personal-workspace\"],\n    isLoading: isGqlCollectionGistExportInProgress,\n  },\n  action: async () => {\n    if (!gqlCollections.value.length) {\n      return toast.error(t(\"error.no_collections_to_export\"))\n    }\n\n    if (!currentUser.value) {\n      toast.error(t(\"profile.no_permission\"))\n      return\n    }\n\n    isGqlCollectionGistExportInProgress.value = true\n\n    const accessToken = currentUser.value?.accessToken\n\n    if (accessToken) {\n      const res = await gistExporter(\n        JSON.stringify(gqlCollections.value),\n        accessToken\n      )\n\n      if (E.isLeft(res)) {\n        toast.error(t(\"export.failed\"))\n        return\n      }\n\n      toast.success(t(\"export.secret_gist_success\"))\n\n      platform.analytics?.logEvent({\n        type: \"HOPP_EXPORT_COLLECTION\",\n        platform: \"gql\",\n        exporter: \"gist\",\n      })\n\n      platform.io.openExternalLink(res.right)\n    }\n\n    isGqlCollectionGistExportInProgress.value = false\n  },\n}\n\nconst importerModules = [GqlCollectionsHoppImporter, GqlCollectionsGistImporter]\n\nconst exporterModules = computed(() => {\n  const modules = [GqlCollectionsHoppExporter]\n\n  if (platform.platformFeatureFlags.exportAsGIST) {\n    modules.push(GqlCollectionsGistExporter)\n  }\n\n  return modules\n})\n\nconst showImportFailedError = () => {\n  toast.error(t(\"import.failed\"))\n}\n\nconst handleImportToStore = async (gqlCollections: HoppCollection[]) => {\n  appendGraphqlCollections(gqlCollections)\n  toast.success(t(\"state.file_imported\"))\n}\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): () => void\n}>()\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('modal.edit_request')}`\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"requestUpdateData.name\"\n        placeholder=\" \"\n        :label=\"t('action.label')\"\n        input-styles=\"floating-input\"\n        @submit=\"saveRequest\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          outline\n          @click=\"saveRequest\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { HoppGQLRequest } from \"@hoppscotch/data\"\nimport { editGraphqlRequest } from \"~/newstore/collections\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  show: boolean\n  folderPath?: string\n  requestIndex: number | null\n  request: HoppGQLRequest | null\n  editingRequestName: string\n}>()\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n}>()\n\nconst requestUpdateData = ref({ name: null as string | null })\n\nwatch(\n  () => props.editingRequestName,\n  (val) => {\n    requestUpdateData.value.name = val\n  }\n)\n\nconst saveRequest = () => {\n  if (!requestUpdateData.value.name) {\n    toast.error(`${t(\"collection.invalid_name\")}`)\n    return\n  }\n\n  const requestUpdated = {\n    ...(props.request as any),\n    name: requestUpdateData.value.name || (props.request as any).name,\n  }\n\n  editGraphqlRequest(props.folderPath, props.requestIndex, requestUpdated)\n\n  hideModal()\n}\n\nconst hideModal = () => {\n  requestUpdateData.value = { name: null }\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('folder.edit')}`\"\n    @close=\"$emit('hide-modal')\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"name\"\n        placeholder=\" \"\n        :label=\"t('action.label')\"\n        input-styles=\"floating-input\"\n        @submit=\"editFolder\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          outline\n          @click=\"editFolder\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { editGraphqlFolder } from \"~/newstore/collections\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  show: boolean\n  folderPath?: string\n  folder: any\n  editingFolderName: string\n}>()\n\nconst emit = defineEmits([\"hide-modal\"])\n\nconst name = ref(\"\")\n\nwatch(\n  () => props.editingFolderName,\n  (val) => {\n    name.value = val\n  }\n)\n\nconst editFolder = () => {\n  if (!name.value) {\n    toast.error(`${t(\"collection.invalid_name\")}`)\n    return\n  }\n  editGraphqlFolder(props.folderPath, {\n    ...(props.folder as any),\n    name: name.value,\n  })\n  hideModal()\n}\n\nconst hideModal = () => {\n  name.value = \"\"\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('folder.new')\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"name\"\n        placeholder=\" \"\n        :label=\"t('action.label')\"\n        input-styles=\"floating-input\"\n        @submit=\"addFolder\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          outline\n          @click=\"addFolder\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst props = defineProps<{\n  show: boolean\n  folderPath?: string\n  collectionIndex: number\n}>()\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n  (\n    e: \"add-folder\",\n    v: {\n      name: string\n      path: string | undefined\n    }\n  ): void\n}>()\n\nconst name = ref<string | null>(null)\n\nconst addFolder = () => {\n  if (!name.value) {\n    toast.error(`${t(\"folder.name_length_insufficient\")}`)\n    return\n  }\n\n  emit(\"add-folder\", {\n    name: name.value,\n    path: props.folderPath || `${props.collectionIndex}`,\n  })\n\n  hideModal()\n}\n\nconst hideModal = () => {\n  name.value = null\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"t('request.new')\"\n    @close=\"emit('hide-modal')\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"editingName\"\n        placeholder=\" \"\n        :label=\"t('action.label')\"\n        input-styles=\"floating-input\"\n        @submit=\"addRequest\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"t('action.save')\"\n          outline\n          @click=\"addRequest\"\n        />\n        <HoppButtonSecondary\n          :label=\"t('action.cancel')\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { useService } from \"dioc/vue\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\n\nconst toast = useToast()\nconst t = useI18n()\n\nconst tabs = useService(GQLTabService)\n\nconst props = defineProps<{\n  show: boolean\n  folderPath?: string\n}>()\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n  (\n    e: \"add-request\",\n    v: {\n      name: string\n      path: string | undefined\n    }\n  ): void\n}>()\n\nconst editingName = ref(\"\")\n\nwatch(\n  () => props.show,\n  (show) => {\n    if (show) {\n      editingName.value = tabs.currentActiveTab.value?.document.request.name\n    }\n  }\n)\n\nconst addRequest = () => {\n  if (!editingName.value) {\n    toast.error(`${t(\"error.empty_req_name\")}`)\n    return\n  }\n  emit(\"add-request\", {\n    name: editingName.value,\n    path: props.folderPath,\n  })\n  hideModal()\n}\n\nconst hideModal = () => {\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('collection.edit')}`\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"editingName\"\n        placeholder=\" \"\n        :label=\"t('action.label')\"\n        input-styles=\"floating-input\"\n        @submit=\"saveCollection\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          outline\n          @click=\"saveCollection\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\nimport { editGraphqlCollection } from \"~/newstore/collections\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\nimport { HoppCollection } from \"@hoppscotch/data\"\n\nconst props = defineProps<{\n  show: boolean\n  editingCollectionIndex: number | null\n  editingCollection: HoppCollection | null\n  editingCollectionName: string\n}>()\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n}>()\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst editingName = ref<string | null>()\n\nwatch(\n  () => props.editingCollectionName,\n  (val) => {\n    editingName.value = val\n  }\n)\n\nconst saveCollection = () => {\n  if (!editingName.value) {\n    toast.error(`${t(\"collection.invalid_name\")}`)\n    return\n  }\n\n  // TODO: Better typechecking here ?\n  const collectionUpdated = {\n    ...(props.editingCollection as any),\n    name: editingName.value,\n  }\n\n  editGraphqlCollection(props.editingCollectionIndex, collectionUpdated)\n  hideModal()\n}\n\nconst hideModal = () => {\n  editingName.value = null\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('collection.new')}`\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <HoppSmartInput\n        v-model=\"name\"\n        placeholder=\" \"\n        input-styles=\"floating-input\"\n        :label=\"t('action.label')\"\n        @submit=\"addNewCollection\"\n      />\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          outline\n          @click=\"addNewCollection\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\nimport { makeCollection } from \"@hoppscotch/data\"\nimport { addGraphqlCollection } from \"~/newstore/collections\"\nimport { platform } from \"~/platform\"\n\nconst t = useI18n()\nconst toast = useToast()\n\ndefineProps<{\n  show: boolean\n}>()\n\nconst emit = defineEmits<{\n  (e: \"hide-modal\"): void\n}>()\n\nconst name = ref<string | null>(null)\n\nconst addNewCollection = () => {\n  if (!name.value) {\n    toast.error(`${t(\"collection.invalid_name\")}`)\n    return\n  }\n\n  addGraphqlCollection(\n    makeCollection({\n      name: name.value,\n      folders: [],\n      requests: [],\n      auth: {\n        authType: \"inherit\",\n        authActive: true,\n      },\n      headers: [],\n    })\n  )\n\n  hideModal()\n\n  platform.analytics?.logEvent({\n    type: \"HOPP_CREATE_COLLECTION\",\n    isRootCollection: true,\n    platform: \"gql\",\n    workspaceType: \"personal\",\n  })\n}\n\nconst hideModal = () => {\n  name.value = null\n  emit(\"hide-modal\")\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\" :class=\"[{ 'bg-primaryLight': dragging }]\">\n    <div\n      class=\"group flex items-stretch\"\n      draggable=\"true\"\n      @dragstart=\"dragStart\"\n      @dragover.stop\n      @dragleave=\"dragging = false\"\n      @dragend=\"dragging = false\"\n      @contextmenu.prevent=\"options.tippy.show()\"\n    >\n      <div\n        class=\"pointer-events-auto flex min-w-0 flex-1 cursor-pointer items-center justify-center\"\n        @click=\"selectRequest()\"\n      >\n        <span\n          class=\"pointer-events-none flex w-8 items-center justify-center truncate px-6\"\n        >\n          <component\n            :is=\"isSelected ? IconCheckCircle : IconFile\"\n            class=\"svg-icons\"\n            :class=\"{ 'text-accent': isSelected }\"\n          />\n        </span>\n        <span\n          class=\"pointer-events-none flex min-w-0 flex-1 items-center py-2 pr-2 transition group-hover:text-secondaryDark\"\n        >\n          <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n            {{ request.name }}\n          </span>\n          <span\n            v-if=\"isActive\"\n            v-tippy=\"{ theme: 'tooltip' }\"\n            class=\"relative mx-3 flex h-1.5 w-1.5 flex-shrink-0\"\n            :title=\"`${t('collection.request_in_use')}`\"\n          >\n            <span\n              class=\"absolute inline-flex h-full w-full flex-shrink-0 animate-ping rounded-full bg-green-500 opacity-75\"\n            >\n            </span>\n            <span\n              class=\"relative inline-flex h-1.5 w-1.5 flex-shrink-0 rounded-full bg-green-500\"\n            ></span>\n          </span>\n        </span>\n      </div>\n      <div class=\"flex\">\n        <span>\n          <tippy\n            ref=\"options\"\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => tippyActions.focus()\"\n          >\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.more')\"\n              :icon=\"IconMoreVertical\"\n            />\n            <template #content=\"{ hide }\">\n              <div\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n                tabindex=\"0\"\n                @keyup.e=\"edit.$el.click()\"\n                @keyup.d=\"duplicate.$el.click()\"\n                @keyup.delete=\"deleteAction.$el.click()\"\n                @keyup.escape=\"hide()\"\n              >\n                <HoppSmartItem\n                  ref=\"edit\"\n                  :icon=\"IconEdit\"\n                  :label=\"`${t('action.edit')}`\"\n                  :shortcut=\"['E']\"\n                  @click=\"\n                    () => {\n                      $emit('edit-request', {\n                        request,\n                        requestIndex,\n                        folderPath,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"duplicate\"\n                  :icon=\"IconCopy\"\n                  :label=\"`${t('action.duplicate')}`\"\n                  :shortcut=\"['D']\"\n                  @click=\"\n                    () => {\n                      $emit('duplicate-request', {\n                        request,\n                        requestIndex,\n                        folderPath,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"deleteAction\"\n                  :icon=\"IconTrash2\"\n                  :label=\"`${t('action.delete')}`\"\n                  :shortcut=\"['⌫']\"\n                  @click=\"\n                    () => {\n                      confirmRemove = true\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n            </template>\n          </tippy>\n        </span>\n      </div>\n    </div>\n    <HoppSmartConfirmModal\n      :show=\"confirmRemove\"\n      :title=\"`${t('confirm.remove_request')}`\"\n      @hide-modal=\"confirmRemove = false\"\n      @resolve=\"removeRequest\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconFile from \"~icons/lucide/file\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconCopy from \"~icons/lucide/copy\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport { PropType, computed, ref } from \"vue\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport { HoppGQLRequest } from \"@hoppscotch/data\"\nimport { removeGraphqlRequest } from \"~/newstore/collections\"\nimport { useService } from \"dioc/vue\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst options = ref<any | null>(null)\nconst edit = ref<any | null>(null)\nconst duplicate = ref<any | null>(null)\nconst deleteAction = ref<any | null>(null)\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst tabs = useService(GQLTabService)\n\nconst props = defineProps({\n  // Whether the object is selected (show the tick mark)\n  picked: { type: Object, default: null },\n  // Whether the request is being saved (activate 'select' event)\n  saveRequest: { type: Boolean, default: false },\n  request: { type: Object as PropType<HoppGQLRequest>, default: () => ({}) },\n  folderPath: { type: String, default: null },\n  requestIndex: { type: Number, default: null },\n})\n\nconst isActive = computed(() => {\n  const saveCtx = tabs.currentActiveTab.value?.document.saveContext\n\n  if (!saveCtx) return false\n\n  return (\n    saveCtx.originLocation === \"user-collection\" &&\n    saveCtx.folderPath === props.folderPath &&\n    saveCtx.requestIndex === props.requestIndex\n  )\n})\n\n// TODO: Better types please\nconst emit = defineEmits([\n  \"select\",\n  \"edit-request\",\n  \"duplicate-request\",\n  \"select-request\",\n])\n\nconst dragging = ref(false)\nconst confirmRemove = ref(false)\n\nconst isSelected = computed(\n  () =>\n    props.picked?.pickedType === \"gql-my-request\" &&\n    props.picked?.folderPath === props.folderPath &&\n    props.picked?.requestIndex === props.requestIndex\n)\n\nconst pick = () => {\n  emit(\"select\", {\n    pickedType: \"gql-my-request\",\n    folderPath: props.folderPath,\n    requestIndex: props.requestIndex,\n  })\n}\n\nconst selectRequest = () => {\n  if (props.saveRequest) {\n    pick()\n  } else {\n    emit(\"select-request\", {\n      request: props.request,\n      folderPath: props.folderPath,\n      requestIndex: props.requestIndex,\n    })\n  }\n}\n\nconst dragStart = ({ dataTransfer }: any) => {\n  dragging.value = !dragging.value\n\n  dataTransfer.setData(\"folderPath\", props.folderPath)\n  dataTransfer.setData(\"requestIndex\", props.requestIndex)\n}\n\nconst removeRequest = () => {\n  // Cancel pick if the picked request is deleted\n  if (\n    props.picked &&\n    props.picked.pickedType === \"gql-my-request\" &&\n    props.picked.folderPath === props.folderPath &&\n    props.picked.requestIndex === props.requestIndex\n  ) {\n    emit(\"select\", null)\n  }\n\n  // Detach the request from any of the tabs\n  const possibleTab = tabs.getTabRefWithSaveContext({\n    originLocation: \"user-collection\",\n    folderPath: props.folderPath,\n    requestIndex: props.requestIndex,\n  })\n\n  if (possibleTab) {\n    possibleTab.value.document.saveContext = undefined\n    possibleTab.value.document.isDirty = true\n  }\n\n  removeGraphqlRequest(props.folderPath, props.requestIndex, props.request.id)\n  toast.success(`${t(\"state.deleted\")}`)\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\" :class=\"[{ 'bg-primaryLight': dragging }]\">\n    <div\n      class=\"group flex items-stretch\"\n      @dragover.prevent\n      @drop.prevent=\"dropEvent\"\n      @dragover=\"dragging = true\"\n      @drop=\"dragging = false\"\n      @dragleave=\"dragging = false\"\n      @dragend=\"dragging = false\"\n      @contextmenu.prevent=\"options.tippy.show()\"\n    >\n      <div\n        class=\"flex min-w-0 flex-1 items-center justify-center cursor-pointer\"\n        @click=\"toggleShowChildren()\"\n      >\n        <span class=\"pointer-events-none flex items-center justify-center px-4\">\n          <component\n            :is=\"collectionIcon\"\n            class=\"svg-icons\"\n            :class=\"{ 'text-accent': isSelected }\"\n          />\n        </span>\n        <span\n          class=\"pointer-events-none flex min-w-0 flex-1 cursor-pointer py-2 pr-2 transition group-hover:text-secondaryDark\"\n        >\n          <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n            {{ folder.name ? folder.name : folder.title }}\n          </span>\n        </span>\n      </div>\n      <div class=\"flex\">\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconFilePlus\"\n          :title=\"t('request.new')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"\n            emit('add-request', {\n              path: folderPath,\n              index: folder.requests.length,\n            })\n          \"\n        />\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconFolderPlus\"\n          :title=\"t('folder.new')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"emit('add-folder', { folder, path: folderPath })\"\n        />\n        <span>\n          <tippy\n            ref=\"options\"\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => tippyActions.focus()\"\n          >\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.more')\"\n              :icon=\"IconMoreVertical\"\n            />\n            <template #content=\"{ hide }\">\n              <div\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n                tabindex=\"0\"\n                @keyup.r=\"requestAction.$el.click()\"\n                @keyup.n=\"folderAction.$el.click()\"\n                @keyup.e=\"edit.$el.click()\"\n                @keyup.delete=\"deleteAction.$el.click()\"\n                @keyup.escape=\"hide()\"\n              >\n                <HoppSmartItem\n                  ref=\"requestAction\"\n                  :icon=\"IconFilePlus\"\n                  :label=\"`${t('request.new')}`\"\n                  :shortcut=\"['R']\"\n                  @click=\"\n                    () => {\n                      emit('add-request', { path: folderPath })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"folderAction\"\n                  :icon=\"IconFolderPlus\"\n                  :label=\"`${t('folder.new')}`\"\n                  :shortcut=\"['N']\"\n                  @click=\"\n                    () => {\n                      emit('add-folder', { folder, path: folderPath })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"edit\"\n                  :icon=\"IconEdit\"\n                  :label=\"`${t('action.edit')}`\"\n                  :shortcut=\"['E']\"\n                  @click=\"\n                    () => {\n                      emit('edit-folder', { folder, folderPath })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"deleteAction\"\n                  :icon=\"IconTrash2\"\n                  :label=\"`${t('action.delete')}`\"\n                  :shortcut=\"['⌫']\"\n                  @click=\"\n                    () => {\n                      confirmRemove = true\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"propertiesAction\"\n                  :icon=\"IconSettings2\"\n                  :label=\"t('action.properties')\"\n                  :shortcut=\"['P']\"\n                  @click=\"\n                    () => {\n                      emit('edit-properties', {\n                        collectionIndex: collectionIndex,\n                        collection: collection,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n            </template>\n          </tippy>\n        </span>\n      </div>\n    </div>\n    <div v-if=\"showChildren || isFiltered\" class=\"flex\">\n      <div\n        class=\"ml-[1.375rem] flex w-0.5 transform cursor-nsResize bg-dividerLight transition hover:scale-x-125 hover:bg-dividerDark\"\n        @click=\"toggleShowChildren()\"\n      ></div>\n      <div class=\"flex flex-1 flex-col truncate\">\n        <!-- Referring to this component only (this is recursive) -->\n        <Folder\n          v-for=\"(subFolder, subFolderIndex) in folder.folders\"\n          :key=\"`subFolder-${String(subFolderIndex)}`\"\n          :picked=\"picked\"\n          :save-request=\"saveRequest\"\n          :folder=\"subFolder\"\n          :folder-index=\"subFolderIndex\"\n          :folder-path=\"`${folderPath}/${String(subFolderIndex)}`\"\n          :collection-index=\"collectionIndex\"\n          :is-filtered=\"isFiltered\"\n          @add-request=\"emit('add-request', $event)\"\n          @add-folder=\"emit('add-folder', $event)\"\n          @edit-folder=\"emit('edit-folder', $event)\"\n          @edit-request=\"emit('edit-request', $event)\"\n          @duplicate-request=\"emit('duplicate-request', $event)\"\n          @edit-properties=\"\n            emit('edit-properties', {\n              collectionIndex: `${folderPath}/${String(subFolderIndex)}`,\n              collection: subFolder,\n            })\n          \"\n          @select=\"emit('select', $event)\"\n          @select-request=\"$emit('select-request', $event)\"\n        />\n        <CollectionsGraphqlRequest\n          v-for=\"(request, index) in folder.requests\"\n          :key=\"`request-${String(index)}`\"\n          :picked=\"picked\"\n          :save-request=\"saveRequest\"\n          :request=\"request\"\n          :collection-index=\"collectionIndex\"\n          :folder-index=\"folderIndex\"\n          :folder-path=\"folderPath\"\n          :folder-name=\"folder.name\"\n          :request-index=\"index\"\n          @edit-request=\"emit('edit-request', $event)\"\n          @duplicate-request=\"emit('duplicate-request', $event)\"\n          @select=\"emit('select', $event)\"\n          @select-request=\"$emit('select-request', $event)\"\n        />\n\n        <HoppSmartPlaceholder\n          v-if=\"\n            folder.folders &&\n            folder.folders.length === 0 &&\n            folder.requests &&\n            folder.requests.length === 0\n          \"\n          :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n          :alt=\"`${t('empty.folder')}`\"\n          :text=\"t('empty.folder')\"\n        />\n      </div>\n    </div>\n    <HoppSmartConfirmModal\n      :show=\"confirmRemove\"\n      :title=\"`${t('confirm.remove_folder')}`\"\n      @hide-modal=\"confirmRemove = false\"\n      @resolve=\"removeFolder\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconFolderPlus from \"~icons/lucide/folder-plus\"\nimport IconFilePlus from \"~icons/lucide/file-plus\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconFolder from \"~icons/lucide/folder\"\nimport IconFolderOpen from \"~icons/lucide/folder-open\"\nimport IconSettings2 from \"~icons/lucide/settings-2\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { removeGraphqlFolder } from \"~/newstore/collections\"\nimport { computed, ref } from \"vue\"\nimport { useService } from \"dioc/vue\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\nimport { Picked } from \"~/helpers/types/HoppPicked\"\nimport { HoppCollection } from \"@hoppscotch/data\"\n\nconst toast = useToast()\nconst t = useI18n()\nconst colorMode = useColorMode()\n\nconst tabs = useService(GQLTabService)\n\nconst props = defineProps<{\n  picked: Picked\n  // Whether the request is in a selectable mode (activates 'select' event)\n  saveRequest: boolean\n  folder: HoppCollection\n  folderIndex: number\n  collectionIndex: number\n  folderPath: string\n  isFiltered: boolean\n}>()\n\nconst emit = defineEmits([\n  \"select\",\n  \"add-request\",\n  \"edit-request\",\n  \"add-folder\",\n  \"edit-folder\",\n  \"duplicate-request\",\n  \"edit-properties\",\n  \"select-request\",\n  \"drop-request\",\n])\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst options = ref<any | null>(null)\nconst requestAction = ref<any | null>(null)\nconst folderAction = ref<any | null>(null)\nconst edit = ref<any | null>(null)\nconst deleteAction = ref<any | null>(null)\n\nconst showChildren = ref(false)\nconst dragging = ref(false)\nconst confirmRemove = ref(false)\n\nconst isSelected = computed(\n  () =>\n    props.picked?.pickedType === \"gql-my-folder\" &&\n    props.picked?.folderPath === props.folderPath\n)\nconst collectionIcon = computed(() => {\n  if (isSelected.value) return IconCheckCircle\n  else if (!showChildren.value && !props.isFiltered) return IconFolder\n  else if (showChildren.value || !props.isFiltered) return IconFolderOpen\n  return IconFolder\n})\n\nconst pick = () => {\n  emit(\"select\", {\n    pickedType: \"gql-my-folder\",\n    folderPath: props.folderPath,\n  })\n}\n\nconst toggleShowChildren = () => {\n  if (props.saveRequest) {\n    pick()\n  }\n\n  showChildren.value = !showChildren.value\n}\n\nconst removeFolder = () => {\n  // Cancel pick if the picked folder is deleted\n  if (\n    props.picked?.pickedType === \"gql-my-folder\" &&\n    props.picked?.folderPath === props.folderPath\n  ) {\n    emit(\"select\", { picked: null })\n  }\n\n  const possibleTabs = tabs.getTabsRefTo((tab) => {\n    const ctx = tab.document.saveContext\n\n    if (!ctx) return false\n\n    return (\n      ctx.originLocation === \"user-collection\" &&\n      ctx.folderPath.startsWith(props.folderPath)\n    )\n  })\n\n  for (const tab of possibleTabs) {\n    tab.value.document.saveContext = undefined\n    tab.value.document.isDirty = true\n  }\n\n  removeGraphqlFolder(props.folderPath, props.folder.id)\n  toast.success(t(\"state.deleted\"))\n}\n\nconst dropEvent = ({ dataTransfer }: any) => {\n  dragging.value = !dragging.value\n  const folderPath = dataTransfer.getData(\"folderPath\")\n  const requestIndex = dataTransfer.getData(\"requestIndex\")\n\n  emit(\"drop-request\", {\n    folderPath,\n    requestIndex,\n    collectionIndex: props.folderPath,\n  })\n}\n</script>\n","<template>\n  <div class=\"flex flex-col\" :class=\"[{ 'bg-primaryLight': dragging }]\">\n    <div\n      class=\"group flex items-stretch\"\n      @dragover.prevent\n      @drop.prevent=\"dropEvent\"\n      @dragover=\"dragging = true\"\n      @drop=\"dragging = false\"\n      @dragleave=\"dragging = false\"\n      @dragend=\"dragging = false\"\n      @contextmenu.prevent=\"options.tippy.show()\"\n    >\n      <span\n        class=\"flex cursor-pointer items-center justify-center px-4\"\n        @click=\"toggleShowChildren()\"\n      >\n        <component\n          :is=\"collectionIcon\"\n          class=\"svg-icons\"\n          :class=\"{ 'text-accent': isSelected }\"\n        />\n      </span>\n      <span\n        class=\"flex min-w-0 flex-1 cursor-pointer py-2 pr-2 transition group-hover:text-secondaryDark\"\n        @click=\"toggleShowChildren()\"\n      >\n        <span class=\"truncate\" :class=\"{ 'text-accent': isSelected }\">\n          {{ collection.name }}\n        </span>\n      </span>\n      <div class=\"flex\">\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconFilePlus\"\n          :title=\"t('request.new')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"\n            emit('add-request', {\n              path: `${collectionIndex}`,\n              index: collection.requests.length,\n            })\n          \"\n        />\n        <HoppButtonSecondary\n          v-tippy=\"{ theme: 'tooltip' }\"\n          :icon=\"IconFolderPlus\"\n          :title=\"t('folder.new')\"\n          class=\"hidden group-hover:inline-flex\"\n          @click=\"\n            emit('add-folder', {\n              path: `${collectionIndex}`,\n            })\n          \"\n        />\n        <span>\n          <tippy\n            ref=\"options\"\n            interactive\n            trigger=\"click\"\n            theme=\"popover\"\n            :on-shown=\"() => tippyActions.focus()\"\n          >\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.more')\"\n              :icon=\"IconMoreVertical\"\n            />\n            <template #content=\"{ hide }\">\n              <div\n                ref=\"tippyActions\"\n                class=\"flex flex-col focus:outline-none\"\n                tabindex=\"0\"\n                @keyup.r=\"requestAction.$el.click()\"\n                @keyup.n=\"folderAction.$el.click()\"\n                @keyup.e=\"edit.$el.click()\"\n                @keyup.delete=\"deleteAction.$el.click()\"\n                @keyup.escape=\"hide()\"\n              >\n                <HoppSmartItem\n                  ref=\"requestAction\"\n                  :icon=\"IconFilePlus\"\n                  :label=\"`${t('request.new')}`\"\n                  :shortcut=\"['R']\"\n                  @click=\"\n                    () => {\n                      $emit('add-request', {\n                        path: `${collectionIndex}`,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"folderAction\"\n                  :icon=\"IconFolderPlus\"\n                  :label=\"`${t('folder.new')}`\"\n                  :shortcut=\"['N']\"\n                  @click=\"\n                    () => {\n                      emit('add-folder', {\n                        path: `${collectionIndex}`,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"edit\"\n                  :icon=\"IconEdit\"\n                  :label=\"`${t('action.edit')}`\"\n                  :shortcut=\"['E']\"\n                  @click=\"\n                    () => {\n                      emit('edit-collection')\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"deleteAction\"\n                  :icon=\"IconTrash2\"\n                  :label=\"`${t('action.delete')}`\"\n                  :shortcut=\"['⌫']\"\n                  @click=\"\n                    () => {\n                      confirmRemove = true\n                      hide()\n                    }\n                  \"\n                />\n                <HoppSmartItem\n                  ref=\"propertiesAction\"\n                  :icon=\"IconSettings2\"\n                  :label=\"t('action.properties')\"\n                  :shortcut=\"['P']\"\n                  @click=\"\n                    () => {\n                      emit('edit-properties', {\n                        collectionIndex: String(collectionIndex),\n                        collection: collection,\n                      })\n                      hide()\n                    }\n                  \"\n                />\n              </div>\n            </template>\n          </tippy>\n        </span>\n      </div>\n    </div>\n    <div v-if=\"showChildren || isFiltered\" class=\"flex\">\n      <div\n        class=\"ml-[1.375rem] flex w-0.5 transform cursor-nsResize bg-dividerLight transition hover:scale-x-125 hover:bg-dividerDark\"\n        @click=\"toggleShowChildren()\"\n      ></div>\n      <div class=\"flex flex-1 flex-col truncate\">\n        <CollectionsGraphqlFolder\n          v-for=\"(folder, index) in collection.folders\"\n          :key=\"`folder-${String(index)}`\"\n          :picked=\"picked\"\n          :save-request=\"saveRequest\"\n          :folder=\"folder\"\n          :folder-index=\"index\"\n          :folder-path=\"`${collectionIndex}/${String(index)}`\"\n          :collection-index=\"collectionIndex\"\n          :is-filtered=\"isFiltered\"\n          @add-request=\"$emit('add-request', $event)\"\n          @add-folder=\"$emit('add-folder', $event)\"\n          @edit-folder=\"$emit('edit-folder', $event)\"\n          @edit-request=\"$emit('edit-request', $event)\"\n          @duplicate-request=\"$emit('duplicate-request', $event)\"\n          @edit-properties=\"\n            $emit('edit-properties', {\n              collectionIndex: `${collectionIndex}/${String(index)}`,\n              collection: folder,\n            })\n          \"\n          @select=\"$emit('select', $event)\"\n          @select-request=\"$emit('select-request', $event)\"\n          @drop-request=\"$emit('drop-request', $event)\"\n        />\n        <CollectionsGraphqlRequest\n          v-for=\"(request, index) in collection.requests\"\n          :key=\"`request-${String(index)}`\"\n          :picked=\"picked\"\n          :save-request=\"saveRequest\"\n          :request=\"request\"\n          :collection-index=\"collectionIndex\"\n          :folder-index=\"-1\"\n          :folder-name=\"collection.name\"\n          :folder-path=\"`${collectionIndex}`\"\n          :request-index=\"index\"\n          @edit-request=\"$emit('edit-request', $event)\"\n          @duplicate-request=\"$emit('duplicate-request', $event)\"\n          @select=\"$emit('select', $event)\"\n          @select-request=\"$emit('select-request', $event)\"\n        />\n        <HoppSmartPlaceholder\n          v-if=\"\n            collection.folders.length === 0 && collection.requests.length === 0\n          \"\n          :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n          :alt=\"`${t('empty.collection')}`\"\n          :text=\"t('empty.collection')\"\n        >\n          <template #body>\n            <HoppButtonSecondary\n              :label=\"t('add.new')\"\n              filled\n              outline\n              @click=\"\n                emit('add-folder', {\n                  path: `${collectionIndex}`,\n                })\n              \"\n            />\n          </template>\n        </HoppSmartPlaceholder>\n      </div>\n    </div>\n    <HoppSmartConfirmModal\n      :show=\"confirmRemove\"\n      :title=\"`${t('confirm.remove_collection')}`\"\n      @hide-modal=\"confirmRemove = false\"\n      @resolve=\"removeCollection\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\"\nimport IconCheckCircle from \"~icons/lucide/check-circle\"\nimport IconFolder from \"~icons/lucide/folder\"\nimport IconFolderOpen from \"~icons/lucide/folder-open\"\nimport IconFilePlus from \"~icons/lucide/file-plus\"\nimport IconFolderPlus from \"~icons/lucide/folder-plus\"\nimport IconMoreVertical from \"~icons/lucide/more-vertical\"\nimport IconEdit from \"~icons/lucide/edit\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconSettings2 from \"~icons/lucide/settings-2\"\nimport { useToast } from \"@composables/toast\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useColorMode } from \"@composables/theming\"\nimport { removeGraphqlCollection } from \"~/newstore/collections\"\nimport { Picked } from \"~/helpers/types/HoppPicked\"\nimport { useService } from \"dioc/vue\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\nimport { HoppCollection } from \"@hoppscotch/data\"\n\nconst props = defineProps<{\n  picked: Picked | null\n  // Whether the viewing context is related to picking (activates 'select' events)\n  saveRequest: boolean\n  collectionIndex: number | null\n  collection: HoppCollection\n  isFiltered: boolean\n}>()\n\nconst colorMode = useColorMode()\nconst toast = useToast()\nconst t = useI18n()\n\nconst tabs = useService(GQLTabService)\n\n// TODO: improve types plz\nconst emit = defineEmits<{\n  (e: \"select\", i: Picked | null): void\n  (e: \"edit-request\", i: any): void\n  (e: \"duplicate-request\", i: any): void\n  (e: \"add-request\", i: any): void\n  (e: \"add-folder\", i: any): void\n  (e: \"edit-folder\", i: any): void\n  (\n    e: \"edit-properties\",\n    payload: {\n      collectionIndex: string | null\n      collection: HoppCollection\n    }\n  ): void\n  (e: \"edit-collection\"): void\n  (e: \"select-request\", i: any): void\n  (\n    e: \"drop-request\",\n    payload: {\n      folderPath: string\n      requestIndex: string\n      collectionIndex: number | null\n    }\n  ): void\n}>()\n\n// Template refs\nconst tippyActions = ref<any | null>(null)\nconst options = ref<any | null>(null)\nconst requestAction = ref<any | null>(null)\nconst folderAction = ref<any | null>(null)\nconst edit = ref<any | null>(null)\nconst deleteAction = ref<any | null>(null)\n\nconst showChildren = ref(false)\nconst dragging = ref(false)\n\nconst confirmRemove = ref(false)\n\nconst isSelected = computed(\n  () =>\n    props.picked?.pickedType === \"gql-my-collection\" &&\n    props.picked?.collectionIndex === props.collectionIndex\n)\nconst collectionIcon = computed(() => {\n  if (isSelected.value) return IconCheckCircle\n  else if (!showChildren.value && !props.isFiltered) return IconFolder\n  else if (!showChildren.value || props.isFiltered) return IconFolderOpen\n  return IconFolder\n})\n\nconst pick = () => {\n  emit(\"select\", {\n    pickedType: \"gql-my-collection\",\n    collectionIndex: props.collectionIndex,\n  })\n}\n\nconst toggleShowChildren = () => {\n  if (props.saveRequest) {\n    pick()\n  }\n\n  showChildren.value = !showChildren.value\n}\n\nconst removeCollection = () => {\n  // Cancel pick if picked collection is deleted\n  if (\n    props.picked?.pickedType === \"gql-my-collection\" &&\n    props.picked?.collectionIndex === props.collectionIndex\n  ) {\n    emit(\"select\", null)\n  }\n\n  const possibleTabs = tabs.getTabsRefTo((tab) => {\n    const ctx = tab.document.saveContext\n\n    if (!ctx) return false\n\n    return (\n      ctx.originLocation === \"user-collection\" &&\n      ctx.folderPath.startsWith(props.collectionIndex.toString())\n    )\n  })\n\n  for (const tab of possibleTabs) {\n    tab.value.document.saveContext = undefined\n    tab.value.document.isDirty = true\n  }\n\n  removeGraphqlCollection(props.collectionIndex, props.collection.id)\n  toast.success(`${t(\"state.deleted\")}`)\n}\n\nconst dropEvent = ({ dataTransfer }: any) => {\n  dragging.value = !dragging.value\n  const folderPath = dataTransfer.getData(\"folderPath\")\n  const requestIndex = dataTransfer.getData(\"requestIndex\")\n  emit(\"drop-request\", {\n    folderPath,\n    requestIndex,\n    collectionIndex: props.collectionIndex,\n  })\n}\n</script>\n","<template>\n  <div :class=\"{ 'rounded border border-divider': saveRequest }\">\n    <div\n      class=\"sticky z-10 flex flex-shrink-0 flex-col overflow-x-auto rounded-t bg-primary\"\n      :style=\"\n        saveRequest ? 'top: calc(-1 * var(--line-height-body))' : 'top: 0'\n      \"\n    >\n      <input\n        v-model=\"filterText\"\n        type=\"search\"\n        autocomplete=\"off\"\n        :placeholder=\"t('action.search')\"\n        class=\"flex w-full bg-transparent px-4 py-2 h-8\"\n      />\n      <div\n        class=\"flex flex-1 flex-shrink-0 justify-between border-y border-dividerLight bg-primary\"\n      >\n        <HoppButtonSecondary\n          :icon=\"IconPlus\"\n          :label=\"t('action.new')\"\n          class=\"!rounded-none\"\n          @click=\"displayModalAdd(true)\"\n        />\n        <div class=\"flex\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            to=\"https://docs.hoppscotch.io/documentation/features/collections\"\n            blank\n            :title=\"t('app.wiki')\"\n            :icon=\"IconHelpCircle\"\n          />\n          <HoppButtonSecondary\n            v-if=\"!saveRequest\"\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :title=\"t('modal.import_export')\"\n            :icon=\"IconImport\"\n            @click=\"displayModalImportExport(true)\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"flex flex-col\">\n      <CollectionsGraphqlCollection\n        v-for=\"(collection, index) in filteredCollections\"\n        :key=\"`collection-${index}`\"\n        :picked=\"picked\"\n        :name=\"collection.name\"\n        :collection-index=\"index\"\n        :collection=\"collection\"\n        :is-filtered=\"filterText.length > 0\"\n        :save-request=\"saveRequest\"\n        @edit-collection=\"editCollection(collection, index)\"\n        @add-request=\"addRequest($event)\"\n        @add-folder=\"addFolder($event)\"\n        @edit-folder=\"editFolder($event)\"\n        @edit-request=\"editRequest($event)\"\n        @duplicate-request=\"duplicateRequest($event)\"\n        @select-collection=\"$emit('use-collection', collection)\"\n        @edit-properties=\"editProperties($event)\"\n        @select=\"$emit('select', $event)\"\n        @select-request=\"selectRequest($event)\"\n        @drop-request=\"dropRequest($event)\"\n      />\n    </div>\n    <HoppSmartPlaceholder\n      v-if=\"collections.length === 0\"\n      :src=\"`/images/states/${colorMode.value}/pack.svg`\"\n      :alt=\"`${t('empty.collections')}`\"\n      :text=\"t('empty.collections')\"\n    >\n      <template #body>\n        <div class=\"flex flex-col items-center space-y-4\">\n          <span class=\"text-center text-secondaryLight\">\n            {{ t(\"collection.import_or_create\") }}\n          </span>\n          <div class=\"flex flex-col items-stretch gap-4\">\n            <HoppButtonPrimary\n              :icon=\"IconImport\"\n              :label=\"t('import.title')\"\n              filled\n              outline\n              @click=\"displayModalImportExport(true)\"\n            />\n            <HoppButtonSecondary\n              :label=\"t('add.new')\"\n              filled\n              outline\n              :icon=\"IconPlus\"\n              @click=\"displayModalAdd(true)\"\n            />\n          </div>\n        </div>\n      </template>\n    </HoppSmartPlaceholder>\n    <HoppSmartPlaceholder\n      v-if=\"!(filteredCollections.length !== 0 || collections.length === 0)\"\n      :text=\"`${t('state.nothing_found')} ‟${filterText}”`\"\n    >\n      <template #icon>\n        <icon-lucide-search class=\"svg-icons opacity-75\" />\n      </template>\n    </HoppSmartPlaceholder>\n    <CollectionsGraphqlAdd\n      :show=\"showModalAdd\"\n      @hide-modal=\"displayModalAdd(false)\"\n    />\n    <CollectionsGraphqlEdit\n      :show=\"showModalEdit\"\n      :editing-collection=\"editingCollection\"\n      :editing-collection-index=\"editingCollectionIndex\"\n      :editing-collection-name=\"editingCollection ? editingCollection.name : ''\"\n      @hide-modal=\"displayModalEdit(false)\"\n    />\n    <CollectionsGraphqlAddRequest\n      :show=\"showModalAddRequest\"\n      :folder-path=\"editingFolderPath\"\n      @add-request=\"onAddRequest($event)\"\n      @hide-modal=\"displayModalAddRequest(false)\"\n    />\n    <CollectionsGraphqlAddFolder\n      :show=\"showModalAddFolder\"\n      :folder-path=\"editingFolderPath\"\n      @add-folder=\"onAddFolder($event)\"\n      @hide-modal=\"displayModalAddFolder(false)\"\n    />\n    <CollectionsGraphqlEditFolder\n      :show=\"showModalEditFolder\"\n      :collection-index=\"editingCollectionIndex\"\n      :folder=\"editingFolder\"\n      :folder-index=\"editingFolderIndex\"\n      :folder-path=\"editingFolderPath\"\n      :editing-folder-name=\"editingFolder ? editingFolder.name : ''\"\n      @hide-modal=\"displayModalEditFolder(false)\"\n    />\n    <CollectionsGraphqlEditRequest\n      :show=\"showModalEditRequest\"\n      :folder-path=\"editingFolderPath\"\n      :request=\"editingRequest\"\n      :request-index=\"editingRequestIndex\"\n      :editing-request-name=\"editingRequest ? editingRequest.name : ''\"\n      @hide-modal=\"displayModalEditRequest(false)\"\n    />\n    <CollectionsGraphqlImportExport\n      v-if=\"showModalImportExport\"\n      @hide-modal=\"displayModalImportExport(false)\"\n    />\n    <CollectionsProperties\n      v-model=\"collectionPropertiesModalActiveTab\"\n      :show=\"showModalEditProperties\"\n      :editing-properties=\"editingProperties\"\n      source=\"GraphQL\"\n      @hide-modal=\"displayModalEditProperties(false)\"\n      @set-collection-properties=\"setCollectionProperties\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { nextTick, onMounted, ref } from \"vue\"\nimport { clone, cloneDeep } from \"lodash-es\"\nimport {\n  graphqlCollections$,\n  addGraphqlFolder,\n  saveGraphqlRequestAs,\n  cascadeParentCollectionForHeaderAuth,\n  editGraphqlCollection,\n  editGraphqlFolder,\n  moveGraphqlRequest,\n} from \"~/newstore/collections\"\nimport IconPlus from \"~icons/lucide/plus\"\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconImport from \"~icons/lucide/folder-down\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useColorMode } from \"@composables/theming\"\nimport { platform } from \"~/platform\"\nimport { useService } from \"dioc/vue\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\nimport { computed } from \"vue\"\nimport {\n  HoppCollection,\n  HoppGQLRequest,\n  makeGQLRequest,\n} from \"@hoppscotch/data\"\nimport { Picked } from \"~/helpers/types/HoppPicked\"\nimport { HoppInheritedProperty } from \"~/helpers/types/HoppInheritedProperties\"\nimport { updateInheritedPropertiesForAffectedRequests } from \"~/helpers/collection/collection\"\nimport { useToast } from \"~/composables/toast\"\nimport { getRequestsByPath } from \"~/helpers/collection/request\"\nimport { PersistenceService } from \"~/services/persistence\"\nimport { PersistedOAuthConfig } from \"~/services/oauth/oauth.service\"\nimport { GQLOptionTabs } from \"~/components/graphql/RequestOptions.vue\"\nimport { EditingProperties } from \"../Properties.vue\"\nimport { defineActionHandler } from \"~/helpers/actions\"\n\nconst t = useI18n()\nconst toast = useToast()\n\ndefineProps<{\n  // Whether to activate the ability to pick items (activates 'select' events)\n  saveRequest: boolean\n  picked: Picked | null\n}>()\n\nconst collections = useReadonlyStream(graphqlCollections$, [], \"deep\")\nconst colorMode = useColorMode()\nconst tabs = useService(GQLTabService)\n\nconst showModalAdd = ref(false)\nconst showModalEdit = ref(false)\nconst showModalImportExport = ref(false)\nconst showModalAddRequest = ref(false)\nconst showModalAddFolder = ref(false)\nconst showModalEditFolder = ref(false)\nconst showModalEditRequest = ref(false)\nconst showModalEditProperties = ref(false)\n\nconst editingCollection = ref<HoppCollection | null>(null)\nconst editingCollectionIndex = ref<number | null>(null)\nconst editingFolder = ref<HoppCollection | null>(null)\nconst editingFolderName = ref(\"\")\nconst editingFolderIndex = ref<number | null>(null)\nconst editingFolderPath = ref(\"\")\nconst editingRequest = ref<HoppGQLRequest | null>(null)\nconst editingRequestIndex = ref<number | null>(null)\n\nconst editingProperties = ref<{\n  collection: Partial<HoppCollection> | null\n  isRootCollection: boolean\n  path: string\n  inheritedProperties?: HoppInheritedProperty\n}>({\n  collection: null,\n  isRootCollection: false,\n  path: \"\",\n  inheritedProperties: undefined,\n})\n\nconst filterText = ref(\"\")\n\nconst persistenceService = useService(PersistenceService)\n\nconst collectionPropertiesModalActiveTab = ref<GQLOptionTabs>(\"headers\")\n\nonMounted(() => {\n  const localOAuthTempConfig =\n    persistenceService.getLocalConfig(\"oauth_temp_config\")\n\n  if (!localOAuthTempConfig) {\n    return\n  }\n\n  const { context, source, token }: PersistedOAuthConfig =\n    JSON.parse(localOAuthTempConfig)\n\n  if (source === \"REST\") {\n    return\n  }\n\n  if (context?.type === \"collection-properties\") {\n    // load the unsaved editing properties\n    const unsavedCollectionPropertiesString = persistenceService.getLocalConfig(\n      \"unsaved_collection_properties\"\n    )\n\n    if (unsavedCollectionPropertiesString) {\n      const unsavedCollectionProperties: EditingProperties = JSON.parse(\n        unsavedCollectionPropertiesString\n      )\n\n      const auth = unsavedCollectionProperties.collection?.auth\n\n      if (auth?.authType === \"oauth-2\") {\n        const grantTypeInfo = auth.grantTypeInfo\n\n        grantTypeInfo && (grantTypeInfo.token = token ?? \"\")\n      }\n\n      editingProperties.value = unsavedCollectionProperties\n    }\n\n    persistenceService.removeLocalConfig(\"oauth_temp_config\")\n    collectionPropertiesModalActiveTab.value = \"authorization\"\n    showModalEditProperties.value = true\n  }\n})\n\nconst filteredCollections = computed(() => {\n  const collectionsClone = clone(collections.value)\n\n  if (!filterText.value) return collectionsClone\n\n  const filterTextLower = filterText.value.toLowerCase()\n  const filteredCollections = []\n\n  for (const collection of collectionsClone) {\n    const filteredRequests = []\n    const filteredFolders = []\n\n    for (const request of collection.requests) {\n      if (request.name.toLowerCase().includes(filterTextLower))\n        filteredRequests.push(request)\n    }\n\n    for (const folder of collection.folders) {\n      const filteredFolderRequests = []\n      for (const request of folder.requests) {\n        if (request.name.toLowerCase().includes(filterTextLower))\n          filteredFolderRequests.push(request)\n      }\n      if (filteredFolderRequests.length > 0) {\n        const filteredFolder = { ...folder }\n        filteredFolder.requests = filteredFolderRequests\n        filteredFolders.push(filteredFolder)\n      }\n    }\n\n    if (filteredRequests.length + filteredFolders.length > 0) {\n      const filteredCollection = { ...collection }\n      filteredCollection.requests = filteredRequests\n      filteredCollection.folders = filteredFolders\n      filteredCollections.push(filteredCollection)\n    }\n  }\n\n  return filteredCollections\n})\n\nconst displayModalAdd = (shouldDisplay: boolean) => {\n  showModalAdd.value = shouldDisplay\n}\n\nconst displayModalEdit = (shouldDisplay: boolean) => {\n  showModalEdit.value = shouldDisplay\n\n  if (!shouldDisplay) resetSelectedData()\n}\n\nconst displayModalImportExport = (shouldDisplay: boolean) => {\n  showModalImportExport.value = shouldDisplay\n}\n\nconst displayModalAddRequest = (shouldDisplay: boolean) => {\n  showModalAddRequest.value = shouldDisplay\n\n  if (!shouldDisplay) resetSelectedData()\n}\n\nconst displayModalAddFolder = (shouldDisplay: boolean) => {\n  showModalAddFolder.value = shouldDisplay\n\n  if (!shouldDisplay) resetSelectedData()\n}\n\nconst displayModalEditFolder = (shouldDisplay: boolean) => {\n  showModalEditFolder.value = shouldDisplay\n\n  if (!shouldDisplay) resetSelectedData()\n}\n\nconst displayModalEditRequest = (shouldDisplay: boolean) => {\n  showModalEditRequest.value = shouldDisplay\n\n  if (!shouldDisplay) resetSelectedData()\n}\n\nconst displayModalEditProperties = (show: boolean) => {\n  showModalEditProperties.value = show\n\n  if (!show) resetSelectedData()\n}\n\nconst editCollection = (\n  collection: HoppCollection,\n  collectionIndex: number\n) => {\n  editingCollection.value = collection\n  editingCollectionIndex.value = collectionIndex\n  displayModalEdit(true)\n}\n\nconst onAddRequest = ({\n  name,\n  path,\n  index,\n}: {\n  name: string\n  path: string\n  index: number\n}) => {\n  const newRequest = {\n    ...tabs.currentActiveTab.value.document.request,\n    name,\n  }\n\n  saveGraphqlRequestAs(path, newRequest)\n\n  const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n    path,\n    \"graphql\"\n  )\n\n  tabs.createNewTab({\n    saveContext: {\n      originLocation: \"user-collection\",\n      folderPath: path,\n      requestIndex: index,\n    },\n    request: newRequest,\n    isDirty: false,\n    inheritedProperties: {\n      auth,\n      headers,\n    },\n  })\n\n  platform.analytics?.logEvent({\n    type: \"HOPP_SAVE_REQUEST\",\n    platform: \"gql\",\n    createdNow: true,\n    workspaceType: \"personal\",\n  })\n\n  displayModalAddRequest(false)\n}\n\nconst addRequest = (payload: { path: string }) => {\n  const { path } = payload\n  editingFolderPath.value = path\n  displayModalAddRequest(true)\n}\n\nconst onAddFolder = ({\n  name,\n  path,\n}: {\n  name: string\n  path: string | undefined\n}) => {\n  addGraphqlFolder(name, path ?? \"0\")\n\n  platform.analytics?.logEvent({\n    type: \"HOPP_CREATE_COLLECTION\",\n    isRootCollection: false,\n    platform: \"gql\",\n    workspaceType: \"personal\",\n  })\n\n  displayModalAddFolder(false)\n}\n\nconst addFolder = (payload: { path: string }) => {\n  const { path } = payload\n  editingFolderPath.value = path\n  displayModalAddFolder(true)\n}\n\nconst editFolder = (payload: {\n  folder: HoppCollection\n  folderPath: string\n}) => {\n  const { folder, folderPath } = payload\n  editingFolder.value = folder\n  editingFolderPath.value = folderPath\n  displayModalEditFolder(true)\n}\n\nconst editRequest = (payload: {\n  collectionIndex: number\n  folderIndex: number\n  folderName: string\n  request: HoppGQLRequest\n  requestIndex: number\n  folderPath: string\n}) => {\n  const {\n    collectionIndex,\n    folderIndex,\n    folderName,\n    request,\n    requestIndex,\n    folderPath,\n  } = payload\n  editingFolderPath.value = folderPath\n  editingCollectionIndex.value = collectionIndex\n  editingFolderIndex.value = folderIndex\n  editingFolderName.value = folderName\n  editingRequest.value = request\n  editingRequestIndex.value = requestIndex\n  displayModalEditRequest(true)\n}\n\nconst duplicateRequest = ({\n  folderPath,\n  request,\n}: {\n  folderPath: string\n  request: HoppGQLRequest\n}) => {\n  saveGraphqlRequestAs(folderPath, {\n    ...cloneDeep(request),\n    name: `${request.name} - ${t(\"action.duplicate\")}`,\n  })\n}\n\nconst selectRequest = ({\n  request,\n  folderPath,\n  requestIndex,\n}: {\n  request: HoppGQLRequest\n  folderPath: string\n  requestIndex: number\n}) => {\n  const possibleTab = tabs.getTabRefWithSaveContext({\n    originLocation: \"user-collection\",\n    folderPath: folderPath,\n    requestIndex: requestIndex,\n  })\n  const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n    folderPath,\n    \"graphql\"\n  )\n  // Switch to that request if that request is open\n  if (possibleTab) {\n    tabs.setActiveTab(possibleTab.value.id)\n    return\n  }\n\n  tabs.createNewTab({\n    saveContext: {\n      originLocation: \"user-collection\",\n      folderPath: folderPath,\n      requestIndex: requestIndex,\n    },\n    request: cloneDeep(\n      makeGQLRequest({\n        name: request.name,\n        url: request.url,\n        query: request.query,\n        headers: request.headers,\n        variables: request.variables,\n        auth: request.auth,\n      })\n    ),\n    isDirty: false,\n    inheritedProperties: {\n      auth,\n      headers,\n    },\n  })\n}\n\nconst dropRequest = ({\n  folderPath,\n  requestIndex,\n  collectionIndex,\n}: {\n  folderPath: string\n  requestIndex: number\n  collectionIndex: number\n}) => {\n  const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n    `${collectionIndex}`,\n    \"graphql\"\n  )\n\n  const possibleTab = tabs.getTabRefWithSaveContext({\n    originLocation: \"user-collection\",\n    folderPath,\n    requestIndex: Number(requestIndex),\n  })\n\n  if (possibleTab) {\n    possibleTab.value.document.saveContext = {\n      originLocation: \"user-collection\",\n      folderPath: `${collectionIndex}`,\n      requestIndex: getRequestsByPath(collections.value, `${collectionIndex}`)\n        .length,\n    }\n\n    possibleTab.value.document.inheritedProperties = {\n      auth,\n      headers,\n    }\n  }\n\n  moveGraphqlRequest(folderPath, requestIndex, `${collectionIndex}`)\n\n  toast.success(`${t(\"request.moved\")}`)\n}\n\n/**\n * Checks if the collection is already in the root\n * @param id - path of the collection\n * @returns boolean - true if the collection is already in the root\n */\nconst isAlreadyInRoot = (id: string) => {\n  const indexPath = id.split(\"/\")\n  return indexPath.length === 1\n}\n\nconst editProperties = ({\n  collectionIndex,\n  collection,\n}: {\n  collectionIndex: string | null\n  collection: HoppCollection | null\n}) => {\n  if (collectionIndex === null || collection === null) return\n\n  const parentIndex = collectionIndex.split(\"/\").slice(0, -1).join(\"/\") // remove last folder to get parent folder\n  let inheritedProperties = undefined\n\n  if (parentIndex) {\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      parentIndex,\n      \"graphql\"\n    )\n\n    inheritedProperties = {\n      auth,\n      headers,\n    }\n  }\n\n  editingProperties.value = {\n    collection,\n    isRootCollection: isAlreadyInRoot(collectionIndex),\n    path: collectionIndex,\n    inheritedProperties,\n  }\n\n  displayModalEditProperties(true)\n}\n\nconst setCollectionProperties = (newCollection: {\n  collection: Partial<HoppCollection> | null\n  path: string\n  isRootCollection: boolean\n}) => {\n  const { collection, path, isRootCollection } = newCollection\n  if (!collection) {\n    return\n  }\n\n  if (isRootCollection) {\n    editGraphqlCollection(parseInt(path), collection)\n  } else {\n    editGraphqlFolder(path, collection)\n  }\n\n  const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n    path,\n    \"graphql\"\n  )\n\n  nextTick(() => {\n    updateInheritedPropertiesForAffectedRequests(\n      path,\n      {\n        auth,\n        headers,\n      },\n      \"graphql\"\n    )\n  })\n\n  displayModalEditProperties(false)\n}\nconst resetSelectedData = () => {\n  editingCollection.value = null\n  editingCollectionIndex.value = null\n  editingFolder.value = null\n  editingFolderIndex.value = null\n  editingRequest.value = null\n  editingRequestIndex.value = null\n}\n\ndefineActionHandler(\"collection.new\", () => {\n  displayModalAdd(true)\n})\ndefineActionHandler(\"modals.collection.import\", () => {\n  displayModalImportExport(true)\n})\n</script>\n","<!-- eslint-disable prettier/prettier -->\n<template>\n  <HoppSmartModal\n    v-if=\"show\"\n    dialog\n    :title=\"`${t('collection.save_as')}`\"\n    @close=\"hideModal\"\n  >\n    <template #body>\n      <div class=\"flex flex-col\">\n        <HoppSmartInput\n          v-model=\"requestName\"\n          styles=\"relative flex\"\n          placeholder=\" \"\n          :label=\"t('request.name')\"\n          input-styles=\"floating-input\"\n          @submit=\"saveRequestAs\"\n        />\n\n        <label class=\"p-4\">\n          {{ t(\"collection.select_location\") }}\n        </label>\n        <CollectionsGraphql\n          v-if=\"mode === 'graphql'\"\n          :picked=\"picked\"\n          :save-request=\"true\"\n          @select=\"onSelect\"\n        />\n        <Collections\n          v-else\n          :picked=\"picked\"\n          :save-request=\"true\"\n          @select=\"onSelect\"\n          @update-team=\"updateTeam\"\n          @update-collection-type=\"updateCollectionType\"\n        />\n      </div>\n    </template>\n    <template #footer>\n      <span class=\"flex space-x-2\">\n        <HoppButtonPrimary\n          :label=\"`${t('action.save')}`\"\n          :loading=\"modalLoadingState\"\n          outline\n          @click=\"saveRequestAs\"\n        />\n        <HoppButtonSecondary\n          :label=\"`${t('action.cancel')}`\"\n          outline\n          filled\n          @click=\"hideModal\"\n        />\n      </span>\n    </template>\n  </HoppSmartModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from \"@composables/i18n\"\nimport { useToast } from \"@composables/toast\"\nimport {\n  HoppGQLRequest,\n  HoppRESTRequest,\n  isHoppRESTRequest,\n} from \"@hoppscotch/data\"\nimport { computedWithControl } from \"@vueuse/core\"\nimport { useService } from \"dioc/vue\"\nimport * as TE from \"fp-ts/TaskEither\"\nimport { pipe } from \"fp-ts/function\"\nimport { cloneDeep } from \"lodash-es\"\nimport { computed, nextTick, reactive, ref, watch } from \"vue\"\nimport { GQLError } from \"~/helpers/backend/GQLClient\"\nimport {\n  createRequestInCollection,\n  updateTeamRequest,\n} from \"~/helpers/backend/mutations/TeamRequest\"\nimport { Picked } from \"~/helpers/types/HoppPicked\"\nimport {\n  cascadeParentCollectionForHeaderAuth,\n  editGraphqlRequest,\n  editRESTRequest,\n  saveGraphqlRequestAs,\n  saveRESTRequestAs,\n} from \"~/newstore/collections\"\nimport { platform } from \"~/platform\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\nimport { RESTTabService } from \"~/services/tab/rest\"\nimport { TeamWorkspace } from \"~/services/workspace.service\"\n\nconst t = useI18n()\nconst toast = useToast()\n\nconst RESTTabs = useService(RESTTabService)\nconst GQLTabs = useService(GQLTabService)\n\ntype CollectionType =\n  | {\n      type: \"team-collections\"\n      selectedTeam: TeamWorkspace\n    }\n  | { type: \"my-collections\"; selectedTeam: undefined }\n\nconst props = withDefaults(\n  defineProps<{\n    show: boolean\n    mode: \"rest\" | \"graphql\"\n    request?: HoppRESTRequest | HoppGQLRequest | null\n  }>(),\n  {\n    show: false,\n    mode: \"rest\",\n    request: null,\n  }\n)\n\nconst emit = defineEmits<{\n  (\n    event: \"edit-request\",\n    payload: {\n      folderPath: string\n      requestIndex: string\n      request: HoppRESTRequest\n    }\n  ): void\n  (e: \"hide-modal\"): void\n}>()\n\nconst gqlRequestName = computedWithControl(\n  () => GQLTabs.currentActiveTab.value,\n  () => GQLTabs.currentActiveTab.value.document.request.name\n)\n\nconst restRequestName = computedWithControl(\n  () => RESTTabs.currentActiveTab.value,\n  () => RESTTabs.currentActiveTab.value.document.request.name\n)\n\nconst reqName = computed(() => {\n  if (props.request) {\n    return props.request.name\n  } else if (props.mode === \"rest\") {\n    return restRequestName.value\n  }\n  return gqlRequestName.value\n})\n\nconst requestName = ref(reqName.value)\n\nwatch(\n  () => [RESTTabs.currentActiveTab.value, GQLTabs.currentActiveTab.value],\n  () => {\n    if (props.mode === \"rest\") {\n      requestName.value =\n        RESTTabs.currentActiveTab.value?.document.request.name ?? \"\"\n    } else {\n      requestName.value =\n        GQLTabs.currentActiveTab.value?.document.request.name ?? \"\"\n    }\n  }\n)\n\nconst requestData = reactive({\n  name: requestName,\n  collectionIndex: undefined as number | undefined,\n  folderName: undefined as number | undefined,\n  requestIndex: undefined as number | undefined,\n})\n\nconst collectionsType = ref<CollectionType>({\n  type: \"my-collections\",\n  selectedTeam: undefined,\n})\n\nconst picked = ref<Picked | null>(null)\n\nconst modalLoadingState = ref(false)\n\n// Resets\nwatch(\n  () => requestData.collectionIndex,\n  () => {\n    requestData.folderName = undefined\n    requestData.requestIndex = undefined\n  }\n)\nwatch(\n  () => requestData.folderName,\n  () => {\n    requestData.requestIndex = undefined\n  }\n)\n\nconst updateTeam = (newTeam: TeamWorkspace) => {\n  collectionsType.value.selectedTeam = newTeam\n}\n\nconst updateCollectionType = (type: CollectionType[\"type\"]) => {\n  collectionsType.value.type = type\n}\n\nconst onSelect = (pickedVal: Picked | null) => {\n  picked.value = pickedVal\n}\n\nconst saveRequestAs = async () => {\n  if (!requestName.value) {\n    toast.error(`${t(\"error.empty_req_name\")}`)\n    return\n  }\n  if (picked.value === null) {\n    toast.error(`${t(\"collection.select\")}`)\n    return\n  }\n\n  const requestUpdated =\n    props.mode === \"rest\"\n      ? cloneDeep(RESTTabs.currentActiveTab.value.document.request)\n      : cloneDeep(GQLTabs.currentActiveTab.value.document.request)\n\n  requestUpdated.name = requestName.value\n\n  if (picked.value.pickedType === \"my-collection\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    const insertionIndex = saveRESTRequestAs(\n      `${picked.value.collectionIndex}`,\n      requestUpdated\n    )\n\n    RESTTabs.currentActiveTab.value.document = {\n      request: requestUpdated,\n      isDirty: false,\n      saveContext: {\n        originLocation: \"user-collection\",\n        folderPath: `${picked.value.collectionIndex}`,\n        requestIndex: insertionIndex,\n      },\n    }\n\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      `${picked.value.collectionIndex}`,\n      \"rest\"\n    )\n\n    RESTTabs.currentActiveTab.value.document.inheritedProperties = {\n      auth,\n      headers,\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"rest\",\n      workspaceType: \"personal\",\n    })\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"my-folder\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    const insertionIndex = saveRESTRequestAs(\n      picked.value.folderPath,\n      requestUpdated\n    )\n\n    RESTTabs.currentActiveTab.value.document = {\n      request: requestUpdated,\n      isDirty: false,\n      saveContext: {\n        originLocation: \"user-collection\",\n        folderPath: picked.value.folderPath,\n        requestIndex: insertionIndex,\n      },\n    }\n\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      picked.value.folderPath,\n      \"rest\"\n    )\n\n    RESTTabs.currentActiveTab.value.document.inheritedProperties = {\n      auth,\n      headers,\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"rest\",\n      workspaceType: \"personal\",\n    })\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"my-request\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    editRESTRequest(\n      picked.value.folderPath,\n      picked.value.requestIndex,\n      requestUpdated\n    )\n\n    RESTTabs.currentActiveTab.value.document = {\n      request: requestUpdated,\n      isDirty: false,\n      saveContext: {\n        originLocation: \"user-collection\",\n        folderPath: picked.value.folderPath,\n        requestIndex: picked.value.requestIndex,\n      },\n    }\n\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      picked.value.folderPath,\n      \"rest\"\n    )\n\n    RESTTabs.currentActiveTab.value.document.inheritedProperties = {\n      auth,\n      headers,\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: false,\n      platform: \"rest\",\n      workspaceType: \"personal\",\n    })\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"teams-collection\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    updateTeamCollectionOrFolder(picked.value.collectionID, requestUpdated)\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"rest\",\n      workspaceType: \"team\",\n    })\n  } else if (picked.value.pickedType === \"teams-folder\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    updateTeamCollectionOrFolder(picked.value.folderID, requestUpdated)\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"rest\",\n      workspaceType: \"team\",\n    })\n  } else if (picked.value.pickedType === \"teams-request\") {\n    if (!isHoppRESTRequest(requestUpdated))\n      throw new Error(\"requestUpdated is not a REST Request\")\n\n    if (\n      collectionsType.value.type !== \"team-collections\" ||\n      !collectionsType.value.selectedTeam\n    )\n      throw new Error(\"Collections Type mismatch\")\n\n    modalLoadingState.value = true\n\n    const data = {\n      request: JSON.stringify(requestUpdated),\n      title: requestUpdated.name,\n    }\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: false,\n      platform: \"rest\",\n      workspaceType: \"team\",\n    })\n\n    pipe(\n      updateTeamRequest(picked.value.requestID, data),\n      TE.match(\n        (err: GQLError<string>) => {\n          toast.error(`${getErrorMessage(err)}`)\n          modalLoadingState.value = false\n        },\n        () => {\n          modalLoadingState.value = false\n          requestSaved()\n        }\n      )\n    )()\n  } else if (picked.value.pickedType === \"gql-my-request\") {\n    // TODO: Check for GQL request ?\n    editGraphqlRequest(\n      picked.value.folderPath,\n      picked.value.requestIndex,\n      requestUpdated as HoppGQLRequest\n    )\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: false,\n      platform: \"gql\",\n      workspaceType: \"team\",\n    })\n\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      picked.value.folderPath,\n      \"graphql\"\n    )\n\n    GQLTabs.currentActiveTab.value.document.inheritedProperties = {\n      auth,\n      headers,\n    }\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"gql-my-folder\") {\n    // TODO: Check for GQL request ?\n    saveGraphqlRequestAs(\n      picked.value.folderPath,\n      requestUpdated as HoppGQLRequest\n    )\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"gql\",\n      workspaceType: \"team\",\n    })\n\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      picked.value.folderPath,\n      \"graphql\"\n    )\n\n    GQLTabs.currentActiveTab.value.document.inheritedProperties = {\n      auth,\n      headers,\n    }\n\n    requestSaved()\n  } else if (picked.value.pickedType === \"gql-my-collection\") {\n    // TODO: Check for GQL request ?\n    saveGraphqlRequestAs(\n      `${picked.value.collectionIndex}`,\n      requestUpdated as HoppGQLRequest\n    )\n\n    platform.analytics?.logEvent({\n      type: \"HOPP_SAVE_REQUEST\",\n      createdNow: true,\n      platform: \"gql\",\n      workspaceType: \"team\",\n    })\n\n    const { auth, headers } = cascadeParentCollectionForHeaderAuth(\n      `${picked.value.collectionIndex}`,\n      \"graphql\"\n    )\n\n    GQLTabs.currentActiveTab.value.document.inheritedProperties = {\n      auth,\n      headers,\n    }\n\n    requestSaved()\n  }\n}\n\n/**\n * Updates a team collection or folder and sets the save context to the updated request\n * @param collectionID - ID of the collection or folder\n * @param requestUpdated - Updated request\n */\nconst updateTeamCollectionOrFolder = (\n  collectionID: string,\n  requestUpdated: HoppRESTRequest\n) => {\n  if (\n    collectionsType.value.type !== \"team-collections\" ||\n    !collectionsType.value.selectedTeam\n  )\n    throw new Error(\"Collections Type mismatch\")\n\n  modalLoadingState.value = true\n\n  const data = {\n    title: requestUpdated.name,\n    request: JSON.stringify(requestUpdated),\n    teamID: collectionsType.value.selectedTeam.teamID,\n  }\n  pipe(\n    createRequestInCollection(collectionID, data),\n    TE.match(\n      (err: GQLError<string>) => {\n        toast.error(`${getErrorMessage(err)}`)\n        modalLoadingState.value = false\n      },\n      (result) => {\n        const { createRequestInCollection } = result\n\n        RESTTabs.currentActiveTab.value.document = {\n          request: requestUpdated,\n          isDirty: false,\n          saveContext: {\n            originLocation: \"team-collection\",\n            requestID: createRequestInCollection.id,\n            collectionID: createRequestInCollection.collection.id,\n            teamID: createRequestInCollection.collection.team.id,\n          },\n        }\n\n        modalLoadingState.value = false\n        requestSaved()\n      }\n    )\n  )()\n}\n\nconst requestSaved = () => {\n  toast.success(`${t(\"request.added\")}`)\n  nextTick(() => {\n    RESTTabs.currentActiveTab.value.document.isDirty = false\n  })\n  hideModal()\n}\n\nconst hideModal = () => {\n  picked.value = null\n  emit(\"hide-modal\")\n}\n\nconst getErrorMessage = (err: GQLError<string>) => {\n  console.error(err)\n  if (err.type === \"network_error\") {\n    return t(\"error.network_error\")\n  }\n  switch (err.error) {\n    case \"team_coll/short_title\":\n      return t(\"collection.name_length_insufficient\")\n    case \"team/invalid_coll_id\":\n      return t(\"team.invalid_id\")\n    case \"team/not_required_role\":\n      return t(\"profile.no_permission\")\n    case \"team_req/not_required_role\":\n      return t(\"profile.no_permission\")\n    case \"Forbidden resource\":\n      return t(\"profile.no_permission\")\n    default:\n      return t(\"error.something_went_wrong\")\n  }\n}\n</script>\n","<template>\n  <div\n    class=\"group flex items-stretch\"\n    @contextmenu.prevent=\"options!.tippy.show()\"\n  >\n    <span\n      v-tippy=\"{ theme: 'tooltip', delay: [500, 20] }\"\n      class=\"flex w-16 cursor-pointer items-center justify-center truncate px-2\"\n      :class=\"entryStatus.className\"\n      data-testid=\"restore_history_entry\"\n      :title=\"`${duration}`\"\n      @click=\"emit('use-entry')\"\n    >\n      <span class=\"truncate text-tiny font-semibold\">\n        {{ entry.request.method }}\n      </span>\n    </span>\n    <span\n      v-tippy=\"{\n        theme: 'tooltip',\n        delay: [500, 20],\n        content: entry.updatedOn ? shortDateTime(entry.updatedOn) : null,\n      }\"\n      class=\"flex min-w-0 flex-1 cursor-pointer py-2 pr-2 transition group-hover:text-secondaryDark\"\n      data-testid=\"restore_history_entry\"\n      @click=\"emit('use-entry')\"\n    >\n      <span class=\"truncate\">\n        {{ entry.request.endpoint }}\n      </span>\n    </span>\n    <span>\n      <tippy\n        ref=\"options\"\n        interactive\n        trigger=\"click\"\n        theme=\"popover\"\n        :on-shown=\"() => tippyActions!.focus()\"\n      >\n        <template #content=\"{ hide }\">\n          <div\n            ref=\"tippyActions\"\n            class=\"flex flex-col focus:outline-none\"\n            tabindex=\"0\"\n            role=\"menu\"\n            @keyup.s=\"addToCollectionAction?.$el.click()\"\n            @keyup.escape=\"hide()\"\n          >\n            <HoppSmartItem\n              ref=\"addToCollectionAction\"\n              :icon=\"IconSave\"\n              :label=\"`${t('collection.save_to_collection')}`\"\n              :shortcut=\"['S']\"\n              @click=\"\n                () => {\n                  emit('add-to-collection')\n                  hide()\n                }\n              \"\n            />\n          </div>\n        </template>\n      </tippy>\n    </span>\n    <HoppButtonSecondary\n      v-tippy=\"{ theme: 'tooltip' }\"\n      :icon=\"IconTrash\"\n      color=\"red\"\n      :title=\"t('action.remove')\"\n      class=\"hidden group-hover:inline-flex\"\n      data-testid=\"delete_history_entry\"\n      @click=\"emit('delete-entry')\"\n    />\n    <HoppButtonSecondary\n      v-tippy=\"{ theme: 'tooltip' }\"\n      :title=\"!entry.star ? t('add.star') : t('remove.star')\"\n      :class=\"{ 'hidden group-hover:inline-flex': !entry.star }\"\n      :icon=\"entry.star ? IconStarOff : IconStar\"\n      color=\"yellow\"\n      data-testid=\"star_button\"\n      @click=\"emit('toggle-star')\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\"\nimport findStatusGroup from \"~/helpers/findStatusGroup\"\nimport { useI18n } from \"@composables/i18n\"\nimport { RESTHistoryEntry } from \"~/newstore/history\"\nimport { shortDateTime } from \"~/helpers/utils/date\"\nimport IconSave from \"~icons/lucide/save\"\nimport IconStar from \"~icons/lucide/star\"\nimport IconStarOff from \"~icons/hopp/star-off\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport { TippyComponent } from \"vue-tippy\"\n\nconst props = defineProps<{\n  entry: RESTHistoryEntry\n  showMore: boolean\n}>()\n\nconst emit = defineEmits<{\n  (e: \"use-entry\"): void\n  (e: \"delete-entry\"): void\n  (e: \"toggle-star\"): void\n  (e: \"add-to-collection\"): void\n}>()\n\nconst tippyActions = ref<TippyComponent | null>(null)\nconst options = ref<TippyComponent | null>(null)\nconst addToCollectionAction = ref<HTMLButtonElement | null>(null)\n\nconst t = useI18n()\n\nconst duration = computed(() => {\n  if (props.entry.responseMeta.duration) {\n    const responseDuration = props.entry.responseMeta.duration\n    if (!responseDuration) return \"\"\n\n    return responseDuration > 0\n      ? `${t(\"request.duration\")}: ${responseDuration}ms`\n      : t(\"error.no_duration\")\n  }\n  return t(\"error.no_duration\")\n})\n\nconst entryStatus = computed(() => {\n  const foundStatusGroup = findStatusGroup(props.entry.responseMeta.statusCode)\n  return (\n    foundStatusGroup || {\n      className: \"\",\n    }\n  )\n})\n</script>\n","<template>\n  <div class=\"group flex flex-col\">\n    <div class=\"flex items-center\">\n      <span\n        v-tippy=\"{\n          theme: 'tooltip',\n          delay: [500, 20],\n          content: entry.updatedOn ? shortDateTime(entry.updatedOn) : null,\n        }\"\n        class=\"flex min-w-0 flex-1 cursor-pointer py-2 pl-4 pr-2 transition group-hover:text-secondaryDark\"\n        data-testid=\"restore_history_entry\"\n        @click=\"useEntry\"\n      >\n        <span class=\"truncate\">\n          {{ entry.request.url }}\n        </span>\n      </span>\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :icon=\"IconTrash\"\n        color=\"red\"\n        :title=\"t('action.remove')\"\n        class=\"hidden group-hover:inline-flex\"\n        data-testid=\"delete_history_entry\"\n        @click=\"emit('delete-entry')\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"expand ? t('hide.more') : t('show.more')\"\n        :icon=\"expand ? IconMinimize2 : IconMaximize2\"\n        class=\"hidden group-hover:inline-flex\"\n        @click=\"expand = !expand\"\n      />\n      <HoppButtonSecondary\n        v-tippy=\"{ theme: 'tooltip' }\"\n        :title=\"!entry.star ? t('add.star') : t('remove.star')\"\n        :icon=\"entry.star ? IconStarOff : IconStar\"\n        color=\"yellow\"\n        :class=\"{ 'hidden group-hover:inline-flex': !entry.star }\"\n        data-testid=\"star_button\"\n        @click=\"emit('toggle-star')\"\n      />\n    </div>\n    <div class=\"flex flex-col text-tiny\">\n      <span\n        v-for=\"(line, index) in query\"\n        :key=\"`line-${index}`\"\n        class=\"cursor-pointer truncate whitespace-pre px-4 font-mono text-secondaryLight\"\n        data-testid=\"restore_history_entry\"\n        @click=\"useEntry\"\n        >{{ line }}</span\n      >\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\"\nimport { GQLHistoryEntry } from \"~/newstore/history\"\nimport { shortDateTime } from \"~/helpers/utils/date\"\n\nimport IconStar from \"~icons/lucide/star\"\nimport IconStarOff from \"~icons/hopp/star-off\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport IconMinimize2 from \"~icons/lucide/minimize-2\"\nimport IconMaximize2 from \"~icons/lucide/maximize-2\"\n\nimport { useI18n } from \"@composables/i18n\"\nimport { makeGQLRequest } from \"@hoppscotch/data\"\nimport { useService } from \"dioc/vue\"\nimport { GQLTabService } from \"~/services/tab/graphql\"\n\nconst t = useI18n()\nconst tabs = useService(GQLTabService)\n\nconst props = defineProps<{\n  entry: GQLHistoryEntry\n  showMore: boolean\n}>()\n\nconst emit = defineEmits<{\n  (e: \"delete-entry\"): void\n  (e: \"toggle-star\"): void\n}>()\n\nconst expand = ref(false)\n\nconst query = computed(() =>\n  expand.value\n    ? (props.entry.request.query.split(\"\\n\") as string[])\n    : (props.entry.request.query\n        .split(\"\\n\")\n        .slice(0, 2)\n        .concat([\"...\"]) as string[])\n)\n\nconst useEntry = () => {\n  tabs.createNewTab({\n    request: makeGQLRequest({\n      name: props.entry.request.name,\n      url: props.entry.request.url,\n      headers: props.entry.request.headers,\n      query: props.entry.request.query,\n      variables: props.entry.request.variables,\n      auth: props.entry.request.auth,\n    }),\n    isDirty: false,\n  })\n}\n</script>\n","<template>\n  <div>\n    <div\n      class=\"sticky top-0 z-10 flex flex-shrink-0 flex-col overflow-x-auto border-b border-dividerLight bg-primary\"\n    >\n      <WorkspaceCurrent :section=\"t('tab.history')\" :is-only-personal=\"true\" />\n      <div class=\"flex\">\n        <input\n          v-model=\"filterText\"\n          type=\"search\"\n          autocomplete=\"off\"\n          class=\"flex w-full bg-transparent px-4 py-2 h-8\"\n          :placeholder=\"`${t('action.search')}`\"\n        />\n        <div class=\"flex\">\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            to=\"https://docs.hoppscotch.io/documentation/features/history\"\n            blank\n            :title=\"t('app.wiki')\"\n            :icon=\"IconHelpCircle\"\n          />\n          <tippy interactive trigger=\"click\" theme=\"popover\">\n            <HoppButtonSecondary\n              v-tippy=\"{ theme: 'tooltip' }\"\n              :title=\"t('action.filter')\"\n              :icon=\"IconFilter\"\n            />\n            <template #content=\"{ hide }\">\n              <div ref=\"tippyActions\" class=\"flex flex-col focus:outline-none\">\n                <div class=\"pb-2 pl-4 text-tiny text-secondaryLight\">\n                  {{ t(\"action.filter\") }}\n                </div>\n                <HoppSmartRadioGroup\n                  v-model=\"filterSelection\"\n                  :radios=\"filters\"\n                  @update:model-value=\"hide()\"\n                />\n                <hr />\n                <div class=\"pb-2 pl-4 text-tiny text-secondaryLight\">\n                  {{ t(\"action.group_by\") }}\n                </div>\n                <HoppSmartRadioGroup\n                  v-model=\"groupSelection\"\n                  :radios=\"groups\"\n                  @update:model-value=\"hide()\"\n                />\n              </div>\n            </template>\n          </tippy>\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            data-testid=\"clear_history\"\n            :disabled=\"history.length === 0\"\n            :icon=\"IconTrash2\"\n            :title=\"t('action.clear_all')\"\n            @click=\"confirmRemove = true\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"flex flex-col\">\n      <details\n        v-for=\"(\n          filteredHistoryGroup, filteredHistoryGroupIndex\n        ) in filteredHistoryGroups\"\n        :key=\"`filteredHistoryGroup-${filteredHistoryGroupIndex}`\"\n        class=\"flex flex-col\"\n        open\n      >\n        <summary\n          class=\"group flex min-w-0 flex-1 cursor-pointer items-center justify-between text-tiny text-secondaryLight transition focus:outline-none\"\n        >\n          <span\n            class=\"inline-flex items-center justify-center truncate px-4 py-2 transition group-hover:text-secondary\"\n          >\n            <icon-lucide-chevron-right\n              class=\"indicator mr-2 flex flex-shrink-0\"\n            />\n            <span\n              :class=\"[\n                { 'capitalize-first': groupSelection === 'TIME' },\n                'truncate',\n              ]\"\n            >\n              {{ filteredHistoryGroupIndex }}\n            </span>\n          </span>\n          <HoppButtonSecondary\n            v-tippy=\"{ theme: 'tooltip' }\"\n            :icon=\"IconTrash\"\n            color=\"red\"\n            :title=\"t('action.remove')\"\n            class=\"hidden group-hover:inline-flex\"\n            @click=\"deleteBatchHistoryEntry(filteredHistoryGroup)\"\n          />\n        </summary>\n        <component\n          :is=\"page === 'rest' ? HistoryRestCard : HistoryGraphqlCard\"\n          v-for=\"(entry, index) in filteredHistoryGroup\"\n          :id=\"index\"\n          :key=\"`entry-${index}`\"\n          :entry=\"entry.entry\"\n          :show-more=\"showMore\"\n          @toggle-star=\"toggleStar(entry.entry)\"\n          @delete-entry=\"deleteHistory(entry.entry)\"\n          @use-entry=\"useHistory(toRaw(entry.entry))\"\n          @add-to-collection=\"addToCollection(entry.entry)\"\n        />\n      </details>\n    </div>\n    <HoppSmartPlaceholder\n      v-if=\"history.length === 0\"\n      :src=\"`/images/states/${colorMode.value}/time.svg`\"\n      :alt=\"`${t('empty.history')}`\"\n      :text=\"t('empty.history')\"\n    />\n    <HoppSmartPlaceholder\n      v-else-if=\"\n        Object.keys(filteredHistoryGroups).length === 0 ||\n        filteredHistory.length === 0\n      \"\n      :text=\"`${t('state.nothing_found')} ‟${filterText || filterSelection}”`\"\n    >\n      <template #icon>\n        <icon-lucide-search class=\"svg-icons opacity-75\" />\n      </template>\n      <template #body>\n        <HoppButtonSecondary\n          :label=\"t('action.clear')\"\n          outline\n          @click=\"\n            () => {\n              filterText = ''\n              filterSelection = 'ALL'\n            }\n          \"\n        />\n      </template>\n    </HoppSmartPlaceholder>\n    <HoppSmartConfirmModal\n      :show=\"confirmRemove\"\n      :title=\"`${t('confirm.remove_history')}`\"\n      @hide-modal=\"confirmRemove = false\"\n      @resolve=\"clearHistory\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconHelpCircle from \"~icons/lucide/help-circle\"\nimport IconTrash2 from \"~icons/lucide/trash-2\"\nimport IconTrash from \"~icons/lucide/trash\"\nimport IconFilter from \"~icons/lucide/filter\"\nimport { computed, ref, Ref, toRaw } from \"vue\"\nimport { useColorMode } from \"@composables/theming\"\nimport { HoppGQLRequest, HoppRESTRequest } from \"@hoppscotch/data\"\nimport { groupBy, escapeRegExp, filter } from \"lodash-es\"\nimport { useTimeAgo } from \"@vueuse/core\"\nimport { pipe } from \"fp-ts/function\"\nimport * as A from \"fp-ts/Array\"\nimport { useI18n } from \"@composables/i18n\"\nimport { useReadonlyStream } from \"@composables/stream\"\nimport { useToast } from \"@composables/toast\"\nimport {\n  restHistory$,\n  graphqlHistory$,\n  clearRESTHistory,\n  clearGraphqlHistory,\n  toggleGraphqlHistoryEntryStar,\n  toggleRESTHistoryEntryStar,\n  deleteGraphqlHistoryEntry,\n  deleteRESTHistoryEntry,\n  RESTHistoryEntry,\n  GQLHistoryEntry,\n} from \"~/newstore/history\"\n\nimport HistoryRestCard from \"./rest/Card.vue\"\nimport HistoryGraphqlCard from \"./graphql/Card.vue\"\nimport { defineActionHandler, invokeAction } from \"~/helpers/actions\"\nimport { useService } from \"dioc/vue\"\nimport { RESTTabService } from \"~/services/tab/rest\"\n\ntype HistoryEntry = GQLHistoryEntry | RESTHistoryEntry\n\ntype TimedHistoryEntry = {\n  entry: HistoryEntry\n  timeAgo: Ref<string>\n}\n\nconst props = defineProps<{\n  page: \"rest\" | \"graphql\"\n}>()\n\nconst toast = useToast()\nconst t = useI18n()\nconst colorMode = useColorMode()\n\nconst filterText = ref(\"\")\nconst showMore = ref(false)\nconst confirmRemove = ref(false)\n\nconst history = useReadonlyStream<RESTHistoryEntry[] | GQLHistoryEntry[]>(\n  props.page === \"rest\" ? restHistory$ : graphqlHistory$,\n  []\n)\n\nconst deepCheckForRegex = (value: unknown, regExp: RegExp): boolean => {\n  if (value === null || value === undefined) return false\n\n  if (typeof value === \"string\") return regExp.test(value)\n  if (typeof value === \"number\") return regExp.test(value.toString())\n\n  if (typeof value === \"object\")\n    return Object.values(value).some((input) =>\n      deepCheckForRegex(input, regExp)\n    )\n  if (Array.isArray(value))\n    return value.some((input) => deepCheckForRegex(input, regExp))\n\n  return false\n}\n\nconst filteredHistory = computed(() =>\n  pipe(\n    history.value as HistoryEntry[],\n    A.filter(\n      (\n        input\n      ): input is HistoryEntry & {\n        updatedOn: NonNullable<HistoryEntry[\"updatedOn\"]>\n      } => {\n        return (\n          !!input.updatedOn &&\n          (filterText.value.length === 0 ||\n            deepCheckForRegex(\n              input,\n              new RegExp(escapeRegExp(filterText.value), \"gi\")\n            ))\n        )\n      }\n    ),\n    A.map(\n      (entry): TimedHistoryEntry => ({\n        entry,\n        timeAgo: useTimeAgo(entry.updatedOn),\n      })\n    )\n  )\n)\n\nconst filters = computed(() => [\n  { value: \"ALL\" as const, label: t(\"filter.all\") },\n  { value: \"STARRED\" as const, label: t(\"filter.starred\") },\n])\n\ntype FilterMode = (typeof filters)[\"value\"][number][\"value\"]\n\nconst filterSelection = ref<FilterMode>(\"ALL\")\n\nconst groups = computed(() => [\n  { value: \"TIME\" as const, label: t(\"group.time\") },\n  { value: \"URL\" as const, label: t(\"group.url\") },\n])\n\ntype GroupMode = (typeof groups)[\"value\"][number][\"value\"]\n\nconst groupSelection = ref<GroupMode>(\"TIME\")\n\nconst filteredHistoryGroups = computed(() =>\n  groupBy(\n    filter(filteredHistory.value, (input) =>\n      filterSelection.value === \"STARRED\" ? input.entry.star : true\n    ),\n    (input) =>\n      groupSelection.value === \"TIME\"\n        ? input.timeAgo.value\n        : getAppropriateURL(input.entry)\n  )\n)\n\nconst getAppropriateURL = (entry: HistoryEntry) => {\n  if (props.page === \"rest\") {\n    return (entry.request as HoppRESTRequest).endpoint\n  } else if (props.page === \"graphql\") {\n    return (entry.request as HoppGQLRequest).url\n  }\n}\n\nconst clearHistory = () => {\n  if (props.page === \"rest\") clearRESTHistory()\n  else clearGraphqlHistory()\n  toast.success(`${t(\"state.history_deleted\")}`)\n}\n\n// NOTE: For GQL, the HistoryGraphqlCard component already implements useEntry\n// (That is not a really good behaviour tho ¯\\_(ツ)_/¯)\nconst tabs = useService(RESTTabService)\nconst useHistory = (entry: RESTHistoryEntry) => {\n  tabs.createNewTab({\n    request: entry.request,\n    isDirty: false,\n  })\n}\n\nconst isRESTHistoryEntry = (\n  entries: TimedHistoryEntry[]\n): entries is Array<TimedHistoryEntry & { entry: RESTHistoryEntry }> =>\n  // If the page is rest, then we can guarantee what we have is a RESTHistoryEnry\n  props.page === \"rest\"\n\nconst deleteBatchHistoryEntry = (entries: TimedHistoryEntry[]) => {\n  if (isRESTHistoryEntry(entries)) {\n    entries.forEach((entry) => {\n      deleteRESTHistoryEntry(entry.entry)\n    })\n  } else {\n    entries.forEach((entry) => {\n      deleteGraphqlHistoryEntry(entry.entry as GQLHistoryEntry)\n    })\n  }\n  toast.success(`${t(\"state.deleted\")}`)\n}\n\nconst deleteHistory = (entry: HistoryEntry) => {\n  if (props.page === \"rest\") deleteRESTHistoryEntry(entry as RESTHistoryEntry)\n  else deleteGraphqlHistoryEntry(entry as GQLHistoryEntry)\n  toast.success(`${t(\"state.deleted\")}`)\n}\n\nconst addToCollection = (entry: HistoryEntry) => {\n  if (props.page === \"rest\") {\n    invokeAction(\"request.save-as\", {\n      requestType: \"rest\",\n      request: entry.request as HoppRESTRequest,\n    })\n  }\n}\n\nconst toggleStar = (entry: HistoryEntry) => {\n  // History entry type specified because function does not know the type\n  if (props.page === \"rest\")\n    toggleRESTHistoryEntryStar(entry as RESTHistoryEntry)\n  else toggleGraphqlHistoryEntryStar(entry as GQLHistoryEntry)\n}\n\ndefineActionHandler(\"history.clear\", () => {\n  confirmRemove.value = true\n})\n</script>\n"],"names":["baseFindIndex","array","predicate","fromIndex","fromRight","length","index","baseIsNaN","value","strictIndexOf","baseIndexOf","last","reRegExpChar","reHasRegExpChar","escapeRegExp","string","toString","baseFilter","collection","result","baseEach","filter","func","isArray","arrayFilter","baseIteratee","parent","object","path","baseGet","baseSlice","baseUnset","castPath","toKey","baseIndexOfWith","comparator","arrayProto","splice","basePullAll","values","iteratee","indexOf","seen","copyArray","arrayMap","baseUnary","computed","pullAll","pull","baseRest","pull$1","basePullAt","indexes","lastIndex","previous","isIndex","remove","t","useI18n","toast","useToast","props","__props","emit","__emit","includeEnvironmentID","ref","activeTab","copyIcon","refAutoReset","IconCopy","activeEnvironment","selectedEnv","isCloudInstance","cliCommandGenerationDescription","generatedCLICommand","collectionID","environmentID","environmentFlag","serverUrl","_a","serverFlag","toggleIncludeEnvironment","copyCLICommandToClipboard","copyToClipboard","IconCheck","closeModal","persistenceService","useService","PersistenceService","editableCollection","activeTabIsDetails","watch","updatedEditableCollection","unsavedCollectionProperties","useVModel","show","clone","saveEditedCollection","finalCollection","hideModal","copyCollectionID","useSteps","steps","currentStepIndex","currentStep","backHistoryIndexes","hasPreviousStep","step","stepId","defineStep","id","component","showExpand","addStep","goToStep","goToNextStep","goToPreviousStep","selectedImporterID","selectedSourceID","chooseImporterOrExporter","ImportExportList","importer","exporter","selectedImporter","i","selectedExporter","chooseImportSource","ImportExportSourcesList","currentImporter","sources","source","sourceID","sourceStep","s","ALLOWED_FILE_SIZE_LIMIT","importFilesCount","hasFile","showFileSizeLimitExceededWarning","fileContent","inputChooseFileToImportFrom","onFileChange","inputFileToImport","readerPromises","totalFileSize","file","reader","resolve","reject","results","contentsArr","FileSource","metadata","stepID","uuidv4","FileImportVue","inputChooseGistToImportFrom","hasURL","isFetchingUrl","url","urlFetchLogic","axios","fetchUrlData","res","e","UrlSource","UrlImport","content","createNewRootCollection","title","teamID","runMutation","CreateNewRootCollectionDocument","createChildCollection","childTitle","CreateChildCollectionDocument","deleteCollection","DeleteCollectionDocument","moveRESTTeamCollection","destinationCollectionID","MoveRestTeamCollectionDocument","updateOrderRESTTeamCollection","destCollID","UpdateCollectionOrderDocument","importJSONToTeam","collectionJSON","ImportFromJsonDocument","updateTeamCollection","data","newTitle","UpdateTeamCollectionDocument","toTeamsImporter","mySelectedCollectionID","hasSelectedCollectionID","myCollections","useReadonlyStream","restCollections$","fetchCollectionFromMyCollections","getRESTCollection","BACKEND_PAGE_SIZE","getCollectionChildrenIDs","collID","collsList","runGQLQuery","GetCollectionChildrenIDsDocument","E.isLeft","E.left","x","E.right","getCollectionRequests","reqList","GetCollectionRequestsDocument","translateToNewRequest","getCompleteCollectionTree","pipe","TE.Do","TE.bind","GetCollectionTitleAndDataDocument","TE.map","TE.chain","flow","A.map","TE.sequenceArray","titleAndData","children","requests","teamCollToHoppRESTColl","coll","makeCollection","_b","getTeamCollectionJSON","ExportAsJsonDocument","initializeDownloadCollection","name","a","createGist","filename","accessToken","TE.tryCatch","reason","gistExporter","JSONFileContents","fileName","myCollectionsExporter","teamCollectionsExporter","GistSource","gistResponse","parseResult","z","contents","fetchGistFromUrl","currentUser","platform","showImportFailedError","handleImportToStore","collections","importResult","importToPersonalWorkspace","importToTeamsWorkspace","E.isRight","appendRESTCollections","translateToTeamCollectionFormat","folders","obj","hasTeamWriteAccess","selectedTeamID","transformedCollection","isHoppMyCollectionExporterInProgress","isHoppTeamCollectionExporterInProgress","isHoppGistCollectionExporterInProgress","isTeamWorkspace","HoppRESTImporter","IconFolderPlus","hoppRESTImporter","HoppMyCollectionImporter","IconUser","MyCollectionImport","HoppOpenAPIImporter","IconOpenAPI","IconFile","hoppOpenAPIImporter","IconLink","HoppPostmanImporter","IconPostman","hoppPostmanImporter","HoppInsomniaImporter","IconInsomnia","hoppInsomniaImporter","HoppGistImporter","IconGithub","HoppMyCollectionsExporter","message","HoppTeamCollectionsExporter","exportCollectionsToJSON","HoppGistCollectionsExporter","getCollectionJSON","importerModules","enabledImporters","isTeams","exporterModules","enabledExporters","collectionsType","editingName","editRequest","newName","editFolder","saveCollection","addFolder","tabs","RESTTabService","addRequest","addNewCollection","initialState","dispatchers","defineDispatchers","_","reorderItem","currentReorderStore","DispatchingStore","currentReorderingStatus$","pluck","distinctUntilChanged","changeCurrentReorderStatus","tippyActions","edit","deleteAction","options","duplicate","shareAction","dragging","ordering","orderingLastItem","currentReorderingStatus","val","selectRequest","dragStart","dataTransfer","isSameRequest","isCollectionDragging","isSameParent","isReorderable","isLastItemReorderable","handleDragOver","handelDrop","updateRequestOrder","updateLastItemOrder","resetDragState","isRequestLoading","requestAction","folderAction","exportAction","propertiesAction","runCollectionAction","dropItemID","notSameDestination","notSameParentDestination","collectionIcon","IconCheckCircle","IconFolderOpen","IconFolder","collectionName","isRequestDragging","orderUpdateCollectionEvent","dropEvent","isCollLoading","collectionMoveLoading","colorMode","useColorMode","isShowingSearchResults","getPath","pathArray","handleCollectionClick","payload","isOpen","teamCollectionsList","toRef","hasNoTeamAccess","isSelected","folderID","requestID","active","isActiveRequest","O.fromNullable","O.filter","active2","O.isSome","request","requestIndex","dragRequest","folderPath","dragEvent","collectionIndex","destinationCollectionIndex","collectionIndexDragged","dragedRequestIndex","updateCollectionOrder","destinationCollection","dragedCollectionIndex","TeamCollectionsAdapter","tree","targetID","item","cloneDeep","parsedID","items","teamAdapter","refFilterCollection","pathToIndex","pathArr","MyCollectionsAdapter","indexPaths","target","item2","indexPath","folder","myAdapter","workspace","WorkspaceService","currentWorkspace","teamWorkspaceName","createRequestInCollection","CreateRequestInCollectionDocument","updateTeamRequest","UpdateRequestDocument","deleteTeamRequest","DeleteRequestDocument","moveRESTTeamRequest","MoveRestTeamRequestDocument","updateOrderRESTTeamRequest","nextRequestID","UpdateLookUpRequestOrderDocument","resolveSaveContextOnCollectionReorder","type","newIndex","affectedIndexes","getAffectedIndexes","resetSaveContextForAffectedRequests","affectedPaths","key","getService","tab","newPath","updateSaveContextForAffectedRequests","oldFolderPath","newFolderPath","folderPathCloseToSaveContext","folderPathCurrent","saveContextPath","folderPathCurrentArray","newFolderPathArray","saveContextFolderPathArray","folderPathCurrentMatch","newFolderPathMatch","removeDuplicatesAndKeepLast","arr","keyMap","b","updateInheritedPropertiesForAffectedRequests","inheritedProperties","GQLTabService","saveContext","inheritedParentID","contextPath","_c","_d","headers","header","inheritedHeaders","mergedHeaders","resetTeamRequestsContext","GetSingleRequestDocument","getFoldersByPath","currentCollection","TEAMS_BACKEND_PAGE_SIZE","findParentOfColl","currentParent","findCollInTree","deleteCollInTree","el","updateCollInTree","updateColl","findReqInTree","reqID","match","req","findCollWithReqIDInTree","NewTeamCollectionAdapter","__publicField","from","to","collLast","destinationIndex","BehaviorSubject","newTeamID","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","_t","parentCollectionID","parentCollection","totalCollections","RootCollectionsOfTeamDocument","collectionUpdate","requestUpdate","currentRequest","parentID","dragedRequestID","destinationRequestID","teamCollAdded$","teamCollAddedSub","runGQLSubscription","TeamCollectionAddedDocument","teamCollUpdated$","teamCollUpdatedSub","TeamCollectionUpdatedDocument","teamCollRemoved$","teamCollRemovedSub","TeamCollectionRemovedDocument","teamReqAdded$","teamReqAddedSub","TeamRequestAddedDocument","teamReqUpdated$","teamReqUpdatedSub","TeamRequestUpdatedDocument","teamReqDeleted$","teamReqDeleted","TeamRequestDeletedDocument","teamRequestMoved$","teamRequestMoved","TeamRequestMovedDocument","requestMoved","teamCollectionMoved$","teamCollectionMoved","TeamCollectionMovedDocument","teamRequestOrderUpdated$","teamRequestOrderUpdated","TeamRequestOrderUpdatedDocument","requestOrderUpdated","nextRequest","teamCollectionOrderUpdated$","teamCollectionOrderUpdated","TeamCollectionOrderUpdatedDocument","collectionOrderUpdated","nextCollection","GetCollectionChildrenDocument","auth","parentFolder","parentFolderAuth","parentFolderHeaders","h","currentPath","TeamEnvironmentAdapter","GetTeamEnvironmentsDocument","env","newEnvironment","teamEnvironments","envId","updatedEnvironment","environmentFound","teamEnvironmentCreated$","teamEnvironmentCreatedSub","TeamEnvironmentCreatedDocument","teamEnvironmentDeleted$","teamEnvironmentDeletedSub","TeamEnvironmentDeletedDocument","teamEnvironmentUpdated$","teamEnvironmentUpdatedSub","TeamEnvironmentUpdatedDocument","editingCollection","editingCollectionName","editingCollectionIndex","editingCollectionID","editingFolder","editingFolderName","editingFolderPath","editingRequest","editingRequestName","editingRequestIndex","editingRequestID","editingProperties","confirmModalTitle","filterTexts","draggingToRoot","requestMoveLoading","workspaceService","teamListAdapter","REMEMBERED_TEAM_ID","useLocalState","teamCollectionAdapter","TeamCollectionAdapter","teamCollectionList","teamLoadingCollections","teamEnvironmentAdapter","teamEnvironmentList","selectedEnvironmentIndex","useStream","selectedEnvironmentIndex$","setSelectedEnvironmentIndex","cascadeParentCollectionForHeaderAuthForSearchResults","searchTeams","teamsSearchResults","teamsSearchResultsLoading","expandCollection","expandingCollections","TeamSearchService","newSearchResults","debouncedSearch","debounce","collectionsBeingLoadedFromSearch","newFilterText","collectionPropertiesModalActiveTab","onMounted","localOAuthTempConfig","context","token","unsavedCollectionPropertiesString","grantTypeInfo","showModalEditProperties","switchToMyCollections","expandTeamCollection","updateSelectedTeam","team","newWorkspace","user","role","filteredCollections","filterText","filteredCollections2","isMatch","text","filteredRequests","filteredFolders","filteredFolderRequests","filteredFolder","filteredCollection","modalLoadingState","exportLoading","duplicateLoading","showModalAdd","showModalAddRequest","showModalAddFolder","showModalEditCollection","showModalEditFolder","showModalEditRequest","showModalImportExport","showConfirmModal","showTeamModalAdd","showCollectionsRunnerModal","selectedCollectionID","activeEnvironmentID","displayModalAdd","resetSelectedData","displayModalAddRequest","displayModalAddFolder","displayModalEditCollection","displayModalEditFolder","displayModalEditRequest","displayModalImportExport","displayModalEditProperties","displayConfirmModal","displayTeamModalAdd","addNewRootCollection","addRESTCollection","TE.match","err","getErrorMessage","onAddRequest","requestName","newRequest","insertionIndex","saveRESTRequestAs","cascadeParentCollectionForHeaderAuth","createRequestInCollection2","onAddFolder","folderName","addRESTFolder","editCollection","updateEditingCollection","collectionUpdated","editRESTCollection","updateEditingFolder","editRESTFolder","updateEditingRequest","requestUpdated","possibleActiveTab","editRESTRequest","nextTick","possibleTab","duplicateRequest","removeCollection","removeTeamCollectionOrFolder","onRemoveCollection","collectionToRemove","navigateToFolderWithIndexPath","restCollectionStore","removeRESTCollection","removeFolder","onRemoveFolder","folderToRemove","removeRESTFolder","pathToLastIndex","removeRequest","onRemoveRequest","requestToRemove","removeRESTRequest","resolveSaveContextOnRequestReorder","getRequestsByPath","selectPicked","selectedRequest","possibleTab2","dropRequest","moveRESTRequest","checkIfCollectionIsAParentOfTheChildren","collectionDraggedPath","destinationCollectionPath","slicedDestinationCollectionPath","isEqual","isMoveToSameLocation","draggedItemPath","destinationPath","draggedItemPathArr","destinationPathArr","draggedItemParentPathArr","dropCollection","totalFoldersOfDestinationCollection","moveRESTFolder","inheritedProperty","isAlreadyInRoot","dropToRoot","isSameSameParent","destinationItemPath","draggedItemIndex","destinationItemIndex","dragedItemParent","destinationItemParent","destinationRequestIndex","updateRESTRequestOrder","destinationCollectionParentIndex","updateRESTCollectionOrder","exportData","hoppColl","collectionJSONString","shareRequest","invokeAction","editProperties","parentIndex","setCollectionProperties","newCollection","isRootCollection","runCollectionHandler","activeWorkspace","currentEnv","resolveConfirmModal","defineActionHandler","hoppGqlCollectionsImporter","E.tryCatch","gqlCollectionsExporter","gqlCollections","graphqlCollections$","isGqlCollectionGistExportInProgress","GqlCollectionsHoppImporter","gqlCollections2","validatedCollection","hoppGQLImporter","GqlCollectionsGistImporter","GqlCollectionsHoppExporter","GqlCollectionsGistExporter","modules","appendGraphqlCollections","requestUpdateData","saveRequest","editGraphqlRequest","editGraphqlFolder","editGraphqlCollection","addGraphqlCollection","isActive","saveCtx","confirmRemove","pick","removeGraphqlRequest","showChildren","toggleShowChildren","possibleTabs","ctx","removeGraphqlFolder","removeGraphqlCollection","showModalEdit","editingFolderIndex","collectionsClone","filterTextLower","shouldDisplay","displayModalEdit","saveGraphqlRequestAs","addGraphqlFolder","folderIndex","makeGQLRequest","moveGraphqlRequest","RESTTabs","GQLTabs","gqlRequestName","computedWithControl","restRequestName","reqName","requestData","reactive","picked","updateTeam","newTeam","updateCollectionType","onSelect","pickedVal","saveRequestAs","isHoppRESTRequest","requestSaved","updateTeamCollectionOrFolder","addToCollectionAction","duration","responseDuration","entryStatus","findStatusGroup","expand","query","useEntry","showMore","history","restHistory$","graphqlHistory$","deepCheckForRegex","regExp","input","filteredHistory","A.filter","entry","useTimeAgo","filters","filterSelection","groups","groupSelection","filteredHistoryGroups","groupBy","getAppropriateURL","clearHistory","clearRESTHistory","clearGraphqlHistory","useHistory","isRESTHistoryEntry","entries","deleteBatchHistoryEntry","deleteRESTHistoryEntry","deleteGraphqlHistoryEntry","deleteHistory","addToCollection","toggleStar","toggleRESTHistoryEntryStar","toggleGraphqlHistoryEntryStar"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}