{"version":3,"file":"newOutline-83220d1e.js","sources":["../../../hoppscotch-common/src/helpers/newOutline.ts"],"sourcesContent":["import {\n  JSONArrayValue,\n  JSONObjectMember,\n  JSONObjectValue,\n  JSONValue,\n} from \"./jsonParse\"\n\ntype RootEntry =\n  | {\n      kind: \"RootObject\"\n      astValue: JSONObjectValue\n    }\n  | {\n      kind: \"RootArray\"\n      astValue: JSONArrayValue\n    }\n\ntype ObjectMemberEntry = {\n  kind: \"ObjectMember\"\n  name: string\n  astValue: JSONObjectMember\n  astParent: JSONObjectValue\n}\n\ntype ArrayMemberEntry = {\n  kind: \"ArrayMember\"\n  index: number\n  astValue: JSONValue\n  astParent: JSONArrayValue\n}\n\ntype PathEntry = RootEntry | ObjectMemberEntry | ArrayMemberEntry\n\nexport function getJSONOutlineAtPos(\n  jsonRootAst: JSONObjectValue | JSONArrayValue,\n  posIndex: number\n): PathEntry[] | null {\n  try {\n    const rootObj = jsonRootAst\n\n    if (posIndex > rootObj.end || posIndex < rootObj.start)\n      throw new Error(\"Invalid position\")\n\n    let current: JSONValue = rootObj\n\n    const path: PathEntry[] = []\n\n    if (rootObj.kind === \"Object\") {\n      path.push({\n        kind: \"RootObject\",\n        astValue: rootObj,\n      })\n    } else {\n      path.push({\n        kind: \"RootArray\",\n        astValue: rootObj,\n      })\n    }\n\n    while (current.kind === \"Object\" || current.kind === \"Array\") {\n      if (current.kind === \"Object\") {\n        const next: JSONObjectMember | undefined = current.members.find(\n          (member) => member.start <= posIndex && member.end >= posIndex\n        )\n\n        if (!next) throw new Error(\"Couldn't find child\")\n\n        path.push({\n          kind: \"ObjectMember\",\n          name: next.key.value,\n          astValue: next,\n          astParent: current,\n        })\n\n        current = next.value\n      } else {\n        const nextIndex = current.values.findIndex(\n          (value) => value.start <= posIndex && value.end >= posIndex\n        )\n\n        if (nextIndex < 0) throw new Error(\"Couldn't find child\")\n\n        const next: JSONValue = current.values[nextIndex]\n\n        path.push({\n          kind: \"ArrayMember\",\n          index: nextIndex,\n          astValue: next,\n          astParent: current,\n        })\n\n        current = next\n      }\n    }\n\n    return path\n  } catch (e: any) {\n    return null\n  }\n}\n"],"names":["getJSONOutlineAtPos","jsonRootAst","posIndex","rootObj","current","path","next","member","nextIndex","value"],"mappings":"AAiCgB,SAAAA,EACdC,EACAC,EACoB,CAChB,GAAA,CACF,MAAMC,EAAUF,EAEhB,GAAIC,EAAWC,EAAQ,KAAOD,EAAWC,EAAQ,MACzC,MAAA,IAAI,MAAM,kBAAkB,EAEpC,IAAIC,EAAqBD,EAEzB,MAAME,EAAoB,CAAA,EAc1B,IAZIF,EAAQ,OAAS,SACnBE,EAAK,KAAK,CACR,KAAM,aACN,SAAUF,CAAA,CACX,EAEDE,EAAK,KAAK,CACR,KAAM,YACN,SAAUF,CAAA,CACX,EAGIC,EAAQ,OAAS,UAAYA,EAAQ,OAAS,SAC/C,GAAAA,EAAQ,OAAS,SAAU,CACvB,MAAAE,EAAqCF,EAAQ,QAAQ,KACxDG,GAAWA,EAAO,OAASL,GAAYK,EAAO,KAAOL,CAAA,EAGxD,GAAI,CAACI,EAAY,MAAA,IAAI,MAAM,qBAAqB,EAEhDD,EAAK,KAAK,CACR,KAAM,eACN,KAAMC,EAAK,IAAI,MACf,SAAUA,EACV,UAAWF,CAAA,CACZ,EAEDA,EAAUE,EAAK,KAAA,KACV,CACC,MAAAE,EAAYJ,EAAQ,OAAO,UAC9BK,GAAUA,EAAM,OAASP,GAAYO,EAAM,KAAOP,CAAA,EAGrD,GAAIM,EAAY,EAAS,MAAA,IAAI,MAAM,qBAAqB,EAElD,MAAAF,EAAkBF,EAAQ,OAAOI,CAAS,EAEhDH,EAAK,KAAK,CACR,KAAM,cACN,MAAOG,EACP,SAAUF,EACV,UAAWF,CAAA,CACZ,EAESA,EAAAE,CACZ,CAGK,OAAAD,OACQ,CACR,OAAA,IACT,CACF"}