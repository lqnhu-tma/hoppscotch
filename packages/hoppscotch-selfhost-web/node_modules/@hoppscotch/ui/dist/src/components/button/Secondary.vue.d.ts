import type { Component } from "vue";
interface Props {
    to?: string;
    exact?: boolean;
    blank?: boolean;
    label?: string;
    icon?: object | null | Component;
    svg?: object | null | Component;
    color?: string;
    disabled?: boolean;
    loading?: boolean;
    reverse?: boolean;
    rounded?: boolean;
    large?: boolean;
    outline?: boolean;
    shortcut?: string[];
    filled?: boolean;
}
declare const _default: import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    to: string;
    exact: boolean;
    blank: boolean;
    label: string;
    icon: null;
    svg: null;
    color: string;
    disabled: boolean;
    loading: boolean;
    reverse: boolean;
    rounded: boolean;
    large: boolean;
    outline: boolean;
    shortcut: () => never[];
    filled: boolean;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    to: string;
    exact: boolean;
    blank: boolean;
    label: string;
    icon: null;
    svg: null;
    color: string;
    disabled: boolean;
    loading: boolean;
    reverse: boolean;
    rounded: boolean;
    large: boolean;
    outline: boolean;
    shortcut: () => never[];
    filled: boolean;
}>>>, {
    reverse: boolean;
    to: string;
    blank: boolean;
    disabled: boolean;
    label: string;
    svg: object | Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null;
    exact: boolean;
    icon: object | Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions> | null;
    color: string;
    loading: boolean;
    rounded: boolean;
    large: boolean;
    outline: boolean;
    shortcut: string[];
    filled: boolean;
}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
