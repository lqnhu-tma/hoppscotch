import { ComputedRef } from "vue";
import type { Slot } from "vue";
export type TabMeta = {
    label: string | null;
    icon: Slot | undefined;
    suffix: Slot | undefined;
    tabhead: Slot | undefined;
    info: string | null;
    isRemovable: boolean;
    closeVisibility: "hover" | "always" | "never";
};
export type TabProvider = {
    renderInactive: ComputedRef<boolean>;
    activeTabID: ComputedRef<string>;
    addTabEntry: (tabID: string, meta: TabMeta) => void;
    updateTabEntry: (tabID: string, newMeta: TabMeta) => void;
    removeTabEntry: (tabID: string) => void;
};
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    styles: string;
    modelValue: string;
    renderInactiveTabs: boolean;
    canAddNewTab: boolean;
    newText: string | null;
    closeText: string | null;
}>, {
    styles: string;
    renderInactiveTabs: boolean;
    canAddNewTab: boolean;
    newText: null;
    closeText: null;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (newTabID: string) => void;
    sort: (body: {
        oldIndex: number;
        newIndex: number;
    }) => void;
    removeTab: (tabID: string) => void;
    addTab: () => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    styles: string;
    modelValue: string;
    renderInactiveTabs: boolean;
    canAddNewTab: boolean;
    newText: string | null;
    closeText: string | null;
}>, {
    styles: string;
    renderInactiveTabs: boolean;
    canAddNewTab: boolean;
    newText: null;
    closeText: null;
}>>> & {
    "onUpdate:modelValue"?: ((newTabID: string) => any) | undefined;
    onSort?: ((body: {
        oldIndex: number;
        newIndex: number;
    }) => any) | undefined;
    onRemoveTab?: ((tabID: string) => any) | undefined;
    onAddTab?: (() => any) | undefined;
}, {
    styles: string;
    closeText: string | null;
    renderInactiveTabs: boolean;
    canAddNewTab: boolean;
    newText: string | null;
}, {}>, {
    actions?(_: {}): any;
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
