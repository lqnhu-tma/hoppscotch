declare const _default: import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    show: boolean;
    title?: string | null | undefined;
    confirm?: string | null | undefined;
    yes?: string | null | undefined;
    no?: string | null | undefined;
    loadingState?: boolean | null | undefined;
}>, {
    title: null;
    confirm: null;
    yes: null;
    no: null;
    loadingState: null;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "hide-modal": () => void;
    resolve: (title: string | null) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    show: boolean;
    title?: string | null | undefined;
    confirm?: string | null | undefined;
    yes?: string | null | undefined;
    no?: string | null | undefined;
    loadingState?: boolean | null | undefined;
}>, {
    title: null;
    confirm: null;
    yes: null;
    no: null;
    loadingState: null;
}>>> & {
    "onHide-modal"?: (() => any) | undefined;
    onResolve?: ((title: string | null) => any) | undefined;
}, {
    title: string | null;
    confirm: string | null;
    yes: string | null;
    no: string | null;
    loadingState: boolean | null;
}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
